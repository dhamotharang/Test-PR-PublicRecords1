//HPCC Systems KEL Compiler Version 1.5.0rc1
IMPORT KEL15 AS KEL;
IMPORT B_Address_4,B_Bankruptcy_4,B_Bankruptcy_7,B_Business_Sele_4,B_Business_Sele_5,B_Business_Sele_6,B_Business_Sele_9,B_Property_Event_4,B_Sele_Address_4,B_Sele_Person_4,B_Sele_Property_4,B_Sele_U_C_C_4,B_Sele_U_C_C_5,B_Sele_U_C_C_9,B_U_C_C_10,B_U_C_C_11,B_U_C_C_4,CFG_Compile,E_Address,E_Address_Property_Event,E_Bankruptcy,E_Business_Org,E_Business_Sele,E_Business_Sele_Overflow,E_Business_Ult,E_Geo_Link,E_Input_B_I_I,E_Person,E_Property,E_Property_Event,E_Sele_Address,E_Sele_Bankruptcy,E_Sele_Person,E_Sele_Property,E_Sele_U_C_C,E_Surname,E_U_C_C,E_Zip_Code,FN_Compile FROM BRM_Marketing_attributes.BRM_KEL;
IMPORT * FROM KEL15.Null;
EXPORT B_Business_Sele_3(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Address_4(__in,__cfg).__ENH_Address_4) __ENH_Address_4 := B_Address_4(__in,__cfg).__ENH_Address_4;
  SHARED VIRTUAL TYPEOF(E_Address_Property_Event(__in,__cfg).__Result) __E_Address_Property_Event := E_Address_Property_Event(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(B_Bankruptcy_4(__in,__cfg).__ENH_Bankruptcy_4) __ENH_Bankruptcy_4 := B_Bankruptcy_4(__in,__cfg).__ENH_Bankruptcy_4;
  SHARED VIRTUAL TYPEOF(B_Business_Sele_4(__in,__cfg).__ENH_Business_Sele_4) __ENH_Business_Sele_4 := B_Business_Sele_4(__in,__cfg).__ENH_Business_Sele_4;
  SHARED VIRTUAL TYPEOF(B_Property_Event_4(__in,__cfg).__ENH_Property_Event_4) __ENH_Property_Event_4 := B_Property_Event_4(__in,__cfg).__ENH_Property_Event_4;
  SHARED VIRTUAL TYPEOF(B_Sele_Address_4(__in,__cfg).__ENH_Sele_Address_4) __ENH_Sele_Address_4 := B_Sele_Address_4(__in,__cfg).__ENH_Sele_Address_4;
  SHARED VIRTUAL TYPEOF(E_Sele_Bankruptcy(__in,__cfg).__Result) __E_Sele_Bankruptcy := E_Sele_Bankruptcy(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(B_Sele_Person_4(__in,__cfg).__ENH_Sele_Person_4) __ENH_Sele_Person_4 := B_Sele_Person_4(__in,__cfg).__ENH_Sele_Person_4;
  SHARED VIRTUAL TYPEOF(B_Sele_Property_4(__in,__cfg).__ENH_Sele_Property_4) __ENH_Sele_Property_4 := B_Sele_Property_4(__in,__cfg).__ENH_Sele_Property_4;
  SHARED VIRTUAL TYPEOF(B_Sele_U_C_C_4(__in,__cfg).__ENH_Sele_U_C_C_4) __ENH_Sele_U_C_C_4 := B_Sele_U_C_C_4(__in,__cfg).__ENH_Sele_U_C_C_4;
  SHARED VIRTUAL TYPEOF(B_U_C_C_4(__in,__cfg).__ENH_U_C_C_4) __ENH_U_C_C_4 := B_U_C_C_4(__in,__cfg).__ENH_U_C_C_4;
  SHARED __EE919771 := __ENH_Business_Sele_4;
  SHARED __EE920318 := __ENH_Sele_U_C_C_4;
  SHARED __EE973735 := __EE920318(__EE920318.Is_Debtor_ AND __NN(__EE920318.Legal_) AND __NN(__EE920318.Filing_));
  SHARED __EE920313 := __ENH_U_C_C_4;
  SHARED __EE920324 := __EE920313(__T(__EE920313.Terminated_Filing_));
  SHARED __EE920342 := __EE920324.Best_U_C_C_Child_Record_;
  SHARED __CC13374 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('ucc_build_version'))),__CN(__cfg.CurrentDate));
  __JC920350(B_U_C_C_10(__in,__cfg).__ST77169_Layout __EE920342) := __T(__OP2(__EE920342.Max_Filing_Date_,<,__CC13374));
  SHARED __EE920406 := __EE920324(EXISTS(__CHILDJOINFILTER(__EE920342,__JC920350)));
  __JC973866(B_Sele_U_C_C_4(__in,__cfg).__ST149557_Layout __EE973735, B_U_C_C_4(__in,__cfg).__ST149889_Layout __EE920406) := __EEQP(__EE973735.Filing_,__EE920406.UID);
  SHARED __EE973867 := JOIN(__EE973735,__EE920406,__JC973866(LEFT,RIGHT),TRANSFORM(B_Sele_U_C_C_4(__in,__cfg).__ST149557_Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST377431_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.ntyp(E_U_C_C().Typ) Filing_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(B_Sele_U_C_C_5(__in,__cfg).__ST152484_Layout) Sub_Filing_;
    KEL.typ.ndataset(E_Sele_U_C_C(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Sele_U_C_C_9(__in,__cfg).__ST157794_Layout) Best_Party_Types_;
    KEL.typ.nstr Filtered_Party_Type_;
    KEL.typ.bool Is_Creditor_ := FALSE;
    KEL.typ.bool Is_Debtor_ := FALSE;
    KEL.typ.bool Is_Filing_ := FALSE;
    KEL.typ.ntyp(E_U_C_C().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST377431_Layout __ND973896__Project(B_Sele_U_C_C_4(__in,__cfg).__ST149557_Layout __PP973868) := TRANSFORM
    SELF.UID := __PP973868.Legal_;
    SELF.U_I_D__1_ := __PP973868.Filing_;
    SELF := __PP973868;
  END;
  SHARED __EE973977 := PROJECT(__EE973867,__ND973896__Project(LEFT));
  SHARED __ST377499_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE973990 := PROJECT(__CLEANANDDO(__EE973977,TABLE(__EE973977,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST377499_Layout);
  SHARED __ST381461_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162126_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162168_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162192_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162276_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC973996(B_Business_Sele_4(__in,__cfg).__ST162088_Layout __EE919771, __ST377499_Layout __EE973990) := __EEQP(__EE919771.UID,__EE973990.UID);
  __ST381461_Layout __JT973996(B_Business_Sele_4(__in,__cfg).__ST162088_Layout __l, __ST377499_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE973997 := JOIN(__EE919771,__EE973990,__JC973996(LEFT,RIGHT),__JT973996(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE919868 := __ENH_Bankruptcy_4;
  SHARED __EE919866 := __E_Sele_Bankruptcy;
  SHARED __EE974677 := __EE919866(__NN(__EE919866.Legal_) AND __NN(__EE919866.Bankrupt_));
  SHARED __ST380386_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_7(__in,__cfg).__ST154885_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST304223_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(E_Sele_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC974695(B_Bankruptcy_4(__in,__cfg).__ST146490_Layout __EE919868, E_Sele_Bankruptcy(__in,__cfg).Layout __EE974677) := __EEQP(__EE974677.Bankrupt_,__EE919868.UID);
  __ST380386_Layout __JT974695(B_Bankruptcy_4(__in,__cfg).__ST146490_Layout __l, E_Sele_Bankruptcy(__in,__cfg).Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE974696 := JOIN(__EE974677,__EE919868,__JC974695(RIGHT,LEFT),__JT974695(RIGHT,LEFT),INNER,HASH);
  SHARED __ST380732_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_7(__in,__cfg).__ST154885_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST304223_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(E_Sele_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC974781(__ST380386_Layout __EE974696, B_Bankruptcy_4(__in,__cfg).__ST304223_Layout __EE974767) := __T(__EE974767.Banko7_Year_);
  __ST380732_Layout __JT974781(__ST380386_Layout __l, B_Bankruptcy_4(__in,__cfg).__ST304223_Layout __r) := TRANSFORM, SKIP(NOT(__JC974781(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE974782 := NORMALIZE(__EE974696,__T(LEFT.Best_Child_Record_),__JT974781(LEFT,RIGHT));
  SHARED __ST375956_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(E_Sele_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_7(__in,__cfg).__ST154885_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST304223_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST375956_Layout __ND974874__Project(__ST380732_Layout __PP974783) := TRANSFORM
    SELF.UID := __PP974783.Legal_;
    SELF.Data_Sources_ := __PP974783.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP974783.UID;
    SELF.Data_Sources__1_ := __PP974783.Data_Sources_;
    SELF := __PP974783;
  END;
  SHARED __EE975125 := PROJECT(__EE974782,__ND974874__Project(LEFT));
  SHARED __ST376150_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE975138 := PROJECT(__CLEANANDDO(__EE975125,TABLE(__EE975125,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST376150_Layout);
  SHARED __ST384195_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162126_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162168_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162192_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162276_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC975146(__ST381461_Layout __EE973997, __ST376150_Layout __EE975138) := __EEQP(__EE973997.UID,__EE975138.UID);
  __ST384195_Layout __JT975146(__ST381461_Layout __l, __ST376150_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Exp1__1_ := __r.C_O_U_N_T___Exp1_;
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE975147 := JOIN(__EE973997,__EE975138,__JC975146(LEFT,RIGHT),__JT975146(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE919818 := __ENH_Sele_Person_4;
  SHARED __EE1024698 := __EE919818(__T(__AND(__CN(__EE919818.Is_Executive_Ever_),__AND(__EE919818.Two_Years_,__CN(__NN(__EE919818.Legal_))))));
  SHARED __ST374291_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE1024711 := PROJECT(__CLEANANDDO(__EE1024698,TABLE(__EE1024698,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Sele_Person_ := COUNT(GROUP),KEL.typ.ntyp(E_Business_Sele().Typ) UID := __EE1024698.Legal_},Legal_,MERGE)),__ST374291_Layout);
  SHARED __ST386931_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162126_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162168_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162192_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162276_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1024717(__ST384195_Layout __EE975147, __ST374291_Layout __EE1024711) := __EEQP(__EE975147.UID,__EE1024711.UID);
  __ST386931_Layout __JT1024717(__ST384195_Layout __l, __ST374291_Layout __r) := TRANSFORM
    SELF.U_I_D__3_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1025137 := JOIN(__EE975147,__EE1024711,__JC1024717(LEFT,RIGHT),__JT1024717(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE919788 := __ENH_Sele_Property_4;
  SHARED __EE976174 := __EE919788(__EE919788.Is_Ever_Owned_ AND __NN(__EE919788.Legal_));
  SHARED __ST372593_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE976198 := PROJECT(__CLEANANDDO(__EE976174,TABLE(__EE976174,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Sele_Property_ := COUNT(GROUP),KEL.typ.ntyp(E_Business_Sele().Typ) UID := __EE976174.Legal_},Legal_,MERGE)),__ST372593_Layout);
  SHARED __ST389664_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162126_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162168_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162192_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162276_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1025143(__ST386931_Layout __EE1025137, __ST372593_Layout __EE976198) := __EEQP(__EE1025137.UID,__EE976198.UID);
  __ST389664_Layout __JT1025143(__ST386931_Layout __l, __ST372593_Layout __r) := TRANSFORM
    SELF.U_I_D__4_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1025565 := JOIN(__EE1025137,__EE976198,__JC1025143(LEFT,RIGHT),__JT1025143(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE922244 := __ENH_Address_4;
  SHARED __EE922258 := __EE922244.Data_Sources_;
  __JC1025570(E_Address(__in,__cfg).Data_Sources_Layout __EE922258) := __T(__OP2(__EE922258.Source_,=,__CN('VL')));
  SHARED __EE1025571 := __EE922244(EXISTS(__CHILDJOINFILTER(__EE922258,__JC1025570)));
  SHARED __EE922242 := __ENH_Sele_Address_4;
  SHARED __EE1031671 := __EE922242(__T(__AND(__EE922242.Matches_Is_Best_Helper_Attr_,__CN(__NN(__EE922242.Location_) AND __NN(__EE922242.Legal_)))));
  SHARED __ST378943_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Address_Components_Layout) Address_Components_;
    KEL.typ.ndataset(E_Address(__in,__cfg).College_Layout) College_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Date_Summary_Layout) A_D_V_O_Date_Summary_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Address(__in,__cfg).B_I_P_V2_Best_Layout) B_I_P_V2_Best_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Do_Not_Deliver_Layout) Do_Not_Deliver_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Do_Not_Mail_Layout) Do_Not_Mail_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Dead_C_O_Layout) Dead_C_O_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Hot_List_Layout) Hot_List_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Mail_Drop_Layout) Mail_Drop_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Mixed_Usage_Layout) Mixed_Usage_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Only_Way_To_Get_Mail_Layout) Only_Way_To_Get_Mail_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Record_Type_Layout) Record_Type_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Address_Type_Layout) Address_Type_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Residential_Or_Business_Layout) Residential_Or_Business_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Seasonal_Delivery_Layout) Seasonal_Delivery_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Simplify_Layout) Simplify_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Style_Layout) Style_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Throw_Back_Layout) Throw_Back_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Vacancy_Layout) Vacancy_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Summary_Layout) A_D_V_O_Summary_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Vacation_Layout) Vacation_;
    KEL.typ.ndataset(E_Address(__in,__cfg).High_Risk_Address_Layout) High_Risk_Address_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Summary_Layout) Bestchild_Advo_;
    KEL.typ.nstr Res_Bus_Flag_;
    KEL.typ.nstr Vacant_Flag_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr Primary_Range__1_;
    KEL.typ.nstr Predirectional__1_;
    KEL.typ.nstr Primary_Name__1_;
    KEL.typ.nstr Suffix__1_;
    KEL.typ.nstr Postdirectional__1_;
    KEL.typ.nstr Secondary_Range__1_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST149190_Layout) Data_Sources__1_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST338443_Layout) Rolled_Source_List_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1025731(B_Address_4(__in,__cfg).__ST146271_Layout __EE1025571, B_Sele_Address_4(__in,__cfg).__ST149134_Layout __EE1031671) := __EEQP(__EE1031671.Location_,__EE1025571.UID);
  __ST378943_Layout __JT1025731(B_Address_4(__in,__cfg).__ST146271_Layout __l, B_Sele_Address_4(__in,__cfg).__ST149134_Layout __r) := TRANSFORM
    SELF.Primary_Range__1_ := __r.Primary_Range_;
    SELF.Predirectional__1_ := __r.Predirectional_;
    SELF.Primary_Name__1_ := __r.Primary_Name_;
    SELF.Suffix__1_ := __r.Suffix_;
    SELF.Postdirectional__1_ := __r.Postdirectional_;
    SELF.Secondary_Range__1_ := __r.Secondary_Range_;
    SELF.Z_I_P5__1_ := __r.Z_I_P5_;
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1025960 := JOIN(__EE1031671,__EE1025571,__JC1025731(RIGHT,LEFT),__JT1025731(RIGHT,LEFT),INNER,HASH);
  SHARED __ST912225_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162126_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162168_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162192_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162276_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    __ST378943_Layout Address_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1025968(__ST389664_Layout __EE1025565, __ST378943_Layout __EE1025960) := __EEQP(__EE1025565.UID,__EE1025960.Legal_);
  __ST912225_Layout __Join__ST912225_Layout(__ST389664_Layout __l, __ST378943_Layout __r) := TRANSFORM
    SELF := __l;
    SELF.Address_ := __r;
  END;
  SHARED __EE1026601 := JOIN(__EE1025565,__EE1025960,__JC1025968(LEFT,RIGHT),__Join__ST912225_Layout(LEFT,RIGHT),LEFT OUTER,HASH,KEEP(1));
  SHARED __EE922658 := __ENH_Property_Event_4;
  SHARED __EE922656 := __E_Address_Property_Event;
  SHARED __EE978847 := __EE922656(__NN(__EE922656.Location_) AND __NN(__EE922656.Event_));
  SHARED __EE978861 := __EE978847.Address_Characteristics_;
  __JC978864(E_Address_Property_Event(__in,__cfg).Address_Characteristics_Layout __EE978861) := __T(__EE978861.Is_Property_Address_);
  SHARED __EE978865 := __EE978847(EXISTS(__CHILDJOINFILTER(__EE978861,__JC978864)));
  SHARED __ST1017154_Layout := RECORD
    KEL.typ.ntyp(E_Property_Event().Typ) Event_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1017158 := PROJECT(TABLE(PROJECT(__EE978865,__ST1017154_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Event_,Location_},Event_,Location_,MERGE),__ST1017154_Layout);
  SHARED __EE1026607 := __EE1031671;
  SHARED __ST1017210_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location__1_;
    KEL.typ.nstr Primary_Range__1_;
    KEL.typ.nstr Predirectional__1_;
    KEL.typ.nstr Primary_Name__1_;
    KEL.typ.nstr Suffix__1_;
    KEL.typ.nstr Postdirectional__1_;
    KEL.typ.nstr Secondary_Range__1_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST149190_Layout) Data_Sources__1_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST338443_Layout) Rolled_Source_List_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1017210_Layout __ND1026612__Project(B_Sele_Address_4(__in,__cfg).__ST149134_Layout __PP1026608) := TRANSFORM
    SELF.Location__1_ := __PP1026608.Location_;
    SELF.Primary_Range__1_ := __PP1026608.Primary_Range_;
    SELF.Predirectional__1_ := __PP1026608.Predirectional_;
    SELF.Primary_Name__1_ := __PP1026608.Primary_Name_;
    SELF.Suffix__1_ := __PP1026608.Suffix_;
    SELF.Postdirectional__1_ := __PP1026608.Postdirectional_;
    SELF.Secondary_Range__1_ := __PP1026608.Secondary_Range_;
    SELF.Z_I_P5__1_ := __PP1026608.Z_I_P5_;
    SELF.Data_Sources__1_ := __PP1026608.Data_Sources_;
    SELF := __PP1026608;
  END;
  SHARED __EE1026781 := PROJECT(__EE1026607,__ND1026612__Project(LEFT));
  SHARED __ST1017372_Layout := RECORD
    KEL.typ.ntyp(E_Property_Event().Typ) Event_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location__1_;
    KEL.typ.nstr Primary_Range__1_;
    KEL.typ.nstr Predirectional__1_;
    KEL.typ.nstr Primary_Name__1_;
    KEL.typ.nstr Suffix__1_;
    KEL.typ.nstr Postdirectional__1_;
    KEL.typ.nstr Secondary_Range__1_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST149190_Layout) Data_Sources__1_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST338443_Layout) Rolled_Source_List_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1026787(__ST1017154_Layout __EE1017158, __ST1017210_Layout __EE1026781) := __EEQP(__EE1026781.Location__1_,__EE1017158.Location_);
  __ST1017372_Layout __JT1026787(__ST1017154_Layout __l, __ST1017210_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1026856 := JOIN(__EE1017158,__EE1026781,__JC1026787(LEFT,RIGHT),__JT1026787(LEFT,RIGHT),INNER,HASH);
  SHARED __ST379524_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr L_N_Fares_I_D_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.nbool Is_Deed_;
    KEL.typ.nbool Is_Assessment_;
    KEL.typ.nkdate Process_Date_;
    KEL.typ.nstr Vendor_Source_Code_;
    KEL.typ.nbool Current_Record_;
    KEL.typ.nstr Mailing_City_State_Zip_;
    KEL.typ.nstr Property_Full_Street_Address_;
    KEL.typ.nstr Property_Address_City_State_Zip_;
    KEL.typ.nstr Standardized_Land_Use_Code_;
    KEL.typ.nbool Occupant_Owned_;
    KEL.typ.nkdate Recording_Date_;
    KEL.typ.nkdate Sale_Date_;
    KEL.typ.nstr Document_Type_Code_;
    KEL.typ.nint Sale_Price_;
    KEL.typ.nint Mortgage_Amount_;
    KEL.typ.nstr Mortgage_Type_;
    KEL.typ.nkdate Previous_Recording_Date_;
    KEL.typ.nint Previous_Sale_Price_;
    KEL.typ.nint Assessed_Total_Value_;
    KEL.typ.nkdate Assessed_Value_Year_;
    KEL.typ.nint Market_Total_Value_;
    KEL.typ.nkdate Market_Value_Year_;
    KEL.typ.nkdate Tax_Year_;
    KEL.typ.nint Lot_Size_;
    KEL.typ.nfloat Land_Square_Footage_;
    KEL.typ.nint Building_Area_;
    KEL.typ.nkdate Year_Built_;
    KEL.typ.nkdate Effective_Year_Built_;
    KEL.typ.nint Number_Of_Buildings_;
    KEL.typ.nstr Number_Of_Stories_;
    KEL.typ.nint Number_Of_Units_;
    KEL.typ.nint Number_Of_Rooms_;
    KEL.typ.nstr Number_Of_Bedrooms_;
    KEL.typ.nfloat Number_Of_Baths_;
    KEL.typ.nstr Number_Of_Partial_Baths_;
    KEL.typ.nstr Garage_Type_Code_;
    KEL.typ.nint Parking_Number_Of_Cars_;
    KEL.typ.nstr Style_Code_;
    KEL.typ.nbool Fireplace_Indicator_;
    KEL.typ.nkdate Tape_Cut_Date_;
    KEL.typ.nkdate Certification_Date_;
    KEL.typ.nbool L_N_Mobile_Home_Indicator_;
    KEL.typ.nbool L_N_Condo_Indicator_;
    KEL.typ.nbool L_N_Property_Tax_Exemption_Indicator_;
    KEL.typ.nstr Buyer_Or_Borrower_Or_Assessee_;
    KEL.typ.nstr Name1_;
    KEL.typ.nstr Name2_;
    KEL.typ.nkdate Contract_Date_;
    KEL.typ.nbool Timeshare_Flag_;
    KEL.typ.nstr Land_Lot_Size_;
    KEL.typ.nbool Additional_Name_Flag_;
    KEL.typ.ndataset(E_Property_Event(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nkdate Dt_First_Seen_;
    KEL.typ.nbool Is_Current_Assessment_Record_;
    KEL.typ.ntyp(E_Property_Event().Typ) Event_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location__1_;
    KEL.typ.nstr Primary_Range__1_;
    KEL.typ.nstr Predirectional__1_;
    KEL.typ.nstr Primary_Name__1_;
    KEL.typ.nstr Suffix__1_;
    KEL.typ.nstr Postdirectional__1_;
    KEL.typ.nstr Secondary_Range__1_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST149190_Layout) Data_Sources__1_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST338443_Layout) Rolled_Source_List_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1026862(B_Property_Event_4(__in,__cfg).__ST148896_Layout __EE922658, __ST1017372_Layout __EE1026856) := __EEQP(__EE1026856.Event_,__EE922658.UID);
  __ST379524_Layout __JT1026862(B_Property_Event_4(__in,__cfg).__ST148896_Layout __l, __ST1017372_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1026997 := JOIN(__EE1026856,__EE922658,__JC1026862(RIGHT,LEFT),__JT1026862(RIGHT,LEFT),INNER,HASH);
  SHARED __ST1018526_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Assessed_Total_Value_;
    KEL.typ.nkdate Assessed_Value_Year_;
    KEL.typ.nint Market_Total_Value_;
    KEL.typ.nkdate Market_Value_Year_;
    KEL.typ.nfloat Land_Square_Footage_;
    KEL.typ.nint Building_Area_;
    KEL.typ.nkdate Dt_First_Seen_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1027039 := PROJECT(TABLE(PROJECT(__EE1026997,__ST1018526_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Assessed_Total_Value_,Assessed_Value_Year_,Market_Total_Value_,Market_Value_Year_,Land_Square_Footage_,Building_Area_,Dt_First_Seen_,Legal_},UID,Assessed_Total_Value_,Assessed_Value_Year_,Market_Total_Value_,Market_Value_Year_,Land_Square_Footage_,Building_Area_,Dt_First_Seen_,Legal_,MERGE),__ST1018526_Layout);
  SHARED __ST1018565_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162126_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162168_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162192_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162276_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    __ST378943_Layout Address_;
    KEL.typ.ndataset(__ST1018526_Layout) Property_Event_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1027047(__ST912225_Layout __EE1026601, __ST1018526_Layout __EE1027039) := __EEQP(__EE1026601.UID,__EE1027039.Legal_);
  __ST1018565_Layout __Join__ST1018565_Layout(__ST912225_Layout __r, DATASET(__ST1018526_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Property_Event_ := __CN(__recs);
  END;
  SHARED __EE1027691 := DENORMALIZE(DISTRIBUTE(__EE1026601,HASH(UID)),DISTRIBUTE(__EE1027039,HASH(Legal_)),__JC1027047(LEFT,RIGHT),GROUP,__Join__ST1018565_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE1011423 := __EE922242;
  SHARED __EE1031682 := __EE1011423(__T(__AND(__EE1011423.Matches_Is_Best_Helper_Attr_,__CN(__NN(__EE1011423.Legal_)))));
  SHARED __ST379818_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST149190_Layout) Data_Sources_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST338443_Layout) Rolled_Source_List_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Age_Helper_Attribute_;
    KEL.typ.nbool Age_Is_Not_Zero_Helper_;
    KEL.typ.nint Last_Seen_Age_Helper_Attribute_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST379818_Layout __JT1027710(B_Sele_Address_4(__in,__cfg).__ST149134_Layout __l, B_Sele_Address_4(__in,__cfg).__ST338443_Layout __r) := TRANSFORM
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1027711 := NORMALIZE(__EE1031682,__T(LEFT.Rolled_Source_List_),__JT1027710(LEFT,RIGHT));
  SHARED __ST424286_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162126_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162168_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162192_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162276_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    __ST378943_Layout Address_;
    KEL.typ.ndataset(__ST1018526_Layout) Property_Event_;
    KEL.typ.ndataset(__ST379818_Layout) Sele_Address_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1027789(__ST1018565_Layout __EE1027691, __ST379818_Layout __EE1027711) := __EEQP(__EE1027691.UID,__EE1027711.Legal_);
  __ST424286_Layout __Join__ST424286_Layout(__ST1018565_Layout __r, DATASET(__ST379818_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Sele_Address_ := __CN(__recs);
  END;
  SHARED __EE1028504 := DENORMALIZE(DISTRIBUTE(__EE1027691,HASH(UID)),DISTRIBUTE(__EE1027711,HASH(Legal_)),__JC1027789(LEFT,RIGHT),GROUP,__Join__ST424286_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE1028510 := __EE1031682;
  SHARED __ST914599_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162126_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162168_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162192_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162276_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    __ST378943_Layout Address_;
    KEL.typ.ndataset(__ST1018526_Layout) Property_Event_;
    KEL.typ.ndataset(__ST379818_Layout) Sele_Address_;
    B_Sele_Address_4(__in,__cfg).__ST149134_Layout Sele_Address__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1028518(__ST424286_Layout __EE1028504, B_Sele_Address_4(__in,__cfg).__ST149134_Layout __EE1028510) := __EEQP(__EE1028504.UID,__EE1028510.Legal_);
  __ST914599_Layout __Join__ST914599_Layout(__ST424286_Layout __l, B_Sele_Address_4(__in,__cfg).__ST149134_Layout __r) := TRANSFORM
    SELF := __l;
    SELF.Sele_Address__1_ := __r;
  END;
  SHARED __EE1029300 := JOIN(__EE1028504,__EE1028510,__JC1028518(LEFT,RIGHT),__Join__ST914599_Layout(LEFT,RIGHT),LEFT OUTER,HASH,KEEP(1));
  EXPORT __ST144157_Layout := RECORD
    KEL.typ.nstr Name_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Name_Status_;
    KEL.typ.nstr Corporation_Legal_Name_;
    KEL.typ.nstr Doing_Business_As_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Business_Name_Match_Record_;
    KEL.typ.nstr Doing_Business_As_Slim_Name_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST144193_Layout := RECORD
    KEL.typ.nint Total_Employees_;
    KEL.typ.nint Employee_Count_;
    KEL.typ.nstr N_A_R_B_Employee_Code_;
    KEL.typ.nstr E_B_R_Employee_Size_Code_;
    KEL.typ.nint Estimated_Number_Of_Employees_;
    KEL.typ.nint D_C_A_Enterprise_Number_;
    KEL.typ.nint Cortera_Ultimate_Link_I_D_;
    KEL.typ.nint Equifax_I_D_;
    KEL.typ.nstr N_A_R_B_Record_I_D_;
    KEL.typ.nstr E_B_R_Number_;
    KEL.typ.nint Experian_Business_I_D_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Cortera_Total_Employees_;
    KEL.typ.nint D_C_A_Total_Employees_;
    KEL.typ.nint E_B_R_Total_Employees_;
    KEL.typ.nint Equifax_Total_Employees_;
    KEL.typ.nint Infutor_Total_Employees_;
    KEL.typ.nbool Is_Cortera_Employee_Record_;
    KEL.typ.nbool Is_D_C_A_Employee_Record_;
    KEL.typ.nbool Is_E_B_R_Employee_Record_;
    KEL.typ.nbool Is_Equifax_Employee_Record_;
    KEL.typ.nbool Is_Infutor_Employee_Record_;
    KEL.typ.nbool Is_Seen_In_Two_Years_;
    KEL.typ.nint N_A_R_B_Employee_Estimate_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST144220_Layout := RECORD
    KEL.typ.nint Total_Sales_;
    KEL.typ.nint Financial_Amount_Figure_;
    KEL.typ.nstr N_A_R_B_Sales_Code_;
    KEL.typ.nstr Total_Sales_Precision_;
    KEL.typ.nint Reported_Sales_;
    KEL.typ.nint Estimated_Annual_Sales_Amount_;
    KEL.typ.nint D_C_A_Enterprise_Number_;
    KEL.typ.nint Cortera_Ultimate_Link_I_D_;
    KEL.typ.nint Equifax_I_D_;
    KEL.typ.nstr N_A_R_B_Record_I_D_;
    KEL.typ.nstr E_B_R_Number_;
    KEL.typ.nint Experian_Business_I_D_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Cortera_Total_Sales_;
    KEL.typ.nint D_C_A_Total_Sales_;
    KEL.typ.nint E_B_R_Total_Sales_;
    KEL.typ.nint Equifax_Total_Sales_;
    KEL.typ.nint Infutor_Total_Sales_;
    KEL.typ.nbool Is_Cortera_Sale_Record_;
    KEL.typ.nbool Is_D_C_A_Sale_Record_;
    KEL.typ.nbool Is_E_B_R_Sale_Record_;
    KEL.typ.nbool Is_Equifax_Sale_Record_;
    KEL.typ.nbool Is_Infutor_Sale_Record_;
    KEL.typ.nbool Is_Seen_In_Two_Years_;
    KEL.typ.nint N_A_R_B_Sales_Estimate_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST144307_Layout := RECORD
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST79913_Layout := RECORD
    KEL.typ.nbool Ro_B_A_C_;
    KEL.typ.nbool Ro_B_B_D_;
    KEL.typ.bool All_Unit_Designation_Null_Or_Empty_ := FALSE;
    KEL.typ.nbool Vacancy_Indicator_Y_;
    KEL.typ.nbool Vacancy_Indicator_N_;
    KEL.typ.nbool Vacancy_Indicator_Null_Or_Empty_;
    KEL.typ.bool Exists_Type_Code_H_H_D_ := FALSE;
    KEL.typ.bool Exists_Type_Code_P_ := FALSE;
    KEL.typ.bool Alltype_Code_Null_Or_Empty_ := FALSE;
    KEL.typ.bool Exists_Address_Type_Code9_ := FALSE;
    KEL.typ.bool All_Address_Type_Code_Null_Or_Empty_ := FALSE;
    KEL.typ.nbool Secondary_Range_Null_Or_Empty_;
  END;
  EXPORT __ST80174_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Market_Total_Value_;
    KEL.typ.nstr Market_Value_Year_Clean_;
    KEL.typ.nint Assessed_Total_Value_;
    KEL.typ.nstr Assessed_Value_Year_Clean_;
    KEL.typ.nfloat Land_Square_Footage_;
    KEL.typ.nint Building_Area_;
    KEL.typ.nstr Property_Event_Date_First_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST79653_Layout := RECORD
    KEL.typ.nbool Age_Is_Not_Zero_Helper_;
    KEL.typ.nint Age_Helper_Attribute_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Last_Seen_Age_Helper_Attribute_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST79964_Layout := RECORD
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
  END;
  EXPORT __ST84265_Layout := RECORD
    KEL.typ.nstr Doing_Business_As_Slim_Name_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST144119_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(__ST144157_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162148_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST162158_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(__ST144193_Layout) Employee_Counts_;
    KEL.typ.ndataset(__ST144220_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(__ST144307_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST305029_Layout) All_Lien_Data_;
    KEL.typ.int Asset_Property_Count_Ever_ := 0;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.int Assoc_Exec_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.int B_E___Assoc_Cnt2_Y_ := 0;
    KEL.typ.nstr B_E___Best_Addr_City_;
    KEL.typ.nstr B_E___Best_Addr_St_;
    KEL.typ.nstr B_E___Best_Addr_State_;
    KEL.typ.nstr B_E___Best_Addr_Zip_;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code2_;
    KEL.typ.int B_E___Drg_Bk_Cnt7_Y_ := 0;
    KEL.typ.int B_E___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.int B_E___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.int B_E___U_C_C_Debtor_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    __ST79913_Layout Best_Address_Helper_Flag_Row_;
    KEL.typ.ndataset(__ST80174_Layout) Best_Address_Property_Event_Data_;
    KEL.typ.ndataset(__ST79653_Layout) Best_Address_Sources_Set_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157370_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    __ST79964_Layout Best_Sele_Address_Helper_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST157359_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Business_Address_Match_Sources_Sorted_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Bureau_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Business_Phone_Match_Sources_Sorted_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Business_T_I_N_Match_Sources_Sorted_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST84004_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(__ST84265_Layout) D_B_A_Names_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85120_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85093_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85534_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85507_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST85297_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST85270_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.int Terminated_Filing_Count_ := 0;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST83968_Layout) Translated_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST144119_Layout __ND1029345__Project(__ST914599_Layout __PP1029341) := TRANSFORM
    __EE1029303 := __PP1029341.Reported_Names_;
    __ST144157_Layout __ND1029759__Project(B_Business_Sele_4(__in,__cfg).__ST162126_Layout __PP1029755) := TRANSFORM
      SELF.Business_Name_Match_Record_ := __OR(__AND(__PP1029755.Business_Name_Match_,__PP1029755.Header_Hit_Flag_),__AND(__PP1029755.Business_Name_Is_Similar_,__PP1029755.Header_Hit_Flag_));
      SELF.Translated_Source_ := FN_Compile(__cfg).FN_Source_Group(__ECAST(KEL.typ.nstr,__PP1029755.Source_));
      SELF := __PP1029755;
    END;
    SELF.Reported_Names_ := __PROJECT(__EE1029303,__ND1029759__Project(LEFT));
    __EE1029307 := __PP1029341.Employee_Counts_;
    __ST144193_Layout __ND1029824__Project(B_Business_Sele_4(__in,__cfg).__ST162168_Layout __PP1029820) := TRANSFORM
      __EE1029874 := __PP1029341.Employee_Counts_;
      __BS1029878 := __T(__EE1029874);
      __EE1029889 := __BS1029878(__T(__AND(__OP2(__T(__EE1029874).Cortera_Ultimate_Link_I_D_,=,__PP1029820.Cortera_Ultimate_Link_I_D_),__T(__EE1029874).Is_Cortera_Employee_Record_)));
      __EE1029902 := TOPN(__EE1029889(__NN(__EE1029889.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1029889.Date_First_Seen_))),1, -__T(__EE1029889.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1029889.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Cortera_Total_Employees_ := (__EE1029902)[1].Total_Employees_;
      __EE1029912 := __PP1029341.Employee_Counts_;
      __BS1029916 := __T(__EE1029912);
      __EE1029927 := __BS1029916(__T(__AND(__OP2(__T(__EE1029912).D_C_A_Enterprise_Number_,=,__PP1029820.D_C_A_Enterprise_Number_),__T(__EE1029912).Is_D_C_A_Employee_Record_)));
      __EE1029940 := TOPN(__EE1029927(__NN(__EE1029927.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1029927.Date_First_Seen_))),1, -__T(__EE1029927.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1029927.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.D_C_A_Total_Employees_ := (__EE1029940)[1].Total_Employees_;
      __EE1029950 := __PP1029341.Employee_Counts_;
      __BS1029954 := __T(__EE1029950);
      __EE1029965 := __BS1029954(__T(__AND(__OP2(__T(__EE1029950).E_B_R_Number_,=,__PP1029820.E_B_R_Number_),__T(__EE1029950).Is_E_B_R_Employee_Record_)));
      __EE1029978 := TOPN(__EE1029965(__NN(__EE1029965.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1029965.Date_First_Seen_))),1, -__T(__EE1029965.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1029965.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.E_B_R_Total_Employees_ := (__EE1029978)[1].Total_Employees_;
      __EE1029988 := __PP1029341.Employee_Counts_;
      __BS1029992 := __T(__EE1029988);
      __EE1030003 := __BS1029992(__T(__AND(__OP2(__T(__EE1029988).Equifax_I_D_,=,__PP1029820.Equifax_I_D_),__T(__EE1029988).Is_Equifax_Employee_Record_)));
      __EE1030016 := TOPN(__EE1030003(__NN(__EE1030003.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1030003.Date_First_Seen_))),1, -__T(__EE1030003.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1030003.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Equifax_Total_Employees_ := (__EE1030016)[1].Employee_Count_;
      __EE1030026 := __PP1029341.Employee_Counts_;
      __BS1030030 := __T(__EE1030026);
      __EE1030041 := __BS1030030(__T(__AND(__OP2(__T(__EE1030026).N_A_R_B_Record_I_D_,=,__PP1029820.N_A_R_B_Record_I_D_),__T(__EE1030026).Is_Infutor_Employee_Record_)));
      __EE1030054 := TOPN(__EE1030041(__NN(__EE1030041.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1030041.Date_First_Seen_))),1, -__T(__EE1030041.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1030041.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Infutor_Total_Employees_ := (__EE1030054)[1].N_A_R_B_Employee_Estimate_;
      SELF := __PP1029820;
    END;
    SELF.Employee_Counts_ := __PROJECT(__EE1029307,__ND1029824__Project(LEFT));
    __EE1029311 := __PP1029341.Sale_Amounts_;
    __ST144220_Layout __ND1030107__Project(B_Business_Sele_4(__in,__cfg).__ST162192_Layout __PP1030103) := TRANSFORM
      __EE1030160 := __PP1029341.Sale_Amounts_;
      __BS1030164 := __T(__EE1030160);
      __EE1030175 := __BS1030164(__T(__AND(__OP2(__T(__EE1030160).Cortera_Ultimate_Link_I_D_,=,__PP1030103.Cortera_Ultimate_Link_I_D_),__T(__EE1030160).Is_Cortera_Sale_Record_)));
      __EE1030188 := TOPN(__EE1030175(__NN(__EE1030175.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1030175.Date_First_Seen_))),1, -__T(__EE1030175.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1030175.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Cortera_Total_Sales_ := (__EE1030188)[1].Total_Sales_;
      __EE1030198 := __PP1029341.Sale_Amounts_;
      __BS1030202 := __T(__EE1030198);
      __EE1030213 := __BS1030202(__T(__AND(__OP2(__T(__EE1030198).D_C_A_Enterprise_Number_,=,__PP1030103.D_C_A_Enterprise_Number_),__T(__EE1030198).Is_D_C_A_Sale_Record_)));
      __EE1030226 := TOPN(__EE1030213(__NN(__EE1030213.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1030213.Date_First_Seen_))),1, -__T(__EE1030213.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1030213.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.D_C_A_Total_Sales_ := (__EE1030226)[1].Total_Sales_;
      __EE1030236 := __PP1029341.Sale_Amounts_;
      __BS1030240 := __T(__EE1030236);
      __EE1030251 := __BS1030240(__T(__AND(__OP2(__T(__EE1030236).E_B_R_Number_,=,__PP1030103.E_B_R_Number_),__T(__EE1030236).Is_E_B_R_Sale_Record_)));
      __EE1030264 := TOPN(__EE1030251(__NN(__EE1030251.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1030251.Date_First_Seen_))),1, -__T(__EE1030251.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1030251.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.E_B_R_Total_Sales_ := (__EE1030264)[1].Reported_Sales_;
      __EE1030274 := __PP1029341.Sale_Amounts_;
      __BS1030278 := __T(__EE1030274);
      __EE1030289 := __BS1030278(__T(__AND(__OP2(__T(__EE1030274).Equifax_I_D_,=,__PP1030103.Equifax_I_D_),__T(__EE1030274).Is_Equifax_Sale_Record_)));
      __EE1030302 := TOPN(__EE1030289(__NN(__EE1030289.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1030289.Date_First_Seen_))),1, -__T(__EE1030289.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1030289.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Equifax_Total_Sales_ := (__EE1030302)[1].Financial_Amount_Figure_;
      __EE1030312 := __PP1029341.Sale_Amounts_;
      __BS1030316 := __T(__EE1030312);
      __EE1030327 := __BS1030316(__T(__AND(__OP2(__T(__EE1030312).N_A_R_B_Record_I_D_,=,__PP1030103.N_A_R_B_Record_I_D_),__T(__EE1030312).Is_Infutor_Sale_Record_)));
      __EE1030340 := TOPN(__EE1030327(__NN(__EE1030327.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1030327.Date_First_Seen_))),1, -__T(__EE1030327.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1030327.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Infutor_Total_Sales_ := (__EE1030340)[1].N_A_R_B_Sales_Estimate_;
      SELF := __PP1030103;
    END;
    SELF.Sale_Amounts_ := __PROJECT(__EE1029311,__ND1030107__Project(LEFT));
    __EE1029315 := __PP1029341.Data_Sources_;
    SELF.Data_Sources_ := __BN(PROJECT(__T(__EE1029315),__ST144307_Layout),__NL(__EE1029315));
    SELF.Asset_Property_Count_Ever_ := __PP1029341.C_O_U_N_T___Sele_Property_;
    SELF.Assoc_Exec_Cnt2_Y_Un_Cap_ := __PP1029341.C_O_U_N_T___Sele_Person_;
    __CC13638 := '-99999';
    __CC13641 := -99999;
    SELF.B_E___Assoc_Cnt2_Y_ := MAP(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13638))))=>__CC13641,KEL.Routines.BoundsFold(__PP1029341.Assoc_Cnt2_Y_Un_Cap_,0,999999));
    __CC13655 := '-99999';
    __CC13660 := '-99998';
    SELF.B_E___Best_Addr_City_ := MAP(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13655))))=>__ECAST(KEL.typ.nstr,__CN(__CC13655)),__T(__OR(__NT(__PP1029341.Only_Best_Business_Address_.Best_Vanity_City_),__OP2(__PP1029341.Only_Best_Business_Address_.Best_Vanity_City_,=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13660)),__ECAST(KEL.typ.nstr,__PP1029341.Only_Best_Business_Address_.Best_Vanity_City_));
    SELF.B_E___Best_Addr_St_ := MAP(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13655))))=>__ECAST(KEL.typ.nstr,__CN(__CC13655)),__T(__OR(__NT(__PP1029341.Best_Sele_Address_),__OP2(__PP1029341.Best_Sele_Address_,=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13660)),__ECAST(KEL.typ.nstr,__PP1029341.Best_Sele_Address_));
    SELF.B_E___Best_Addr_State_ := MAP(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13655))))=>__ECAST(KEL.typ.nstr,__CN(__CC13655)),__T(__OR(__NT(__PP1029341.Only_Best_Business_Address_.Best_State_),__OP2(__PP1029341.Only_Best_Business_Address_.Best_State_,=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13660)),__ECAST(KEL.typ.nstr,__PP1029341.Only_Best_Business_Address_.Best_State_));
    SELF.B_E___Best_Addr_Zip_ := MAP(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13655))))=>__ECAST(KEL.typ.nstr,__CN(__CC13655)),__T(__OR(__NT(__PP1029341.Only_Best_Business_Address_.Best_Zip5_),__OP2(__CAST(KEL.typ.str,__PP1029341.Only_Best_Business_Address_.Best_Zip5_),=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13660)),__ECAST(KEL.typ.nstr,__FN3(INTFORMAT,__PP1029341.Only_Best_Business_Address_.Best_Zip5_,__CN(5),__CN(1))));
    __CC13643 := '-99998';
    SELF.B_E___Bus_N_A_I_C_S_Code2_ := MAP(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13638))))=>__ECAST(KEL.typ.nstr,__CAST(KEL.typ.str,__CN(__CC13641))),__T(__AND(__OP2(__PP1029341.Bus_N_A_I_C_S_Code2_Final_,<>,__CN(__CC13643)),__OP2(__PP1029341.Bus_N_A_I_C_S_Code2_Final_,<>,__PP1029341.B_E___Bus_N_A_I_C_S_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1029341.Bus_N_A_I_C_S_Code2_Final_),__T(__AND(__OP2(__PP1029341.Bus_N_A_I_C_S_Code3_Final_,<>,__CN(__CC13643)),__OP2(__PP1029341.Bus_N_A_I_C_S_Code3_Final_,<>,__PP1029341.B_E___Bus_N_A_I_C_S_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1029341.Bus_N_A_I_C_S_Code3_Final_),__T(__AND(__OP2(__PP1029341.Bus_N_A_I_C_S_Code4_Final_,<>,__CN(__CC13643)),__OP2(__PP1029341.Bus_N_A_I_C_S_Code4_Final_,<>,__PP1029341.B_E___Bus_N_A_I_C_S_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1029341.Bus_N_A_I_C_S_Code4_Final_),__ECAST(KEL.typ.nstr,__CN(__CC13643)));
    SELF.B_E___Bus_S_I_C_Code2_ := MAP(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13638))))=>__ECAST(KEL.typ.nstr,__CN(__CC13638)),__T(__AND(__OP2(__PP1029341.Bus_S_I_C_Code2_Final_,<>,__CN(__CC13643)),__OP2(__PP1029341.Bus_S_I_C_Code2_Final_,<>,__PP1029341.B_E___Bus_S_I_C_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1029341.Bus_S_I_C_Code2_Final_),__T(__AND(__OP2(__PP1029341.Bus_S_I_C_Code3_Final_,<>,__CN(__CC13643)),__OP2(__PP1029341.Bus_S_I_C_Code3_Final_,<>,__PP1029341.B_E___Bus_S_I_C_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1029341.Bus_S_I_C_Code3_Final_),__T(__AND(__OP2(__PP1029341.Bus_S_I_C_Code4_Final_,<>,__CN(__CC13643)),__OP2(__PP1029341.Bus_S_I_C_Code4_Final_,<>,__PP1029341.B_E___Bus_S_I_C_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1029341.Bus_S_I_C_Code4_Final_),__ECAST(KEL.typ.nstr,__CN(__CC13643)));
    __CC13805 := '-99999';
    __CC13808 := -99999;
    SELF.B_E___Drg_Bk_Cnt7_Y_ := IF(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13805)))),__CC13808,KEL.Routines.BoundsFold(__PP1029341.C_O_U_N_T___Exp1__1_,0,999));
    __CC13839 := '-99999';
    __CC13842 := -99999;
    __BS1030676 := __T(__PP1029341.All_Lien_Data_);
    SELF.B_E___Drg_L_T_D_Cnt7_Y_ := IF(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13839)))),__CC13842,KEL.Routines.BoundsFold(COUNT(__BS1030676(__T(__AND(__T(__PP1029341.All_Lien_Data_).Seen___In___Seven___Years_,__OP2(__T(__PP1029341.All_Lien_Data_).Is_Landlord_Tenant_Dispute_,=,__CN(TRUE)))))),0,99999));
    __BS1030701 := __T(__PP1029341.All_Lien_Data_);
    SELF.B_E___Drg_Ln_J_Cnt7_Y_ := IF(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1029341.Sele_I_D_),=,__CN(__CC13839)))),__CC13842,KEL.Routines.BoundsFold(COUNT(__BS1030701(__T(__AND(__T(__PP1029341.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP1029341.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))),0,99999));
    __CC13855 := -99999;
    __CC13858 := -99998;
    __CC13649 := -99997;
    SELF.B_E___U_C_C_Debtor_Cnt_Ev_ := MAP(__T(__OR(__CN(__PP1029341.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__PP1029341.Sele_I_D_,=,__CN(__CC13855))))=>__CC13855,__PP1029341.B_E___U_C_C_Cnt_Ev_ = 0=>__CC13858,__PP1029341.B_E___U_C_C_Cnt_Ev_ <> 0 AND __PP1029341.Initial_Debtor_Filing_Count_ = 0 AND __PP1029341.Initial_Creditor_Filing_Count_ = 0=>__CC13649,KEL.Routines.BoundsFold(__PP1029341.Initial_Debtor_Filing_Count_,0,99999));
    __ST79913_Layout __ND1030756__Project := TRANSFORM
      __EE1029327 := __PP1029341.Address_;
      SELF.Ro_B_A_C_ := __OP2(__EE1029327.Res_Bus_Flag_,IN,__CN(['A','C']));
      SELF.Ro_B_B_D_ := __OP2(__EE1029327.Res_Bus_Flag_,IN,__CN(['B','D']));
      __BS1030775 := __T(__EE1029327.Address_Components_);
      SELF.All_Unit_Designation_Null_Or_Empty_ := NOT EXISTS(__BS1030775(__T(__NOT(__OR(__NT(__T(__EE1029327.Address_Components_).Unit_Designation_),__OP2(__T(__EE1029327.Address_Components_).Unit_Designation_,=,__CN('')))))));
      SELF.Vacancy_Indicator_Y_ := __OP2(__EE1029327.Vacant_Flag_,=,__CN('Y'));
      SELF.Vacancy_Indicator_N_ := __OP2(__EE1029327.Vacant_Flag_,=,__CN('N'));
      SELF.Vacancy_Indicator_Null_Or_Empty_ := __OR(__NT(__EE1029327.Vacant_Flag_),__OP2(__EE1029327.Vacant_Flag_,=,__CN('')));
      __BS1030809 := __T(__EE1029327.Address_Components_);
      SELF.Exists_Type_Code_H_H_D_ := EXISTS(__BS1030809(__T(__OP2(__T(__EE1029327.Address_Components_).Type_Code_,IN,__CN(['H','HD'])))));
      __BS1030820 := __T(__EE1029327.Address_Components_);
      SELF.Exists_Type_Code_P_ := EXISTS(__BS1030820(__T(__OP2(__T(__EE1029327.Address_Components_).Type_Code_,=,__CN('P')))));
      __BS1030831 := __T(__EE1029327.Address_Components_);
      SELF.Alltype_Code_Null_Or_Empty_ := NOT EXISTS(__BS1030831(__T(__NOT(__OR(__NT(__T(__EE1029327.Address_Components_).Type_Code_),__OP2(__T(__EE1029327.Address_Components_).Type_Code_,=,__CN('')))))));
      __BS1030849 := __T(__EE1029327.Address_Type_);
      SELF.Exists_Address_Type_Code9_ := EXISTS(__BS1030849(__T(__OP2(__T(__EE1029327.Address_Type_).Address_Type_Code_,=,__CN('9')))));
      __BS1030860 := __T(__EE1029327.Address_Type_);
      SELF.All_Address_Type_Code_Null_Or_Empty_ := NOT EXISTS(__BS1030860(__T(__NOT(__OR(__NT(__T(__EE1029327.Address_Type_).Address_Type_Code_),__OP2(__T(__EE1029327.Address_Type_).Address_Type_Code_,=,__CN('')))))));
      SELF.Secondary_Range_Null_Or_Empty_ := __OR(__NT(__EE1029327.Secondary_Range_),__OP2(__EE1029327.Secondary_Range_,=,__CN('')));
    END;
    SELF.Best_Address_Helper_Flag_Row_ := ROW(__ND1030756__Project);
    __EE1029331 := __PP1029341.Property_Event_;
    __ST80174_Layout __ND1030904__Project(__ST1018526_Layout __PP1030900) := TRANSFORM
      __CC13651 := '-99997';
      SELF.Market_Value_Year_Clean_ := IF(__T(__OR(__NOT(__FN1(KEL.Routines.IsValidDate,__PP1030900.Market_Value_Year_)),__NT(__PP1030900.Market_Value_Year_))),__ECAST(KEL.typ.nstr,__CN(__CC13651)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP1030900.Market_Value_Year_,__CN('%Y'))));
      SELF.Assessed_Value_Year_Clean_ := IF(__T(__OR(__NOT(__FN1(KEL.Routines.IsValidDate,__PP1030900.Assessed_Value_Year_)),__NT(__PP1030900.Assessed_Value_Year_))),__ECAST(KEL.typ.nstr,__CN(__CC13651)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP1030900.Assessed_Value_Year_,__CN('%Y'))));
      SELF.Property_Event_Date_First_Seen_ := IF(__T(__OR(__NOT(__FN1(KEL.Routines.IsValidDate,__PP1030900.Dt_First_Seen_)),__NT(__PP1030900.Dt_First_Seen_))),__ECAST(KEL.typ.nstr,__CN(__CC13651)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP1030900.Dt_First_Seen_,__CN('%Y%m%d'))));
      SELF := __PP1030900;
    END;
    SELF.Best_Address_Property_Event_Data_ := __PROJECT(__EE1029331,__ND1030904__Project(LEFT));
    __EE1029335 := __PP1029341.Sele_Address_;
    __EE1030996 := PROJECT(TABLE(PROJECT(__T(__EE1029335),B_Sele_Address_4(__in,__cfg).__ST338443_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Source_,Age_Helper_Attribute_,Age_Is_Not_Zero_Helper_,Last_Seen_Age_Helper_Attribute_},Source_,Age_Helper_Attribute_,Age_Is_Not_Zero_Helper_,Last_Seen_Age_Helper_Attribute_,MERGE),B_Sele_Address_4(__in,__cfg).__ST338443_Layout);
    __EE1031028 := TOPN(__EE1030996(__NN(IF(__T(__NT(__EE1030996.Age_Is_Not_Zero_Helper_)),__ECAST(KEL.typ.nbool,__CN(FALSE)),__ECAST(KEL.typ.nbool,__EE1030996.Age_Is_Not_Zero_Helper_))) AND __NN(IF(__T(__NOT(__NT(__EE1030996.Last_Seen_Age_Helper_Attribute_))),__ECAST(KEL.typ.nint,__EE1030996.Last_Seen_Age_Helper_Attribute_),__ECAST(KEL.typ.nint,__CN(9999)))) AND __NN(__EE1030996.Source_)),99999,__T(IF(__T(__NT(__EE1030996.Age_Is_Not_Zero_Helper_)),__ECAST(KEL.typ.nbool,__CN(FALSE)),__ECAST(KEL.typ.nbool,__EE1030996.Age_Is_Not_Zero_Helper_))),IF(__T(__NOT(__NT(__EE1030996.Age_Helper_Attribute_))), -__T(__EE1030996.Age_Helper_Attribute_),9999),__T(IF(__T(__NOT(__NT(__EE1030996.Last_Seen_Age_Helper_Attribute_))),__ECAST(KEL.typ.nint,__EE1030996.Last_Seen_Age_Helper_Attribute_),__ECAST(KEL.typ.nint,__CN(9999)))),__T(__EE1030996.Source_),__T(Age_Helper_Attribute_),__T(Age_Is_Not_Zero_Helper_),__T(Last_Seen_Age_Helper_Attribute_));
    SELF.Best_Address_Sources_Set_ := __FILTER(__CN(PROJECT(__EE1031028,__ST79653_Layout)),__NN(Age_Is_Not_Zero_Helper_) OR __NN(Age_Helper_Attribute_) OR __NN(Source_) OR __NN(Last_Seen_Age_Helper_Attribute_));
    __ST79964_Layout __ND1031067__Project := TRANSFORM
      __EE1029339 := __PP1029341.Sele_Address__1_;
      SELF.Secondary_Range_ := __EE1029339.Secondary_Range_;
      SELF.Other_Location_Details_ := __EE1029339.Other_Location_Details_;
      SELF.Address_Record_Type_ := __EE1029339.Address_Record_Type_;
    END;
    SELF.Best_Sele_Address_Helper_ := ROW(__ND1031067__Project);
    __EE1031156 := __PP1029341.Sele_Address_Match_Sources_;
    __CC13651 := '-99997';
    __BS1031160 := __T(__EE1031156);
    __EE1031176 := __BN(TOPN(__BS1031160(__NN(__OP2(__T(__EE1031156).Date_First_Seen_Clean_,=,__CN(__CC13651))) AND __NN(__T(__EE1031156).Date_First_Seen_Clean_) AND __NN(__T(__EE1031156).Date_Last_Seen_Clean_) AND __NN(__T(__EE1031156).Translated_Source_)),1000,__T(__OP2(__T(__EE1031156).Date_First_Seen_Clean_,=,__CN(__CC13651))),__T(__T(__EE1031156).Date_First_Seen_Clean_), -__T(__T(__EE1031156).Date_Last_Seen_Clean_),__T(__T(__EE1031156).Translated_Source_)),__NL(__EE1031156));
    SELF.Business_Address_Match_Sources_Sorted_ := __EE1031176;
    __EE1029319 := __PP1029341.Business_Ver_Source_List_Sorted_;
    __BS1031181 := __T(__EE1029319);
    __EE1031188 := __BS1031181(__T(__OP2(__T(__EE1029319).Translated_Source_Code_,IN,__CN(['D','DN','ER','Q3','EF','RR','Z1']))));
    SELF.Business_Bureau_Source_List_ := __CN(__EE1031188);
    __EE1031192 := __PP1029341.Sele_Phone_Match_Sources_;
    __BS1031196 := __T(__EE1031192);
    __EE1031212 := __BN(TOPN(__BS1031196(__NN(__OP2(__T(__EE1031192).Date_First_Seen_Clean_,=,__CN(__CC13651))) AND __NN(__T(__EE1031192).Date_First_Seen_Clean_) AND __NN(__T(__EE1031192).Date_Last_Seen_Clean_) AND __NN(__T(__EE1031192).Translated_Source_)),1000,__T(__OP2(__T(__EE1031192).Date_First_Seen_Clean_,=,__CN(__CC13651))),__T(__T(__EE1031192).Date_First_Seen_Clean_), -__T(__T(__EE1031192).Date_Last_Seen_Clean_),__T(__T(__EE1031192).Translated_Source_)),__NL(__EE1031192));
    SELF.Business_Phone_Match_Sources_Sorted_ := __EE1031212;
    __EE1031217 := __PP1029341.Sele_T_I_N_Match_Sources_;
    __BS1031221 := __T(__EE1031217);
    __EE1031237 := __BN(TOPN(__BS1031221(__NN(__OP2(__T(__EE1031217).Date_First_Seen_Clean_,=,__CN(__CC13651))) AND __NN(__T(__EE1031217).Date_First_Seen_Clean_) AND __NN(__T(__EE1031217).Date_Last_Seen_Clean_) AND __NN(__T(__EE1031217).Translated_Source_)),1000,__T(__OP2(__T(__EE1031217).Date_First_Seen_Clean_,=,__CN(__CC13651))),__T(__T(__EE1031217).Date_First_Seen_Clean_), -__T(__T(__EE1031217).Date_Last_Seen_Clean_),__T(__T(__EE1031217).Translated_Source_)),__NL(__EE1031217));
    SELF.Business_T_I_N_Match_Sources_Sorted_ := __EE1031237;
    __EE1029323 := __PP1029341.Reported_Names_;
    SELF.D_B_A_Names_ := __BN(PROJECT(TABLE(PROJECT(__T(__EE1029323),__ST84265_Layout)(__NN(Doing_Business_As_Slim_Name_)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Doing_Business_As_Slim_Name_},Doing_Business_As_Slim_Name_,MERGE),__ST84265_Layout),__NL(__EE1029323));
    SELF.Terminated_Filing_Count_ := __PP1029341.C_O_U_N_T___Exp1_;
    SELF := __PP1029341;
  END;
  EXPORT __ENH_Business_Sele_3 := PROJECT(PROJECT(__EE1029300,__ND1029345__Project(LEFT)),__ST144119_Layout);
END;
