//HPCC Systems KEL Compiler Version 1.6.0
IMPORT KEL16 AS KEL;
IMPORT B_Address_4,B_Bankruptcy_4,B_Bankruptcy_7,B_Business_Sele_4,B_Business_Sele_5,B_Business_Sele_6,B_Business_Sele_9,B_Property_Event_4,B_Sele_Address_4,B_Sele_Person_4,B_Sele_Property_4,B_Sele_U_C_C_4,B_Sele_U_C_C_5,B_Sele_U_C_C_9,B_U_C_C_10,B_U_C_C_11,B_U_C_C_4,CFG_Compile,E_Address,E_Address_Property_Event,E_Bankruptcy,E_Business_Org,E_Business_Sele,E_Business_Sele_Overflow,E_Business_Ult,E_Geo_Link,E_Input_B_I_I,E_Person,E_Property,E_Property_Event,E_Sele_Address,E_Sele_Bankruptcy,E_Sele_Person,E_Sele_Property,E_Sele_U_C_C,E_Surname,E_U_C_C,E_Zip_Code,FN_Compile FROM BRM_Marketing_attributes.BRM_KEL;
IMPORT * FROM KEL16.Null;
EXPORT B_Business_Sele_3(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Address_4(__in,__cfg).__ENH_Address_4) __ENH_Address_4 := B_Address_4(__in,__cfg).__ENH_Address_4;
  SHARED VIRTUAL TYPEOF(E_Address_Property_Event(__in,__cfg).__Result) __E_Address_Property_Event := E_Address_Property_Event(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(B_Bankruptcy_4(__in,__cfg).__ENH_Bankruptcy_4) __ENH_Bankruptcy_4 := B_Bankruptcy_4(__in,__cfg).__ENH_Bankruptcy_4;
  SHARED VIRTUAL TYPEOF(B_Business_Sele_4(__in,__cfg).__ENH_Business_Sele_4) __ENH_Business_Sele_4 := B_Business_Sele_4(__in,__cfg).__ENH_Business_Sele_4;
  SHARED VIRTUAL TYPEOF(B_Property_Event_4(__in,__cfg).__ENH_Property_Event_4) __ENH_Property_Event_4 := B_Property_Event_4(__in,__cfg).__ENH_Property_Event_4;
  SHARED VIRTUAL TYPEOF(B_Sele_Address_4(__in,__cfg).__ENH_Sele_Address_4) __ENH_Sele_Address_4 := B_Sele_Address_4(__in,__cfg).__ENH_Sele_Address_4;
  SHARED VIRTUAL TYPEOF(E_Sele_Bankruptcy(__in,__cfg).__Result) __E_Sele_Bankruptcy := E_Sele_Bankruptcy(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(B_Sele_Person_4(__in,__cfg).__ENH_Sele_Person_4) __ENH_Sele_Person_4 := B_Sele_Person_4(__in,__cfg).__ENH_Sele_Person_4;
  SHARED VIRTUAL TYPEOF(B_Sele_Property_4(__in,__cfg).__ENH_Sele_Property_4) __ENH_Sele_Property_4 := B_Sele_Property_4(__in,__cfg).__ENH_Sele_Property_4;
  SHARED VIRTUAL TYPEOF(B_Sele_U_C_C_4(__in,__cfg).__ENH_Sele_U_C_C_4) __ENH_Sele_U_C_C_4 := B_Sele_U_C_C_4(__in,__cfg).__ENH_Sele_U_C_C_4;
  SHARED VIRTUAL TYPEOF(B_U_C_C_4(__in,__cfg).__ENH_U_C_C_4) __ENH_U_C_C_4 := B_U_C_C_4(__in,__cfg).__ENH_U_C_C_4;
  SHARED __EE933616 := __ENH_Business_Sele_4;
  SHARED __EE934163 := __ENH_Sele_U_C_C_4;
  SHARED __EE987580 := __EE934163(__EE934163.Is_Debtor_ AND __NN(__EE934163.Legal_) AND __NN(__EE934163.Filing_));
  SHARED __EE934158 := __ENH_U_C_C_4;
  SHARED __EE934169 := __EE934158(__T(__EE934158.Terminated_Filing_));
  SHARED __EE934187 := __EE934169.Best_U_C_C_Child_Record_;
  SHARED __CC13511 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('ucc_build_version'))),__CN(__cfg.CurrentDate));
  __JC934195(B_U_C_C_10(__in,__cfg).__ST83099_Layout __EE934187) := __T(__OP2(__EE934187.Max_Filing_Date_,<,__CC13511));
  SHARED __EE934251 := __EE934169(EXISTS(__CHILDJOINFILTER(__EE934187,__JC934195)));
  __JC987711(B_Sele_U_C_C_4(__in,__cfg).__ST161210_Layout __EE987580, B_U_C_C_4(__in,__cfg).__ST161542_Layout __EE934251) := __EEQP(__EE987580.Filing_,__EE934251.UID);
  SHARED __EE987712 := JOIN(__EE987580,__EE934251,__JC987711(LEFT,RIGHT),TRANSFORM(B_Sele_U_C_C_4(__in,__cfg).__ST161210_Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST389094_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.ntyp(E_U_C_C().Typ) Filing_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(B_Sele_U_C_C_5(__in,__cfg).__ST164137_Layout) Sub_Filing_;
    KEL.typ.ndataset(E_Sele_U_C_C(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Sele_U_C_C_9(__in,__cfg).__ST169447_Layout) Best_Party_Types_;
    KEL.typ.nstr Filtered_Party_Type_;
    KEL.typ.bool Is_Creditor_ := FALSE;
    KEL.typ.bool Is_Debtor_ := FALSE;
    KEL.typ.bool Is_Filing_ := FALSE;
    KEL.typ.ntyp(E_U_C_C().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST389094_Layout __ND987741__Project(B_Sele_U_C_C_4(__in,__cfg).__ST161210_Layout __PP987713) := TRANSFORM
    SELF.UID := __PP987713.Legal_;
    SELF.U_I_D__1_ := __PP987713.Filing_;
    SELF := __PP987713;
  END;
  SHARED __EE987822 := PROJECT(__EE987712,__ND987741__Project(LEFT));
  SHARED __ST389162_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE987835 := PROJECT(__CLEANANDDO(__EE987822,TABLE(__EE987822,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST389162_Layout);
  SHARED __ST393124_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC987841(B_Business_Sele_4(__in,__cfg).__ST173741_Layout __EE933616, __ST389162_Layout __EE987835) := __EEQP(__EE933616.UID,__EE987835.UID);
  __ST393124_Layout __JT987841(B_Business_Sele_4(__in,__cfg).__ST173741_Layout __l, __ST389162_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE987842 := JOIN(__EE933616,__EE987835,__JC987841(LEFT,RIGHT),__JT987841(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE933713 := __ENH_Bankruptcy_4;
  SHARED __EE933711 := __E_Sele_Bankruptcy;
  SHARED __EE988522 := __EE933711(__NN(__EE933711.Legal_) AND __NN(__EE933711.Bankrupt_));
  SHARED __ST392049_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_7(__in,__cfg).__ST166538_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST315882_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(E_Sele_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC988540(B_Bankruptcy_4(__in,__cfg).__ST158139_Layout __EE933713, E_Sele_Bankruptcy(__in,__cfg).Layout __EE988522) := __EEQP(__EE988522.Bankrupt_,__EE933713.UID);
  __ST392049_Layout __JT988540(B_Bankruptcy_4(__in,__cfg).__ST158139_Layout __l, E_Sele_Bankruptcy(__in,__cfg).Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE988541 := JOIN(__EE988522,__EE933713,__JC988540(RIGHT,LEFT),__JT988540(RIGHT,LEFT),INNER,HASH);
  SHARED __ST392395_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_7(__in,__cfg).__ST166538_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST315882_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(E_Sele_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC988626(__ST392049_Layout __EE988541, B_Bankruptcy_4(__in,__cfg).__ST315882_Layout __EE988612) := __T(__EE988612.Banko7_Year_);
  __ST392395_Layout __JT988626(__ST392049_Layout __l, B_Bankruptcy_4(__in,__cfg).__ST315882_Layout __r) := TRANSFORM, SKIP(NOT(__JC988626(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE988627 := NORMALIZE(__EE988541,__T(LEFT.Best_Child_Record_),__JT988626(LEFT,RIGHT));
  SHARED __ST387619_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(E_Sele_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_7(__in,__cfg).__ST166538_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST315882_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST387619_Layout __ND988719__Project(__ST392395_Layout __PP988628) := TRANSFORM
    SELF.UID := __PP988628.Legal_;
    SELF.Data_Sources_ := __PP988628.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP988628.UID;
    SELF.Data_Sources__1_ := __PP988628.Data_Sources_;
    SELF := __PP988628;
  END;
  SHARED __EE988970 := PROJECT(__EE988627,__ND988719__Project(LEFT));
  SHARED __ST387813_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE988983 := PROJECT(__CLEANANDDO(__EE988970,TABLE(__EE988970,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST387813_Layout);
  SHARED __ST395858_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC988991(__ST393124_Layout __EE987842, __ST387813_Layout __EE988983) := __EEQP(__EE987842.UID,__EE988983.UID);
  __ST395858_Layout __JT988991(__ST393124_Layout __l, __ST387813_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Exp1__1_ := __r.C_O_U_N_T___Exp1_;
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE988992 := JOIN(__EE987842,__EE988983,__JC988991(LEFT,RIGHT),__JT988991(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE933663 := __ENH_Sele_Person_4;
  SHARED __EE1038543 := __EE933663(__T(__AND(__CN(__EE933663.Is_Executive_Ever_),__AND(__EE933663.Two_Years_,__CN(__NN(__EE933663.Legal_))))));
  SHARED __ST385954_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE1038556 := PROJECT(__CLEANANDDO(__EE1038543,TABLE(__EE1038543,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Sele_Person_ := COUNT(GROUP),KEL.typ.ntyp(E_Business_Sele().Typ) UID := __EE1038543.Legal_},Legal_,MERGE)),__ST385954_Layout);
  SHARED __ST398594_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1038562(__ST395858_Layout __EE988992, __ST385954_Layout __EE1038556) := __EEQP(__EE988992.UID,__EE1038556.UID);
  __ST398594_Layout __JT1038562(__ST395858_Layout __l, __ST385954_Layout __r) := TRANSFORM
    SELF.U_I_D__3_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1038982 := JOIN(__EE988992,__EE1038556,__JC1038562(LEFT,RIGHT),__JT1038562(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE933633 := __ENH_Sele_Property_4;
  SHARED __EE990019 := __EE933633(__EE933633.Is_Ever_Owned_ AND __NN(__EE933633.Legal_));
  SHARED __ST384256_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE990043 := PROJECT(__CLEANANDDO(__EE990019,TABLE(__EE990019,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Sele_Property_ := COUNT(GROUP),KEL.typ.ntyp(E_Business_Sele().Typ) UID := __EE990019.Legal_},Legal_,MERGE)),__ST384256_Layout);
  SHARED __ST401327_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1038988(__ST398594_Layout __EE1038982, __ST384256_Layout __EE990043) := __EEQP(__EE1038982.UID,__EE990043.UID);
  __ST401327_Layout __JT1038988(__ST398594_Layout __l, __ST384256_Layout __r) := TRANSFORM
    SELF.U_I_D__4_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1039410 := JOIN(__EE1038982,__EE990043,__JC1038988(LEFT,RIGHT),__JT1038988(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE936089 := __ENH_Address_4;
  SHARED __EE936103 := __EE936089.Data_Sources_;
  __JC1039415(E_Address(__in,__cfg).Data_Sources_Layout __EE936103) := __T(__OP2(__EE936103.Source_,=,__CN('VL')));
  SHARED __EE1039416 := __EE936089(EXISTS(__CHILDJOINFILTER(__EE936103,__JC1039415)));
  SHARED __EE936087 := __ENH_Sele_Address_4;
  SHARED __EE1045516 := __EE936087(__T(__AND(__EE936087.Matches_Is_Best_Helper_Attr_,__CN(__NN(__EE936087.Location_) AND __NN(__EE936087.Legal_)))));
  SHARED __ST390606_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Address_Components_Layout) Address_Components_;
    KEL.typ.ndataset(E_Address(__in,__cfg).College_Layout) College_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Date_Summary_Layout) A_D_V_O_Date_Summary_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Address(__in,__cfg).B_I_P_V2_Best_Layout) B_I_P_V2_Best_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Do_Not_Deliver_Layout) Do_Not_Deliver_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Do_Not_Mail_Layout) Do_Not_Mail_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Dead_C_O_Layout) Dead_C_O_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Hot_List_Layout) Hot_List_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Mail_Drop_Layout) Mail_Drop_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Mixed_Usage_Layout) Mixed_Usage_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Only_Way_To_Get_Mail_Layout) Only_Way_To_Get_Mail_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Record_Type_Layout) Record_Type_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Address_Type_Layout) Address_Type_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Residential_Or_Business_Layout) Residential_Or_Business_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Seasonal_Delivery_Layout) Seasonal_Delivery_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Simplify_Layout) Simplify_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Style_Layout) Style_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Throw_Back_Layout) Throw_Back_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Vacancy_Layout) Vacancy_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Summary_Layout) A_D_V_O_Summary_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Vacation_Layout) Vacation_;
    KEL.typ.ndataset(E_Address(__in,__cfg).High_Risk_Address_Layout) High_Risk_Address_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Summary_Layout) Bestchild_Advo_;
    KEL.typ.nstr Res_Bus_Flag_;
    KEL.typ.nstr Vacant_Flag_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr Primary_Range__1_;
    KEL.typ.nstr Predirectional__1_;
    KEL.typ.nstr Primary_Name__1_;
    KEL.typ.nstr Suffix__1_;
    KEL.typ.nstr Postdirectional__1_;
    KEL.typ.nstr Secondary_Range__1_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST160843_Layout) Data_Sources__1_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST350102_Layout) Rolled_Source_List_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1039576(B_Address_4(__in,__cfg).__ST157920_Layout __EE1039416, B_Sele_Address_4(__in,__cfg).__ST160787_Layout __EE1045516) := __EEQP(__EE1045516.Location_,__EE1039416.UID);
  __ST390606_Layout __JT1039576(B_Address_4(__in,__cfg).__ST157920_Layout __l, B_Sele_Address_4(__in,__cfg).__ST160787_Layout __r) := TRANSFORM
    SELF.Primary_Range__1_ := __r.Primary_Range_;
    SELF.Predirectional__1_ := __r.Predirectional_;
    SELF.Primary_Name__1_ := __r.Primary_Name_;
    SELF.Suffix__1_ := __r.Suffix_;
    SELF.Postdirectional__1_ := __r.Postdirectional_;
    SELF.Secondary_Range__1_ := __r.Secondary_Range_;
    SELF.Z_I_P5__1_ := __r.Z_I_P5_;
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1039805 := JOIN(__EE1045516,__EE1039416,__JC1039576(RIGHT,LEFT),__JT1039576(RIGHT,LEFT),INNER,HASH);
  SHARED __ST926070_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    __ST390606_Layout Address_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1039813(__ST401327_Layout __EE1039410, __ST390606_Layout __EE1039805) := __EEQP(__EE1039410.UID,__EE1039805.Legal_);
  __ST926070_Layout __Join__ST926070_Layout(__ST401327_Layout __l, __ST390606_Layout __r) := TRANSFORM
    SELF := __l;
    SELF.Address_ := __r;
  END;
  SHARED __EE1040446 := JOIN(__EE1039410,__EE1039805,__JC1039813(LEFT,RIGHT),__Join__ST926070_Layout(LEFT,RIGHT),LEFT OUTER,HASH,KEEP(1));
  SHARED __EE936503 := __ENH_Property_Event_4;
  SHARED __EE936501 := __E_Address_Property_Event;
  SHARED __EE992692 := __EE936501(__NN(__EE936501.Location_) AND __NN(__EE936501.Event_));
  SHARED __EE992706 := __EE992692.Address_Characteristics_;
  __JC992709(E_Address_Property_Event(__in,__cfg).Address_Characteristics_Layout __EE992706) := __T(__EE992706.Is_Property_Address_);
  SHARED __EE992710 := __EE992692(EXISTS(__CHILDJOINFILTER(__EE992706,__JC992709)));
  SHARED __ST1030999_Layout := RECORD
    KEL.typ.ntyp(E_Property_Event().Typ) Event_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1031003 := PROJECT(TABLE(PROJECT(__EE992710,__ST1030999_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Event_,Location_},Event_,Location_,MERGE),__ST1030999_Layout);
  SHARED __EE1040452 := __EE1045516;
  SHARED __ST1031055_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location__1_;
    KEL.typ.nstr Primary_Range__1_;
    KEL.typ.nstr Predirectional__1_;
    KEL.typ.nstr Primary_Name__1_;
    KEL.typ.nstr Suffix__1_;
    KEL.typ.nstr Postdirectional__1_;
    KEL.typ.nstr Secondary_Range__1_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST160843_Layout) Data_Sources__1_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST350102_Layout) Rolled_Source_List_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1031055_Layout __ND1040457__Project(B_Sele_Address_4(__in,__cfg).__ST160787_Layout __PP1040453) := TRANSFORM
    SELF.Location__1_ := __PP1040453.Location_;
    SELF.Primary_Range__1_ := __PP1040453.Primary_Range_;
    SELF.Predirectional__1_ := __PP1040453.Predirectional_;
    SELF.Primary_Name__1_ := __PP1040453.Primary_Name_;
    SELF.Suffix__1_ := __PP1040453.Suffix_;
    SELF.Postdirectional__1_ := __PP1040453.Postdirectional_;
    SELF.Secondary_Range__1_ := __PP1040453.Secondary_Range_;
    SELF.Z_I_P5__1_ := __PP1040453.Z_I_P5_;
    SELF.Data_Sources__1_ := __PP1040453.Data_Sources_;
    SELF := __PP1040453;
  END;
  SHARED __EE1040626 := PROJECT(__EE1040452,__ND1040457__Project(LEFT));
  SHARED __ST1031217_Layout := RECORD
    KEL.typ.ntyp(E_Property_Event().Typ) Event_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location__1_;
    KEL.typ.nstr Primary_Range__1_;
    KEL.typ.nstr Predirectional__1_;
    KEL.typ.nstr Primary_Name__1_;
    KEL.typ.nstr Suffix__1_;
    KEL.typ.nstr Postdirectional__1_;
    KEL.typ.nstr Secondary_Range__1_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST160843_Layout) Data_Sources__1_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST350102_Layout) Rolled_Source_List_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1040632(__ST1030999_Layout __EE1031003, __ST1031055_Layout __EE1040626) := __EEQP(__EE1040626.Location__1_,__EE1031003.Location_);
  __ST1031217_Layout __JT1040632(__ST1030999_Layout __l, __ST1031055_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1040701 := JOIN(__EE1031003,__EE1040626,__JC1040632(LEFT,RIGHT),__JT1040632(LEFT,RIGHT),INNER,HASH);
  SHARED __ST391187_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr L_N_Fares_I_D_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.nbool Is_Deed_;
    KEL.typ.nbool Is_Assessment_;
    KEL.typ.nkdate Process_Date_;
    KEL.typ.nstr Vendor_Source_Code_;
    KEL.typ.nbool Current_Record_;
    KEL.typ.nstr Mailing_City_State_Zip_;
    KEL.typ.nstr Property_Full_Street_Address_;
    KEL.typ.nstr Property_Address_City_State_Zip_;
    KEL.typ.nstr Standardized_Land_Use_Code_;
    KEL.typ.nbool Occupant_Owned_;
    KEL.typ.nkdate Recording_Date_;
    KEL.typ.nkdate Sale_Date_;
    KEL.typ.nstr Document_Type_Code_;
    KEL.typ.nint Sale_Price_;
    KEL.typ.nint Mortgage_Amount_;
    KEL.typ.nstr Mortgage_Type_;
    KEL.typ.nkdate Previous_Recording_Date_;
    KEL.typ.nint Previous_Sale_Price_;
    KEL.typ.nint Assessed_Total_Value_;
    KEL.typ.nkdate Assessed_Value_Year_;
    KEL.typ.nint Market_Total_Value_;
    KEL.typ.nkdate Market_Value_Year_;
    KEL.typ.nkdate Tax_Year_;
    KEL.typ.nint Lot_Size_;
    KEL.typ.nfloat Land_Square_Footage_;
    KEL.typ.nint Building_Area_;
    KEL.typ.nkdate Year_Built_;
    KEL.typ.nkdate Effective_Year_Built_;
    KEL.typ.nint Number_Of_Buildings_;
    KEL.typ.nstr Number_Of_Stories_;
    KEL.typ.nint Number_Of_Units_;
    KEL.typ.nint Number_Of_Rooms_;
    KEL.typ.nstr Number_Of_Bedrooms_;
    KEL.typ.nfloat Number_Of_Baths_;
    KEL.typ.nstr Number_Of_Partial_Baths_;
    KEL.typ.nstr Garage_Type_Code_;
    KEL.typ.nint Parking_Number_Of_Cars_;
    KEL.typ.nstr Style_Code_;
    KEL.typ.nbool Fireplace_Indicator_;
    KEL.typ.nkdate Tape_Cut_Date_;
    KEL.typ.nkdate Certification_Date_;
    KEL.typ.nbool L_N_Mobile_Home_Indicator_;
    KEL.typ.nbool L_N_Condo_Indicator_;
    KEL.typ.nbool L_N_Property_Tax_Exemption_Indicator_;
    KEL.typ.nstr Buyer_Or_Borrower_Or_Assessee_;
    KEL.typ.nstr Name1_;
    KEL.typ.nstr Name2_;
    KEL.typ.nkdate Contract_Date_;
    KEL.typ.nbool Timeshare_Flag_;
    KEL.typ.nstr Land_Lot_Size_;
    KEL.typ.nbool Additional_Name_Flag_;
    KEL.typ.ndataset(E_Property_Event(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nkdate Dt_First_Seen_;
    KEL.typ.nbool Is_Current_Assessment_Record_;
    KEL.typ.ntyp(E_Property_Event().Typ) Event_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location__1_;
    KEL.typ.nstr Primary_Range__1_;
    KEL.typ.nstr Predirectional__1_;
    KEL.typ.nstr Primary_Name__1_;
    KEL.typ.nstr Suffix__1_;
    KEL.typ.nstr Postdirectional__1_;
    KEL.typ.nstr Secondary_Range__1_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST160843_Layout) Data_Sources__1_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST350102_Layout) Rolled_Source_List_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1040707(B_Property_Event_4(__in,__cfg).__ST160545_Layout __EE936503, __ST1031217_Layout __EE1040701) := __EEQP(__EE1040701.Event_,__EE936503.UID);
  __ST391187_Layout __JT1040707(B_Property_Event_4(__in,__cfg).__ST160545_Layout __l, __ST1031217_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1040842 := JOIN(__EE1040701,__EE936503,__JC1040707(RIGHT,LEFT),__JT1040707(RIGHT,LEFT),INNER,HASH);
  SHARED __ST1032371_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Assessed_Total_Value_;
    KEL.typ.nkdate Assessed_Value_Year_;
    KEL.typ.nint Market_Total_Value_;
    KEL.typ.nkdate Market_Value_Year_;
    KEL.typ.nfloat Land_Square_Footage_;
    KEL.typ.nint Building_Area_;
    KEL.typ.nkdate Dt_First_Seen_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1040884 := PROJECT(TABLE(PROJECT(__EE1040842,__ST1032371_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Assessed_Total_Value_,Assessed_Value_Year_,Market_Total_Value_,Market_Value_Year_,Land_Square_Footage_,Building_Area_,Dt_First_Seen_,Legal_},UID,Assessed_Total_Value_,Assessed_Value_Year_,Market_Total_Value_,Market_Value_Year_,Land_Square_Footage_,Building_Area_,Dt_First_Seen_,Legal_,MERGE),__ST1032371_Layout);
  SHARED __ST1032410_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    __ST390606_Layout Address_;
    KEL.typ.ndataset(__ST1032371_Layout) Property_Event_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1040892(__ST926070_Layout __EE1040446, __ST1032371_Layout __EE1040884) := __EEQP(__EE1040446.UID,__EE1040884.Legal_);
  __ST1032410_Layout __Join__ST1032410_Layout(__ST926070_Layout __r, DATASET(__ST1032371_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Property_Event_ := __CN(__recs);
  END;
  SHARED __EE1041536 := DENORMALIZE(DISTRIBUTE(__EE1040446,HASH(UID)),DISTRIBUTE(__EE1040884,HASH(Legal_)),__JC1040892(LEFT,RIGHT),GROUP,__Join__ST1032410_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE1025268 := __EE936087;
  SHARED __EE1045527 := __EE1025268(__T(__AND(__EE1025268.Matches_Is_Best_Helper_Attr_,__CN(__NN(__EE1025268.Legal_)))));
  SHARED __ST391481_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST160843_Layout) Data_Sources_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.ndataset(B_Sele_Address_4(__in,__cfg).__ST350102_Layout) Rolled_Source_List_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Age_Helper_Attribute_;
    KEL.typ.nbool Age_Is_Not_Zero_Helper_;
    KEL.typ.nint Last_Seen_Age_Helper_Attribute_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST391481_Layout __JT1041555(B_Sele_Address_4(__in,__cfg).__ST160787_Layout __l, B_Sele_Address_4(__in,__cfg).__ST350102_Layout __r) := TRANSFORM
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1041556 := NORMALIZE(__EE1045527,__T(LEFT.Rolled_Source_List_),__JT1041555(LEFT,RIGHT));
  SHARED __ST435949_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    __ST390606_Layout Address_;
    KEL.typ.ndataset(__ST1032371_Layout) Property_Event_;
    KEL.typ.ndataset(__ST391481_Layout) Sele_Address_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1041634(__ST1032410_Layout __EE1041536, __ST391481_Layout __EE1041556) := __EEQP(__EE1041536.UID,__EE1041556.Legal_);
  __ST435949_Layout __Join__ST435949_Layout(__ST1032410_Layout __r, DATASET(__ST391481_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Sele_Address_ := __CN(__recs);
  END;
  SHARED __EE1042349 := DENORMALIZE(DISTRIBUTE(__EE1041536,HASH(UID)),DISTRIBUTE(__EE1041556,HASH(Legal_)),__JC1041634(LEFT,RIGHT),GROUP,__Join__ST435949_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE1042355 := __EE1045527;
  SHARED __ST928444_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Sele_Property_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__4_;
    __ST390606_Layout Address_;
    KEL.typ.ndataset(__ST1032371_Layout) Property_Event_;
    KEL.typ.ndataset(__ST391481_Layout) Sele_Address_;
    B_Sele_Address_4(__in,__cfg).__ST160787_Layout Sele_Address__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1042363(__ST435949_Layout __EE1042349, B_Sele_Address_4(__in,__cfg).__ST160787_Layout __EE1042355) := __EEQP(__EE1042349.UID,__EE1042355.Legal_);
  __ST928444_Layout __Join__ST928444_Layout(__ST435949_Layout __l, B_Sele_Address_4(__in,__cfg).__ST160787_Layout __r) := TRANSFORM
    SELF := __l;
    SELF.Sele_Address__1_ := __r;
  END;
  SHARED __EE1043145 := JOIN(__EE1042349,__EE1042355,__JC1042363(LEFT,RIGHT),__Join__ST928444_Layout(LEFT,RIGHT),LEFT OUTER,HASH,KEEP(1));
  EXPORT __ST155802_Layout := RECORD
    KEL.typ.nstr Name_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Name_Status_;
    KEL.typ.nstr Corporation_Legal_Name_;
    KEL.typ.nstr Doing_Business_As_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Business_Name_Match_Record_;
    KEL.typ.nstr Doing_Business_As_Slim_Name_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST155838_Layout := RECORD
    KEL.typ.nint Total_Employees_;
    KEL.typ.nint Employee_Count_;
    KEL.typ.nstr N_A_R_B_Employee_Code_;
    KEL.typ.nstr E_B_R_Employee_Size_Code_;
    KEL.typ.nint Estimated_Number_Of_Employees_;
    KEL.typ.nint D_C_A_Enterprise_Number_;
    KEL.typ.nint Cortera_Ultimate_Link_I_D_;
    KEL.typ.nint Equifax_I_D_;
    KEL.typ.nstr N_A_R_B_Record_I_D_;
    KEL.typ.nstr E_B_R_Number_;
    KEL.typ.nint Experian_Business_I_D_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Cortera_Total_Employees_;
    KEL.typ.nint D_C_A_Total_Employees_;
    KEL.typ.nint E_B_R_Total_Employees_;
    KEL.typ.nint Equifax_Total_Employees_;
    KEL.typ.nint Infutor_Total_Employees_;
    KEL.typ.nbool Is_Cortera_Employee_Record_;
    KEL.typ.nbool Is_D_C_A_Employee_Record_;
    KEL.typ.nbool Is_E_B_R_Employee_Record_;
    KEL.typ.nbool Is_Equifax_Employee_Record_;
    KEL.typ.nbool Is_Infutor_Employee_Record_;
    KEL.typ.nbool Is_Seen_In_Two_Years_;
    KEL.typ.nint N_A_R_B_Employee_Estimate_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST155865_Layout := RECORD
    KEL.typ.nint Total_Sales_;
    KEL.typ.nint Financial_Amount_Figure_;
    KEL.typ.nstr N_A_R_B_Sales_Code_;
    KEL.typ.nstr Total_Sales_Precision_;
    KEL.typ.nint Reported_Sales_;
    KEL.typ.nint Estimated_Annual_Sales_Amount_;
    KEL.typ.nint D_C_A_Enterprise_Number_;
    KEL.typ.nint Cortera_Ultimate_Link_I_D_;
    KEL.typ.nint Equifax_I_D_;
    KEL.typ.nstr N_A_R_B_Record_I_D_;
    KEL.typ.nstr E_B_R_Number_;
    KEL.typ.nint Experian_Business_I_D_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Cortera_Total_Sales_;
    KEL.typ.nint D_C_A_Total_Sales_;
    KEL.typ.nint E_B_R_Total_Sales_;
    KEL.typ.nint Equifax_Total_Sales_;
    KEL.typ.nint Infutor_Total_Sales_;
    KEL.typ.nbool Is_Cortera_Sale_Record_;
    KEL.typ.nbool Is_D_C_A_Sale_Record_;
    KEL.typ.nbool Is_E_B_R_Sale_Record_;
    KEL.typ.nbool Is_Equifax_Sale_Record_;
    KEL.typ.nbool Is_Infutor_Sale_Record_;
    KEL.typ.nbool Is_Seen_In_Two_Years_;
    KEL.typ.nint N_A_R_B_Sales_Estimate_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST155952_Layout := RECORD
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST85846_Layout := RECORD
    KEL.typ.nbool Ro_B_A_C_;
    KEL.typ.nbool Ro_B_B_D_;
    KEL.typ.bool All_Unit_Designation_Null_Or_Empty_ := FALSE;
    KEL.typ.nbool Vacancy_Indicator_Y_;
    KEL.typ.nbool Vacancy_Indicator_N_;
    KEL.typ.nbool Vacancy_Indicator_Null_Or_Empty_;
    KEL.typ.bool Exists_Type_Code_H_H_D_ := FALSE;
    KEL.typ.bool Exists_Type_Code_P_ := FALSE;
    KEL.typ.bool Alltype_Code_Null_Or_Empty_ := FALSE;
    KEL.typ.bool Exists_Address_Type_Code9_ := FALSE;
    KEL.typ.bool All_Address_Type_Code_Null_Or_Empty_ := FALSE;
    KEL.typ.nbool Secondary_Range_Null_Or_Empty_;
  END;
  EXPORT __ST86107_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Market_Total_Value_;
    KEL.typ.nstr Market_Value_Year_Clean_;
    KEL.typ.nint Assessed_Total_Value_;
    KEL.typ.nstr Assessed_Value_Year_Clean_;
    KEL.typ.nfloat Land_Square_Footage_;
    KEL.typ.nint Building_Area_;
    KEL.typ.nstr Property_Event_Date_First_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST85586_Layout := RECORD
    KEL.typ.nbool Age_Is_Not_Zero_Helper_;
    KEL.typ.nint Age_Helper_Attribute_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Last_Seen_Age_Helper_Attribute_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST85897_Layout := RECORD
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
  END;
  EXPORT __ST90198_Layout := RECORD
    KEL.typ.nstr Doing_Business_As_Slim_Name_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST155764_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(__ST155802_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(__ST155838_Layout) Employee_Counts_;
    KEL.typ.ndataset(__ST155865_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(__ST155952_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Asset_Property_Count_Ever_ := 0;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.int Assoc_Exec_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.int B_E___Assoc_Cnt2_Y_ := 0;
    KEL.typ.nstr B_E___Best_Addr_City_;
    KEL.typ.nstr B_E___Best_Addr_St_;
    KEL.typ.nstr B_E___Best_Addr_State_;
    KEL.typ.nstr B_E___Best_Addr_Zip_;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code2_;
    KEL.typ.int B_E___Drg_Bk_Cnt7_Y_ := 0;
    KEL.typ.int B_E___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.int B_E___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.int B_E___U_C_C_Debtor_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    __ST85846_Layout Best_Address_Helper_Flag_Row_;
    KEL.typ.ndataset(__ST86107_Layout) Best_Address_Property_Event_Data_;
    KEL.typ.ndataset(__ST85586_Layout) Best_Address_Sources_Set_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    __ST85897_Layout Best_Sele_Address_Helper_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Business_Address_Match_Sources_Sorted_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Bureau_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Business_Phone_Match_Sources_Sorted_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Business_T_I_N_Match_Sources_Sorted_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(__ST90198_Layout) D_B_A_Names_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_4(__in,__cfg).__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.int Terminated_Filing_Count_ := 0;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST155764_Layout __ND1043190__Project(__ST928444_Layout __PP1043186) := TRANSFORM
    __EE1043148 := __PP1043186.Reported_Names_;
    __ST155802_Layout __ND1043604__Project(B_Business_Sele_4(__in,__cfg).__ST173779_Layout __PP1043600) := TRANSFORM
      SELF.Business_Name_Match_Record_ := __OR(__AND(__PP1043600.Business_Name_Match_,__PP1043600.Header_Hit_Flag_),__AND(__PP1043600.Business_Name_Is_Similar_,__PP1043600.Header_Hit_Flag_));
      SELF.Translated_Source_ := FN_Compile(__cfg).FN_Source_Group(__ECAST(KEL.typ.nstr,__PP1043600.Source_));
      SELF := __PP1043600;
    END;
    SELF.Reported_Names_ := __PROJECT(__EE1043148,__ND1043604__Project(LEFT));
    __EE1043152 := __PP1043186.Employee_Counts_;
    __ST155838_Layout __ND1043669__Project(B_Business_Sele_4(__in,__cfg).__ST173821_Layout __PP1043665) := TRANSFORM
      __EE1043719 := __PP1043186.Employee_Counts_;
      __BS1043723 := __T(__EE1043719);
      __EE1043734 := __BS1043723(__T(__AND(__OP2(__T(__EE1043719).Cortera_Ultimate_Link_I_D_,=,__PP1043665.Cortera_Ultimate_Link_I_D_),__T(__EE1043719).Is_Cortera_Employee_Record_)));
      __EE1043747 := TOPN(__EE1043734(__NN(__EE1043734.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1043734.Date_First_Seen_))),1, -__T(__EE1043734.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1043734.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Cortera_Total_Employees_ := (__EE1043747)[1].Total_Employees_;
      __EE1043757 := __PP1043186.Employee_Counts_;
      __BS1043761 := __T(__EE1043757);
      __EE1043772 := __BS1043761(__T(__AND(__OP2(__T(__EE1043757).D_C_A_Enterprise_Number_,=,__PP1043665.D_C_A_Enterprise_Number_),__T(__EE1043757).Is_D_C_A_Employee_Record_)));
      __EE1043785 := TOPN(__EE1043772(__NN(__EE1043772.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1043772.Date_First_Seen_))),1, -__T(__EE1043772.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1043772.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.D_C_A_Total_Employees_ := (__EE1043785)[1].Total_Employees_;
      __EE1043795 := __PP1043186.Employee_Counts_;
      __BS1043799 := __T(__EE1043795);
      __EE1043810 := __BS1043799(__T(__AND(__OP2(__T(__EE1043795).E_B_R_Number_,=,__PP1043665.E_B_R_Number_),__T(__EE1043795).Is_E_B_R_Employee_Record_)));
      __EE1043823 := TOPN(__EE1043810(__NN(__EE1043810.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1043810.Date_First_Seen_))),1, -__T(__EE1043810.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1043810.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.E_B_R_Total_Employees_ := (__EE1043823)[1].Total_Employees_;
      __EE1043833 := __PP1043186.Employee_Counts_;
      __BS1043837 := __T(__EE1043833);
      __EE1043848 := __BS1043837(__T(__AND(__OP2(__T(__EE1043833).Equifax_I_D_,=,__PP1043665.Equifax_I_D_),__T(__EE1043833).Is_Equifax_Employee_Record_)));
      __EE1043861 := TOPN(__EE1043848(__NN(__EE1043848.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1043848.Date_First_Seen_))),1, -__T(__EE1043848.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1043848.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Equifax_Total_Employees_ := (__EE1043861)[1].Employee_Count_;
      __EE1043871 := __PP1043186.Employee_Counts_;
      __BS1043875 := __T(__EE1043871);
      __EE1043886 := __BS1043875(__T(__AND(__OP2(__T(__EE1043871).N_A_R_B_Record_I_D_,=,__PP1043665.N_A_R_B_Record_I_D_),__T(__EE1043871).Is_Infutor_Employee_Record_)));
      __EE1043899 := TOPN(__EE1043886(__NN(__EE1043886.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1043886.Date_First_Seen_))),1, -__T(__EE1043886.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1043886.Date_First_Seen_)),__T(Total_Employees_),__T(Employee_Count_),__T(N_A_R_B_Employee_Code_),__T(E_B_R_Employee_Size_Code_),__T(Estimated_Number_Of_Employees_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Infutor_Total_Employees_ := (__EE1043899)[1].N_A_R_B_Employee_Estimate_;
      SELF := __PP1043665;
    END;
    SELF.Employee_Counts_ := __PROJECT(__EE1043152,__ND1043669__Project(LEFT));
    __EE1043156 := __PP1043186.Sale_Amounts_;
    __ST155865_Layout __ND1043952__Project(B_Business_Sele_4(__in,__cfg).__ST173845_Layout __PP1043948) := TRANSFORM
      __EE1044005 := __PP1043186.Sale_Amounts_;
      __BS1044009 := __T(__EE1044005);
      __EE1044020 := __BS1044009(__T(__AND(__OP2(__T(__EE1044005).Cortera_Ultimate_Link_I_D_,=,__PP1043948.Cortera_Ultimate_Link_I_D_),__T(__EE1044005).Is_Cortera_Sale_Record_)));
      __EE1044033 := TOPN(__EE1044020(__NN(__EE1044020.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1044020.Date_First_Seen_))),1, -__T(__EE1044020.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1044020.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Cortera_Total_Sales_ := (__EE1044033)[1].Total_Sales_;
      __EE1044043 := __PP1043186.Sale_Amounts_;
      __BS1044047 := __T(__EE1044043);
      __EE1044058 := __BS1044047(__T(__AND(__OP2(__T(__EE1044043).D_C_A_Enterprise_Number_,=,__PP1043948.D_C_A_Enterprise_Number_),__T(__EE1044043).Is_D_C_A_Sale_Record_)));
      __EE1044071 := TOPN(__EE1044058(__NN(__EE1044058.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1044058.Date_First_Seen_))),1, -__T(__EE1044058.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1044058.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.D_C_A_Total_Sales_ := (__EE1044071)[1].Total_Sales_;
      __EE1044081 := __PP1043186.Sale_Amounts_;
      __BS1044085 := __T(__EE1044081);
      __EE1044096 := __BS1044085(__T(__AND(__OP2(__T(__EE1044081).E_B_R_Number_,=,__PP1043948.E_B_R_Number_),__T(__EE1044081).Is_E_B_R_Sale_Record_)));
      __EE1044109 := TOPN(__EE1044096(__NN(__EE1044096.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1044096.Date_First_Seen_))),1, -__T(__EE1044096.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1044096.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.E_B_R_Total_Sales_ := (__EE1044109)[1].Reported_Sales_;
      __EE1044119 := __PP1043186.Sale_Amounts_;
      __BS1044123 := __T(__EE1044119);
      __EE1044134 := __BS1044123(__T(__AND(__OP2(__T(__EE1044119).Equifax_I_D_,=,__PP1043948.Equifax_I_D_),__T(__EE1044119).Is_Equifax_Sale_Record_)));
      __EE1044147 := TOPN(__EE1044134(__NN(__EE1044134.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1044134.Date_First_Seen_))),1, -__T(__EE1044134.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1044134.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Equifax_Total_Sales_ := (__EE1044147)[1].Financial_Amount_Figure_;
      __EE1044157 := __PP1043186.Sale_Amounts_;
      __BS1044161 := __T(__EE1044157);
      __EE1044172 := __BS1044161(__T(__AND(__OP2(__T(__EE1044157).N_A_R_B_Record_I_D_,=,__PP1043948.N_A_R_B_Record_I_D_),__T(__EE1044157).Is_Infutor_Sale_Record_)));
      __EE1044185 := TOPN(__EE1044172(__NN(__EE1044172.Date_Last_Seen_Capped_) AND __NN(KEL.era.ToDate(__EE1044172.Date_First_Seen_))),1, -__T(__EE1044172.Date_Last_Seen_Capped_), -__T(KEL.era.ToDate(__EE1044172.Date_First_Seen_)),__T(Total_Sales_),__T(Financial_Amount_Figure_),__T(N_A_R_B_Sales_Code_),__T(Total_Sales_Precision_),__T(Reported_Sales_),__T(Estimated_Annual_Sales_Amount_),__T(D_C_A_Enterprise_Number_),__T(Cortera_Ultimate_Link_I_D_),__T(Equifax_I_D_),__T(N_A_R_B_Record_I_D_),__T(E_B_R_Number_),__T(Experian_Business_I_D_),__T(Source_));
      SELF.Infutor_Total_Sales_ := (__EE1044185)[1].N_A_R_B_Sales_Estimate_;
      SELF := __PP1043948;
    END;
    SELF.Sale_Amounts_ := __PROJECT(__EE1043156,__ND1043952__Project(LEFT));
    __EE1043160 := __PP1043186.Data_Sources_;
    SELF.Data_Sources_ := __BN(PROJECT(__T(__EE1043160),__ST155952_Layout),__NL(__EE1043160));
    SELF.Asset_Property_Count_Ever_ := __PP1043186.C_O_U_N_T___Sele_Property_;
    SELF.Assoc_Exec_Cnt2_Y_Un_Cap_ := __PP1043186.C_O_U_N_T___Sele_Person_;
    __CC13939 := '-99999';
    __CC13942 := -99999;
    SELF.B_E___Assoc_Cnt2_Y_ := MAP(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC13939))))=>__CC13942,KEL.Routines.BoundsFold(__PP1043186.Assoc_Cnt2_Y_Un_Cap_,0,999999));
    __CC13956 := '-99999';
    __CC13961 := '-99998';
    SELF.B_E___Best_Addr_City_ := MAP(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC13956))))=>__ECAST(KEL.typ.nstr,__CN(__CC13956)),__T(__OR(__NT(__PP1043186.Only_Best_Business_Address_.Best_Vanity_City_),__OP2(__PP1043186.Only_Best_Business_Address_.Best_Vanity_City_,=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13961)),__ECAST(KEL.typ.nstr,__PP1043186.Only_Best_Business_Address_.Best_Vanity_City_));
    SELF.B_E___Best_Addr_St_ := MAP(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC13956))))=>__ECAST(KEL.typ.nstr,__CN(__CC13956)),__T(__OR(__NT(__PP1043186.Best_Sele_Address_),__OP2(__PP1043186.Best_Sele_Address_,=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13961)),__ECAST(KEL.typ.nstr,__PP1043186.Best_Sele_Address_));
    SELF.B_E___Best_Addr_State_ := MAP(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC13956))))=>__ECAST(KEL.typ.nstr,__CN(__CC13956)),__T(__OR(__NT(__PP1043186.Only_Best_Business_Address_.Best_State_),__OP2(__PP1043186.Only_Best_Business_Address_.Best_State_,=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13961)),__ECAST(KEL.typ.nstr,__PP1043186.Only_Best_Business_Address_.Best_State_));
    SELF.B_E___Best_Addr_Zip_ := MAP(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC13956))))=>__ECAST(KEL.typ.nstr,__CN(__CC13956)),__T(__OR(__NT(__PP1043186.Only_Best_Business_Address_.Best_Zip5_),__OP2(__CAST(KEL.typ.str,__PP1043186.Only_Best_Business_Address_.Best_Zip5_),=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13961)),__ECAST(KEL.typ.nstr,__FN3(INTFORMAT,__PP1043186.Only_Best_Business_Address_.Best_Zip5_,__CN(5),__CN(1))));
    __CC13944 := '-99998';
    SELF.B_E___Bus_N_A_I_C_S_Code2_ := MAP(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC13939))))=>__ECAST(KEL.typ.nstr,__CAST(KEL.typ.str,__CN(__CC13942))),__T(__AND(__OP2(__PP1043186.Bus_N_A_I_C_S_Code2_Final_,<>,__CN(__CC13944)),__OP2(__PP1043186.Bus_N_A_I_C_S_Code2_Final_,<>,__PP1043186.B_E___Bus_N_A_I_C_S_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1043186.Bus_N_A_I_C_S_Code2_Final_),__T(__AND(__OP2(__PP1043186.Bus_N_A_I_C_S_Code3_Final_,<>,__CN(__CC13944)),__OP2(__PP1043186.Bus_N_A_I_C_S_Code3_Final_,<>,__PP1043186.B_E___Bus_N_A_I_C_S_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1043186.Bus_N_A_I_C_S_Code3_Final_),__T(__AND(__OP2(__PP1043186.Bus_N_A_I_C_S_Code4_Final_,<>,__CN(__CC13944)),__OP2(__PP1043186.Bus_N_A_I_C_S_Code4_Final_,<>,__PP1043186.B_E___Bus_N_A_I_C_S_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1043186.Bus_N_A_I_C_S_Code4_Final_),__ECAST(KEL.typ.nstr,__CN(__CC13944)));
    SELF.B_E___Bus_S_I_C_Code2_ := MAP(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC13939))))=>__ECAST(KEL.typ.nstr,__CN(__CC13939)),__T(__AND(__OP2(__PP1043186.Bus_S_I_C_Code2_Final_,<>,__CN(__CC13944)),__OP2(__PP1043186.Bus_S_I_C_Code2_Final_,<>,__PP1043186.B_E___Bus_S_I_C_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1043186.Bus_S_I_C_Code2_Final_),__T(__AND(__OP2(__PP1043186.Bus_S_I_C_Code3_Final_,<>,__CN(__CC13944)),__OP2(__PP1043186.Bus_S_I_C_Code3_Final_,<>,__PP1043186.B_E___Bus_S_I_C_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1043186.Bus_S_I_C_Code3_Final_),__T(__AND(__OP2(__PP1043186.Bus_S_I_C_Code4_Final_,<>,__CN(__CC13944)),__OP2(__PP1043186.Bus_S_I_C_Code4_Final_,<>,__PP1043186.B_E___Bus_S_I_C_Code1_)))=>__ECAST(KEL.typ.nstr,__PP1043186.Bus_S_I_C_Code4_Final_),__ECAST(KEL.typ.nstr,__CN(__CC13944)));
    __CC14111 := '-99999';
    __CC14114 := -99999;
    SELF.B_E___Drg_Bk_Cnt7_Y_ := IF(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC14111)))),__CC14114,KEL.Routines.BoundsFold(__PP1043186.C_O_U_N_T___Exp1__1_,0,999));
    __CC14145 := '-99999';
    __CC14148 := -99999;
    __BS1044521 := __T(__PP1043186.All_Lien_Data_);
    SELF.B_E___Drg_L_T_D_Cnt7_Y_ := IF(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC14145)))),__CC14148,KEL.Routines.BoundsFold(COUNT(__BS1044521(__T(__AND(__T(__PP1043186.All_Lien_Data_).Seen___In___Seven___Years_,__OP2(__T(__PP1043186.All_Lien_Data_).Is_Landlord_Tenant_Dispute_,=,__CN(TRUE)))))),0,99999));
    __BS1044546 := __T(__PP1043186.All_Lien_Data_);
    SELF.B_E___Drg_Ln_J_Cnt7_Y_ := IF(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1043186.Sele_I_D_),=,__CN(__CC14145)))),__CC14148,KEL.Routines.BoundsFold(COUNT(__BS1044546(__T(__AND(__T(__PP1043186.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP1043186.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))),0,99999));
    __CC14161 := -99999;
    __CC14164 := -99998;
    __CC13950 := -99997;
    SELF.B_E___U_C_C_Debtor_Cnt_Ev_ := MAP(__T(__OR(__CN(__PP1043186.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__PP1043186.Sele_I_D_,=,__CN(__CC14161))))=>__CC14161,__PP1043186.B_E___U_C_C_Cnt_Ev_ = 0=>__CC14164,__PP1043186.B_E___U_C_C_Cnt_Ev_ <> 0 AND __PP1043186.Initial_Debtor_Filing_Count_ = 0 AND __PP1043186.Initial_Creditor_Filing_Count_ = 0=>__CC13950,KEL.Routines.BoundsFold(__PP1043186.Initial_Debtor_Filing_Count_,0,99999));
    __ST85846_Layout __ND1044601__Project := TRANSFORM
      __EE1043172 := __PP1043186.Address_;
      SELF.Ro_B_A_C_ := __OP2(__EE1043172.Res_Bus_Flag_,IN,__CN(['A','C']));
      SELF.Ro_B_B_D_ := __OP2(__EE1043172.Res_Bus_Flag_,IN,__CN(['B','D']));
      __BS1044620 := __T(__EE1043172.Address_Components_);
      SELF.All_Unit_Designation_Null_Or_Empty_ := NOT EXISTS(__BS1044620(__T(__NOT(__OR(__NT(__T(__EE1043172.Address_Components_).Unit_Designation_),__OP2(__T(__EE1043172.Address_Components_).Unit_Designation_,=,__CN('')))))));
      SELF.Vacancy_Indicator_Y_ := __OP2(__EE1043172.Vacant_Flag_,=,__CN('Y'));
      SELF.Vacancy_Indicator_N_ := __OP2(__EE1043172.Vacant_Flag_,=,__CN('N'));
      SELF.Vacancy_Indicator_Null_Or_Empty_ := __OR(__NT(__EE1043172.Vacant_Flag_),__OP2(__EE1043172.Vacant_Flag_,=,__CN('')));
      __BS1044654 := __T(__EE1043172.Address_Components_);
      SELF.Exists_Type_Code_H_H_D_ := EXISTS(__BS1044654(__T(__OP2(__T(__EE1043172.Address_Components_).Type_Code_,IN,__CN(['H','HD'])))));
      __BS1044665 := __T(__EE1043172.Address_Components_);
      SELF.Exists_Type_Code_P_ := EXISTS(__BS1044665(__T(__OP2(__T(__EE1043172.Address_Components_).Type_Code_,=,__CN('P')))));
      __BS1044676 := __T(__EE1043172.Address_Components_);
      SELF.Alltype_Code_Null_Or_Empty_ := NOT EXISTS(__BS1044676(__T(__NOT(__OR(__NT(__T(__EE1043172.Address_Components_).Type_Code_),__OP2(__T(__EE1043172.Address_Components_).Type_Code_,=,__CN('')))))));
      __BS1044694 := __T(__EE1043172.Address_Type_);
      SELF.Exists_Address_Type_Code9_ := EXISTS(__BS1044694(__T(__OP2(__T(__EE1043172.Address_Type_).Address_Type_Code_,=,__CN('9')))));
      __BS1044705 := __T(__EE1043172.Address_Type_);
      SELF.All_Address_Type_Code_Null_Or_Empty_ := NOT EXISTS(__BS1044705(__T(__NOT(__OR(__NT(__T(__EE1043172.Address_Type_).Address_Type_Code_),__OP2(__T(__EE1043172.Address_Type_).Address_Type_Code_,=,__CN('')))))));
      SELF.Secondary_Range_Null_Or_Empty_ := __OR(__NT(__EE1043172.Secondary_Range_),__OP2(__EE1043172.Secondary_Range_,=,__CN('')));
    END;
    SELF.Best_Address_Helper_Flag_Row_ := ROW(__ND1044601__Project);
    __EE1043176 := __PP1043186.Property_Event_;
    __ST86107_Layout __ND1044749__Project(__ST1032371_Layout __PP1044745) := TRANSFORM
      __CC13952 := '-99997';
      SELF.Market_Value_Year_Clean_ := IF(__T(__OR(__NOT(__FN1(KEL.Routines.IsValidDate,__PP1044745.Market_Value_Year_)),__NT(__PP1044745.Market_Value_Year_))),__ECAST(KEL.typ.nstr,__CN(__CC13952)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP1044745.Market_Value_Year_,__CN('%Y'))));
      SELF.Assessed_Value_Year_Clean_ := IF(__T(__OR(__NOT(__FN1(KEL.Routines.IsValidDate,__PP1044745.Assessed_Value_Year_)),__NT(__PP1044745.Assessed_Value_Year_))),__ECAST(KEL.typ.nstr,__CN(__CC13952)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP1044745.Assessed_Value_Year_,__CN('%Y'))));
      SELF.Property_Event_Date_First_Seen_ := IF(__T(__OR(__NOT(__FN1(KEL.Routines.IsValidDate,__PP1044745.Dt_First_Seen_)),__NT(__PP1044745.Dt_First_Seen_))),__ECAST(KEL.typ.nstr,__CN(__CC13952)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP1044745.Dt_First_Seen_,__CN('%Y%m%d'))));
      SELF := __PP1044745;
    END;
    SELF.Best_Address_Property_Event_Data_ := __PROJECT(__EE1043176,__ND1044749__Project(LEFT));
    __EE1043180 := __PP1043186.Sele_Address_;
    __EE1044841 := PROJECT(TABLE(PROJECT(__T(__EE1043180),B_Sele_Address_4(__in,__cfg).__ST350102_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Source_,Age_Helper_Attribute_,Age_Is_Not_Zero_Helper_,Last_Seen_Age_Helper_Attribute_},Source_,Age_Helper_Attribute_,Age_Is_Not_Zero_Helper_,Last_Seen_Age_Helper_Attribute_,MERGE),B_Sele_Address_4(__in,__cfg).__ST350102_Layout);
    __EE1044873 := TOPN(__EE1044841(__NN(IF(__T(__NT(__EE1044841.Age_Is_Not_Zero_Helper_)),__ECAST(KEL.typ.nbool,__CN(FALSE)),__ECAST(KEL.typ.nbool,__EE1044841.Age_Is_Not_Zero_Helper_))) AND __NN(IF(__T(__NOT(__NT(__EE1044841.Last_Seen_Age_Helper_Attribute_))),__ECAST(KEL.typ.nint,__EE1044841.Last_Seen_Age_Helper_Attribute_),__ECAST(KEL.typ.nint,__CN(9999)))) AND __NN(__EE1044841.Source_)),99999,__T(IF(__T(__NT(__EE1044841.Age_Is_Not_Zero_Helper_)),__ECAST(KEL.typ.nbool,__CN(FALSE)),__ECAST(KEL.typ.nbool,__EE1044841.Age_Is_Not_Zero_Helper_))),IF(__T(__NOT(__NT(__EE1044841.Age_Helper_Attribute_))), -__T(__EE1044841.Age_Helper_Attribute_),9999),__T(IF(__T(__NOT(__NT(__EE1044841.Last_Seen_Age_Helper_Attribute_))),__ECAST(KEL.typ.nint,__EE1044841.Last_Seen_Age_Helper_Attribute_),__ECAST(KEL.typ.nint,__CN(9999)))),__T(__EE1044841.Source_),__T(Age_Helper_Attribute_),__T(Age_Is_Not_Zero_Helper_),__T(Last_Seen_Age_Helper_Attribute_));
    SELF.Best_Address_Sources_Set_ := __FILTER(__CN(PROJECT(__EE1044873,__ST85586_Layout)),__NN(Age_Is_Not_Zero_Helper_) OR __NN(Age_Helper_Attribute_) OR __NN(Source_) OR __NN(Last_Seen_Age_Helper_Attribute_));
    __ST85897_Layout __ND1044912__Project := TRANSFORM
      __EE1043184 := __PP1043186.Sele_Address__1_;
      SELF.Secondary_Range_ := __EE1043184.Secondary_Range_;
      SELF.Other_Location_Details_ := __EE1043184.Other_Location_Details_;
      SELF.Address_Record_Type_ := __EE1043184.Address_Record_Type_;
    END;
    SELF.Best_Sele_Address_Helper_ := ROW(__ND1044912__Project);
    __EE1045001 := __PP1043186.Sele_Address_Match_Sources_;
    __CC13952 := '-99997';
    __BS1045005 := __T(__EE1045001);
    __EE1045021 := __BN(TOPN(__BS1045005(__NN(__OP2(__T(__EE1045001).Date_First_Seen_Clean_,=,__CN(__CC13952))) AND __NN(__T(__EE1045001).Date_First_Seen_Clean_) AND __NN(__T(__EE1045001).Date_Last_Seen_Clean_) AND __NN(__T(__EE1045001).Translated_Source_)),1000,__T(__OP2(__T(__EE1045001).Date_First_Seen_Clean_,=,__CN(__CC13952))),__T(__T(__EE1045001).Date_First_Seen_Clean_), -__T(__T(__EE1045001).Date_Last_Seen_Clean_),__T(__T(__EE1045001).Translated_Source_)),__NL(__EE1045001));
    SELF.Business_Address_Match_Sources_Sorted_ := __EE1045021;
    __EE1043164 := __PP1043186.Business_Ver_Source_List_Sorted_;
    __BS1045026 := __T(__EE1043164);
    __EE1045033 := __BS1045026(__T(__OP2(__T(__EE1043164).Translated_Source_Code_,IN,__CN(['D','DN','ER','Q3','EF','RR','Z1']))));
    SELF.Business_Bureau_Source_List_ := __CN(__EE1045033);
    __EE1045037 := __PP1043186.Sele_Phone_Match_Sources_;
    __BS1045041 := __T(__EE1045037);
    __EE1045057 := __BN(TOPN(__BS1045041(__NN(__OP2(__T(__EE1045037).Date_First_Seen_Clean_,=,__CN(__CC13952))) AND __NN(__T(__EE1045037).Date_First_Seen_Clean_) AND __NN(__T(__EE1045037).Date_Last_Seen_Clean_) AND __NN(__T(__EE1045037).Translated_Source_)),1000,__T(__OP2(__T(__EE1045037).Date_First_Seen_Clean_,=,__CN(__CC13952))),__T(__T(__EE1045037).Date_First_Seen_Clean_), -__T(__T(__EE1045037).Date_Last_Seen_Clean_),__T(__T(__EE1045037).Translated_Source_)),__NL(__EE1045037));
    SELF.Business_Phone_Match_Sources_Sorted_ := __EE1045057;
    __EE1045062 := __PP1043186.Sele_T_I_N_Match_Sources_;
    __BS1045066 := __T(__EE1045062);
    __EE1045082 := __BN(TOPN(__BS1045066(__NN(__OP2(__T(__EE1045062).Date_First_Seen_Clean_,=,__CN(__CC13952))) AND __NN(__T(__EE1045062).Date_First_Seen_Clean_) AND __NN(__T(__EE1045062).Date_Last_Seen_Clean_) AND __NN(__T(__EE1045062).Translated_Source_)),1000,__T(__OP2(__T(__EE1045062).Date_First_Seen_Clean_,=,__CN(__CC13952))),__T(__T(__EE1045062).Date_First_Seen_Clean_), -__T(__T(__EE1045062).Date_Last_Seen_Clean_),__T(__T(__EE1045062).Translated_Source_)),__NL(__EE1045062));
    SELF.Business_T_I_N_Match_Sources_Sorted_ := __EE1045082;
    __EE1043168 := __PP1043186.Reported_Names_;
    SELF.D_B_A_Names_ := __BN(PROJECT(TABLE(PROJECT(__T(__EE1043168),__ST90198_Layout)(__NN(Doing_Business_As_Slim_Name_)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Doing_Business_As_Slim_Name_},Doing_Business_As_Slim_Name_,MERGE),__ST90198_Layout),__NL(__EE1043168));
    SELF.Terminated_Filing_Count_ := __PP1043186.C_O_U_N_T___Exp1_;
    SELF := __PP1043186;
  END;
  EXPORT __ENH_Business_Sele_3 := PROJECT(PROJECT(__EE1043145,__ND1043190__Project(LEFT)),__ST155764_Layout);
END;
