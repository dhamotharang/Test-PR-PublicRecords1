//HPCC Systems KEL Compiler Version 1.6.0
IMPORT KEL16 AS KEL;
IMPORT B_Business_Sele_5,B_Business_Sele_6,B_Business_Sele_9,B_Sele_Person_5,B_Sele_U_C_C_5,B_Sele_U_C_C_9,B_U_C_C_10,B_U_C_C_11,B_U_C_C_5,CFG_Compile,E_Address,E_Business_Org,E_Business_Sele,E_Business_Sele_Overflow,E_Business_Ult,E_Geo_Link,E_Input_B_I_I,E_Person,E_Sele_Address,E_Sele_Person,E_Sele_U_C_C,E_Surname,E_U_C_C,E_Zip_Code,FN_Compile FROM BRM_Marketing_attributes.BRM_KEL;
IMPORT * FROM KEL16.Null;
EXPORT B_Business_Sele_4(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Business_Sele_5(__in,__cfg).__ENH_Business_Sele_5) __ENH_Business_Sele_5 := B_Business_Sele_5(__in,__cfg).__ENH_Business_Sele_5;
  SHARED VIRTUAL TYPEOF(B_Sele_Person_5(__in,__cfg).__ENH_Sele_Person_5) __ENH_Sele_Person_5 := B_Sele_Person_5(__in,__cfg).__ENH_Sele_Person_5;
  SHARED VIRTUAL TYPEOF(B_Sele_U_C_C_5(__in,__cfg).__ENH_Sele_U_C_C_5) __ENH_Sele_U_C_C_5 := B_Sele_U_C_C_5(__in,__cfg).__ENH_Sele_U_C_C_5;
  SHARED VIRTUAL TYPEOF(B_U_C_C_5(__in,__cfg).__ENH_U_C_C_5) __ENH_U_C_C_5 := B_U_C_C_5(__in,__cfg).__ENH_U_C_C_5;
  SHARED __EE891391 := __ENH_Business_Sele_5;
  SHARED __EE891423 := __ENH_U_C_C_5;
  SHARED __EE891425 := __ENH_Sele_U_C_C_5;
  SHARED __EE894280 := __EE891425(__NN(__EE891425.Legal_) AND __NN(__EE891425.Filing_));
  SHARED __ST324894_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.ndataset(B_U_C_C_5(__in,__cfg).__ST164443_Layout) Sub_Filing_;
    KEL.typ.ndataset(E_U_C_C(__in,__cfg).Collateral_Layout) Collateral_;
    KEL.typ.ndataset(E_U_C_C(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nstr Best_Child_R_M_S_I_D_;
    KEL.typ.nstr Best_Inferred_Status_;
    KEL.typ.ndataset(B_U_C_C_10(__in,__cfg).__ST83099_Layout) Best_U_C_C_Child_Record_;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.nstr T_M_S_I_D__1_;
    KEL.typ.ntyp(E_U_C_C().Typ) Filing_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(B_Sele_U_C_C_5(__in,__cfg).__ST164137_Layout) Sub_Filing__1_;
    KEL.typ.ndataset(E_Sele_U_C_C(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Sele_U_C_C_9(__in,__cfg).__ST169447_Layout) Best_Party_Types_;
    KEL.typ.nstr Filtered_Party_Type_;
    KEL.typ.bool Is_Creditor_ := FALSE;
    KEL.typ.bool Is_Debtor_ := FALSE;
    KEL.typ.bool Is_Filing_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC894298(B_U_C_C_5(__in,__cfg).__ST164439_Layout __EE891423, B_Sele_U_C_C_5(__in,__cfg).__ST164129_Layout __EE894280) := __EEQP(__EE894280.Filing_,__EE891423.UID);
  __ST324894_Layout __JT894298(B_U_C_C_5(__in,__cfg).__ST164439_Layout __l, B_Sele_U_C_C_5(__in,__cfg).__ST164129_Layout __r) := TRANSFORM
    SELF.T_M_S_I_D__1_ := __r.T_M_S_I_D_;
    SELF.Sub_Filing__1_ := __r.Sub_Filing_;
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE894299 := JOIN(__EE894280,__EE891423,__JC894298(RIGHT,LEFT),__JT894298(RIGHT,LEFT),INNER,HASH);
  SHARED __ST323834_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.ntyp(E_U_C_C().Typ) Filing_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(B_Sele_U_C_C_5(__in,__cfg).__ST164137_Layout) Sub_Filing_;
    KEL.typ.ndataset(E_Sele_U_C_C(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Sele_U_C_C_9(__in,__cfg).__ST169447_Layout) Best_Party_Types_;
    KEL.typ.nstr Filtered_Party_Type_;
    KEL.typ.bool Is_Creditor_ := FALSE;
    KEL.typ.bool Is_Debtor_ := FALSE;
    KEL.typ.bool Is_Filing_ := FALSE;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.ndataset(B_U_C_C_10(__in,__cfg).__ST83099_Layout) Best_U_C_C_Child_Record_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST323834_Layout __ND894388__Project(__ST324894_Layout __PP894300) := TRANSFORM
    SELF.UID := __PP894300.Legal_;
    SELF.T_M_S_I_D_ := __PP894300.T_M_S_I_D__1_;
    SELF.Sub_Filing_ := __PP894300.Sub_Filing__1_;
    SELF.Data_Sources_ := __PP894300.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP894300.UID;
    SELF := __PP894300;
  END;
  SHARED __EE894507 := PROJECT(__EE894299,__ND894388__Project(LEFT));
  SHARED __ST323962_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.bool Exp1_ := FALSE;
    KEL.typ.bool Exp2_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST323962_Layout __ND897150__Project(__ST323834_Layout __PP894508) := TRANSFORM
    __CC13511 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('ucc_build_version'))),__CN(__cfg.CurrentDate));
    __BS894534 := __T(__PP894508.Best_U_C_C_Child_Record_);
    SELF.Exp1_ := EXISTS(__BS894534(__T(__AND(__OP2(__T(__PP894508.Best_U_C_C_Child_Record_).Max_Filing_Date_,<,__CC13511),__CN(__PP894508.Is_Creditor_)))));
    __BS894563 := __T(__PP894508.Best_U_C_C_Child_Record_);
    SELF.Exp2_ := EXISTS(__BS894563(__T(__AND(__OP2(__T(__PP894508.Best_U_C_C_Child_Record_).Max_Filing_Date_,<,__CC13511),__CN(__PP894508.Is_Debtor_)))));
    SELF := __PP894508;
  END;
  SHARED __EE897160 := PROJECT(__EE894507,__ND897150__Project(LEFT));
  SHARED __ST323982_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE897181 := PROJECT(__CLEANANDDO(__EE897160,TABLE(__EE897160,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP,__EE897160.Exp1_),KEL.typ.int C_O_U_N_T___Exp1__1_ := COUNT(GROUP,__EE897160.Exp2_),UID},UID,MERGE)),__ST323982_Layout);
  SHARED __ST325166_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171900_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171925_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171936_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171947_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171966_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST172045_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST270756_Layout) All_Lien_Data_;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr B___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC897187(B_Business_Sele_5(__in,__cfg).__ST171862_Layout __EE891391, __ST323982_Layout __EE897181) := __EEQP(__EE891391.UID,__EE897181.UID);
  __ST325166_Layout __JT897187(B_Business_Sele_5(__in,__cfg).__ST171862_Layout __l, __ST323982_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE897576 := JOIN(__EE891391,__EE897181,__JC897187(LEFT,RIGHT),__JT897187(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE891408 := __ENH_Sele_Person_5;
  SHARED __EE897581 := __EE891408(__T(__AND(__EE891408.Two_Years_,__CN(__NN(__EE891408.Legal_)))));
  SHARED __ST322009_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE897594 := PROJECT(__CLEANANDDO(__EE897581,TABLE(__EE897581,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Sele_Person_ := COUNT(GROUP),KEL.typ.ntyp(E_Business_Sele().Typ) UID := __EE897581.Legal_},Legal_,MERGE)),__ST322009_Layout);
  SHARED __ST327489_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171900_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171925_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171936_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171947_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST171966_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST172045_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST270756_Layout) All_Lien_Data_;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr B___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Sele_Person_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC897602(__ST325166_Layout __EE897576, __ST322009_Layout __EE897594) := __EEQP(__EE897576.UID,__EE897594.UID);
  __ST327489_Layout __JT897602(__ST325166_Layout __l, __ST322009_Layout __r) := TRANSFORM
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE897993 := JOIN(__EE897576,__EE897594,__JC897602(LEFT,RIGHT),__JT897602(LEFT,RIGHT),LEFT OUTER,HASH);
  EXPORT __ST173779_Layout := RECORD
    KEL.typ.nstr Name_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Name_Status_;
    KEL.typ.nstr Corporation_Legal_Name_;
    KEL.typ.nstr Doing_Business_As_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Business_Name_Is_Similar_;
    KEL.typ.nbool Business_Name_Match_;
    KEL.typ.nstr Doing_Business_As_Slim_Name_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST173801_Layout := RECORD
    KEL.typ.nint S_I_C_Code_;
    KEL.typ.nint S_I_C_Code_Order_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Is_Sic_Code_;
    KEL.typ.int Source_Priority_ := 0;
    KEL.typ.nbool Within_Last24_Months_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST173811_Layout := RECORD
    KEL.typ.nint N_A_I_C_S_Code_;
    KEL.typ.nint N_A_I_C_S_Code_Order_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Is_N_A_I_C_S_Code_;
    KEL.typ.int Source_Priority_ := 0;
    KEL.typ.nbool Within_Last24_Months_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST173821_Layout := RECORD
    KEL.typ.nint Total_Employees_;
    KEL.typ.nint Employee_Count_;
    KEL.typ.nstr N_A_R_B_Employee_Code_;
    KEL.typ.nstr E_B_R_Employee_Size_Code_;
    KEL.typ.nint Estimated_Number_Of_Employees_;
    KEL.typ.nint D_C_A_Enterprise_Number_;
    KEL.typ.nint Cortera_Ultimate_Link_I_D_;
    KEL.typ.nint Equifax_I_D_;
    KEL.typ.nstr N_A_R_B_Record_I_D_;
    KEL.typ.nstr E_B_R_Number_;
    KEL.typ.nint Experian_Business_I_D_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nkdate Date_Last_Seen_Capped_;
    KEL.typ.nbool Is_Cortera_Employee_Record_;
    KEL.typ.nbool Is_D_C_A_Employee_Record_;
    KEL.typ.nbool Is_E_B_R_Employee_Record_;
    KEL.typ.nbool Is_Equifax_Employee_Record_;
    KEL.typ.nbool Is_Infutor_Employee_Record_;
    KEL.typ.nbool Is_Seen_In_Two_Years_;
    KEL.typ.nint N_A_R_B_Employee_Estimate_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST173845_Layout := RECORD
    KEL.typ.nint Total_Sales_;
    KEL.typ.nint Financial_Amount_Figure_;
    KEL.typ.nstr N_A_R_B_Sales_Code_;
    KEL.typ.nstr Total_Sales_Precision_;
    KEL.typ.nint Reported_Sales_;
    KEL.typ.nint Estimated_Annual_Sales_Amount_;
    KEL.typ.nint D_C_A_Enterprise_Number_;
    KEL.typ.nint Cortera_Ultimate_Link_I_D_;
    KEL.typ.nint Equifax_I_D_;
    KEL.typ.nstr N_A_R_B_Record_I_D_;
    KEL.typ.nstr E_B_R_Number_;
    KEL.typ.nint Experian_Business_I_D_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nkdate Date_Last_Seen_Capped_;
    KEL.typ.nbool Is_Cortera_Sale_Record_;
    KEL.typ.nbool Is_D_C_A_Sale_Record_;
    KEL.typ.nbool Is_E_B_R_Sale_Record_;
    KEL.typ.nbool Is_Equifax_Sale_Record_;
    KEL.typ.nbool Is_Infutor_Sale_Record_;
    KEL.typ.nbool Is_Seen_In_Two_Years_;
    KEL.typ.nint N_A_R_B_Sales_Estimate_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST173929_Layout := RECORD
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST316688_Layout := RECORD
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Filing_Type_Description_;
    KEL.typ.nint Amount_;
    KEL.typ.bool Landlord_Tenant_Dispute_Flag_ := FALSE;
    KEL.typ.nkdate Original_Filing_Date_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nbool Is_Civil_Court_Judgment_;
    KEL.typ.nbool Is_Federal_Tax_Lien_;
    KEL.typ.nbool Is_Foreclosure_Judgment_;
    KEL.typ.nbool Is_Landlord_Tenant_Dispute_;
    KEL.typ.nbool Is_Other_Lien_;
    KEL.typ.nbool Is_Other_Tax_Lien_;
    KEL.typ.nbool Is_Over_All_Judgment_;
    KEL.typ.nbool Is_Over_All_Lien_;
    KEL.typ.nbool Is_Over_All_Lien_Judgment_;
    KEL.typ.nbool Is_Small_Cliams_Judgment_;
    KEL.typ.nbool Is_State_Tax_Lien_;
    KEL.typ.nbool Is_Total_Tax_Lien_;
    KEL.typ.nbool Seen___In___Seven___Years_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST91053_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.nstr Date_First_Seen_Clean_;
    KEL.typ.nstr Date_Last_Seen_Clean_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST91467_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.nstr Date_First_Seen_Clean_;
    KEL.typ.nstr Date_Last_Seen_Clean_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST91230_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.nstr Date_First_Seen_Clean_;
    KEL.typ.nstr Date_Last_Seen_Clean_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST173741_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(__ST173779_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(__ST173801_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(__ST173811_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(__ST173821_Layout) Employee_Counts_;
    KEL.typ.ndataset(__ST173845_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(__ST173929_Layout) Data_Sources_;
    KEL.typ.ndataset(__ST316688_Layout) All_Lien_Data_;
    KEL.typ.int Assoc_Cnt2_Y_Un_Cap_ := 0;
    KEL.typ.nstr B_E___Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr B_E___Bus_S_I_C_Code1_;
    KEL.typ.int B_E___U_C_C_Cnt_Ev_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169023_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.nstr Best_Sele_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST169012_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST89937_Layout) Business_Ver_Source_List_Sorted_;
    KEL.typ.int Initial_Creditor_Filing_Count_ := 0;
    KEL.typ.int Initial_Debtor_Filing_Count_ := 0;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(__ST91053_Layout) Sele_Address_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91026_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(__ST91467_Layout) Sele_Phone_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91440_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(__ST91230_Layout) Sele_T_I_N_Match_Sources_;
    KEL.typ.ndataset(B_Business_Sele_5(__in,__cfg).__ST91203_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89901_Layout) Translated_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST173741_Layout __ND898034__Project(__ST327489_Layout __PP898030) := TRANSFORM
    __EE897996 := __PP898030.Reported_Names_;
    __ST173779_Layout __ND898376__Project(B_Business_Sele_5(__in,__cfg).__ST171900_Layout __PP898372) := TRANSFORM
      SELF.Business_Name_Is_Similar_ := __OR(__OR(__OP2(__PP898372.Name_Similarity_,>,__CN(0.6)),__OP2(__PP898372.Corporation_Legal_Name_Similarity_,>,__CN(0.6))),__OP2(__PP898372.Doing_Business_As_Similarity_,>,__CN(0.6)));
      SELF.Business_Name_Match_ := __OR(__OR(__PP898372.Name_Match_,__PP898372.Corporation_Legal_Name_Match_),__PP898372.Doing_Business_As_Match_);
      SELF.Doing_Business_As_Slim_Name_ := FN_Compile(__cfg).FN_Filter_Out(__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN__fn_Remove_Special_Chars(__ECAST(KEL.typ.nstr,__PP898372.Doing_Business_As_),__ECAST(KEL.typ.nstr,__CN('')))),__ECAST(KEL.typ.nstr,__CN(' ')));
      SELF := __PP898372;
    END;
    SELF.Reported_Names_ := __PROJECT(__EE897996,__ND898376__Project(LEFT));
    __EE898000 := __PP898030.S_I_C_Codes_;
    SELF.S_I_C_Codes_ := __PROJECT(__EE898000,__ST173801_Layout);
    __EE898004 := __PP898030.N_A_I_C_S_Codes_;
    SELF.N_A_I_C_S_Codes_ := __PROJECT(__EE898004,__ST173811_Layout);
    __EE898008 := __PP898030.Employee_Counts_;
    __ST173821_Layout __ND898519__Project(B_Business_Sele_5(__in,__cfg).__ST171947_Layout __PP898515) := TRANSFORM
      SELF.Is_Cortera_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP898515.Source_,=,__CN('RR')),__PP898515.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898515.Total_Employees_))),__NOT(__NT(__PP898515.Cortera_Ultimate_Link_I_D_)));
      SELF.Is_D_C_A_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP898515.Source_,=,__CN('DF')),__PP898515.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898515.Total_Employees_))),__NOT(__NT(__PP898515.D_C_A_Enterprise_Number_)));
      SELF.Is_E_B_R_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP898515.Source_,=,__CN('ER')),__PP898515.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898515.Total_Employees_))),__NOT(__NT(__PP898515.E_B_R_Number_)));
      SELF.Is_Equifax_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP898515.Source_,=,__CN('Z1')),__PP898515.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898515.Employee_Count_))),__NOT(__NT(__PP898515.Equifax_I_D_)));
      SELF.Is_Infutor_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP898515.Source_,=,__CN('Z2')),__PP898515.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898515.N_A_R_B_Employee_Estimate_))),__NOT(__NT(__PP898515.N_A_R_B_Record_I_D_)));
      SELF := __PP898515;
    END;
    SELF.Employee_Counts_ := __PROJECT(__EE898008,__ND898519__Project(LEFT));
    __EE898012 := __PP898030.Sale_Amounts_;
    __ST173845_Layout __ND898685__Project(B_Business_Sele_5(__in,__cfg).__ST171966_Layout __PP898681) := TRANSFORM
      SELF.Is_Cortera_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP898681.Source_,=,__CN('RR')),__PP898681.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898681.Total_Sales_))),__NOT(__NT(__PP898681.Cortera_Ultimate_Link_I_D_)));
      SELF.Is_D_C_A_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP898681.Source_,=,__CN('DF')),__PP898681.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898681.Total_Sales_))),__NOT(__NT(__PP898681.D_C_A_Enterprise_Number_)));
      SELF.Is_E_B_R_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP898681.Source_,=,__CN('ER')),__PP898681.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898681.Reported_Sales_))),__NOT(__NT(__PP898681.E_B_R_Number_)));
      SELF.Is_Equifax_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP898681.Source_,=,__CN('Z1')),__PP898681.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898681.Financial_Amount_Figure_))),__NOT(__NT(__PP898681.Equifax_I_D_)));
      SELF.Is_Infutor_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP898681.Source_,=,__CN('Z2')),__PP898681.Is_Seen_In_Two_Years_),__NOT(__NT(__PP898681.N_A_R_B_Sales_Estimate_))),__NOT(__NT(__PP898681.N_A_R_B_Record_I_D_)));
      SELF := __PP898681;
    END;
    SELF.Sale_Amounts_ := __PROJECT(__EE898012,__ND898685__Project(LEFT));
    __EE898016 := __PP898030.Data_Sources_;
    SELF.Data_Sources_ := __BN(PROJECT(__T(__EE898016),__ST173929_Layout),__NL(__EE898016));
    __EE898894 := __PP898030.All_Lien_Data_;
    __ST316688_Layout __ND898902__Project(B_Business_Sele_5(__in,__cfg).__ST270756_Layout __PP898898) := TRANSFORM
      __CC33958 := ['FORCIBLE ENTRY/DETAINER','LANDLORD TENANT JUDGMENT','FORCIBLE ENTRY/DETAINER RELEAS','FORCIBLE ENTRY/DETAINER RELEASE'];
      __CC33971 := ['CIVIL NEW FILING','CIVIL SUIT','CIVIL SUMMONS','COURT ORDER','FEDERAL COURT NEW FILING','FORECLOSURE NEW FILING','JUDGMENT - Chapter 7','LANDLORD TENANT SUIT','LIS PENDENS','LIS PENDENS NOTICE','LIS PENDENS RELEASE'];
      SELF.Is_Landlord_Tenant_Dispute_ := __AND(__OR(__CN(__PP898898.Landlord_Tenant_Dispute_Flag_ = TRUE),__OP2(__PP898898.Filing_Type_Description_,IN,__CN(__CC33958))),__NOT(__OP2(__PP898898.Filing_Type_Description_,IN,__CN(__CC33971))));
      SELF.Is_Over_All_Lien_Judgment_ := __OR(__PP898898.Is_Over_All_Judgment_,__PP898898.Is_Over_All_Lien_);
      __CC33952 := 2556;
      SELF.Seen___In___Seven___Years_ := __OP2(__PP898898.Age_In_Days_,<=,__CN(__CC33952));
      SELF := __PP898898;
    END;
    SELF.All_Lien_Data_ := __PROJECT(__EE898894,__ND898902__Project(LEFT));
    SELF.Assoc_Cnt2_Y_Un_Cap_ := __PP898030.C_O_U_N_T___Sele_Person_;
    __CC13939 := '-99999';
    __CC13942 := -99999;
    __CC13944 := '-99998';
    SELF.B_E___Bus_N_A_I_C_S_Code1_ := MAP(__T(__OR(__CN(__PP898030.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP898030.Sele_I_D_),=,__CN(__CC13939))))=>__ECAST(KEL.typ.nstr,__CAST(KEL.typ.str,__CN(__CC13942))),__T(__OP2(__PP898030.Bus_N_A_I_C_S_Code1_Final_,<>,__CN(__CC13944)))=>__ECAST(KEL.typ.nstr,__PP898030.Bus_N_A_I_C_S_Code1_Final_),__T(__OP2(__PP898030.Bus_N_A_I_C_S_Code2_Final_,<>,__CN(__CC13944)))=>__ECAST(KEL.typ.nstr,__PP898030.Bus_N_A_I_C_S_Code2_Final_),__T(__OP2(__PP898030.Bus_N_A_I_C_S_Code3_Final_,<>,__CN(__CC13944)))=>__ECAST(KEL.typ.nstr,__PP898030.Bus_N_A_I_C_S_Code3_Final_),__T(__OP2(__PP898030.Bus_N_A_I_C_S_Code4_Final_,<>,__CN(__CC13944)))=>__ECAST(KEL.typ.nstr,__PP898030.Bus_N_A_I_C_S_Code4_Final_),__ECAST(KEL.typ.nstr,__CN(__CC13944)));
    SELF.B_E___Bus_S_I_C_Code1_ := MAP(__T(__OR(__CN(__PP898030.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP898030.Sele_I_D_),=,__CN(__CC13939))))=>__ECAST(KEL.typ.nstr,__CN(__CC13939)),__T(__OP2(__PP898030.Bus_S_I_C_Code1_Final_,<>,__CN(__CC13944)))=>__ECAST(KEL.typ.nstr,__PP898030.Bus_S_I_C_Code1_Final_),__T(__OP2(__PP898030.Bus_S_I_C_Code2_Final_,<>,__CN(__CC13944)))=>__ECAST(KEL.typ.nstr,__PP898030.Bus_S_I_C_Code2_Final_),__T(__OP2(__PP898030.Bus_S_I_C_Code3_Final_,<>,__CN(__CC13944)))=>__ECAST(KEL.typ.nstr,__PP898030.Bus_S_I_C_Code3_Final_),__T(__OP2(__PP898030.Bus_S_I_C_Code4_Final_,<>,__CN(__CC13944)))=>__ECAST(KEL.typ.nstr,__PP898030.Bus_S_I_C_Code4_Final_),__ECAST(KEL.typ.nstr,__CN(__CC13944)));
    __CC14161 := -99999;
    SELF.B_E___U_C_C_Cnt_Ev_ := MAP(__T(__OR(__CN(__PP898030.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__PP898030.Sele_I_D_,=,__CN(__CC14161))))=>__CC14161,KEL.Routines.BoundsFold(__PP898030.Initial_Filing_Count_,0,99999));
    SELF.Best_Sele_Address_ := __OP2(__OP2(__OP2(__OP2(__OP2(__OP2(IF(__T(__NOT(__NT(__PP898030.Only_Best_Business_Address_.Best_Primary_Range_))),__ECAST(KEL.typ.nstr,__OP2(__FN1(TRIM,__PP898030.Only_Best_Business_Address_.Best_Primary_Range_),+,__CN(' '))),__ECAST(KEL.typ.nstr,__CN(''))),+,IF(__T(__NOT(__NT(__PP898030.Only_Best_Business_Address_.Best_Predirectional_))),__ECAST(KEL.typ.nstr,__OP2(__FN1(TRIM,__PP898030.Only_Best_Business_Address_.Best_Predirectional_),+,__CN(' '))),__ECAST(KEL.typ.nstr,__CN('')))),+,IF(__T(__NOT(__NT(__PP898030.Only_Best_Business_Address_.Best_Primary_Name_))),__ECAST(KEL.typ.nstr,__OP2(__FN1(TRIM,__PP898030.Only_Best_Business_Address_.Best_Primary_Name_),+,__CN(' '))),__ECAST(KEL.typ.nstr,__CN('')))),+,IF(__T(__NOT(__NT(__PP898030.Only_Best_Business_Address_.Best_Suffix_))),__ECAST(KEL.typ.nstr,__OP2(__FN1(TRIM,__PP898030.Only_Best_Business_Address_.Best_Suffix_),+,__CN(' '))),__ECAST(KEL.typ.nstr,__CN('')))),+,IF(__T(__NOT(__NT(__PP898030.Only_Best_Business_Address_.Best_Postdirectional_))),__ECAST(KEL.typ.nstr,__OP2(__FN1(TRIM,__PP898030.Only_Best_Business_Address_.Best_Postdirectional_),+,__CN(' '))),__ECAST(KEL.typ.nstr,__CN('')))),+,IF(__T(__NOT(__NT(__PP898030.Only_Best_Business_Address_.Best_Unit_Designation_))),__ECAST(KEL.typ.nstr,__OP2(__FN1(TRIM,__PP898030.Only_Best_Business_Address_.Best_Unit_Designation_),+,__CN(' '))),__ECAST(KEL.typ.nstr,__CN('')))),+,IF(__T(__NOT(__NT(__PP898030.Only_Best_Business_Address_.Best_Secondary_Range_))),__ECAST(KEL.typ.nstr,__FN1(TRIM,__PP898030.Only_Best_Business_Address_.Best_Secondary_Range_)),__ECAST(KEL.typ.nstr,__CN(''))));
    __EE899260 := __PP898030.Business_Ver_Source_List_;
    __CC13952 := '-99997';
    __BS899264 := __T(__EE899260);
    __EE899280 := __BN(TOPN(__BS899264(__NN(__OP2(__T(__EE899260).Source_Date_First_Seen_,=,__CN(__CC13952))) AND __NN(__T(__EE899260).Source_Date_First_Seen_) AND __NN(__T(__EE899260).Source_Date_Last_Seen_) AND __NN(__T(__EE899260).Translated_Source_Code_)),1000,__T(__OP2(__T(__EE899260).Source_Date_First_Seen_,=,__CN(__CC13952))),__T(__T(__EE899260).Source_Date_First_Seen_), -__T(__T(__EE899260).Source_Date_Last_Seen_),__T(__T(__EE899260).Translated_Source_Code_)),__NL(__EE899260));
    SELF.Business_Ver_Source_List_Sorted_ := __EE899280;
    SELF.Initial_Creditor_Filing_Count_ := __PP898030.C_O_U_N_T___Exp1_;
    SELF.Initial_Debtor_Filing_Count_ := __PP898030.C_O_U_N_T___Exp1__1_;
    __EE898020 := __PP898030.Sele_Address_Match_Sources_Pre_;
    __ST91053_Layout __ND899299__Project(B_Business_Sele_5(__in,__cfg).__ST91026_Layout __PP899295) := TRANSFORM
      __CC13952 := '-99997';
      SELF.Date_First_Seen_Clean_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP899295.My_Date_First_Seen_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP899295.My_Date_First_Seen_,__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13952)));
      __CC13311 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('bip_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Date_Last_Seen_Clean_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP899295.My_Date_Last_Seen_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(__PP899295.My_Date_Last_Seen_,__CC13311),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13952)));
      SELF := __PP899295;
    END;
    SELF.Sele_Address_Match_Sources_ := __PROJECT(__EE898020,__ND899299__Project(LEFT));
    __EE898024 := __PP898030.Sele_Phone_Match_Sources_Pre_;
    __ST91467_Layout __ND899335__Project(B_Business_Sele_5(__in,__cfg).__ST91440_Layout __PP899331) := TRANSFORM
      __CC13952 := '-99997';
      SELF.Date_First_Seen_Clean_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP899331.My_Date_First_Seen_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP899331.My_Date_First_Seen_,__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13952)));
      __CC13311 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('bip_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Date_Last_Seen_Clean_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP899331.My_Date_Last_Seen_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(__PP899331.My_Date_Last_Seen_,__CC13311),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13952)));
      SELF := __PP899331;
    END;
    SELF.Sele_Phone_Match_Sources_ := __PROJECT(__EE898024,__ND899335__Project(LEFT));
    __EE898028 := __PP898030.Sele_T_I_N_Match_Sources_Pre_;
    __ST91230_Layout __ND899371__Project(B_Business_Sele_5(__in,__cfg).__ST91203_Layout __PP899367) := TRANSFORM
      __CC13952 := '-99997';
      SELF.Date_First_Seen_Clean_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP899367.My_Date_First_Seen_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP899367.My_Date_First_Seen_,__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13952)));
      __CC13311 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('bip_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Date_Last_Seen_Clean_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP899367.My_Date_Last_Seen_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(__PP899367.My_Date_Last_Seen_,__CC13311),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13952)));
      SELF := __PP899367;
    END;
    SELF.Sele_T_I_N_Match_Sources_ := __PROJECT(__EE898028,__ND899371__Project(LEFT));
    SELF := __PP898030;
  END;
  EXPORT __ENH_Business_Sele_4 := PROJECT(__EE897993,__ND898034__Project(LEFT));
END;
