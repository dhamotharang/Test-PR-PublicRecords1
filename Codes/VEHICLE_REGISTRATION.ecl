export VEHICLE_REGISTRATION := 
MODULE
 
	export VARSTRING VP_RESTRAINT(string code) := 
	       MAP(code='A' => 'Active (manual) belts',  
			 code='B' => 'Driver front air bag/belt system unknown',  
			 code='C' => 'Dual front air bags/belt system unknown',  
			 code='D' => 'Driver front air bag/passenger side passive belt',  
			 code='E' => 'Dual front air bags/active belts',  
			 code='F' => 'Dual front air bags/passive belts',  
			 code='G' => 'Dual air bags front and side/belts unknown',  
			 code='H' => 'Dual air bags front , head and sides/belts unknown',  
			 code='I' => 'Dual air bags front, head and sides/passive belts',  
			 code='J' => 'Dual air bags front and sides/passive belts',  
			 code='K' => 'Dual air bags front and sides/active belts',  
			 code='L' => 'Dual air bags front, head and sides/active belts',  
			 code='M' => 'Driver front air bag/passenger side active belt',  
			 code='P' => 'Passive (automatic) belts',  
			 code='R' => 'Dual air bags front and side/active belts w/automatic passenger sensor',  
			 code='S' => 'Dual air bags front, head, and side/active belts w/automatic passenger sensor',  
			 code='T' => 'Dual air bags front/active belts/rear passenger side air bag',  
			 code='U' => 'Dual air bag front/active belts w/passenger side deactivation/cutoff switch',  
			 code='V' => 'Dual air bags front, head, and side/active belts/rear dual side air bags',  
			 code='W' => 'Dual air bags front, head, and side/active belts w/automatic passenger sensor/ rear dual side air bags',  
			 code='X' => 'Dual air bags front/side air bag, driver-side only/active belts',  
			 code='Y' => 'Dual front and side air bags with passenger deactivation switch',  
			 code='3' => 'Dual Front And Head Air Bags With Passenger Sensor; Active Belts',  
			 code='4' => 'Dual Front Air Bags With Passenger Sensor; Active Belts',  
			 code='7' => 'Dual Front, Side And Head Airbags Rear Head Airbags; Active Belts',  
	           '');

export VARSTRING VP_AIR_CONDITIONING(string code) := 
	       MAP(code='A' => 'Available',  
	     code='N' => 'Not available',  
			 code='O' => 'Optional',  
			 code='S' => 'Standard',  
			 code='U' => 'Unknown',  
	           '');
			 		 
export VARSTRING VP_POWER_STEERING(string code) := 
	       MAP(code='N' => 'Not available',  
			 code='O' => 'Optional',  
			 code='S' => 'Standard',  
			 code='U' => 'Unknown',  
	           '');
			 
export VARSTRING VP_POWER_BRAKES(string code) := 
	       MAP(code='N' => 'Not available',  
			 code='O' => 'Optional',  
			 code='S' => 'Standard',  
			 code='U' => 'Unknown',  
	           '');			 

export VARSTRING VP_POWER_WINDOWS(string code) := 
	       MAP(code='A' => 'Available',  
			 code='N' => 'Not available',  
			 code='O' => 'Optional',  
			 code='S' => 'Standard',  
			 code='U' => 'Unknown',  
	           '');			 

export VARSTRING VP_SECURITY_SYSTEM(string code) := 
	       MAP(code='P' => 'Pass key',  
			    code='T' => 'Anti-theft device',  
			    code='N' => 'None',  
		      code='U' => 'Unknown',  
		      code='A' => 'Active Alarm System',  
		      code='B' => 'Passive Engine Immobilizer, Keyless Entry & Alarm',  
		      code='C' => 'Keyless Entry and Alarm',  
		      code='D' => 'Passive Immobilize Key, Keyless entry, and alarm',  
		      code='E' => 'Passive Engine Immobilizer',  
		      code='F' => 'Passive Engine Immobilizer & keyless entry',  
		      code='G' => 'Passive Immobilizer key & keyless entry',  
		      code='H' => 'Immobilizer and Alarm',  
		      code='I' => 'Immobilizer',  
		      code='J' => 'Passive Engine Immobilizer & alarm',  
		      code='K' => 'Active Keyless Entry',  
		      code='O' => 'Other Systems',  
		      code='S' => 'Passive entry key',   
	           '');			 

export VARSTRING VP_ROOF(string code) := 
	       MAP(code='1' => 'None / not available',  
			 code='2' => 'Manual sun/moon roof',  
			 code='3' => 'Power sun/moon roof',  
			 code='4' => 'Removable panels',  
			 code='5' => 'Removable roof',  
			 code='6' => 'Retractable roof panel',  
			 code='7' => 'Other / unknown',  
	           '');			
			 
export VARSTRING VP_OPTIONAL_ROOF1(string code) := 
	       MAP(code='1' => 'None / not available',  
			 code='2' => 'Manual sun/moon roof',  
		      code='3' => 'Power sun/moon roof',  
			 code='4' => 'Removable panels',  
			 code='5' => 'Removable roof',  
			 code='6' => 'Retractable roof panel',  
			 code='7' => 'Other / unknown',  
	           '');			
			 
export VARSTRING VP_OPTIONAL_ROOF2(string code) := 
	       MAP(code='1' => 'None / not available',  
			 code='2' => 'Manual sun/moon roof',  
			 code='3' => 'Power sun/moon roof',  
			 code='4' => 'Removable panels',  
			 code='5' => 'Removable roof',  
			 code='6' => 'Retractable roof panel',  
			 code='7' => 'Other / unknown',  
	           '');			
			 
export VARSTRING VP_RADIO(string code) := 
	       MAP(code='1' => 'None',  
			 code='2' => 'AM',  
			 code='3' => 'AM/FM',  
			 code='4' => 'AM/FM Cassette',  
			 code='5' => 'AM/FM CD',  
			 code='6' => 'Unknown',  
			 code='7' => 'Satellite',  
			 code='8' => 'AM/FM Cassette/CD',  
			 code='9' => 'AM/FM CD/DVD',  
			 code='A' => 'AM/FM CD/MP3',  
	           '');						 
			 
export VARSTRING VP_OPTIONAL_RADIO1(string code) := 
	       MAP(code='1' => 'None',  
			 code='2' => 'AM',  
			 code='3' => 'AM/FM',  
			 code='4' => 'AM/FM Cassette',  
			 code='5' => 'AM/FM CD',  
			 code='6' => 'Unknown',  
			 code='7' => 'Satellite',  
			 code='8' => 'AM/FM Cassette/CD',  
			 code='9' => 'AM/FM CD/DVD',  
			 code='A' => 'AM/FM CD/MP3',  
			 code='U' => 'Unknown',  
	           '');			
			 
export VARSTRING VP_OPTIONAL_RADIO2(string code) := 
	       MAP(code='1' => 'None',  
			 code='2' => 'AM',  
			 code='3' => 'AM/FM',  
			 code='4' => 'AM/FM Cassette',  
			 code='5' => 'AM/FM CD',  
			 code='6' => 'Unknown',  
			 code='7' => 'Satellite',  
			 code='8' => 'AM/FM Cassette/CD',  
			 code='9' => 'AM/FM CD/DVD',  
			 code='A' => 'AM/FM CD/MP3',  
	           '');			
			 
export VARSTRING VP_TILT_WHEEL(string code) := 
	       MAP(code='N' => 'Not available',  
			 code='O' => 'Optional',  
			 code='S' => 'Standard',  
			 code='U' => 'Unknown',  
	           '');						 

export VARSTRING VP_ANTI_LOCK_BRAKES(string code) := 
	       MAP(code='1' => 'Not available',  
			 code='2' => '4 wheel standard',  
			 code='3' => 'Rear only standard',  
			 code='4' => 'ABS standard, wheels unknown',  
			 code='5' => '4 wheel optional',  
			 code='6' => 'Rear only optional',  
			 code='7' => 'ABS optional, wheels unknown',  
			 code='8' => 'Unknown',  
			 code='U' => 'Unknown',  
	           '');						 


export VARSTRING VP_DAYTIME_RUNNING_LIGHTS(string code) := 
	       MAP(code='A' => 'Available',  
	     code='N' => 'Not available',  
			 code='O' => 'Optional',  
       code='S' => 'Standard',  			 
			 code='U' => 'Unknown',  
	           '');						 

export VARSTRING VP_FRONT_WHEEL_DRIVE(string code) := 
	       MAP(code='N' => 'No',  
			 code='Y' => 'Yes',  
		      code='*' => 'Some vehicles of this series',  
	           '');						 

export VARSTRING VP_FOUR_WHEEL_DRIVE(string code) := 
	       MAP(code='N' => 'No',  
		      code='Y' => 'Yes',  
			 code='*' => 'Some vehicles of this series',  
	           '');						 
			 
export VARSTRING VEHICLE_TYPE(string field2, string code) := 
            CASE(field2, 
			  'AL' => CASE(code,
            'PASS' => 'Passenger Car or Light Truck',  
						'UNK' => '',  
						'TRLR' => 'Trailer',  
						'HTRK' => 'Heavy Truck',  
						'MOTO' => 'Motorcycle',  
						'RV' => 'Recreational Vehicle',  
						'ATV' => 'ATV',  
						'AGRI' => 'Agriculture',  
						'CNST' => 'Off-Road or Construction',  
						'WATR' => 'Watercraft',  
                              ''), 
			  'CT' => CASE(code,
            'UNK' => '',  
						'TRLR' => 'Trailer',  
						'HTRK' => 'Heavy Truck',  
						'MOTO' => 'Motorcycle',  
						'RV' => 'Recreational Vehicle',  
						'ATV' => 'ATV',  
						'AGRI' => 'Agriculture',  
						'CNST' => 'Off-Road or Construction',  
						'WATR' => 'Watercraft',  
						'PASS' => 'Passenger Car or Light Truck',   
                              ''),
			  'DE' => CASE(code,
            'PASS' => 'Passenger Car or Light Truck',  
						'UNK' => '',  
						'TRLR' => 'Trailer',  
						'HTRK' => 'Heavy Truck',  
						'MOTO' => 'Motorcycle',  
						'RV' => 'Recreational Vehicle',  
						'ATV' => 'ATV',  
						'AGRI' => 'Agriculture',  
						'CNST' => 'Off-Road or Construction',  
						'WATR' => 'Watercraft',            
                              ''),		
   			  'FL' => CASE(code,
            'VS' => 'Vessel',  
						'AM' => 'Amphibian',  
						'AU' => 'Auto',  
						'BS' => 'Bus',  
						'MC' => 'Motorcycle',  
						'MH' => 'Mobile Home',  
						'PK' => 'Pickup',  
						'TO' => 'Tools',  
						'TT' => 'Travel Trailer',  
						'VT' => 'Vehicle Trailer',  
						'TR' => 'Truck',                        
                              ''),		
			  'ID' => CASE(code,
            'ANY' => 'Any (no weight limit)',  
						'BUS' => 'Bus',  
						'CAR' => 'Vehicles Under 8000 lbs',  
						'CBS' => 'Commercial Bus',  
						'CCA' => '',  
						'CTK' => 'Commercial Truck',  
						'CYL' => 'Motorcycle',  
						'DLR' => 'Dealer',  
						'LCA' => '',  
						'MHM' => 'Motorhome',  
						'NBS' => 'Non-Commercial Bus',  
						'NTK' => 'Non-Commercial Truck',  
						'TMP' => 'Temporary',  
						'TRK' => 'Truck',  
						'TRL' => 'Trailer',  
						'TRN' => '',                      
                              ''),		
			  'MD' => CASE(code,
			      'PASS' => 'Passenger Car or Light Truck',  
						'UNK' => '',  
						'TRLR' => 'Trailer',  
						'HTRK' => 'Heavy Truck',  
						'MOTO' => 'Motorcycle',  
						'RV' => 'Recreational Vehicle',  
						'ATV' => 'ATV',  
						'AGRI' => 'Agriculture',  
						'CNST' => 'Off-Road or Construction',  
						'WATR' => 'Watercraft',                                          
                              ''),	
			  'ME' => CASE(code,
            'PASS' => 'Passenger Car or Light Truck',  
						'UNK' => '',  
						'TRLR' => 'Trailer',  
						'HTRK' => 'Heavy Truck',  
						'MOTO' => 'Motorcycle',  
						'RV' => 'Recreational Vehicle',  
						'ATV' => 'ATV',  
						'AGRI' => 'Agriculture',  
						'CNST' => 'Off-Road or Construction',  
						'WATR' => 'Watercraft',                
                              ''),	
			  'MN' => CASE(code,
            '24' => 'Moped',  
						'21' => 'Prorate (MN Trailer)',  
						'19' => 'Farm Truck',  
						'18' => 'School Bus',  
						'17' => 'Recreational Vehicle',  
						'16' => 'Motorcycle',  
						'15' => 'Inter-City Bus',  
						'14' => 'Recreational Trailer',  
						'13' => 'Class 2 City Bus',  
						'25' => 'Prorate Truck',  
						'11' => 'Duluth Bus',  
						'62' => 'Utility Trailer',  
						'10' => 'Pickup Truck',  
						'12' => 'Bus',  
						'26' => 'Contract Trailer',  
						'27' => 'Semi Trailer',  
						'32' => 'Commercial Zone Truck',  
						'38' => 'Van Pool',  
						'41' => 'Commercial Truck',  
						'61' => 'Tax Exempt',  
						'80' => 'Street Rod',  
						'81' => 'Pioneer',  
						'82' => 'Classic',  
						'83' => 'Collector',  
						'84' => 'Classic Motorcycle',  
						'99' => 'Manufactured Home',  
						'09' => 'Passenger',  
						'53' => 'Prorate Foreign Truck',                         
                              ''),	
			  'MO' => CASE(code,
            'R' => 'Recreational Vehicle',  
						'P' => 'Passenger',  
						'M' => 'Motorcycle',  
						'D' => 'Trailer',  
						'C' => 'Motor Tricycle',  
						'B' => 'Bus',  
						'A' => 'All Terrain Vehicle',  
						'T' => 'Truck',  
						'V' => 'Vessel',            
                              ''),	
			  'MS' => CASE(code,
            '1' => 'Passenger',  
						'2' => 'Tractor Truck',  
						'3' => 'Ambulance',  
						'4' => 'Truck',  
						'5' => 'Bus',  
						'6' => 'Private Trailer',  
						'7' => 'Motorcycle',  
						'8' => 'Motor Home Cab',  
						'9' => 'Truck Trailer',                      
                              ''),	
			  'MT' => CASE(code,
            'AV' => 'Amphibious Vehicle',  
						'BT' => 'Boat',  
						'BU' => 'Bus',  
						'CH' => 'Coach (Motorhome)',  
						'LL' => 'Rugged Terrain',  
						'MB' => 'Mobile Home',  
						'MC' => 'Motorcycle',  
						'MD' => 'Manufactured Dwelling',  
						'PC' => 'Passenger',  
						'QD' => 'Quadricycle',  
						'SN' => 'Snowmobile',  
						'SP' => 'Special Mobile',  
						'TC' => 'Truck Camper',  
						'TK' => 'Truck',  
						'TL' => 'Trailer',  
						'VN' => 'Van',            
                              ''),	
			  'NE' => CASE(code,
						'B' => 'Boat',  
						'H' => 'Homemade',  
						'M' => 'Motorcycle',  
						'O' => 'Other',  
						'P' => 'Passenger',  
						'R' => '',  
						'T' => 'Truck',              
                              ''),	
			  'OH' => CASE(code,
            'BU' => 'Bus',  
						'CB' => 'Church Bus',  
						'CI' => 'City Plate',  
						'CY' => 'County Plate',  
						'DV' => 'Disabled Veteran',  
						'DX' => 'Window Handicap Placard',  
						'FM' => 'Farm Truck',  
						'HV' => 'House Vehicle',  
						'MC' => 'Motorcycle',  
						'MH' => 'Motor Home',  
						'MP' => 'Moped',  
						'NC' => 'Non-commercial Truck',  
						'NT' => 'Non-commercial Trailer',  
						'PC' => 'Passenger Car',  
						'PW' => 'Prisoner of War',  
						'RV' => 'Snow Mobile / ATV',  
						'SB' => 'School Bus',  
						'ST' => 'State Plate',  
						'TB' => 'Transit Bus',  
						'TK' => 'Commercial Truck',  
						'TL' => 'Commercial Trailer',  
						'TM' => 'Temporary Plate',  
						'WC' => 'Watercraft',                      
                              ''),		
			  	  'OK' => CASE(code,
				    'PASS' => 'Passenger Car or Light Truck',  
						'UNK' => '',  
						'TRLR' => 'Trailer',  
						'HTRK' => 'Heavy Truck',  
						'MOTO' => 'Motorcycle',  
						'RV' => 'Recreational Vehicle',  
						'ATV' => 'ATV',  
						'AGRI' => 'Agriculture',  
						'CNST' => 'Off-Road or Construction',  
						'WATR' => 'Watercraft',  
                              ''),					
				  'OR' => CASE(code,
				    'PASS' => 'Passenger Car or Light Truck',  
						'UNK' => '',  
						'TRLR' => 'Trailer',  
						'HTRK' => 'Heavy Truck',  
						'MOTO' => 'Motorcycle',  
						'RV' => 'Recreational Vehicle',  
						'ATV' => 'ATV',  
						'AGRI' => 'Agriculture',  
						'CNST' => 'Off-Road or Construction',  
						'WATR' => 'Watercraft',  
                              ''),							
	 			  'SC' => CASE(code,
				    'PASS' => 'Passenger Car or Light Truck',  
						'UNK' => '',  
						'TRLR' => 'Trailer',  
						'HTRK' => 'Heavy Truck',  
						'MOTO' => 'Motorcycle',  
						'RV' => 'Recreational Vehicle',  
						'ATV' => 'ATV',  
						'AGRI' => 'Agriculture',  
						'CNST' => 'Off-Road or Construction',  
						'WATR' => 'Watercraft',  
                              ''),							
				  'WI' => CASE(code,
				    'AUTO' => 'Auto',  
						'CYCL' => 'Motorcycle',  
						'MBHM' => 'Mobile Home',  
						'TRAC' => 'Tractor',  
						'TRLR' => 'Trailer',  
						'SCBS' => 'School Bus',  
						'MTHM' => 'Motorhome',  
						'BUS' => 'Bus',  
						'RDTR' => 'Road Tractor',  
						'CAMP' => 'Camping Trailer',  
						'MPED' => 'Moped',  
						'TRUK' => 'Truck',  
						'SEMI' => 'Semi Trailer',  
                              ''),							
			  '');	
			  
export VARSTRING HISTORY_FLAG(string code) := 
	       MAP(code='' => 'CURRENT',  
			 code='E' => 'EXPIRED',
	     code='H' => 'HISTORICAL',
			 '');			  
			 			 
export VARSTRING VP_TRANSMISSION(string code) := 
		MAP(code='A' => '3 speed manual',
			code='B' => '4 speed manual',
			code='C' => '4 speed manual w/overdrive',
			code='D' => '5 speed manual',
			code='E' => '5 speed manual w/overdrive',
			code='F' => '6 speed manual',
			code='G' => '3 speed automatic',
			code='H' => '3 speed automatic w/overdrive',
			code='I' => '4 speed automatic',
			code='J' => '4 speed automatic w/overdrive',
			code='K' => '4 speed automatic w/electronic overdrive',
			code='L' => 'EVCT automatic',
			code='M' => 'Unknown / other manual',
			code='N' => 'Unknown / other automatic',
			code='O' => 'Unknown / other',
			code='P' => '5 speed automatic',
			code='Q' => '5 speed automatic w/overdrive',
			code='R' => '6 speed automatic',
			code='S' => '7 speed automatic',
			code='T' => '8 speed',
			'');

export VARSTRING FUEL_CODE(string code) := 
		MAP(code='B' => 'Electric and gasoline hybrid engine',
			code='C' => 'Gasoline engine that can be converted to a gaseous powered engine (natural gas, propane, etc.)',
			code='D' => 'Diesel',
			code='E' => 'Electric',
			code='F' => 'Flexible fuel',
			code='G' => 'Gas',
			code='H' => 'Ethanol fuel only',
			code='M' => 'Methanol gas only',
			code='N' => 'Compressed natural gas',
			code='P' => 'Propane',
			code='R' => 'Hydrogen Fuel Cell',
			code='U' => 'Unknown', 
			code='Y' => 'Electric and Diesel Hybrid',
			'');

	export checkChanges := 
	FUNCTION
		
	codes.Layout_Codes_V3 trans(codes.File_Codes_V3_in le) :=
		TRANSFORM
			translation := 
				MAP(le.field_name = 'VP_RESTRAINT'	=>	VP_RESTRAINT(le.code),
				    le.field_name = 'VP_AIR_CONDITIONING'	=> VP_AIR_CONDITIONING(le.code),
				    le.field_name = 'VP_POWER_STEERING'	=>	VP_POWER_STEERING(le.code),
				    le.field_name = 'VP_POWER_BRAKES'	=>	VP_POWER_BRAKES(le.code),
				    le.field_name = 'VP_POWER_WINDOWS'	=>	VP_POWER_WINDOWS(le.code),
				    le.field_name = 'VP_SECURITY_SYSTEM'	=>	VP_SECURITY_SYSTEM(le.code),
				    le.field_name = 'VP_ROOF'	=>	VP_ROOF(le.code),
				    le.field_name = 'VP_OPTIONAL_ROOF1'	=>	VP_OPTIONAL_ROOF1(le.code),
				    le.field_name = 'VP_OPTIONAL_ROOF2'	=>	VP_OPTIONAL_ROOF2(le.code),
				    le.field_name = 'VP_RADIO'	=>	VP_RADIO(le.code),
				    le.field_name = 'VP_OPTIONAL_RADIO1'	=>	VP_OPTIONAL_RADIO1(le.code),
				    le.field_name = 'VP_OPTIONAL_RADIO2'	=>	VP_OPTIONAL_RADIO2(le.code),
				    le.field_name = 'VP_TILT_WHEEL'	=>	VP_TILT_WHEEL(le.code),
				    le.field_name = 'VP_ANTI_LOCK_BRAKES'	=>	VP_ANTI_LOCK_BRAKES(le.code),
				    le.field_name = 'VP_DAYTIME_RUNNING_LIGHTS'	=>	VP_DAYTIME_RUNNING_LIGHTS(le.code),
				    le.field_name = 'VP_FRONT_WHEEL_DRIVE'	=>	VP_FRONT_WHEEL_DRIVE(le.code),
				    le.field_name = 'VP_FOUR_WHEEL_DRIVE'	=>	VP_FOUR_WHEEL_DRIVE(le.code),
				    le.field_name = 'VEHICLE_TYPE' => VEHICLE_TYPE(le.field_name2,le.code),
				    le.field_name = 'HISTORY_FLAG' => HISTORY_FLAG(le.code),
				    le.field_name = 'VP_TRANSMISSION' => VP_TRANSMISSION(le.code),
				    le.field_name = 'FUEL_CODE' => FUEL_CODE(le.code),
				    '');
			
			SELF.code := IF(stringlib.StringCleanSpaces(le.long_desc)=
			                stringlib.StringCleanSpaces(translation),SKIP,le.code);
			SELF := le;
		END;
	

		field_set := ['VP_RESTRAINT',         'VP_AIR_CONDITIONING',   'VP_POWER_STEERING',    
		              'VP_POWER_BRAKES',	   'VP_POWER_WINDOWS',      'VP_SECURITY_SYSTEM',   
				    'VP_ROOF',			   'VP_OPTIONAL_ROOF1',     'VP_OPTIONAL_ROOF2', 
				    'VP_RADIO',		   'VP_OPTIONAL_RADIO1',    'VP_OPTIONAL_RADIO2',   
				    'VP_TILT_WHEEL',	   'VP_ANTI_LOCK_BRAKES',   'VP_DAYTIME_RUNNING_LIGHTS',
				   'VP_FRONT_WHEEL_DRIVE',  'VP_FOUR_WHEEL_DRIVE',   'VEHICLE_TYPE', 
				   'HISTORY_FLAG', 'VP_TRANSMISSION', 'FUEL_CODE'];
	
	p := PROJECT(codes.File_Codes_V3_in(file_name='VEHICLE_REGISTRATION',
	                                    field_name in field_set),trans(LEFT));
	RETURN p;
		
	END;

END;
;