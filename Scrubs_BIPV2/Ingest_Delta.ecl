IMPORT SALT39,STD;
EXPORT Ingest_Delta(DATASET(Ingest_Layout_BIPV2)old_s, DATASET(Ingest_Layout_BIPV2) new_s) := MODULE//Routines to compute the differences between two instances of a file
  SHARED inFieldList := ['source_expanded','source','dt_first_seen','dt_last_seen','dt_vendor_first_reported','dt_vendor_last_reported','rcid','company_bdid','company_name','company_name_type_raw','company_rawaid','company_address_prim_range','company_address_predir','company_address_prim_name','company_address_addr_suffix','company_address_postdir','company_address_unit_desig','company_address_sec_range','company_address_p_city_name','company_address_v_city_name','company_address_st','company_address_zip','company_address_zip4','company_address_cart','company_address_cr_sort_sz','company_address_lot','company_address_lot_order','company_address_dbpc','company_address_chk_digit','company_address_rec_type','company_address_fips_state','company_address_fips_county','company_address_geo_lat','company_address_geo_long','company_address_msa','company_address_geo_blk','company_address_geo_match','company_address_err_stat','company_address_type_raw','company_address_category','company_address_country_code','company_fein','best_fein_indicator','company_phone','phone_type','company_org_structure_raw','company_incorporation_date','company_sic_code1','company_sic_code2','company_sic_code3','company_sic_code4','company_sic_code5','company_naics_code1','company_naics_code2','company_naics_code3','company_naics_code4','company_naics_code5','company_ticker','company_ticker_exchange','company_foreign_domestic','company_url','company_inc_state','company_charter_number','company_filing_date','company_status_date','company_foreign_date','event_filing_date','company_name_status_raw','company_status_raw','dt_first_seen_company_name','dt_last_seen_company_name','dt_first_seen_company_address','dt_last_seen_company_address','vl_id','current','source_record_id','glb','dppa','phone_score','match_company_name','match_branch_city','match_geo_city','duns_number','source_docid','is_contact','dt_first_seen_contact','dt_last_seen_contact','contact_did','contact_name_title','contact_name_fname','contact_name_mname','contact_name_lname','contact_name_name_suffix','contact_name_name_score','contact_type_raw','contact_job_title_raw','contact_ssn','contact_dob','contact_status_raw','contact_email','contact_email_username','contact_email_domain','contact_phone','cid','contact_score','from_hdr','company_department','company_aceaid','company_name_type_derived','company_address_type_derived','company_org_structure_derived','company_name_status_derived','company_status_derived','proxid_status_private','powid_status_private','seleid_status_private','orgid_status_private','ultid_status_private','proxid_status_public','powid_status_public','seleid_status_public','orgid_status_public','ultid_status_public','contact_type_derived','contact_job_title_derived','contact_status_derived','address_type_derived','is_vanity_name_derived'];
  EXPORT Differences := SALT39.mod_Delta.mac_DifferencesByFieldList(old_s, new_s, inFieldList);
  EXPORT DifferenceSummary(BOOLEAN Glob = TRUE) := Ingest_hygiene(old_s).Summary('Old',Glob) + Ingest_hygiene(new_s).Summary('New',Glob) + Ingest_hygiene(PROJECT(Differences(deleted), TRANSFORM(Ingest_Layout_BIPV2, SELF := LEFT.old_rec))).Summary('Deletions',Glob) + Ingest_hygiene(PROJECT(Differences(added), TRANSFORM(Ingest_Layout_BIPV2, SELF := LEFT.new_rec))).Summary('Additions',Glob);
  EXPORT StandardStats(BOOLEAN doHygieneSummaryGlobal = TRUE, BOOLEAN doHygieneSummaryPerSrc = TRUE) := FUNCTION
    myTimeStamp := (UNSIGNED6)SALT39.Fn_Now('YYYYMMDDHHMMSS') : INDEPENDENT;
    hygieneDiffOverall := DifferenceSummary(TRUE);
    hygieneDiffPerSrc := DifferenceSummary(FALSE);
    SALT39.mod_StandardStatsTransforms.mac_hygieneSummaryTransform(Scrubs_BIPV2, Ingest_Fields, 'RECORDOF(hygieneDiffOverall)', TRUE);
    hygieneDiffOverall_Standard := IF(doHygieneSummaryGlobal, NORMALIZE(hygieneDiffOverall, COUNT(inFieldList) * 6, xSummary(LEFT, COUNTER, myTimeStamp, LEFT.txt + '_all', LEFT.txt + '_all')));
    hygieneDiffPerSrc_Standard := IF(doHygieneSummaryPerSrc, NORMALIZE(hygieneDiffPerSrc, COUNT(inFieldList) * 6, xSummary(LEFT, COUNTER, myTimeStamp, LEFT.txt + '_src', LEFT.txt + '_src')));
 
    RETURN hygieneDiffOverall_Standard & hygieneDiffPerSrc_Standard;
  END;
END;
