Generated by SALT V3.7.0
Command line options: -MLocationID_xLink -eC:\Users\wilmotkx\AppData\Local\Temp\TFR8901.tmp 
File being processed :-
OPTIONS:-ma
MODULE:LocationId_xLink
FILENAME:LocationId
// Uncomment up to NINES for internal or external adl
IDFIELD:EXISTS:LocId
IDNAME:LocId
RIDFIELD:rid
RECORDS:1554843014
POPULATION:160000000
PROCESS:LocationID
NINES:3
CONFIG:_CFG
HACK:KEYINFIX
HACK:KEYPREFIX
HACK:KEYSUPERFILE
 
FIELDTYPE:zip5:ALLOW(0123456789):LENGTHS(0,5):ONFAIL(IGNORE)
FIELDTYPE:alpha_st:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ):LENGTHS(0,2):ONFAIL(IGNORE)
FIELDTYPE:DFLT:LEFTTRIM:SPACES( <>{}[]-^=!+&,./)
 
FIELD:prim_range:13,0
FIELD:predir:EDIT1:5,0
// FIELD:prim_name:BAGOFWORDS(MOST):EDIT1:ABBR(FIRST):HYPHEN1:LIKE(DFLT):13,7
FIELD:prim_name:EDIT1:ABBR(FIRST):HYPHEN1:LIKE(DFLT):16,0
FIELD:addr_suffix:EDIT1:4,0
FIELD:postdir:EDIT1:7,0
FIELD:unit_desig:EDIT1:7,0
FIELD:sec_range:HYPHEN1:13,0
FIELD:v_city_name:EDIT1:12,0
FIELD:st:LIKE(alpha_st):5,0
FIELD:zip5:LIKE(zip5):14,0
 
LINKPATH:STATECITY:v_city_name:st:prim_range:prim_name:?:sec_range:+:unit_desig:postdir:addr_suffix:predir
LINKPATH:ZIP:zip5:prim_range:prim_name:?:sec_range:+:unit_desig:postdir:addr_suffix:predir
 
Total available specificity:96
Specificity number that should imply one record specified 27.
Assuming an average of 10 records per cluster
Specificity value at which N^2 joins will be tolerated: 24
Recommended matching threshold 37
Search Threshold set at 19
Use of PERSISTs in code set at:3
Link paths supported :-
UBER Key
v_city_name:st:prim_range:prim_name:?:sec_range:+:unit_desig:postdir:addr_suffix:predirzip5:prim_range:prim_name:?:sec_range:+:unit_desig:postdir:addr_suffix:predir
 
______________________________English Description of External Matching Process___________________________
 
SALT generated external matching is based upon the concept of LinkPaths which correspond to Roxie keys.
 
Each LinkPath consists of three sections :-
  -- Fixed - these fields must match perfectly (byte for byte) for a match to occur
  -- Optional - if present these fields must match; at least using fuzzy search criteria
  -- Extra Credit - if these fields match then points are allocated
Any search, or external matching request will then be analysed to see which fields are present in the query.
Based upon that analysis it is possible to determine which Fixed criteria could possibly match.
All of those linkpaths that could match will then be searched to see if a match exists.
If none of the linkpaths could possibly be satisfied then the UBER key will be used (described later).
Every matching record from every matching linkpath is then scored and then the scores are tallied by LocId.
The distance of the leading scorer from the rest of the possible matches then determines the confidence of the match (if any).
In the following each individual linkpath is described; brief descriptions of field level matching will be given.
More detail regarding the precise matching done on a field by field basis will follow and will be common for all linkpaths that use that field.
 
LinkPath STATECITY:
v_city_name:st:prim_range:prim_name:?:sec_range:+:unit_desig:postdir:addr_suffix:predirIn order for LinkPath STATECITY to be considered for matching the fields v_city_name, st, prim_range and prim_name
must all be present in the query and for a match they must all be completely identical.
In addition for a record to be considered for scoring the field sec_range
must all be identical, null or fuzzily equal.
Additional scoring points will be allocated for any of unit_desig,postdir,addr_suffix,predir which match to any extent.
 
LinkPath ZIP:
zip5:prim_range:prim_name:?:sec_range:+:unit_desig:postdir:addr_suffix:predirIn order for LinkPath ZIP to be considered for matching the fields zip5, prim_range and prim_name
must all be present in the query and for a match they must all be completely identical.
In addition for a record to be considered for scoring the field sec_range
must all be identical, null or fuzzily equal.
Additional scoring points will be allocated for any of unit_desig,postdir,addr_suffix,predir which match to any extent.
 
UBER Key
In order to trigger one of the linkpaths at least one of the following field combinations must exist in the input query:
v_city_name:st:prim_range:prim_namezip5:prim_range:prim_nameif none of these conditions are met then the UBER key is used instead.
The UBER key is an inverted index; it will execute more slowly than the other linkpaths - but is more flexible.
For a record to match the UBER key it is required that every field in the input match the record exactly; but any combination of fields may be present.
 
The detailed scoring for the individual fields is the same from linkpath to linkpath and is as follows:-
prim_range Scoring: Two prim_range fields will be considered to match in optional or extra credit positions if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the prim_range
but should average 13 points.
 
predir Scoring: Two predir fields will be considered to match in optional or extra credit positions if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the predir
and the degree of fuzziness required but should average 5 points.
 
prim_name Scoring: Two prim_name fields will be considered to match in optional or extra credit positions if:
  - they are identical
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the otherand a hypen or space indicates a logical break in the shorter string
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the prim_name
and the degree of fuzziness required but should average 16 points.
 
addr_suffix Scoring: Two addr_suffix fields will be considered to match in optional or extra credit positions if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the addr_suffix
and the degree of fuzziness required but should average 4 points.
 
postdir Scoring: Two postdir fields will be considered to match in optional or extra credit positions if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the postdir
and the degree of fuzziness required but should average 7 points.
 
unit_desig Scoring: Two unit_desig fields will be considered to match in optional or extra credit positions if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the unit_desig
and the degree of fuzziness required but should average 7 points.
 
sec_range Scoring: Two sec_range fields will be considered to match in optional or extra credit positions if:
  - they are identical
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the otherand a hypen or space indicates a logical break in the shorter string
The exact number of points allocated to a match will depend upon the global scarcity of the sec_range
and the degree of fuzziness required but should average 13 points.
 
v_city_name Scoring: Two v_city_name fields will be considered to match in optional or extra credit positions if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the v_city_name
and the degree of fuzziness required but should average 12 points.
 
st Scoring: Two st fields will be considered to match in optional or extra credit positions if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the st
but should average 5 points.
 
zip5 Scoring: Two zip5 fields will be considered to match in optional or extra credit positions if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the zip5
but should average 14 points.
 
 
__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters
 
Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.
 
Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.
 
__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.
 
