import ut,SALT30;
export hygiene(dataset(layout_question) h) := MODULE
//A simple summary record
export Summary(SALT30.Str30Type txt) := FUNCTION
  SummaryLayout := RECORD
    txt;
    NumberOfRecords := COUNT(GROUP);
    populated_QUESTIONSETID_pcnt := AVE(GROUP,IF(h.QUESTIONSETID = (TYPEOF(h.QUESTIONSETID))'',0,100));
    maxlength_QUESTIONSETID := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONSETID)));
    avelength_QUESTIONSETID := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONSETID)),h.QUESTIONSETID<>(typeof(h.QUESTIONSETID))'');
    populated_STRINGCODE_pcnt := AVE(GROUP,IF(h.STRINGCODE = (TYPEOF(h.STRINGCODE))'',0,100));
    maxlength_STRINGCODE := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.STRINGCODE)));
    avelength_STRINGCODE := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.STRINGCODE)),h.STRINGCODE<>(typeof(h.STRINGCODE))'');
    populated_QUESTIONSETTYPEFIELD_pcnt := AVE(GROUP,IF(h.QUESTIONSETTYPEFIELD = (TYPEOF(h.QUESTIONSETTYPEFIELD))'',0,100));
    maxlength_QUESTIONSETTYPEFIELD := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONSETTYPEFIELD)));
    avelength_QUESTIONSETTYPEFIELD := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONSETTYPEFIELD)),h.QUESTIONSETTYPEFIELD<>(typeof(h.QUESTIONSETTYPEFIELD))'');
    populated_CREATIONTIME_pcnt := AVE(GROUP,IF(h.CREATIONTIME = (TYPEOF(h.CREATIONTIME))'',0,100));
    maxlength_CREATIONTIME := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.CREATIONTIME)));
    avelength_CREATIONTIME := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.CREATIONTIME)),h.CREATIONTIME<>(typeof(h.CREATIONTIME))'');
    populated_ACCOUNTNAME_pcnt := AVE(GROUP,IF(h.ACCOUNTNAME = (TYPEOF(h.ACCOUNTNAME))'',0,100));
    maxlength_ACCOUNTNAME := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.ACCOUNTNAME)));
    avelength_ACCOUNTNAME := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.ACCOUNTNAME)),h.ACCOUNTNAME<>(typeof(h.ACCOUNTNAME))'');
    populated_SUBSETNUMBER_pcnt := AVE(GROUP,IF(h.SUBSETNUMBER = (TYPEOF(h.SUBSETNUMBER))'',0,100));
    maxlength_SUBSETNUMBER := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.SUBSETNUMBER)));
    avelength_SUBSETNUMBER := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.SUBSETNUMBER)),h.SUBSETNUMBER<>(typeof(h.SUBSETNUMBER))'');
    populated_TRANSACTIONID_pcnt := AVE(GROUP,IF(h.TRANSACTIONID = (TYPEOF(h.TRANSACTIONID))'',0,100));
    maxlength_TRANSACTIONID := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.TRANSACTIONID)));
    avelength_TRANSACTIONID := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.TRANSACTIONID)),h.TRANSACTIONID<>(typeof(h.TRANSACTIONID))'');
    populated_STARTTIME_pcnt := AVE(GROUP,IF(h.STARTTIME = (TYPEOF(h.STARTTIME))'',0,100));
    maxlength_STARTTIME := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.STARTTIME)));
    avelength_STARTTIME := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.STARTTIME)),h.STARTTIME<>(typeof(h.STARTTIME))'');
    populated_ENDTIME_pcnt := AVE(GROUP,IF(h.ENDTIME = (TYPEOF(h.ENDTIME))'',0,100));
    maxlength_ENDTIME := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.ENDTIME)));
    avelength_ENDTIME := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.ENDTIME)),h.ENDTIME<>(typeof(h.ENDTIME))'');
    populated_GRADE_pcnt := AVE(GROUP,IF(h.GRADE = (TYPEOF(h.GRADE))'',0,100));
    maxlength_GRADE := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.GRADE)));
    avelength_GRADE := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.GRADE)),h.GRADE<>(typeof(h.GRADE))'');
    populated_SUBSETGRADEOUTCOMETYPEFIELD_pcnt := AVE(GROUP,IF(h.SUBSETGRADEOUTCOMETYPEFIELD = (TYPEOF(h.SUBSETGRADEOUTCOMETYPEFIELD))'',0,100));
    maxlength_SUBSETGRADEOUTCOMETYPEFIELD := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.SUBSETGRADEOUTCOMETYPEFIELD)));
    avelength_SUBSETGRADEOUTCOMETYPEFIELD := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.SUBSETGRADEOUTCOMETYPEFIELD)),h.SUBSETGRADEOUTCOMETYPEFIELD<>(typeof(h.SUBSETGRADEOUTCOMETYPEFIELD))'');
    populated_QUESTIONID_pcnt := AVE(GROUP,IF(h.QUESTIONID = (TYPEOF(h.QUESTIONID))'',0,100));
    maxlength_QUESTIONID := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONID)));
    avelength_QUESTIONID := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONID)),h.QUESTIONID<>(typeof(h.QUESTIONID))'');
    populated_QUESTIONTYPEFIELD_pcnt := AVE(GROUP,IF(h.QUESTIONTYPEFIELD = (TYPEOF(h.QUESTIONTYPEFIELD))'',0,100));
    maxlength_QUESTIONTYPEFIELD := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONTYPEFIELD)));
    avelength_QUESTIONTYPEFIELD := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONTYPEFIELD)),h.QUESTIONTYPEFIELD<>(typeof(h.QUESTIONTYPEFIELD))'');
    populated_PRESENTATIONPOSITION_pcnt := AVE(GROUP,IF(h.PRESENTATIONPOSITION = (TYPEOF(h.PRESENTATIONPOSITION))'',0,100));
    maxlength_PRESENTATIONPOSITION := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.PRESENTATIONPOSITION)));
    avelength_PRESENTATIONPOSITION := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.PRESENTATIONPOSITION)),h.PRESENTATIONPOSITION<>(typeof(h.PRESENTATIONPOSITION))'');
    populated_SHUFFLEWEIGHT_pcnt := AVE(GROUP,IF(h.SHUFFLEWEIGHT = (TYPEOF(h.SHUFFLEWEIGHT))'',0,100));
    maxlength_SHUFFLEWEIGHT := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.SHUFFLEWEIGHT)));
    avelength_SHUFFLEWEIGHT := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.SHUFFLEWEIGHT)),h.SHUFFLEWEIGHT<>(typeof(h.SHUFFLEWEIGHT))'');
    populated_GRADEMULTICHOICERULETYPEFIELD_pcnt := AVE(GROUP,IF(h.GRADEMULTICHOICERULETYPEFIELD = (TYPEOF(h.GRADEMULTICHOICERULETYPEFIELD))'',0,100));
    maxlength_GRADEMULTICHOICERULETYPEFIELD := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.GRADEMULTICHOICERULETYPEFIELD)));
    avelength_GRADEMULTICHOICERULETYPEFIELD := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.GRADEMULTICHOICERULETYPEFIELD)),h.GRADEMULTICHOICERULETYPEFIELD<>(typeof(h.GRADEMULTICHOICERULETYPEFIELD))'');
    populated_STARTDATE_pcnt := AVE(GROUP,IF(h.STARTDATE = (TYPEOF(h.STARTDATE))'',0,100));
    maxlength_STARTDATE := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.STARTDATE)));
    avelength_STARTDATE := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.STARTDATE)),h.STARTDATE<>(typeof(h.STARTDATE))'');
    populated_ENDDATE_pcnt := AVE(GROUP,IF(h.ENDDATE = (TYPEOF(h.ENDDATE))'',0,100));
    maxlength_ENDDATE := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.ENDDATE)));
    avelength_ENDDATE := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.ENDDATE)),h.ENDDATE<>(typeof(h.ENDDATE))'');
    populated_QUESTIONGRADEOUTCOMETYPEFIELD_pcnt := AVE(GROUP,IF(h.QUESTIONGRADEOUTCOMETYPEFIELD = (TYPEOF(h.QUESTIONGRADEOUTCOMETYPEFIELD))'',0,100));
    maxlength_QUESTIONGRADEOUTCOMETYPEFIELD := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONGRADEOUTCOMETYPEFIELD)));
    avelength_QUESTIONGRADEOUTCOMETYPEFIELD := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONGRADEOUTCOMETYPEFIELD)),h.QUESTIONGRADEOUTCOMETYPEFIELD<>(typeof(h.QUESTIONGRADEOUTCOMETYPEFIELD))'');
    populated_SELECTEDCOUNT_pcnt := AVE(GROUP,IF(h.SELECTEDCOUNT = (TYPEOF(h.SELECTEDCOUNT))'',0,100));
    maxlength_SELECTEDCOUNT := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.SELECTEDCOUNT)));
    avelength_SELECTEDCOUNT := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.SELECTEDCOUNT)),h.SELECTEDCOUNT<>(typeof(h.SELECTEDCOUNT))'');
    populated_CORRECTCOUNT_pcnt := AVE(GROUP,IF(h.CORRECTCOUNT = (TYPEOF(h.CORRECTCOUNT))'',0,100));
    maxlength_CORRECTCOUNT := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.CORRECTCOUNT)));
    avelength_CORRECTCOUNT := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.CORRECTCOUNT)),h.CORRECTCOUNT<>(typeof(h.CORRECTCOUNT))'');
    populated_WASNONEOFTHEABOVESELECTED_pcnt := AVE(GROUP,IF(h.WASNONEOFTHEABOVESELECTED = (TYPEOF(h.WASNONEOFTHEABOVESELECTED))'',0,100));
    maxlength_WASNONEOFTHEABOVESELECTED := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.WASNONEOFTHEABOVESELECTED)));
    avelength_WASNONEOFTHEABOVESELECTED := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.WASNONEOFTHEABOVESELECTED)),h.WASNONEOFTHEABOVESELECTED<>(typeof(h.WASNONEOFTHEABOVESELECTED))'');
    populated_VERITEID_pcnt := AVE(GROUP,IF(h.VERITEID = (TYPEOF(h.VERITEID))'',0,100));
    maxlength_VERITEID := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.VERITEID)));
    avelength_VERITEID := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.VERITEID)),h.VERITEID<>(typeof(h.VERITEID))'');
    populated_LANGUAGETYPEFIELD_pcnt := AVE(GROUP,IF(h.LANGUAGETYPEFIELD = (TYPEOF(h.LANGUAGETYPEFIELD))'',0,100));
    maxlength_LANGUAGETYPEFIELD := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.LANGUAGETYPEFIELD)));
    avelength_LANGUAGETYPEFIELD := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.LANGUAGETYPEFIELD)),h.LANGUAGETYPEFIELD<>(typeof(h.LANGUAGETYPEFIELD))'');
    populated_QUESTIONTIERTYPEFIELD_pcnt := AVE(GROUP,IF(h.QUESTIONTIERTYPEFIELD = (TYPEOF(h.QUESTIONTIERTYPEFIELD))'',0,100));
    maxlength_QUESTIONTIERTYPEFIELD := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONTIERTYPEFIELD)));
    avelength_QUESTIONTIERTYPEFIELD := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONTIERTYPEFIELD)),h.QUESTIONTIERTYPEFIELD<>(typeof(h.QUESTIONTIERTYPEFIELD))'');
    populated_QUESTIONSTATEMENT_pcnt := AVE(GROUP,IF(h.QUESTIONSTATEMENT = (TYPEOF(h.QUESTIONSTATEMENT))'',0,100));
    maxlength_QUESTIONSTATEMENT := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONSTATEMENT)));
    avelength_QUESTIONSTATEMENT := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.QUESTIONSTATEMENT)),h.QUESTIONSTATEMENT<>(typeof(h.QUESTIONSTATEMENT))'');
    populated_CORRECTANSWER_pcnt := AVE(GROUP,IF(h.CORRECTANSWER = (TYPEOF(h.CORRECTANSWER))'',0,100));
    maxlength_CORRECTANSWER := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.CORRECTANSWER)));
    avelength_CORRECTANSWER := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.CORRECTANSWER)),h.CORRECTANSWER<>(typeof(h.CORRECTANSWER))'');
    populated_SELECTEDANSWER_pcnt := AVE(GROUP,IF(h.SELECTEDANSWER = (TYPEOF(h.SELECTEDANSWER))'',0,100));
    maxlength_SELECTEDANSWER := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.SELECTEDANSWER)));
    avelength_SELECTEDANSWER := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.SELECTEDANSWER)),h.SELECTEDANSWER<>(typeof(h.SELECTEDANSWER))'');
    populated_DATASOURCETYPEFIELD_pcnt := AVE(GROUP,IF(h.DATASOURCETYPEFIELD = (TYPEOF(h.DATASOURCETYPEFIELD))'',0,100));
    maxlength_DATASOURCETYPEFIELD := MAX(GROUP,LENGTH(TRIM((SALT30.StrType)h.DATASOURCETYPEFIELD)));
    avelength_DATASOURCETYPEFIELD := AVE(GROUP,LENGTH(TRIM((SALT30.StrType)h.DATASOURCETYPEFIELD)),h.DATASOURCETYPEFIELD<>(typeof(h.DATASOURCETYPEFIELD))'');
  END;
  RETURN table(h,SummaryLayout);
END;
summary0 := Summary('Summary');
invRec := RECORD
  UNSIGNED  FldNo;
  SALT30.StrType FieldName;
  UNSIGNED NumberOfRecords;
  REAL8  populated_pcnt;
  UNSIGNED  maxlength;
  REAL8  avelength;
END;
invRec invert(summary0 le, INTEGER C) := TRANSFORM
  SELF.FldNo := C;
  SELF.NumberOfRecords := le.NumberOfRecords;
  SELF.FieldName := CHOOSE(C,'QUESTIONSETID','STRINGCODE','QUESTIONSETTYPEFIELD','CREATIONTIME','ACCOUNTNAME','SUBSETNUMBER','TRANSACTIONID','STARTTIME','ENDTIME','GRADE','SUBSETGRADEOUTCOMETYPEFIELD','QUESTIONID','QUESTIONTYPEFIELD','PRESENTATIONPOSITION','SHUFFLEWEIGHT','GRADEMULTICHOICERULETYPEFIELD','STARTDATE','ENDDATE','QUESTIONGRADEOUTCOMETYPEFIELD','SELECTEDCOUNT','CORRECTCOUNT','WASNONEOFTHEABOVESELECTED','VERITEID','LANGUAGETYPEFIELD','QUESTIONTIERTYPEFIELD','QUESTIONSTATEMENT','CORRECTANSWER','SELECTEDANSWER','DATASOURCETYPEFIELD');
  SELF.populated_pcnt := CHOOSE(C,le.populated_QUESTIONSETID_pcnt,le.populated_STRINGCODE_pcnt,le.populated_QUESTIONSETTYPEFIELD_pcnt,le.populated_CREATIONTIME_pcnt,le.populated_ACCOUNTNAME_pcnt,le.populated_SUBSETNUMBER_pcnt,le.populated_TRANSACTIONID_pcnt,le.populated_STARTTIME_pcnt,le.populated_ENDTIME_pcnt,le.populated_GRADE_pcnt,le.populated_SUBSETGRADEOUTCOMETYPEFIELD_pcnt,le.populated_QUESTIONID_pcnt,le.populated_QUESTIONTYPEFIELD_pcnt,le.populated_PRESENTATIONPOSITION_pcnt,le.populated_SHUFFLEWEIGHT_pcnt,le.populated_GRADEMULTICHOICERULETYPEFIELD_pcnt,le.populated_STARTDATE_pcnt,le.populated_ENDDATE_pcnt,le.populated_QUESTIONGRADEOUTCOMETYPEFIELD_pcnt,le.populated_SELECTEDCOUNT_pcnt,le.populated_CORRECTCOUNT_pcnt,le.populated_WASNONEOFTHEABOVESELECTED_pcnt,le.populated_VERITEID_pcnt,le.populated_LANGUAGETYPEFIELD_pcnt,le.populated_QUESTIONTIERTYPEFIELD_pcnt,le.populated_QUESTIONSTATEMENT_pcnt,le.populated_CORRECTANSWER_pcnt,le.populated_SELECTEDANSWER_pcnt,le.populated_DATASOURCETYPEFIELD_pcnt);
  SELF.maxlength := CHOOSE(C,le.maxlength_QUESTIONSETID,le.maxlength_STRINGCODE,le.maxlength_QUESTIONSETTYPEFIELD,le.maxlength_CREATIONTIME,le.maxlength_ACCOUNTNAME,le.maxlength_SUBSETNUMBER,le.maxlength_TRANSACTIONID,le.maxlength_STARTTIME,le.maxlength_ENDTIME,le.maxlength_GRADE,le.maxlength_SUBSETGRADEOUTCOMETYPEFIELD,le.maxlength_QUESTIONID,le.maxlength_QUESTIONTYPEFIELD,le.maxlength_PRESENTATIONPOSITION,le.maxlength_SHUFFLEWEIGHT,le.maxlength_GRADEMULTICHOICERULETYPEFIELD,le.maxlength_STARTDATE,le.maxlength_ENDDATE,le.maxlength_QUESTIONGRADEOUTCOMETYPEFIELD,le.maxlength_SELECTEDCOUNT,le.maxlength_CORRECTCOUNT,le.maxlength_WASNONEOFTHEABOVESELECTED,le.maxlength_VERITEID,le.maxlength_LANGUAGETYPEFIELD,le.maxlength_QUESTIONTIERTYPEFIELD,le.maxlength_QUESTIONSTATEMENT,le.maxlength_CORRECTANSWER,le.maxlength_SELECTEDANSWER,le.maxlength_DATASOURCETYPEFIELD);
  SELF.avelength := CHOOSE(C,le.avelength_QUESTIONSETID,le.avelength_STRINGCODE,le.avelength_QUESTIONSETTYPEFIELD,le.avelength_CREATIONTIME,le.avelength_ACCOUNTNAME,le.avelength_SUBSETNUMBER,le.avelength_TRANSACTIONID,le.avelength_STARTTIME,le.avelength_ENDTIME,le.avelength_GRADE,le.avelength_SUBSETGRADEOUTCOMETYPEFIELD,le.avelength_QUESTIONID,le.avelength_QUESTIONTYPEFIELD,le.avelength_PRESENTATIONPOSITION,le.avelength_SHUFFLEWEIGHT,le.avelength_GRADEMULTICHOICERULETYPEFIELD,le.avelength_STARTDATE,le.avelength_ENDDATE,le.avelength_QUESTIONGRADEOUTCOMETYPEFIELD,le.avelength_SELECTEDCOUNT,le.avelength_CORRECTCOUNT,le.avelength_WASNONEOFTHEABOVESELECTED,le.avelength_VERITEID,le.avelength_LANGUAGETYPEFIELD,le.avelength_QUESTIONTIERTYPEFIELD,le.avelength_QUESTIONSTATEMENT,le.avelength_CORRECTANSWER,le.avelength_SELECTEDANSWER,le.avelength_DATASOURCETYPEFIELD);
END;
EXPORT invSummary := NORMALIZE(summary0, 29, invert(LEFT,COUNTER));
// The character counts
// Move everything into 'inverted list' form so processing can be done 'in library'
SALT30.MAC_Character_Counts.X_Data_Layout Into(h le,unsigned C) := TRANSFORM
  SELF.Fld := TRIM(CHOOSE(C,TRIM((SALT30.StrType)le.QUESTIONSETID),TRIM((SALT30.StrType)le.STRINGCODE),TRIM((SALT30.StrType)le.QUESTIONSETTYPEFIELD),TRIM((SALT30.StrType)le.CREATIONTIME),TRIM((SALT30.StrType)le.ACCOUNTNAME),TRIM((SALT30.StrType)le.SUBSETNUMBER),TRIM((SALT30.StrType)le.TRANSACTIONID),TRIM((SALT30.StrType)le.STARTTIME),TRIM((SALT30.StrType)le.ENDTIME),TRIM((SALT30.StrType)le.GRADE),TRIM((SALT30.StrType)le.SUBSETGRADEOUTCOMETYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONID),TRIM((SALT30.StrType)le.QUESTIONTYPEFIELD),TRIM((SALT30.StrType)le.PRESENTATIONPOSITION),TRIM((SALT30.StrType)le.SHUFFLEWEIGHT),TRIM((SALT30.StrType)le.GRADEMULTICHOICERULETYPEFIELD),TRIM((SALT30.StrType)le.STARTDATE),TRIM((SALT30.StrType)le.ENDDATE),TRIM((SALT30.StrType)le.QUESTIONGRADEOUTCOMETYPEFIELD),TRIM((SALT30.StrType)le.SELECTEDCOUNT),TRIM((SALT30.StrType)le.CORRECTCOUNT),TRIM((SALT30.StrType)le.WASNONEOFTHEABOVESELECTED),TRIM((SALT30.StrType)le.VERITEID),TRIM((SALT30.StrType)le.LANGUAGETYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONTIERTYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONSTATEMENT),TRIM((SALT30.StrType)le.CORRECTANSWER),TRIM((SALT30.StrType)le.SELECTEDANSWER),TRIM((SALT30.StrType)le.DATASOURCETYPEFIELD)));
  SELF.FldNo := C;
END;
SHARED FldInv0 := NORMALIZE(h,29,Into(LEFT,COUNTER));
// Move everything into 'pairs' form so processing can be done 'in library'
SALT30.MAC_Correlate.Data_Layout IntoP(h le,UNSIGNED C) := TRANSFORM
  SELF.FldNo1 := 1 + (C / 29);
  SELF.FldNo2 := 1 + (C % 29);
  SELF.Fld1 := TRIM(CHOOSE(SELF.FldNo1,TRIM((SALT30.StrType)le.QUESTIONSETID),TRIM((SALT30.StrType)le.STRINGCODE),TRIM((SALT30.StrType)le.QUESTIONSETTYPEFIELD),TRIM((SALT30.StrType)le.CREATIONTIME),TRIM((SALT30.StrType)le.ACCOUNTNAME),TRIM((SALT30.StrType)le.SUBSETNUMBER),TRIM((SALT30.StrType)le.TRANSACTIONID),TRIM((SALT30.StrType)le.STARTTIME),TRIM((SALT30.StrType)le.ENDTIME),TRIM((SALT30.StrType)le.GRADE),TRIM((SALT30.StrType)le.SUBSETGRADEOUTCOMETYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONID),TRIM((SALT30.StrType)le.QUESTIONTYPEFIELD),TRIM((SALT30.StrType)le.PRESENTATIONPOSITION),TRIM((SALT30.StrType)le.SHUFFLEWEIGHT),TRIM((SALT30.StrType)le.GRADEMULTICHOICERULETYPEFIELD),TRIM((SALT30.StrType)le.STARTDATE),TRIM((SALT30.StrType)le.ENDDATE),TRIM((SALT30.StrType)le.QUESTIONGRADEOUTCOMETYPEFIELD),TRIM((SALT30.StrType)le.SELECTEDCOUNT),TRIM((SALT30.StrType)le.CORRECTCOUNT),TRIM((SALT30.StrType)le.WASNONEOFTHEABOVESELECTED),TRIM((SALT30.StrType)le.VERITEID),TRIM((SALT30.StrType)le.LANGUAGETYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONTIERTYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONSTATEMENT),TRIM((SALT30.StrType)le.CORRECTANSWER),TRIM((SALT30.StrType)le.SELECTEDANSWER),TRIM((SALT30.StrType)le.DATASOURCETYPEFIELD)));
  SELF.Fld2 := TRIM(CHOOSE(SELF.FldNo2,TRIM((SALT30.StrType)le.QUESTIONSETID),TRIM((SALT30.StrType)le.STRINGCODE),TRIM((SALT30.StrType)le.QUESTIONSETTYPEFIELD),TRIM((SALT30.StrType)le.CREATIONTIME),TRIM((SALT30.StrType)le.ACCOUNTNAME),TRIM((SALT30.StrType)le.SUBSETNUMBER),TRIM((SALT30.StrType)le.TRANSACTIONID),TRIM((SALT30.StrType)le.STARTTIME),TRIM((SALT30.StrType)le.ENDTIME),TRIM((SALT30.StrType)le.GRADE),TRIM((SALT30.StrType)le.SUBSETGRADEOUTCOMETYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONID),TRIM((SALT30.StrType)le.QUESTIONTYPEFIELD),TRIM((SALT30.StrType)le.PRESENTATIONPOSITION),TRIM((SALT30.StrType)le.SHUFFLEWEIGHT),TRIM((SALT30.StrType)le.GRADEMULTICHOICERULETYPEFIELD),TRIM((SALT30.StrType)le.STARTDATE),TRIM((SALT30.StrType)le.ENDDATE),TRIM((SALT30.StrType)le.QUESTIONGRADEOUTCOMETYPEFIELD),TRIM((SALT30.StrType)le.SELECTEDCOUNT),TRIM((SALT30.StrType)le.CORRECTCOUNT),TRIM((SALT30.StrType)le.WASNONEOFTHEABOVESELECTED),TRIM((SALT30.StrType)le.VERITEID),TRIM((SALT30.StrType)le.LANGUAGETYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONTIERTYPEFIELD),TRIM((SALT30.StrType)le.QUESTIONSTATEMENT),TRIM((SALT30.StrType)le.CORRECTANSWER),TRIM((SALT30.StrType)le.SELECTEDANSWER),TRIM((SALT30.StrType)le.DATASOURCETYPEFIELD)));
  END;
SHARED Pairs0 := NORMALIZE(ENTH(h,Config.CorrelateSampleSize),29*29,IntoP(LEFT,COUNTER))(FldNo1<FldNo2);
SHARED FldIds := DATASET([{1,'QUESTIONSETID'}
      ,{2,'STRINGCODE'}
      ,{3,'QUESTIONSETTYPEFIELD'}
      ,{4,'CREATIONTIME'}
      ,{5,'ACCOUNTNAME'}
      ,{6,'SUBSETNUMBER'}
      ,{7,'TRANSACTIONID'}
      ,{8,'STARTTIME'}
      ,{9,'ENDTIME'}
      ,{10,'GRADE'}
      ,{11,'SUBSETGRADEOUTCOMETYPEFIELD'}
      ,{12,'QUESTIONID'}
      ,{13,'QUESTIONTYPEFIELD'}
      ,{14,'PRESENTATIONPOSITION'}
      ,{15,'SHUFFLEWEIGHT'}
      ,{16,'GRADEMULTICHOICERULETYPEFIELD'}
      ,{17,'STARTDATE'}
      ,{18,'ENDDATE'}
      ,{19,'QUESTIONGRADEOUTCOMETYPEFIELD'}
      ,{20,'SELECTEDCOUNT'}
      ,{21,'CORRECTCOUNT'}
      ,{22,'WASNONEOFTHEABOVESELECTED'}
      ,{23,'VERITEID'}
      ,{24,'LANGUAGETYPEFIELD'}
      ,{25,'QUESTIONTIERTYPEFIELD'}
      ,{26,'QUESTIONSTATEMENT'}
      ,{27,'CORRECTANSWER'}
      ,{28,'SELECTEDANSWER'}
      ,{29,'DATASOURCETYPEFIELD'}],SALT30.MAC_Character_Counts.Field_Identification);
EXPORT AllProfiles := SALT30.MAC_Character_Counts.FN_Profile(FldInv0,FldIds);
EXPORT SrcProfiles := SALT30.MAC_Character_Counts.Src_Profile(FldInv0,FldIds);
EXPORT Correlations := SALT30.MAC_Correlate.Fn_Profile(Pairs0,FldIds);
ErrorRecord := RECORD
  UNSIGNED1 FieldNum;
  UNSIGNED1 ErrorNum;
END;
ErrorRecord NoteErrors(h le,UNSIGNED1 c) := TRANSFORM
  SELF.ErrorNum := CHOOSE(c,
    Fields.InValid_QUESTIONSETID((SALT30.StrType)le.QUESTIONSETID),
    Fields.InValid_STRINGCODE((SALT30.StrType)le.STRINGCODE),
    Fields.InValid_QUESTIONSETTYPEFIELD((SALT30.StrType)le.QUESTIONSETTYPEFIELD),
    Fields.InValid_CREATIONTIME((SALT30.StrType)le.CREATIONTIME),
    Fields.InValid_ACCOUNTNAME((SALT30.StrType)le.ACCOUNTNAME),
    Fields.InValid_SUBSETNUMBER((SALT30.StrType)le.SUBSETNUMBER),
    Fields.InValid_TRANSACTIONID((SALT30.StrType)le.TRANSACTIONID),
    Fields.InValid_STARTTIME((SALT30.StrType)le.STARTTIME),
    Fields.InValid_ENDTIME((SALT30.StrType)le.ENDTIME),
    Fields.InValid_GRADE((SALT30.StrType)le.GRADE),
    Fields.InValid_SUBSETGRADEOUTCOMETYPEFIELD((SALT30.StrType)le.SUBSETGRADEOUTCOMETYPEFIELD),
    Fields.InValid_QUESTIONID((SALT30.StrType)le.QUESTIONID),
    Fields.InValid_QUESTIONTYPEFIELD((SALT30.StrType)le.QUESTIONTYPEFIELD),
    Fields.InValid_PRESENTATIONPOSITION((SALT30.StrType)le.PRESENTATIONPOSITION),
    Fields.InValid_SHUFFLEWEIGHT((SALT30.StrType)le.SHUFFLEWEIGHT),
    Fields.InValid_GRADEMULTICHOICERULETYPEFIELD((SALT30.StrType)le.GRADEMULTICHOICERULETYPEFIELD),
    Fields.InValid_STARTDATE((SALT30.StrType)le.STARTDATE),
    Fields.InValid_ENDDATE((SALT30.StrType)le.ENDDATE),
    Fields.InValid_QUESTIONGRADEOUTCOMETYPEFIELD((SALT30.StrType)le.QUESTIONGRADEOUTCOMETYPEFIELD),
    Fields.InValid_SELECTEDCOUNT((SALT30.StrType)le.SELECTEDCOUNT),
    Fields.InValid_CORRECTCOUNT((SALT30.StrType)le.CORRECTCOUNT),
    Fields.InValid_WASNONEOFTHEABOVESELECTED((SALT30.StrType)le.WASNONEOFTHEABOVESELECTED),
    Fields.InValid_VERITEID((SALT30.StrType)le.VERITEID),
    Fields.InValid_LANGUAGETYPEFIELD((SALT30.StrType)le.LANGUAGETYPEFIELD),
    Fields.InValid_QUESTIONTIERTYPEFIELD((SALT30.StrType)le.QUESTIONTIERTYPEFIELD),
    Fields.InValid_QUESTIONSTATEMENT((SALT30.StrType)le.QUESTIONSTATEMENT),
    Fields.InValid_CORRECTANSWER((SALT30.StrType)le.CORRECTANSWER),
    Fields.InValid_SELECTEDANSWER((SALT30.StrType)le.SELECTEDANSWER),
    Fields.InValid_DATASOURCETYPEFIELD((SALT30.StrType)le.DATASOURCETYPEFIELD),
    0);
  SELF.FieldNum := IF(SELF.ErrorNum=0,SKIP,c); // Bail early to avoid creating record
END;
Errors := NORMALIZE(h,29,NoteErrors(LEFT,COUNTER));
ErrorRecordsTotals := RECORD
  Errors.FieldNum;
  Errors.ErrorNum;
  UNSIGNED Cnt := COUNT(GROUP);
END;
TotalErrors := TABLE(Errors,ErrorRecordsTotals,FieldNum,ErrorNum,FEW);
PrettyErrorTotals := RECORD
  FieldNme := Fields.FieldName(TotalErrors.FieldNum);
  FieldType := CHOOSE(TotalErrors.FieldNum,'invalid_num','invalid_num','invalid_alphanum','invalid_date','invalid_alpha','invalid_num','invalid_num','invalid_date','invalid_date','invalid_alphanum','invalid_alphanum','invalid_num','invalid_alphanum','invalid_alphanum','invalid_alphanum','invalid_alphanum','invalid_date','invalid_date','invalid_alphanum','invalid_num','invalid_num','invalid_alphanum','invalid_num','invalid_alphanum','invalid_alphanum','invalid_alpha','invalid_alphanum','invalid_alphanum','invalid_alphanum');
  ErrorMessage := CHOOSE(TotalErrors.FieldNum,Fields.InValidMessage_QUESTIONSETID(TotalErrors.ErrorNum),Fields.InValidMessage_STRINGCODE(TotalErrors.ErrorNum),Fields.InValidMessage_QUESTIONSETTYPEFIELD(TotalErrors.ErrorNum),Fields.InValidMessage_CREATIONTIME(TotalErrors.ErrorNum),Fields.InValidMessage_ACCOUNTNAME(TotalErrors.ErrorNum),Fields.InValidMessage_SUBSETNUMBER(TotalErrors.ErrorNum),Fields.InValidMessage_TRANSACTIONID(TotalErrors.ErrorNum),Fields.InValidMessage_STARTTIME(TotalErrors.ErrorNum),Fields.InValidMessage_ENDTIME(TotalErrors.ErrorNum),Fields.InValidMessage_GRADE(TotalErrors.ErrorNum),Fields.InValidMessage_SUBSETGRADEOUTCOMETYPEFIELD(TotalErrors.ErrorNum),Fields.InValidMessage_QUESTIONID(TotalErrors.ErrorNum),Fields.InValidMessage_QUESTIONTYPEFIELD(TotalErrors.ErrorNum),Fields.InValidMessage_PRESENTATIONPOSITION(TotalErrors.ErrorNum),Fields.InValidMessage_SHUFFLEWEIGHT(TotalErrors.ErrorNum),Fields.InValidMessage_GRADEMULTICHOICERULETYPEFIELD(TotalErrors.ErrorNum),Fields.InValidMessage_STARTDATE(TotalErrors.ErrorNum),Fields.InValidMessage_ENDDATE(TotalErrors.ErrorNum),Fields.InValidMessage_QUESTIONGRADEOUTCOMETYPEFIELD(TotalErrors.ErrorNum),Fields.InValidMessage_SELECTEDCOUNT(TotalErrors.ErrorNum),Fields.InValidMessage_CORRECTCOUNT(TotalErrors.ErrorNum),Fields.InValidMessage_WASNONEOFTHEABOVESELECTED(TotalErrors.ErrorNum),Fields.InValidMessage_VERITEID(TotalErrors.ErrorNum),Fields.InValidMessage_LANGUAGETYPEFIELD(TotalErrors.ErrorNum),Fields.InValidMessage_QUESTIONTIERTYPEFIELD(TotalErrors.ErrorNum),Fields.InValidMessage_QUESTIONSTATEMENT(TotalErrors.ErrorNum),Fields.InValidMessage_CORRECTANSWER(TotalErrors.ErrorNum),Fields.InValidMessage_SELECTEDANSWER(TotalErrors.ErrorNum),Fields.InValidMessage_DATASOURCETYPEFIELD(TotalErrors.ErrorNum));
  TotalErrors.Cnt;
END;
ValErr := TABLE(TotalErrors,PrettyErrorTotals);
EXPORT ValidityErrors := ValErr;
END;
