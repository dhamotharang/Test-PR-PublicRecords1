import mdr;
export Constants := MODULE

	EXPORT Healthcare_product_id := 16;
	EXPORT Enclarity_sub_product_id := 160001;
	EXPORT MedAI__sub_product_id := 160002;
	EXPORT Healthcare_Portal_sub_product_id := 160004;
	EXPORT HMS_sub_product_id := 160005;	
	EXPORT mprd_Keys_useProd := true;
	EXPORT BEST_ID := 1;
	EXPORT IDS_PER_DID := 150;
	EXPORT ProductRules_Accurint := 'ACCURINT';
	EXPORT ProductRules_ProviderPoint := 'PROVIDERPOINT';
	EXPORT ProductRules_SelectFile := 'SELECTFILE';
	EXPORT ProductRules_ClaimsCleanse := 'CLAIMSCLEANSE';
	EXPORT ProductRules_DES := 'DES';
	EXPORT ProductRules_MasterFile := 'MASTERFILE';
	Export IndvDeepDiveServiceName := 'Healthcare_SoapServices.IndividualPublicRecordsSearch';
	Export BusDeepDiveServiceName := 'Healthcare_SoapServices.FacilityPublicRecordsSearch';
	EXPORT MAX_RECS_ON_JOIN := 1000;
	EXPORT MAX_TAXID_RECS := 25;
	EXPORT MAX_UPIN_RECS := 10;
	EXPORT MAX_NPI_RECS := 10;
	EXPORT MAX_DEA_RECS := 500;
	EXPORT MAX_DID_RECS := 500;
	EXPORT MAX_NAMEONLY_AUTOKEY_SEARCH_RECS := 50;
	EXPORT MAX_AUTOKEY_SEARCH_RECS := 200;
	EXPORT MAX_SEARCH_RECS := 1000;
	EXPORT MAX_SEARCH_RESULTS := 100;
	EXPORT MAX_RESULTS_BEFORE_PRUNE := 200;
	EXPORT DID_SCORE_THRESHOLD := 10;
	EXPORT HEADER_LOW_RECORD_LIMIT := 10;
	EXPORT HEADER_MEDIUM_RECORD_LIMIT := 50;
	EXPORT HEADER_HIGH_RECORD_LIMIT := 100;
	EXPORT HEADER_ALL_RECORD_LIMIT := 200;
	EXPORT HEADER_BUS_QUICKHIT_RECORD_LIMIT := 3;
	EXPORT HEADER_BUS_LOW_RECORD_LIMIT := 10;
	EXPORT HEADER_BUS_MEDIUM_RECORD_LIMIT := 15;
	EXPORT HEADER_BUS_HIGH_RECORD_LIMIT := 25;
	EXPORT HEADER_BUS_ALL_RECORD_LIMIT := 50;
	EXPORT HEADER_SCORE_THRESHOLD_LOW := 12;
	EXPORT HEADER_SCORE_THRESHOLD := 17;
	EXPORT HEADER_SCORE_THRESHOLD_HIGH := 20;
	EXPORT HEADER_SCORE_NAME_ADDR_ONLY_THRESHOLD := 17;
	EXPORT HEADER_SCORE_LIC_ONLY_THRESHOLD := 1;
	EXPORT HEADER_CLOSE_MATCH_SCORE := 5;
	EXPORT HEADER_BUS_SCORE_THRESHOLD := 15;
	EXPORT HEADER_BUS_SCORE_CNAME_ADDR_ONLY_THRESHOLD := 10;
	EXPORT HEADER_BUS_SCORE_LIC_ONLY_THRESHOLD := 1;
	EXPORT HEADER_BUS_CLOSE_MATCH_SCORE := 5;
	EXPORT integer2 USER_NOT_SUPPLIED := 0;
	EXPORT integer2 USER_SUPPLIED_NOMATCH := 1;
	EXPORT integer2 USER_SUPPLIED_MATCH := 2;
	EXPORT HEADER_DATA_GOOD_MATCH := [USER_NOT_SUPPLIED,USER_SUPPLIED_MATCH];
	EXPORT MAX_BUSINESSROLLUP_RECS := 10;
	Export MAX_INGENIX_HISTORY := 3;//This is in Months
	Export MAX_AMS_HISTORY := 3;//This is in Months
	Export MAX_GROUP_AFFILIATIONS := 20;
	Export MAX_HOSPITAL_AFFILIATIONS := 20;
	Export ADDR_SEQ_ENCLARITY := 1;
	Export ADDR_SEQ_AMS := 5;
	Export ADDR_SEQ_NPPES := 10;
	Export ADDR_SEQ_NCPDP := 15;
	Export ADDR_SEQ_DEA := 20;
	Export ADDR_SEQ_CLIA := 25;
	Export ADDR_SEQ_PROFLIC := 30;
	Export ADDR_SEQ_DEEPDIVE := 40;
	Export DEFAULT_BESTSCORE := 99;
	Export DEEPDIVE_PENALTY_MULTIPLIER := 1.5;
	Export ZIP_RADIUS := 10;
	
	Export PROF_LIC_CODESV3_FILENAME := 'HEALTHCARE_PROF_LIC';
	Export PROF_LIC_CODESV3_FIELDNAME := 'ACTIVE_STATE';
	Export CLIA_CODESV3_FILENAME := 'CLIA_LAB_TYPE';
	Export CLIA_CODESV3_FIELDNAME := 'TERMINATION_CODE';
	
	Export ONE_STEP_PASS_GOOD_CONFIG := 'VALID';
	Export ONE_STEP_PASS_BAD_CONFIG := 'INVALID';
//RoyaltySources
	Export Src_DefinitiveHealthcare := 'ABC';//unknown value
//RoyaltySources
	Export SRC_ING := 'I';//Deprecate
	Export SRC_AMS := MDR.SourceTools.src_AMS;//'SJ';
	Export SRC_ABMS := MDR.SourceTools.src_ABMS;//'0Q';
	Export SRC_SANC := 'S';
	Export SRC_GSA_SANC := 'G';
	Export SRC_DEA := MDR.SourceTools.src_DEA;//'DA';
	Export SRC_NPPES := MDR.SourceTools.src_NPPES;//'NP';
	Export SRC_PROFLIC := MDR.SourceTools.src_Professional_License;//'PL';
	Export SRC_SELECTFILE := MDR.SourceTools.src_Enclarity;//'64';
	Export SRC_MPRD := MDR.SourceTools.src_Enclarity;//'64';
	// Export SRC_MPRD := MDR.SourceTools.src_MPRD_Individual;//'QN';
	Export SRC_CLIA := MDR.SourceTools.src_CLIA;//'QR'	
	Export SRC_NCPDP := MDR.SourceTools.src_NCPDP;//'J2';
	Export SRC_HEADER := 'H';
	Export SRC_BOCA_PERSON_HEADER := 'Z';
	Export SRC_BOCA_BUS_HEADER := 'Y';
	//Header Best Flags
	Export HDR_OWNED := 'O';//Owned by Cluster
	Export HDR_GOOD := 'G';//Good matches other values within cluster
	Export HDR_FUZZY := 'F';//Close match other other values in the cluster
	Export HDR_BAD := 'B';//Bad, probably data entry error
	Export HDR_MISSING := 'M';//Value does not exist in record
	
	Export BUS_NAME_MATCH_THRESHOLD := 30;
	Export BUS_NAME_BIPMATCH_THRESHOLD := 60;
	Export BUS_NAME_BIPMATCH_ADDR_THRESHOLD := 80;
	Export BUS_NAME_BIP_MAX_RECS_THRESHOLD := 150;
	Export BUS_NAME_AKA_MATCH_THRESHOLD := 80;
	// name Score Thresholds
	Export NAME_SCORE_STRONG_MATCH_THRESHOLD := 70;
	Export NAME_SCORE_WEAK_MATCH_THRESHOLD := 50;

	Export DERIVED_MEDSCHOOL_THRESHOLD := 70;
	Export Augmented_year_of_Birth:=98304; 
	//NPI Thresholds Could be Redundant to those already defined.
	Export NPI_COMPANY_HIGHSCORE_THRESHOLD :=100;
	Export NPI_COMPANY_SCORE_THRESHOLD :=75;
	Export NPI_COMPANY_LOWSCORE_THRESHOLD :=0;
 	Export COMPANY_SCORE_THRESHOLD := 80;
	Export NPI_NAME_THRESHOLD := 4;  //Strength Strong 
	Export NPI_FAC_SCORE_THRESHOLD := 80;  // Get these values from Byron
	Export NPI_IDV_SCORE_THRESHOLD := 80;  // Get these values from Byron some may go away (redundant)
	
	// correction candidate thresholds
	Export HIGH_CORRECTION_CANDIDATE_THRESHOLD := 93;
	Export MED_CORRECTION_CANDIDATE_THRESHOLD := 89;
	Export LOW_CORRECTION_CANDIDATE_THRESHOLD := 81;

	//Runtime Configuration parameters
	Export CFG_CustomerID := '';	
	Export CFG_penalty_threshold := 10;	
	Export CFG_maxResults := 250;	
	Export CFG_False := false;
	Export CFG_True := true;
	Export CFG_DRM := '0000000000000000000000000000000000000000';
	Export CFG_DPM := '0000000000000000000000000000000000000000';
	Export CFG_LICENSE_VERIFICATION_THRESHOLD := 75;
	Export CFG_LICENSE_GRACE_DAYS := 65;
	Export CFG_CLIA_GRACE_DAYS := 120;
	Export CFG_DEA_GRACE_DAYS := 90;
	Export CFG_NPI_GRACE_DAYS := 30;
	Export CFG_COR_ASSESSMENT_LVL := 'L';
	Export CFG_COR_CANDIDATE_LVL := 'OV';
	Export CFG_COR_UNDELIVERABLE_LVL := 'O';
	Export CFG_COR_BADPHONE_LVL := 'P';
	
//Configurations values for Address confidence
	Export indvPhoneVerifiedStale := 8;
	Export busPhoneVerifiedStale := 18;
	Export claimsVerifiedStale := 2;
	Export faxVerifiedStale := 12;
	Export faxHighVerified := 8;
	Export camVerifiedStale := 6;
	Export phoneVerifiedClaimsVerified := 97;
	Export phoneVerified := 95;
	Export highConfVerified := 90;
	Export otherRecord4Sources := 81;
	Export otherRecord3Sources := 78;
	Export otherRecord2Sources := 71;
	Export otherRecord1Sources := 54;
	Export claimsVerified := 53;
	Export deliverableAddr := 20;
	Export inactive := 8;
	Export undeliverableAddr := 0;
// License constants
	//Common Stat Fields
	export stat_Invalid :=     1;   	// was entered but did not meet standard , eg. NPI BadCheckSum digit
	export stat_Missing :=     2;     // was configured but input was blank
	export stat_BadFormat :=   4;     // value provided was invalid, details may be provided in higher order bits
	Export notConfigured := 1;//flag 1
	Export configuredButBlank := 2;//flag 2
	Export valueInvalid := 4;//flag 3
	Export valueTooLong := 8;//flag 4
	Export valueTooLongSetToNull := 16;//flag 5
	Export common_valueNotValidPackedValue := 32;//flag 6
	Export phone_inactive := 32;//flag 6
	Export common_valueNotValidZonedDecimalValue := 64;//flag 7
	Export referencePracticePhone := 64;//flag 7
	Export common_valueNotValidSign := 128;//flag 8
	Export referenceBillPhone := 128;//flag 8
	Export common_valueNotValidDate := 256;//flag 9
	Export phone_phoneVerified := 256;//flag 9
	Export nonNumeric := 512;//flag 10
	Export common_inputTransposed := 512;//flag 10
	Export invalidForName := 512;//flag 10
	Export phone_valueNotValidPackedValue := 512;//flag 10
	Export significantStandardizationOccurred := 512;//flag 10
	Export stateNotConfigured := 512;//flag 10
	Export common_phoneVerified := 512;//flag 10
	Export invalidMonth := 1024;//flag 11
	Export invalidArea := 1024;//flag 11
	Export nonMedical := 1024;//flag 11
	Export phone_valueNotValidZonedDecimalValue := 1024;//flag 11
	Export addressUndeliverable := 1024;//flag 11
	Export typeNotConfigured := 1024;//flag 11
	Export common_deactivatedNPI := 1024;//flag 11
	Export yrBefore1900 := 2048;//flag 12
	Export invalidGroup := 2048;//flag 12
	Export badCheckSum := 2048;//flag 12
	Export phone_valueNotValidSign := 2048;//flag 12
	Export pobox := 2048;//flag 12
	Export didNotContainValidState := 2048;//flag 12
	Export future := 4096;//flag 13
	Export invalidSerial := 4096;//flag 13
	Export retired := 4096;//flag 13
	Export phone_valueNotValidDate := 4096;//flag 13
	Export npsr := 4096;//flag 13
	Export invalidDay := 8192;//flag 14
	Export invalidAreaCode := 8192;//flag 14
	Export address_inputTransposed := 8192;//flag 14
	Export invalidYr := 16384;//flag 15
	Export areaCodeNotSeparatelyConfigured := 16384;//flag 15
	Export prison := 16384;//flag 15
	Export missingMonth := 32768;//flag 16
	Export phoneVerifiedBasedOnAddressOnly := 32768;//flag 16
	Export address_inactive := 32768;//flag 16
	Export missingDay := 65536;//flag 17
	Export badPhoneFromPhoneVerification := 65536;//flag 17
	Export referencePracticeAddress := 65536;//flag 17
	Export common_highConfidenceVerified := 131072;//flag 18
	Export referenceBillAddress := 131072;//flag 18
	Export common_verifiedSecureFax := 262144;//flag 19
	Export address_phoneVerified := 262144;//flag 19
	Export isHospital := 524288;//flag 20
	Export isResidential := 1048576;//flag 21
	Export claimVerified := 2097152;//flag 22
	Export phoneVerifiedAddressBasedOnAddressOnly := 4194304;//flag 23
	Export phoneVerifiedSecRange := 8388608;//flag 24
	Export address_highConfidenceVerified := 16777216;//flag 25
	Export address_verifiedSecureFax := 33554432;//flag 26
	//Sanction
	Export stateRestriction := 1;//flag 1
	Export oigRestriction := 2;//flag 2
	Export opmRestriction := 4;//flag 3
	Export opmOigSanction := 16;//flag 5
	Export practiceStateSanction := 32;//flag 6
	Export anyStateSanction := 64;//flag 7
	//Provider
	Export NoHit := 1;//flag 1
	Export RetiredR4 := 2;//flag 2
	Export DeceasedU1 := 4;//flag 3
	Export ConfirmedDeceased := 8;//flag 4
	Export InactiveRetiredInPracticeState := 16;//flag 5
	Export ExpiredLicInPracticeState := 32;//flag 6
	Export DeaRetired := 64;//flag 7
	Export NoActiveLicInPracticeState := 128;//flag 8
	Export RestrictedLicInPracticeState := 256;//flag 9
	Export SuspendedLicInPracticeState := 512;//flag 10
	Export DeceasedU := 1024;//flag 11
	Export RetiredR2 := 2048;//flag 12
	Export RetiredR1 := 4096;//flag 13
	//Clia
	Export numberMismatchedState := 512;//flag 10
	Export invalidEffectiveDate := 1024;//flag 11
	Export invalidEndDate := 2048;//flag 12
	//Billing
	Export tinOnInput := 1;//flag 1
	Export pracCompanyNameSwapBillCompanyNameHighConf := 2;//flag 2
	Export pracAddressSwapBillAddressHighConf := 4;//flag 3
	Export tinMatchedHighConf := 8;//flag 4
	Export billAddressMatchedHighConf := 16;//flag 5
	Export billCompanyNameMatchedHighConf := 32;//flag 6
	Export pracAddressMatchedHighConf := 64;//flag 7
	Export pracCompanyNameMatchedHighConf := 128;//flag 8
	Export pracCompanyNameSwapBillCompanyNameLowConf := 256;//flag 9
	Export pracAddressSwapBillAddressLowConf := 512;//flag 10
	Export tinMatchedLowConf := 1024;//flag 11
	Export billAddressMatchedLowConf := 2048;//flag 12
	Export billCompanyNameMatchedLowConf := 4096;//flag 13
	Export pracAddressMatchedLowConf := 8192;//flag 14
	Export pracCompanyNameMatchedLowConf := 16384;//flag 15
	//NPI
	Export npi_valueNotValidDate := 8;//flag 4
	Export matchedType1Record := 16;//flag 5
	Export matchedType2Record := 32;//flag 6
	Export soleProprietor := 64;//flag 7
	Export matchedName := 128;//flag 8
	Export matchedPracCompany := 256;//flag 9
	Export matchedBillCompany := 512;//flag 10
	Export matchedPracAddress := 1024;//flag 11
	Export matchedBillAddress := 2048;//flag 12
	Export matchedNPPESPhysicianName := 4096;//flag 13
	Export matchedNPPESOtherPhysicianName := 8192;//flag 14
	Export matchedNPPESAuthorityName := 16384;//flag 15
	Export matchedNPPESLBNOrgName := 32768;//flag 16
	Export matchedNPPESOtherOrgName := 65536;//flag 17
	Export matchedNPPESParentOrgName := 131072;//flag 18
	Export matchedNPPESPracAddress := 262144;//flag 19
	Export matchedNPPESMailingAddress := 524288;//flag 20
	Export npi_deactivatedNPI := 1048576;//flag 21
	//Death
	Export matchedSSNDeathMaster := 1;//flag 1
	Export matchedTINDeathMaster := 2;//flag 2
	Export harvestedTinChoicePoint := 4;//flag 3
	Export harvestedTinClaims := 8;//flag 4
	Export harvestedTinNPIXrefDeathMaster := 16;//flag 5
	Export harvestedTinOtherSourceXrefDeathMaster := 32;//flag 6
	Export foundRecTBascDeceased := 64;//flag 7
	Export foundLicRecStateFlaggedDeceased := 128;//flag 8
	Export foundLicRecStateFlaggedDeceasedPracState := 256;//flag 9
	Export foundCallRecDeceased := 512;//flag 10
	Export foundChoicePointRecDeceased := 1024;//flag 11
	Export harvestedSSNOtherSourceXrefDeathMaster := 2048;//flag 12
	Export foundDeceasedFaxRecord := 4096;//flag 13
	//Claims
	Export missing := 2;//flag 2
	Export badFormat := 4;//flag 3
	//PrimaryLocation
	Export blank := 2;//flag 2
	Export invalid := 4;//flag 3
	//VerifiedHighSource
	Export freshVSF := 1;//flag 1
	Export roster := 2;//flag 2
	Export activeDentalNPIDEA := 4;//flag 3
	Export freshCAMActiveNPIDEA := 8;//flag 4
	Export freshCAMStalePhone := 16;//flag 5
	Export freshCAMStaleVSF := 32;//flag 6
	//Language Specific
	Export lang_arabic := 1;//flag 1
	Export lang_chinese := 2;//flag 2
	Export lang_english := 4;//flag 3
	Export lang_french := 8;//flag 4
	Export lang_german := 16;//flag 5
	Export lang_italian := 32;//flag 6
	Export lang_korean := 64;//flag 7
	Export lang_portuguese := 128;//flag 8
	Export lang_polish := 256;//flag 9
	Export lang_russian := 512;//flag 10
	Export lang_spanish := 1024;//flag 11
	Export lang_tagalog := 2048;//flag 12
	Export lang_vietnamese := 4096;//flag 13
	//Currently unused
	Export decode_27 := 67108864;//flag 27
	Export decode_28 := 134217728;//flag 28
	Export decode_29 := 268435456;//flag 29
	Export decode_30 := 536870912;//flag 30
	Export decode_31 := 1073741824;//flag 31
	Export decode_32 := 2147483648;//flag 32
	// Stat Constants
	// Stat Constants
	export stat_Core_NotConfigured    			:=     1;   // was not configured - really N/A
	export stat_Core_Invalid          			:=     1;   // was configured but input was blank
	export stat_Core_Missing          			:=     2;   // was configured but input was blank
	export stat_Core_BadFormat       			:=     4;   // value provided was invalid, details may be provided in higher order bits
	export stat_Core_Truncated     	 			:=     8;   // value too long for type
	export stat_Core_TruncatedNull	   		 	:=    16;   // value too long for type, we set it to NULL
	export stat_Base_InvalidPacked					:=    32;   // value was not a valid packed value
	export stat_Base_InvalidZoned   				:=    64;   // value was not a valid zoned decimal value
	export stat_Base_InvalidSign    				:=   128;   // value did not have a valid sign  (for packed and zoned?)
	export stat_Base_InvalidDate    				:=   256;   // value did not contain a valid date
  export stat_Basic_PhoneVerified	  		:=   512;   // value was phoneVerified
	export stat_Derived_Typo			 			   	:=     1;   
	export stat_Derived_Prison  		      	:=     2;   
	export stat_Derived_MultiAssoc   		 	:=     4;   
	export stat_Derived_NotInRef			    	:=     8;   // input value does not match to any matched provider reference record   
	export stat_Derived_Inactive 			   	:=    16;   // value was represented as being inactive from reference record   
	export stat_Derived_PhoneNotAssocWAddr :=    32;   // input phone was not associated with input address   
	export stat_Derived_NoAssoc    				:=    64;   // suppossed unique value was associated with another provider   
	export stat_Derived_NoAnalysis	    		:=   128;   // no analysis done   
	export stat_SSN_NonNumeric			    		:=   512;   // non numeric value    
	export stat_SSN_InvalidArea		    		:=  1024;   // invalid area    
	export stat_SSN_InvalidGroup		    		:=  2048;   // invalid group    
	export stat_SSN_InvalidSerial	    		:=  4096;   // invalid serial    
	export stat_DOB_NonNumeric			    		:=   512;   // non numeric value
	export stat_DOB_InvalidMonth			   		:=  1024;   // invalid birth month
	export stat_DOB_YearBefore1900		   		:=  2048;   // year is before 1900
	export stat_DOB_Future			    				:=  4096;   // date is in the future
	export stat_DOB_InvalidDayOfMonth			:=  8192;   // day is not valid for the month
	export stat_Date_NonNumeric			   		:=   512;   // non numeric value    
	export stat_Date_InvalidMonth		   		:=  1024;   // invalid birth month
	export stat_Date_YearBefore1900	   		:=  2048;   // year is before 1900
	export stat_Date_Future			    			:=  4096;   // date is in the future
	export stat_Date_InvalidDayOfMonth			:=  8192;   // day is not valid for the month
	export stat_Date_InvalidYear						:= 16384;   // year is not valid
	export stat_Date_MissingMonth					:= 32768;   // month not specified
	export stat_Date_MissingDay						:= 65536;   // day not specified
	export stat_DEA_DeaInvalidForName			:= 	 512;   // DEA is not valid for the given name
	export stat_DEA_DeaNonMedical					:=  1024;   // non medical DEA
	export stat_DEA_BadChecksum						:=  2048;   // checksum error
	export stat_DEA_Retired								:=  4096;   // retired DEA
	export stat_DEA_Invalid								:=  262144;   // Invalid Dea checkdigit or structure
	export stat_Phone_Inactive							:= 	  32;   // 
	export stat_Phone_RefPracPhone					:= 	  64;   // 
	export stat_Phone_RefBillPhone					:= 	 128;   // 
	export stat_Phone_PhoneVerified				:= 	 256;   // 
	export stat_Phone_InvalidPacked				:= 	 512;   // value was not a valid packed value
	export stat_Phone_InvalidZoned					:= 	1024;   // value was not a valid zoned decimal value
	export stat_Phone_InvalidSign					:= 	2048;   // value did not have a valid sign  (for packed and zoned?)
	export stat_Phone_InvalidDate					:= 	4096;   // value did not contain a valid date
	export stat_Phone_InvalidAreaCode			:= 	8192;   // 
	export stat_Phone_AreaCodeNotConfigured:= 16384;   // 
	export stat_Phone_PhoneVerifiedAddrOnly:= 32768;   // 
	export stat_Phone_BadNumber						:= 65536;   // Phone is not a medical phone number
	export stat_Phone_HighVerified					:=131072;   // 
	export stat_Phone_FaxVerified					:=262144;   // 
	export stat_Company_Transposed					:=   512;   // input data was transposed with other data (name)
	export stat_Company_HospitalMaster			:=  1024;   // data came from hospital master
	export stat_Name_Transposed						:=   512;   // input data was transposed with other data (name)
	export stat_Addr_SigStd								:=   512;   // significant standardization occurred
	export stat_Addr_NotDeliverable				:=  1024;   // input address undeliverable even after standardization
	export stat_Addr_Pobox									:=  2048;   // address is a pobox
	export stat_Addr_Npsr									:=  4096;   // address has non-postal secondary range
	export stat_Addr_Transposed						:=  8192;   // input data was transposed with other data (name/company)
	export stat_Addr_Prison								:= 16384;   // address is a prison
	export stat_Addr_Inactive							:= 32768;   // address is inactive
	export stat_Addr_RefPracAddr						:= 65536;   // Practice address
	export stat_Addr_RefBillAddr						:=131072;   // Billing address
	export stat_Addr_PhoneVerified					:=262144;   // provider and address matched a phone verified source
	export stat_Addr_RefHospAddr						:=524288;   // hospital address
	export stat_Addr_Residential						:=1048576;  // residential address
	export stat_Addr_ClaimVerified					:=2097152;  // matched to a claim source
	export stat_Addr_PhoneVerifiedAddrOnly	:=4194304;  // only the address matched a phone verified source
	export stat_Addr_PhoneVerifiedSecondaryRange	:=8388608;// The secondary range matched a phone verified source
	export stat_Addr_HighVerified					:=16777216; // High verified
	export stat_Addr_FaxVerified						:=33554432; // Fax verified
	export stat_Addr_PrimaryLocation				:=67108864; // Address is the primary location for a provider
	export stat_Lic_StateNotConfigured			:=   512;   // 
	export stat_Lic_TypeNotConfigured			:=  1024;   // 
	export stat_Lic_StateInvalid						:=  2048;   // 
	export stat_Bill_TinNotMissing  	      :=     1;   // tin on input record
	export stat_Bill_AuthCompanySwap 	    :=     2;   // the prac company name was swapped for the bill company name on authority source
	export stat_Bill_AuthAddressSwap   	  :=     4;   // the prac address was swapped for the bill address on authority source
	export stat_Bill_AuthTinMatch        	:=     8;   // tin matched to authority source
	export stat_Bill_AuthBillAddressMatch 	:=    16;   // bill address matched to authority source
	export stat_Bill_AuthBillCompanyMatch 	:=    32;   // bill company name matched to authority source
	export stat_Bill_AuthPracAddressMatch 	:=    64;   // prac address matched to authority source
	export stat_Bill_AuthPracNameMatch    	:=   128;   // prac name matched to authority source
	export stat_Bill_CompanySwap          	:=   256;   // the prac company name was swapped for the bill company name
	export stat_Bill_AddressSwap          	:=   512;   // the prac address was swapped for the bill address
	export stat_Bill_TinMatch             	:=  1024;   // tin matched
	export stat_Bill_BillAddressMatch     	:=  2048;   // bill address matched
	export stat_Bill_BillCompanyMatch     	:=  4096;   // bill company name matched to authority source
	export stat_Bill_PracAddressMatch     	:=  8192;   // prac address matched
	export stat_Bill_PracNameMatch        	:= 16384;   // prac name matched
	export stat_NPI_PhoneVerified        	:=   512;
	export stat_NPI_Deactivated          	:=  1024;
	export stat_Taxonomy_BadTaxonomy  			:=  1024;
	export stat_Deceased_InputSsnToBascSsn :=     1;
	export stat_Deceased_InputTinToBascSsn :=     2;
	export stat_Deceased_ChoicePointToBascSsn:=   4;
	export stat_Deceased_ClaimToBascSsn    :=     8;
	export stat_Deceased_NpiTinXrefToBascSsn:=   16;
	export stat_Deceased_OtherToBascSsn    :=    32;
	export stat_Deceased_BascDeceased      :=    64;
	export stat_Deceased_LicenseDeceasedCode:=   128;
	export stat_Deceased_LicenseDeceasedCodeInInputState:=256;
	export stat_Deceased_InactDeceasedCode :=    512;
	export stat_Deceased_ChoicePointDeathFlag:= 1024;
	export stat_Deceased_BridgedToDeathMasterViaSSN:=2048;
	export stat_Deceased_DeceasedCodeViaVSF:=   4096;
	export stat_CLIA_NUMBER_MISMATCHED_STATE:=   512;
	export stat_CLIA_EFFECTIVE_DATE_INVALID:=   1024;
	export stat_CLIA_END_DATE_INVALID      :=   2048;
	// Codes for Provider
	export ustat_Provider_NotFound	    		:=     1;   // 
	export ustat_Provider_Retired_R		 			:=     2;   //  But Low Confidence Retired is added to provider_ustat for unreported to client R(retired license) condition
	export ustat_Provider_Retired_R4		 		:=     2;   //  R4 (aka R)  is back, they want the ustat
	export ustat_Provider_Rpt_Deceased_U1		:=  	 4;   // 
	export ustat_Provider_Confirm_Deceased	:=  	 8;   // 
	export ustat_Provider_InactLicPracState	:=    16;   // 
	export ustat_Provider_ExpLicPracState		:=    32;		// 
	export ustat_Provider_DEARetired				:=    64;		// 
	export ustat_Provider_NoActLicPracState	:=   128;		// 
	export ustat_Provider_RestrictLicPracState:= 256;		// 
	export ustat_Provider_SuspendLicPracState:=  512;		// 
	export ustat_Provider_Rpt_Deceased_U		:=  1024;		// 
	export ustat_Provider_Retired_R2		 		:=  2048;   // 
	export ustat_Provider_Retired_R1		 		:=  4096;   // 
	export cic_Provider_Retired_R4		 			:=  'R4'; // 
	export cic_Provider_Rpt_Deceased_U1			:=  'U1'; // 
	export cic_Provider_Confirm_Deceased		:=  'D'; // 
	export cic_Provider_Rpt_Deceased_U			:=  'U';	// 
	export cic_Provider_Retired_R2		 			:=  'R2'; // 
	export cic_Provider_Retired_R1		 			:=  'R1'; // 
	export cic_Provider_Active				 			:=  'N'; // 
	// Codes for Dos
	export ustat_Dos_NotVerified	    			:= 255;   //    !255
	export ustat_Dos_Missing	    					:=   1;   //
	export ustat_Dos_DeaRetiredPrior	    	:=   4;   //
	export ustat_Dos_DeaExpiredPrior	    	:=   8;   // 
	export ustat_Dos_NpiDeactivatedPrior	  :=  16;   //
	export ustat_Dos_PracAddrInactivePrior	:=  32;   //
	export ustat_Dos_LicenseExpiredPrior		:= 128;   //
	export ustat_Dos_NoFixCorrectionApplied	:=3840;   //     !3840
	export ustat_Dos_ProviderDeceasedPrior	:=2048;   //		
	export ustat_Dos_ReportedDeceasedWithin	:=4096;   //
	export ustat_Dos_NoAugmentation					:=4278190080; // !4278190080
	//Codes for Sanctions
	export category_fraud										:= 1;
	export category_license									:= 2;
	export category_program									:= 4;
	export category_quality									:= 8;
	export category_rx											:= 16;
	export category_other										:= 32;
	export ustat_Sanc_StateRestrict					:=     1;   // 
	export ustat_Sanc_OIG										:=  	 2;   // 
	export ustat_Sanc_OPM										:=  	 4;   // 
	export ustat_Sanc_OIG_OPM_future										:=  	 16;   // 
	export ustat_Sanc_prac_StateRestrict_future					:=     32;   // 
	export ustat_Sanc_any_StateRestrict_future					:=     64;   // 
	export ustat_OIG_Current_FAB						:=     1;   // 
	export ustat_OIG_Current_License				:=     2;   // 
	export ustat_OIG_Current_Program				:=     4;   // 
	export ustat_OIG_Current_Quality				:=     8;   // 
	export ustat_OIG_Current_RX							:=    16;   // 
	export ustat_OIG_Current_Other					:=    32;   // 
	export ustat_OIG_History_FAB						:=    64;   // 
	export ustat_OIG_History_License				:=   128;   // 
	export ustat_OIG_History_Program				:=   256;   // 
	export ustat_OIG_History_Quality				:=   512;   // 
	export ustat_OIG_History_RX							:=  1024;   // 
	export ustat_OIG_History_Other					:=  2048;   // 
	export ustat_OIG_Reinstate							:=  4096;   // 
	export ustat_OPM_Current_FAB						:=     1;   // 
	export ustat_OPM_Current_License				:=     2;   // 
	export ustat_OPM_Current_Program				:=     4;   // 
	export ustat_OPM_Current_Quality				:=     8;   // 
	export ustat_OPM_Current_RX							:=    16;   // 
	export ustat_OPM_Current_Other					:=    32;   // 
	export ustat_OPM_History_FAB						:=    64;   // 
	export ustat_OPM_History_License				:=   128;   // 
	export ustat_OPM_History_Program				:=   256;   // 
	export ustat_OPM_History_Quality				:=   512;   // 
	export ustat_OPM_History_RX							:=  1024;   // 
	export ustat_OPM_History_Other					:=  2048;   // 
	export ustat_OPM_Reinstate							:=  4096;   // 
	export ustat_StRestrict_Current_FAB			:=     1;   // 
	export ustat_StRestrict_Current_License	:=     2;   // 
	export ustat_StRestrict_Current_Program	:=     4;   // 
	export ustat_StRestrict_Current_Quality	:=     8;   // 
	export ustat_StRestrict_Current_RX			:=    16;   // 
	export ustat_StRestrict_Current_Other		:=    32;   // 
	export ustat_StRestrict_History_FAB			:=    64;   // 
	export ustat_StRestrict_History_License	:=   128;   // 
	export ustat_StRestrict_History_Program	:=   256;   // 
	export ustat_StRestrict_History_Quality	:=   512;   // 
	export ustat_StRestrict_History_RX			:=  1024;   // 
	export ustat_StRestrict_History_Other		:=  2048;   // 
	export ustat_StRestrict_Reinstatement		:=  4096;   // 
	export ustat_StRestrict_NonPracSt_Current_FAB			:=  8192;   // 
	export ustat_StRestrict_NonPracSt_Current_License	:= 16384;   // 
	export ustat_StRestrict_NonPracSt_Current_Program	:= 32768;   // 
	export ustat_StRestrict_NonPracSt_Current_Quality	:= 65536;   // 
	export ustat_StRestrict_NonPracSt_Current_RX			:=131072;   // 
	export ustat_StRestrict_NonPracSt_Current_Other		:=262144;   // 
	export ustat_StRestrict_NonPracSt_History_FAB			:=524288;   // 
	export ustat_StRestrict_NonPracSt_History_License	:=1048576;   // 
	export ustat_StRestrict_NonPracSt_History_Program	:=2097152;   // 
	export ustat_StRestrict_NonPracSt_History_Quality	:=4194304;   // 
	export ustat_StRestrict_NonPracSt_History_RX			:=8388608;   // 
	export ustat_StRestrict_NonPracSt_History_Other		:=16777216;   // 
	export ustat_StRestrict_NonPracSt_Reinstatement		:=33554432;   // 
	//Codes for Taxonomy
	export ustat_Taxonomy_BadFormat			    		:=131072;   // value provided was invalid, details may be provided in higher order bits
  export ustat_Taxonomy_Ver_Other		    		  :=2;		
	export ustat_Taxonomy_Verified_Multiple 		:=     4;   // 
	export ustat_Taxonomy_Verified_Auth	   			:=     8;   // 
	export ustat_Taxonomy_Missing				    		:=  4096;   // was configured but input was blank
	export ustat_Taxonomy_SomeoneElse           :=  8192;
	export ustat_Taxonomy_TypeCorrection	    	:=   256;   // 
	export ustat_Taxonomy_CallBasedHCCorrection	:=  1024;   // 
	export ustat_Taxonomy_Invalid								:=262144;   // 
	export ustat_Taxonomy_AugAuthoritySrc				:=268435456;// 
	export ustat_Taxonomy_NotVerified := 255;   //    !255 // line 348
	export ustat_Taxonomy_NoFixCorrectionApplied	:=3840;	//     !3840
	export ustat_Taxonomy_NoAugmentation :=4278190080;
	export cic_Taxonomy_Auth_Verified						:=   'V'; //I found an Authority source in my results that did match your input
	export cic_Taxonomy_Auth_Aug_NoInput				:=   'A'; //I found an Authority source in my results NO INPUT
	export cic_Taxonomy_Auth_Aug_WrongInput			:=   'L'; //I found an Authority source in my results did not match your input
	export cic_Taxonomy_Auth_Found_BadInput			:=   'S'; //I found an Authority source in my results and your input was bad
	export cic_Taxonomy_NoAuth_BadInput					:=   'B'; //I did not find an Authority source for your bad input (Nothing in data to matches you bad data)
	export cic_Taxonomy_NoAuth_MissingInput			:=   'M'; //I matched your input against my data
	export cic_Taxonomy_TypeClassVerifiedTypo		:=   'CV'; //I matched your input against my data
	export cic_Taxonomy_TypeCorrection					:=   'CT'; //I matched your input against my data
	export cic_Taxonomy_TypeClassVerified				:=   'CJ'; //I matched your input against my data
	export cic_Taxonomy_HighConfCorrection			:=   'CH'; //I matched your input against my data
	//Codes for License
	export ustat_License_Verified					  		:=8;   // 4
	export ustat_License_Verified_Lic_State  		:=16;   // 5
	export ustat_License_CompanionData	    		:=512;   // 10
	export ustat_License_Missing				    		:=4096;   // 13
	export ustat_License_SomeoneElse		    		:=8192;   // 14
	export ustat_License_Suspended			    		:=16384;   // 15
	export ustat_License_Inactive								:=32768;// 16
	export ustat_License_ExpiredWithinGrace			:=65536;// 17
	export ustat_License_PracRestricted					:=131072;// 18
	export ustat_License_NoAugmentation :=4278190080; // !4278190080
	export ustat_Aug_AuthSrc_SingleSrc					:=16777216;// 25
	export ustat_Aug_AuthSrc_MultipleSrc				:=33554432;// 26
	export ustat_Aug_AuthSrc_NonPracState				:=67108864;// 27
	export ustat_Aug_AuthSrc_PracState					:=134217728;// 28
	export ustat_Aug_AuthSrc										:=268435456;// 29
	export cic_License_Suspended								:=   '8'; //
	export cic_License_Missing_Aug							:=   'A'; //
	export cic_License_Missing_NoAug						:=   'M'; //
	export cic_License_Missing_Aug_Other_State	:=   'W'; //
	export cic_License_Verified_Restricted			:=   'B'; //
	export cic_License_Verified_Aug							:=   'E'; //
	export cic_License_Expired_Aug							:=   'G'; //
	export cic_License_Expired_NoAug						:=   'I'; //
	export cic_License_Expired_Aug_Other_State	:=   'K'; //
	export cic_License_SomeoneElse							:=   'Q'; //
	export cic_License_WrongInput_Restricted		:=   'R'; //
	export cic_License_WrongInput_Aug						:=   'L'; //
	export cic_License_WrongInput_Aug_Other_State:=  'T'; //
	//Codes for NPI
	export ustat_NPI_Type1							    		:=2;   				 // 2
	export ustat_NPI_Type2							    		:=4;  				 // 3
	export ustat_NPI_Verified						    		:=8;   				 // 4
	export ustat_NPI_CompanionData						  :=512;   			 // 10
	export ustat_NPI_Missing						    		:=4096;   		 // 13
	export ustat_NPI_SomeoneElse				    		:=8192;   		 // 14
	export ustat_NPI_FKA								    		:=32768;  		 // 16
	export ustat_NPI_DeActivated				    		:=65536;  		 // 17
	export ustat_NPI_BadFormat					    		:=131072; 		 // 18
	export ustat_NPI_Invalid						    		:=262144;   	 // 19
	export ustat_NPI_AugAuthSource				    	:=268435456;   // 29
	export cic_NPI_Deactivated_NoAug						:=  'D2'; //
	export cic_NPI_Missing_Deactivated_NoAug		:=  'F'; //
	export cic_NPI_Deactivated_Aug							:=  'D1'; //
	export cic_NPI_Verified											:=  'V'; //
	export cic_NPI_Missing_Aug									:=  'A'; //
	export cic_NPI_SomeoneElse_Aug							:=  'Q'; //
	export cic_NPI_Not_Found_Aug								:=  'G'; // passes Luhn not found in Authority source
	export cic_NPI_Not_Found_NoAug							:=  'I'; // passes Luhn not found in Authority source
	export cic_NPI_Type_1_Aug										:=  '1'; //
	export cic_NPI_Type_2_NoAug									:=  '2'; //
	export cic_NPI_Not_Verified_Aug							:=  'L'; //
	export cic_NPI_BadInput_Aug									:=  'S'; //
	export cic_NPI_BadInput_NoAug								:=  'B'; //
	export cic_NPI_Missing_NoAug								:=  'M'; //
	//Codes for NPI Verify Stats
	export stat_NPIVerif_NotConfigured     :=     1;   // was not configured n/a
	export stat_NPIVerif_Invalid    			 :=     1;   	// was invalid
	export stat_NPIVerif_Missing           :=     2;    // was configured but input was blank
	export stat_NPIVerif_BadFormat         :=     4;    // value provided was invalid, details may be provided in higher order bits
	export stat_NPIVerif_InvalidDate       :=     8;    // value did not contain a valid date
	export stat_NPIVerif_Type1             :=    16;
	export stat_NPIVerif_Type2             :=    32;
	export stat_NPIVerif_SoleProprietor    :=    64;
	export stat_NPIVerif_PhysicianMatch    :=   128;
	export stat_NPIVerif_PracCompanyMatch  :=   256;
	export stat_NPIVerif_BillCompanyMatch  :=   512;
	export stat_NPIVerif_PracAddressMatch  :=  1024;
	export stat_NPIVerif_BillAddressMatch  :=  2048;
	export stat_NPIVerif_Name              :=  4096;
	export stat_NPIVerif_OtherName         :=  8192;
	export stat_NPIVerif_AuthorityName     := 16384;
	export stat_NPIVerif_OrgName           := 32768;
	export stat_NPIVerif_OtherOrgName      := 65536;
	export stat_NPIVerif_ParentOrgLBName   :=131072;
	export stat_NPIVerif_PracAddress       :=262144;
	export stat_NPIVerif_BillAddress       :=524288;
	export stat_NPIVerif_Deactivated       :=1048576;
	//Codes for NCPDP
	export ustat_NCPDP_Verified						    		:=8;   			// 4
	export ustat_NCPDP_CompanionData	    				:=512;   		// 10 Legacy Flag - to be phased out.
	export ustat_NCPDP_Missing						    		:=4096; 		// 13 from Byron not on ustat_analyzer
	export ustat_NCPDP_SomeoneElse				    		:=8192;   	// 14
	export ustat_NCPDP_BadFormat					    		:=131072;   // 18 from Byron not on ustat_analyzer
	export ustat_NCPDP_Invalid						    		:=262144;   // 19 from Byron not on ustat_analyzer
	export ustat_NCPDP_AugAuthSource				    	:=268435456;// 29 
	export cic_NCPDP_Verified											:=  'V'; 		//
	export cic_NCPDP_Missing_Aug									:=  'A'; 		//
	export cic_NCPDP_SomeoneElse_Aug							:=  'Q'; 		//
	export cic_NCPDP_Not_Found_Aug								:=  'G'; 		// passes CheckDigit not found in Authority source
	export cic_NCPDP_Not_Found_NoAug							:=  'I'; 		// passes CheckDigit not found in Authority source and No Augmentation
	export cic_NCPDP_Not_Verified_Aug							:=  'L'; 		//
	export cic_NCPDP_BadInput_Aug									:=  'S'; 		//
	export cic_NCPDP_BadInput_NoAug								:=  'B'; 		//
	export cic_NCPDP_Missing_NoAug								:=  'M'; 		//  No userinput ncpdp_id
	//Codes for Specialty
	export ustat_Specialty_Missing				 			 	:=  4096;   // was configured but input was blank
	export ustat_Specialty_Verified								:=     8;   // 
	export ustat_Specialty_Verified_Auth				  :=    16;   // 
	export ustat_Specialty_Aug_1_Source 					:=16777216;   // 
	export ustat_Specialty_Aug_multi_Source 			:=33554432; 
	export ustat_Specialty_AugAuthSrc						 	:=268435456;   // 
	export cic_Specialty_Auth_Verified						:=   'V'; //I found an Authority source in my results that did match your input
	export cic_Specialty_Auth_Aug_NoInput					:=   'A'; //I found an Authority source in my results NO INPUT
	export cic_Specialty_Auth_Aug_WrongInput			:=   'L'; //I found an Authority source in my results did not match your input
	export cic_Specialty_NoAuth_MissingInput			:=   'M'; //I matched your input against my data
	//Codes for TIN
	export ustat_TIN_BadFormat			    		:=131072;   // value provided was invalid, details may be provided in higher order bits
	export ustat_TIN_Verified_1_Source 			:=     2;   // 
	export ustat_TIN_Verified_Multiple 			:=     4;   // 
	export ustat_TIN_Verified_Auth	   			:=     8;   // 
	export ustat_TIN_Missing				    		:=  4096;   // was configured but input was blank
	export ustat_TIN_TypeCorrection	    		:=   256;   // 
	export ustat_TIN_CallBasedHCCorrection	:=  1024;   // 
	export ustat_TIN_hasActiveLicAuthSrcNotPracState:=67108864;// 
	export ustat_TIN_Discrepancy            := 8192;    //Input TIN is not associated with the input NPI
	export ustat_TIN_Aug_Other              := 16777216;
	export ustat_TIN_Aug_Other_Multi        := 33554432;
	export ustat_TIN_Is_In_DMF              := 16384;   //User TIN matched a SSN in the DMF
	export cic_TIN_Auth_Verified						:=   'V'; //I found an Authority source in my results that did match your input
	export cic_TIN_Auth_Aug_NoInput					:=   'A'; //I found an Authority source in my results NO INPUT
	export cic_TIN_Auth_Aug_WrongInput			:=   'L'; //I found an Authority source in my results did not match your input
	export cic_TIN_Auth_Found_BadInput			:=   'S'; //I found an Authority source in my results and your input was bad
	export cic_TIN_NoAuth_BadInput					:=   'B'; //I did not find an Authority source for your bad input (Nothing in data to matches you bad data)
	export cic_TIN_NoAuth_MissingInput			:=   'M'; //I matched your input against my data
	export cic_TIN_TypeCorrection						:=   'CT'; //I matched your input against my data
	export cic_TIN_CallBasedHCCorrection		:=   'CH'; //I matched your input against my data
	//Codes for UPIN
	export ustat_UPIN_BadFormat			    	:=		131072;   // value provided was invalid, details may be provided in higher order bits
	export ustat_UPIN_Verified			    	:=				 8;   // 
	export ustat_UPIN_Missing				    	:=			4096;   // was configured but input was blank
	export ustat_UPIN_SomeoneElse		    	:=			8192;   // 
	export ustat_UPIN_AugAuthSource	    	:= 268435456;// Augmented from an authority source
	export cic_UPIN_Auth_Verified					:=   'V'; //I found an Authority source in my results that did match your input
	export cic_UPIN_Auth_Aug_NoInput			:=   'A'; //I found an Authority source in my results NO INPUT
	export cic_UPIN_Auth_Aug_Other				:=   'Q'; //I found an Authority source in the data for another provider that matched your input
	export cic_UPIN_Auth_Aug_WrongInput		:=   'L'; //I found an Authority source in my results did not match your input
	export cic_UPIN_Auth_Found_BadInput		:=   'S'; //I found an Authority source in my results and your input was bad
	export cic_UPIN_NoAuth_BadInput				:=   'B'; //I did not find an Authority source for your bad input (Nothing in data to matches you bad data)
	export cic_UPIN_NoAuth_MissingInput		:=   'M'; //I matched your input against my data
	//Codes for CLIA
	export ustat_CLIA_ExpiredInGrace    	:=		 65536;   // 17
	export ustat_CLIA_Missing				    	:=			4096;   // 13
	export ustat_CLIA_Verified			    	:=			   8;   // 4
	export ustat_CLIA_CompanionData	    	:=			 512;   // 10
	export ustat_CLIA_BadFormat			    	:=		131072;   // 18
	export ustat_CLIA_NonPracState	    	:=		 16384;   // 15
	export ustat_CLIA_AugAuthSource	    	:= 268435456;// Augmented from an authority source
	export cic_CLIA_NonPracState_Aug			:=   '1'; //
	export cic_CLIA_NonPracState_NoAug		:=   '2'; //
	export cic_CLIA_Auth_Aug_NoInput			:=   'A'; //I found an Authority source in my results NO INPUT
	export cic_CLIA_NoAuth_BadInput				:=   'B'; //I did not find an Authority source for your bad input (Nothing in data to matches you bad data)
	export cic_CLIA_ExpiredWithinGrace_Aug:=   'G'; //
	export cic_CLIA_ExpiredWithinGrace_noAug:= 'I'; //
	export cic_CLIA_Auth_Aug_WrongInput		:=   'L'; //I found an Authority source in my results did not match your input
	export cic_CLIA_Auth_Found_BadInput		:=   'S'; //I found an Authority source in my results and your input was bad
	export cic_CLIA_Auth_Verified					:=   'E'; //I found an Authority source in my results that did match your input
	//Codes for Medicare Facilities Num
	export ustat_Medicare_Verified			    	:=		 8;   // 4
	export ustat_Medicare_Missing			 		   	:=	4096;   // 13
	export ustat_Medicare_AugAuthSource	    	:=268435456;   // 29
	export cic_Medicare_Auth_Verified					:=   'V'; //I found an Authority source in my results that did match your input
	export cic_Medicare_Auth_Aug_NoInput			:=   'A'; //I found an Authority source in my results NO INPUT
	export cic_Medicare_Auth_Aug_WrongInput		:=   'L'; //I found an Authority source in my results did not match your input
	export cic_Medicare_NoAuth_MissingInput		:=   'M'; //I matched your input against my data
	//Codes for DEA
	export ustat_DEA_Verified			    		:=		 8;   // 4
	export ustat_DEA_CompanionData	    	:=	 512;   // 10
	export ustat_DEA_Missing			 		   	:=	4096;   // 13
	export ustat_DEA_SomeoneElse	 		   	:=	8192;   // 14
	export ustat_DEA_InActive			    		:= 32768;   // 16
	export ustat_DEA_Expired							:= 65536;		// 17
	export ustat_DEA_BadFormat 		 		   	:=131072;   // 18
	export ustat_DEA_Invalid						  :=262144;   // 19  Not needed anymore - now detected via BadFormat
	export ustat_DEA_AugAuthSource	    	:=268435456;// 29
	export cic_DEA_Auth_Aug_NoInput				:=   'A'; //
	export cic_DEA_Auth_Aug_Other					:=   'Q'; //
	export cic_DEA_NoAug_Other						:=   'T'; //
	export cic_DEA_Auth_Aug_WrongInput		:=   'L'; //
	export cic_DEA_Auth_Found_BadInput		:=   'S'; //
	export cic_DEA_Auth_Aug_Retired				:=   'G'; //
	export cic_DEA_Auth_NoAug_Retired			:=   'I'; //
	export cic_DEA_Verified								:=   'E'; //
	export cic_DEA_NoAuth_BadInput				:=   'B'; //
	export cic_DEA_NoAuth_MissingInput		:=   'M'; //
	//Codes for Gender
	export ustat_Gender_Verified_Cleaner   	:=		 2;   // 2
	export ustat_Gender_Verified_Self_Rpt  	:=		 4;   // 3
	export ustat_Gender_Corrected_Cleaner  	:=	 256;   // 9
	export ustat_Gender_Corrected_Self_Rpt 	:=	 512;   // 10
	export ustat_Gender_Missing			 		   	:=	4096;   // 13
	export ustat_Gender_Discrepancy		 		  :=  8192;   // 14
	export ustat_Gender_BadFormat 		 		  :=131072;   // 18
	export ustat_Gender_Aug_Other           :=16777216;  //25   //inp missing, set once in records
	export ustat_Gender_Aug_Mult_Other      :=33554432;  //26   //inp missing, set more than once in records.
	export ustat_Gender_Aug_Auth            :=268435456; //29      
	export cic_Gender_Verified							:=   'V'; //
	export cic_Gender_Correction_Conflict		:=   'C1'; //
	export cic_Gender_Correction						:=   'C2'; //
	export cic_Gender_Auth_Found_BadInput		:=   'S'; //
	export cic_Gender_NoAuth_BadInput				:=   'B'; //
	export cic_Gender_Auth_Aug_NoInput			:=   'A'; //
	export cic_Gender_NoAuth_MissingInput		:=   'M'; //
	// CompanyNameOutputStat
	export ustat_Company_Ver_Other 				:= 2;  			 //  corroborated by at least one source				//ProcessCompanies() need to map:only used for prac_company_ustat
	export ustat_Company_Ver_High_Lbn  		:= 4;        //  high confidence verified from NPPES LBN
	export ustat_Company_Ver_High_Dba     := 8;        //  high confidence verified from NPPES DBA
	export ustat_Company_Index            := 16;	     //  n/a  can't find in the code.  prob n/a to ecl
	export ustat_Company_Cor_High_Lbn     := 256;      //  high confidence corrected from NPPES LBN
	export ustat_Company_Cor_High_Dba     := 512;      //  high confidence corrected from NPPES DBA 
	export ustat_Company_Rep_Missing      := 4096;     //  input missing 
	export ustat_Company_Rep_Low_Fka      := 16384;    //  low scoring formerly known as
	export ustat_Company_Rep_Fka          := 32768;    //  formerly known as 
	export ustat_Company_Aug_High_Lbn     := 33554432; //  high confidence augmented from NPPES LBN
	export ustat_Company_Aug_High_Dba     := 67108864; //  high confidence augmented from NPPES DBA 
	//Codes for Name
	export ustat_Name_1_Source					    		:=    2;   // 2
	export ustat_Name_Mulitple_Sources	    		:=    4;   // 3 
	export ustat_Name_Transposed						  	:=  256;   // 9
	export ustat_Name_Complete							  	:=  512;   // 10
	export ustat_Name_Match_NPI_FKA			    		:=32768;   // 16
	export ustat_Name_Match_Last_DEA_Former  		:=65536;   // 17
	export ustat_Name_Match_Last_NPI_Former  		:=131072;   // 18
	export cic_Name_Correction									:=   'CC'; //
	export cic_Name_NoAug												:=   'CL'; //
	export cic_Name_Transposed									:=   'CT'; //
	export cic_Name_MatchFKA										:=   'F'; //
	export cic_Name_MissingInput								:=   'M'; //
	export cic_Name_Verified										:=   'V'; //
	export cic_Name_Unknown											:=   ''; //
	//Codes for Medschool
	export ustat_Medschool_Missing			 		   	:= 4096;   // 13
	export ustat_Medschool_Verified	    				:=    8;   // 4 
	export ustat_Medschool_Aug							  	:=16777216;// 25
	export cic_Medschool_NotVerified_Aug				:=   '2'; //
	export cic_Medschool_Aug										:=   'A'; //
	export cic_Medschool_MissingInput						:=   'M'; //
	export cic_Medschool_Verified								:=   'V'; //
	// Codes for Address
	export ustat_Addr_Verified_Practice			:=		 1;   // 
	export ustat_Addr_Verified_Billing			:=		 2;   // 
	export ustat_Addr_Multiple_Sources			:=		 4;   // 
	export ustat_Addr_HCVerified						:=		 8;   // 
	export ustat_Addr_PV_Practice						:=		16;   // 
	export ustat_Addr_PV_Billing						:=		32;   // 
	export ustat_Addr_FaxVerified_Practice	:=		64;   // 
	export ustat_Addr_ClaimVerified_Billing	:=	 128;   // 
	export ustat_Addr_Typo_Correction				:=	 256;   // 
	export ustat_Addr_CallBased_Update			:=	1024;   // 
	export ustat_Addr_Missing								:=	4096;   // 
	export ustat_Addr_PV_Inactive						:=	8192;   // 
	export ustat_Addr_HCInactive						:= 16384;   // 
	export ustat_Addr_HighRisk							:= 32768;   // 
	export ustat_Addr_POBox									:= 65536;   // 
	export ustat_Addr_Undeliverable					:=131072;   // 
	export ustat_Addr_Invalid								:=262144;   // 
	export ustat_Addr_Aug_Other_Verified		:=16777216;   // 
	export ustat_Addr_Aug_HCVerified				:=67108864;   // 
	export ustat_Addr_Aug_PV_Verified				:=134217728;   // 
	export ustat_Addr_Aug_Fax_Verified			:=268435456;   // 
	export ustat_Addr_Aug_HV_Value					:=536870912;   // 
	export ustat_Addr_Aug_PV_Value					:=1073741824;   //
	
	export cic_HPC_Addr_Verified								:= 'V';			// Verify even if undeliverable and confidence score looks acceptable per MPI - addresses are valid physical locations but not mailable or Verified with no correction -- now include OV, HV, FV, and PV as prac
	export cic_HPC_Addr_Verified_Billing				:= '1';			// Verified billing only with no correction
	export cic_HPC_Addr_Call_Update							:= 'GN';		// mover_on_input = '0' Call Based update provided
	export cic_HPC_Addr_CallBased_Update				:= 'GD';		// mover_on_input = '1' Call Based update provided
	export cic_HPC_Addr_Typo_Correction					:= 'C';			// Correction provided
	export cic_HPC_Addr_HCInactive							:= 'Z';			// Inactive address or Model HC inact with inactive license in prac state and no other active addresses in prac state
	export cic_HPC_Addr_PV_Inactive							:= 'II'; 		// PV inactive by both phone and address group with another verified addresses on input
	export cic_HPC_Addr_Inactive								:= 'IR';		// Inactive by both phone and address group  inact with no other verified addresses for provider
	export cic_HPC_Addr_PV_Inactive_NoMatch			:= 'I2';		// PV inactive inact without a match to the database by both phone and address
	export cic_HPC_Addr_HighRisk_Prison					:= 'H'; 		// High Risk Prison
	export cic_HPC_Addr_HighRisk_NPSR 					:= 'N';			// High Risk NPSR
	export cic_HPC_Addr_Standardization					:= 'S';			// Standardization
	export cic_HPC_Addr_Undeliverable						:= 'X';			// Undeliverable with no correction
	export cic_HPC_Addr_POBox 									:= 'P';			// PO Box and does not belong to a non-hospital based physician (anesthesiologists, radiologists, and pathologist)
	export cic_HPC_Addr_Missing_PV							:= 'A';			// missing on input (no correction) but with pv augmentation
	export cic_HPC_Addr_Missing_NoPV						:= 'M';			// /missing on input (no correction) no pv augmentation
	export cic_HPC_Addr_Unverified_PV						:= '2';			// unverified or missing (no correction) but with pv augmentation
	export cic_HPC_Addr_Unverified_NoPV					:= ' ';			// unverified or missing ( no correction) no PV aug
	
	export cic_HCO_Addr_Verified								:= 'V';			// Verify even if undeliverable and confidence score looks acceptable - addresses are valid physical locations but not mailable or Verified with no correction
	export cic_HCO_Addr_Verified_Billing				:= '1';			// Verified billing only with no correction
	export cic_HCO_Addr_Typo_Correction					:= 'C';			// Correction provided
	export cic_HCO_Addr_HCInactive							:= 'Z';			// Inactive address with inactive license in prac state and no other active addresses in prac state
	export cic_HCO_Addr_Inactive								:= 'IR';		// Not HV, Not PV and  PV or HV inactive where the phone is also inactive
	export cic_HCO_Addr_PV_Inactive_NoMatch			:= 'I2';		// Not HV, Not PV and  PV or HV inactive where the phone is not also inactive
	export cic_HCO_Addr_HighRisk_Prison					:= 'H'; 		// High Risk Prison
	export cic_HCO_Addr_HighRisk_NPSR 					:= 'N';			// High Risk NPSR
	export cic_HCO_Addr_Standardization					:= 'S';			// 
	export cic_HCO_Addr_Undeliverable						:= 'X';			// Undeliverable with no correction
	export cic_HCO_Addr_POBox 									:= 'P';			// PO Box
	export cic_HCO_Addr_Missing_PV							:= 'A';			// missing with pv aug
	export cic_HCO_Addr_Missing_NoPV						:= 'M';			// missing without pv aug
	export cic_HCO_Addr_Unverified_PV						:= '2';			// unverified or missing (no correction) but with pv augmentation
	export cic_HCO_Addr_Unverified_NoPV					:= ' ';			// unverified or missing ( no correction) no PV aug
	
	export cic_HPC_Bill_Verified								:= 'V';			// verified (either billing or prac ok) -no correction needed -- this is ov and pv
	export cic_HPC_Bill_Typo_Correction					:= 'C';			// Correction provided
	export cic_HPC_Bill_PV_HV_Inactive					:= 'I'; 		// inactive (PV or HV)
	export cic_HPC_Bill_HighRisk_Prison					:= 'H'; 		// High Risk Prison
	export cic_HPC_Bill_HighRisk_NPSR 					:= 'N';			// High Risk NPSR
	export cic_HPC_Bill_Standardization					:= 'S';			// Standardized
	export cic_HPC_Bill_Undeliverable						:= 'X';			// Undeliverable with no correction
	export cic_HPC_Bill_POBox 									:= 'P';			// ADDED IN 57 to fullfill need for claims processing where PO box is no longer allowed in billing
	export cic_HPC_Bill_Missing_PV							:= 'A';			// missing with pv aug
	export cic_HPC_Bill_Missing_NoPV						:= 'M';			// missing without pv aug
	export cic_HPC_Bill_Unverified_PV						:= '2';			// unverified but with pv augmentation
	
	export cic_HCO_Bill_Verified								:= 'V';			// verified (either billing or prac ok) -no correction needed -- this is ov and pv
	export cic_HCO_Bill_Typo_Correction					:= 'C';			// Correction provided
	export cic_HCO_Bill_PV_HV_Inactive					:= 'I'; 		// inactive
	export cic_HCO_Bill_HighRisk_Prison					:= 'H'; 		// High Risk Prison
	export cic_HCO_Bill_HighRisk_NPSR 					:= 'N';			// High Risk NPSR
	export cic_HCO_Bill_Standardization					:= 'S';			// Standardized
	export cic_HCO_Bill_Undeliverable						:= 'X';			// Undeliverable with no correction
	export cic_HCO_Bill_POBox 									:= 'P';			// ADDED IN 57 to fullfill need for claims processing where PO box is no longer allowed in billing
	export cic_HCO_Bill_Missing_PV							:= 'A';			// missing with pv aug
	export cic_HCO_Bill_Missing_NoPV						:= 'M';			// missing without pv aug
	export cic_HCO_Bill_Unverified_PV						:= '2';			// unverified but with pv augmentation
	
	// Codes for Phone
	export ustat_Phone_Verified_Practice		:=		 1;   // 
	export ustat_Phone_Verified_Billing			:=		 2;   // 
	export ustat_Phone_Multiple_Sources			:=		 4;   // 
	export ustat_Phone_HCVerified						:=		 8;   // 
	export ustat_Phone_PV_Practice					:=		16;   // 
	export ustat_Phone_PV_Billing						:=		32;   // 
	export ustat_Phone_FaxVerified_Practice	:=		64;   // 
	export ustat_Phone_CompanionData				:=	 512;   // 
	export ustat_Phone_CallBased_Update			:=	1024;   // 
	export ustat_Phone_Missing							:=	4096;   // 
	export ustat_Phone_PV_Inactive					:=	8192;   // 
	export ustat_Phone_HCInactive						:= 16384;   // 
	export ustat_Phone_BadFormat						:=131072;   // 
	export ustat_Phone_Invalid							:=262144;   // 
	export ustat_Phone_Aug_Other_Verified		:=16777216;   // 
	export ustat_Phone_Aug_HCVerified				:=67108864;   // 
	export ustat_Phone_Aug_PV_Verified			:=134217728;   // 
	export ustat_Phone_Aug_Fax_Verified			:=268435456;   // 
	// Enums
	EXPORT MatchType := ENUM (
        MT_NA          = 0,
				MT_NO_MATCH    = 1,
				MT_FUZZY       = 2,
				MT_EXACT       = 4
				);
	EXPORT FuzzyInfo := ENUM (
				FI_NULL			            = 0,
				FI_PARTIAL      	      = 1,
				FI_STRONG_POS_MATCH	    = 2,
				FI_SIMPLE_TRANSPOSITION	= 4,
				FI_EXACT_CORRECTED 	    = 8,
				FI_EXACT_STR_STR	      = 16
				);			
	EXPORT NameScoreExtendedMatchInfo := ENUM (
        FIRST_NAME_MATCH               = 1 << 0,
				MIDDLE_NAME_MATCH              = 1 << 1,
				LAST_NAME_MATCH                = 1 << 2,
				MATURITY_SUFFIX_MATCH          = 1 << 3,
				MATURITY_SUFFIX_CONFLICT       = 1 << 4,
				MATURITY_SUFFIX_AMBIGUOUS      = 1 << 5,
				MIDDLE_NAME_INITIAL_MATCH      = 1 << 6,
				PREFERRED_NAME_MATCH           = 1 << 7,
				GENDER_CONFLICT                = 1 << 8,
				MIDDLE_NAME_CONFLICT           = 1 << 9,
				FIRST_NAME_CONFLICT            = 1 << 10,
				LAST_NAME_CONFLICT             = 1 << 11,
				FEMALE_WITH_LAST_NAME_CONFLICT = 1 << 12,
				STUFF_WAS_TRANSPOSED           = 1 << 13,
				LAST_NAME_FUZZY                = 1 << 14,
				FIRST_NAME_FUZZY               = 1 << 15,
				OTHER_MATCH                    = 1 << 16,
				LAST_NAME_INITIAL_MATCH        = 1 << 17,
				FIRST_NAME_INITIAL_MATCH       = 1 << 18,
				FIRST_MIDDLE_TRANSPOSED        = 1 << 19,
				FIRST_LAST_TRANSPOSED          = 1 << 20,
				MIDDLE_FIRST_TRANSPOSED        = 1 << 21,
				MIDDLE_LAST_TRANSPOSED         = 1 << 22,
				LAST_FIRST_TRANSPOSED          = 1 << 23,
				LAST_MIDDLE_TRANSPOSED         = 1 << 24,
				MIDDLE_NAME_FUZZY              = 1 << 25,
				NAME_REARRANGEMENT_MATCH       = 1 << 26,
				NAME_REARRANGEMENT_FUZZY_MATCH = 1 << 27,
				FKA_NAME_MATCH                 = 1 << 28
				);
	EXPORT NameScoreStrength := ENUM (
				NoWay       = 0,
				VeryWeak    = 1,
				Weak        = 2,
				Strong      = 3,
				VeryStrong  = 4,
				NotAssessed = -1
				);
				

	Export WeakNameStrength := [0,1,2];
	Export StrongNameStrength := [3,4];
	Export NotAssessedNameStrength := -1;
	
	EXPORT RunMode := enum (
					IDV         = 1,
					FAC         = 2
				);

	// Death Sources (Deceased Retired Functionality)
	EXPORT DEATHSRC_DID:=1;
	EXPORT DEATHSRC_SSN:=1;
	EXPORT DEATHSRC_TIN:=2;
	EXPORT DEATHSRC_CP_HARVTIN:=4;
	EXPORT DEATHSRC_CLAIMS:=8;
	EXPORT DEATHSRC_NPITINXREF:=16;
	EXPORT DEATHSRC_OTHERSOURCES:=32;  //OTHERSOURCES REDUNDANT
	EXPORT DEATHSRC_OBITS:=64;
	EXPORT DEATHSRC_LICENSED:=128;
	EXPORT DEATHSRC_LICENSEDSTATE:=256;
	EXPORT DEATHSRC_CALLPVKID:=512;
	EXPORT DEATHSRC_CPDFLAG:=1024;
	EXPORT DEATHSRC_CLIENTDATA:=2048;  // CLIENT DATA - NOT IMPLEMENTED
	EXPORT DEATHSRC_CALLFAXVKID:=4096;

// Date Sanity Checks 
	EXPORT DOB_MATCH_UPSCORE:=10;
	EXPORT DOB_MINVALUE_CHECK:=19000000;

	//Set Constants
	EXPORT SET_FILECODE_ROSTER:='RST';
	EXPORT SET_FILECODE_DEA:='DEA';
	EXPORT SET_FILECODE_FACILITY:='FAC';
	EXPORT SET_FILECODE_NPI:='NPI';
	EXPORT SET_FILECODE_FKA:='FKA';
	EXPORT SET_FILECODE_LICENSE:='LIC';
	EXPORT SET_FILECODE_SSA:='SSA';
	EXPORT SET_FILECODE_SKA:='SKA';
	

END;