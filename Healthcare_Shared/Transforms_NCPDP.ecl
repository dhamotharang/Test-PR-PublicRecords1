Import Healthcare_Shared,iesp,Healthcare_NCPDP;
EXPORT Transforms_NCPDP  := MODULE
	export healthcare_shared.layouts_commonized.std_record_struct set_std_record_struct(healthcare_shared.layouts.ncpdp_base_with_input l) := TRANSFORM
		self.acctno := l.acctno;
		self.internalID := if(l.srcIndividualHeader,l.lnpid,l.lnfid);
		self.LNPID := l.lnpid;
		self.LNFID := l.lnfid;
		self.vendor_id := l.ncpdp_provider_id;
		self.filesource:= Healthcare_Shared.Constants.SRC_NCPDP;
		// self.filecode:= Healthcare_Shared.Constants.SRC_NCPDP;
		getUpdateDate := l.dt_last_seen;
		self.last_update_date:= (string)getUpdateDate;
		self.prac_company1.company_name:= l.legal_business_name;
		self.prac_company2.company_name:= l.dba;
		self.prac1.primary_address:= l.append_phyaddr1;
		self.prac1.secondary_address:= l.append_phyaddrlast;
		self.prac1.city:= l.Phys_p_city_name;
		self.prac1.state:= l.Phys_state;
		self.prac1.zip:= l.Phys_zip5;
		self.prac1.zip4:= l.Phys_zip4;
		self.prac1.rectype:= l.Phys_rec_type;
		self.prac1.primary_range:= l.Phys_prim_range;
		self.prac1.pre_directional:= l.Phys_predir;
		self.prac1.primary_name:= l.Phys_prim_name;
		self.prac1.suffix:= l.Phys_addr_suffix;
		self.prac1.post_directional:= l.Phys_postdir;
		self.prac1.unit_designator:= l.Phys_unit_desig;
		self.prac1.secondary_range:= l.Phys_sec_range;
		self.prac1.error_code:= l.Phys_err_stat;
		self.prac1.clean_geo_lat:= l.Phys_geo_lat;
		self.prac1.clean_geo_long:= l.Phys_geo_long;
		self.prac1.clean_msa:= l.Phys_msa;                                   
		self.prac1.clean_geo_match:= l.Phys_geo_match;
		self.prac_phone1.phone:= l.phys_loc_phone;
		self.prac_fax1.fax:= l.phys_loc_fax_number;
		self.medicare_fac_num:= l.medicare_provider_id;
		self.prac2.primary_address:= l.append_Mailaddr1;
		self.prac2.secondary_address:= l.append_Mailaddrlast;
		self.prac2.city:= l.Mail_p_city_name;
		self.prac2.state:= l.Mail_state;
		self.prac2.zip:= l.Mail_zip5;
		self.prac2.zip4:= l.Mail_zip4;
		self.prac2.rectype:= l.Mail_rec_type;
		self.prac2.primary_range:= l.Mail_prim_range;
		self.prac2.pre_directional:= l.Mail_predir;
		self.prac2.primary_name:= l.Mail_prim_name;
		self.prac2.suffix:= l.Mail_addr_suffix;
		self.prac2.post_directional:= l.Mail_postdir;
		self.prac2.unit_designator:= l.Mail_unit_desig;
		self.prac2.secondary_range:= l.Mail_sec_range;
		self.prac2.error_code:= l.Mail_err_stat;
		self.prac2.clean_geo_lat:= l.Mail_geo_lat;
		self.prac2.clean_geo_long:= l.Mail_geo_long;
		self.prac2.clean_msa:= l.Mail_msa;                                   
		self.prac2.clean_geo_match:= l.Mail_geo_match;
		self.bdid := (integer)l.bdid;
		self.tin1.tin:= l.federal_tax_id;
		self.npi_num:= l.national_provider_id;
		self.dea1.dea_num:= l.dea_registration_id;
		self.lic1.lic_num:= l.state_license_number;
		Self:=[];
	end;
	//NCPDP Base transforms
	Export Healthcare_Shared.Layouts.CombinedHeaderResults build_NCPDP(Healthcare_Shared.Layouts.ncpdp_base_with_input l,dataset(Healthcare_Shared.Layouts.common_runtime_config) cfg) := transform
		self.acctno := l.acctno;
		self.internalID := if(l.srcIndividualHeader,l.lnpid,l.lnfid);
		self.sources := dataset([{l.ncpdp_provider_id,Healthcare_Shared.Constants.SRC_NCPDP}],Healthcare_Shared.Layouts.layout_SrcID);
		self.src := Healthcare_Shared.Constants.SRC_NCPDP;
		self.LNPID := l.lnpid;
		self.LNFID := l.lnfid;
		self.VendorID := l.ncpdp_provider_id;
		self.srcIndividualHeader := l.srcIndividualHeader;
		self.srcBusinessHeader := l.srcBusinessHeader;
		self.ProcessingMessage := if(l.srcBusinessHeader and l.returnThresholdExceeded,203,0);
		getUpdateDate := l.dt_last_seen;
		self.last_update_date:= (string)getUpdateDate;
		self.RecordsRaw := project(l,set_std_record_struct(left));
		self.NCPDPRaw := if(cfg[1].keepRawNCPDPRecs,
																project(project(l,transform(Healthcare_NCPDP.Layouts.LayoutOutput,self:=left;self:=[];)),Healthcare_NCPDP.Transforms.fmtConsolidateSearchResults(left,false)),
																dataset([],iesp.ncpdp.t_PharmacyReportConsolidatedSearch)[1]);
		self:=l; 
		self:=[];
	end;

/*	Export Healthcare_Shared.Layouts.CombinedHeaderResults build_NCPDP_base (Healthcare_Shared.Layouts.ncpdp_base_with_input l) := transform
		self.acctno := l.acctno;
		self.sources := dataset([{l.ncpdp_provider_id,Healthcare_Shared.Constants.SRC_NCPDP}],Healthcare_Shared.Layouts.layout_SrcID);
		self.LNPID := l.lnpid;
		self.VendorID := l.ncpdp_provider_id;
		self.srcID := l.lnpid;
		self.src := Healthcare_Shared.Constants.SRC_NCPDP;
		self.glb_ok	:= l.glb_ok;
		self.dppa_ok:= l.dppa_ok;
		self.ProcessingMessage := if(l.srcBusinessHeader and l.returnThresholdExceeded,203,0);
		self.srcIndividualHeader := l.srcIndividualHeader;
		self.srcBusinessHeader := l.srcBusinessHeader;
		self.medicare_fac_num := l.medicare_provider_id;
		name1 := project(l,transform(Healthcare_Shared.Layouts.layout_nameinfo,
																			self.acctno := left.acctno;
																			self.ProviderID:=left.lnpid;
																			self.nameSeq := 4;
																			self.bestsource := 4;
																			self.namePenalty := 0;
																			self.CompanyName := left.legal_business_name;
																			self:=[];));
		name2 := project(l,transform(Healthcare_Shared.Layouts.layout_nameinfo,
																			self.acctno := left.acctno;
																			self.ProviderID:=left.lnpid;
																			self.nameSeq := 4;
																			self.bestsource := 4;
																			self.namePenalty := 0;
																			self.CompanyName := left.dba;
																			self:=[];));
		self.names := (name1+name2)(CompanyName <> '');
		Address1 := project(l,transform(Healthcare_Shared.Layouts.layout_addressinfo,
																		self.acctno := left.acctno;
																		self.ProviderID:=left.lnpid;
																		self.addrSeq := Healthcare_Shared.Constants.ADDR_SEQ_NCPDP;
																		self.addrSeqGrp := 0;
																		self.addrGoldFlag := '';
																		self.addrConfidenceValue := '';
																		self.addrType := '';
																		self.addrTypeCode := 'P';
																		self.addrVerificationStatusFlag := '';
																		self.addrVerificationDate := '';
																		self.addrPenalty := 0;
																		self.address1 := left.append_phyaddr1;
																		self.address2 := left.append_phyaddrlast;
																		self.prim_range := left.Phys_prim_range;
																		self.predir := left.Phys_predir;
																		self.prim_name := left.Phys_prim_name;
																		self.addr_suffix := left.Phys_addr_suffix;
																		self.postdir := left.Phys_postdir;
																		self.unit_desig := left.Phys_unit_desig;
																		self.sec_range := left.Phys_sec_range;
																		self.p_city_name := left.Phys_p_city_name;
																		self.v_city_name := '';
																		self.st := left.Phys_state;
																		self.z5 := left.Phys_zip5;
																		self.zip4 := left.Phys_zip4;
																		self.primaryLocation := '';
																		self.practiceAddress := '';
																		self.BillingAddress := '';
																		self.last_seen := (string)left.dt_last_seen;
																		self.first_seen := (string)left.dt_first_seen;
																		self.v_last_seen := (string)left.dt_last_seen;
																		self.v_first_seen := (string)left.dt_first_seen;
																		self.geo_lat := left.Phys_geo_lat;
																		self.geo_long := left.Phys_geo_long;
																		self.fips_state := '';
																		self.fips_county := '';
																		self.PhoneNumber := left.phys_loc_phone;
																		self.FaxNumber := left.phys_loc_fax_number;
																		self.Phones := dataset([{left.phys_loc_phone,left.phys_loc_fax_number}],Healthcare_Shared.Layouts.layout_addressphone);self:=[];));
		Address2 := project(l,transform(Healthcare_Shared.Layouts.layout_addressinfo,
																		self.acctno := left.acctno;
																		self.ProviderID:=left.lnpid;
																		self.addrSeq := Healthcare_Shared.Constants.ADDR_SEQ_NCPDP;
																		self.addrSeqGrp := 0;
																		self.addrGoldFlag := '';
																		self.addrConfidenceValue := '';
																		self.addrType := '';
																		self.addrTypeCode := 'M';
																		self.addrVerificationStatusFlag := '';
																		self.addrVerificationDate := '';
																		self.addrPenalty := 0;
																		self.address1 := left.append_Mailaddr1;
																		self.address2 := left.append_Mailaddrlast;
																		self.prim_range := left.Mail_prim_range;
																		self.predir := left.Mail_predir;
																		self.prim_name := left.Mail_prim_name;
																		self.addr_suffix := left.Mail_addr_suffix;
																		self.postdir := left.Mail_postdir;
																		self.unit_desig := left.Mail_unit_desig;
																		self.sec_range := left.Mail_sec_range;
																		self.p_city_name := left.Mail_p_city_name;
																		self.v_city_name := '';
																		self.st := left.Mail_state;
																		self.z5 := left.Mail_zip5;
																		self.zip4 := left.Mail_zip4;
																		self.primaryLocation := '';
																		self.practiceAddress := '';
																		self.BillingAddress := '';
																		self.last_seen := (string)left.dt_last_seen;
																		self.first_seen := (string)left.dt_first_seen;
																		self.v_last_seen := (string)left.dt_last_seen;
																		self.v_first_seen := (string)left.dt_first_seen;
																		self.geo_lat := left.Mail_geo_lat;
																		self.geo_long := left.Mail_geo_long;
																		self.fips_state := '';
																		self.fips_county := '';
																		self.PhoneNumber := '';
																		self.FaxNumber := '';
																		self.Phones := dataset([],Healthcare_Shared.Layouts.layout_addressphone);self:=[];));
		self.Addresses := (Address1+Address2)(st<>'');
		self.bdids := dataset([{l.acctno,l.lnpid,(integer)l.bdid}],Healthcare_Shared.Layouts.layout_bdid)(bdid>0);
		self.feins := dataset([{l.acctno,l.lnpid,l.federal_tax_id}],Healthcare_Shared.Layouts.layout_fein)(fein<>'');
		self.npis := project(l,transform(Healthcare_Shared.Layouts.layout_npi,self.acctno:=left.acctno;self.ProviderID:=left.lnpid;self.npi:=left.national_provider_id,self.usersupplied:=left.usernpi<>'',self.bestsource:=Healthcare_Shared.Constants.DEFAULT_BESTSCORE;self:=[];));
		self.deas := project(l,transform(Healthcare_Shared.Layouts.layout_dea,self.acctno:=left.acctno;self.Providerid:=left.lnpid;self.dea:=left.dea_registration_id;self.bestsource:=2;self:=[];));
		self.StateLicenses := project(l, transform(Healthcare_Shared.Layouts.layout_licenseinfo, self.licenseAcctno :=left.acctno;self.ProviderID:=left.lnpid;self.group_key:='';self.licenseSeq:=0;
																								self.LicenseState:=left.state_license_number;self.LicenseNumber:=left.state_license_number;
																								self:=[];));
		self.NCPDPRaw := project(project(l,transform(Healthcare_NCPDP.Layouts.LayoutOutput,self:=left;self:=[];)),Healthcare_NCPDP.Transforms.fmtConsolidateSearchResults(left));
		self:=l; 
		self:=[];
	END;
	//NCPDP Rollups
	export Healthcare_Shared.Layouts.layout_addressinfo doNCPDPBaseRecordAddrRollup(Healthcare_Shared.Layouts.layout_addressinfo l,
																										DATASET(Healthcare_Shared.Layouts.layout_addressinfo) allRows) := TRANSFORM
			self.last_seen := max(allRows,last_seen);
			self.first_seen := if(min(allRows,first_seen) <> '', min(allRows,first_seen),min(allRows,last_seen));
			self := l;
			self := [];
	end;
	export Healthcare_Shared.Layouts.CombinedHeaderResults doNCPDPBaseRecordSrcIdRollup(Healthcare_Shared.Layouts.CombinedHeaderResults l, 
																									DATASET(Healthcare_Shared.Layouts.CombinedHeaderResults) allRows) := TRANSFORM
			SELF.acctno := l.acctno;
			self.LNPID := l.LNPID;
			self.SrcId := l.SrcId;
			self.Src := l.Src;
			self.glb_ok	:= l.glb_ok;
			self.dppa_ok:= l.dppa_ok;
			self.ProcessingMessage := l.ProcessingMessage;
			self.srcIndividualHeader := l.srcIndividualHeader;
			self.srcBusinessHeader := l.srcBusinessHeader;
			self.Sources       := DEDUP( NORMALIZE( allRows, LEFT.Sources, TRANSFORM( Healthcare_Shared.Layouts.layout_SrcID, SELF := RIGHT	)	), RECORD, ALL );
			self.Names         := DEDUP( NORMALIZE( allRows, LEFT.Names, TRANSFORM( Healthcare_Shared.Layouts.layout_nameinfo, SELF := RIGHT	)	), RECORD, ALL );
			self.Addresses     := sort(rollup(group(sort(NORMALIZE( allRows, LEFT.Addresses, 
																											TRANSFORM( Healthcare_Shared.Layouts.layout_addressinfo, SELF := RIGHT	)),
																						prim_range,predir,prim_name,addr_suffix,postdir,unit_desig,sec_range,p_city_name,v_city_name,st,z5),
																			 prim_range,predir,prim_name,addr_suffix,postdir,unit_desig,sec_range,p_city_name,v_city_name,st,z5),group,doNCPDPBaseRecordAddrRollup(left,rows(left))),-last_seen,addrseq);
			self.feins         := DEDUP( NORMALIZE( allRows, LEFT.feins, TRANSFORM( Healthcare_Shared.Layouts.layout_fein, SELF := RIGHT	)	), fein, ALL );
			self.bdids         := Healthcare_Shared.Functions.processBDids( NORMALIZE( allRows, LEFT.bdids, TRANSFORM( Healthcare_Shared.Layouts.layout_bdid, SELF := RIGHT	)	) );
			self.npis          := DEDUP( NORMALIZE( allRows, LEFT.npis(npi<>''), TRANSFORM( Healthcare_Shared.Layouts.layout_npi, SELF.npi := TRIM(RIGHT.npi,ALL), SELF := RIGHT	)	), npi, ALL );
			self.deas          := DEDUP( SORT( NORMALIZE( allRows, LEFT.deas(dea<>''), TRANSFORM( Healthcare_Shared.Layouts.layout_dea, SELF.dea := TRIM(RIGHT.dea,ALL), SELF := RIGHT	)	), dea, -expiration_date), dea, expiration_date );
			self.StateLicenses := DEDUP( SORT( NORMALIZE( allRows, LEFT.StateLicenses(LicenseNumber<>''), TRANSFORM( Healthcare_Shared.Layouts.layout_licenseinfo, SELF := RIGHT	)	), LicenseState,-Termination_Date, LicenseNumber), LicenseState, Termination_Date, LicenseNumber );
			self.NCPDPRaw    	 := sort(DEDUP(NORMALIZE(allRows, LEFT.NCPDPRaw, TRANSFORM(iesp.ncpdp.t_PharmacyReportConsolidatedSearch, SELF := RIGHT)), RECORD, ALL ),EntityInformation.PharmacyProviderId);
			self := l;
	end;*/
End;