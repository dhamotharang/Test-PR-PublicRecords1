/*
	Get Field Type -- Returns the type of the field(unsigned8, string4, etc) if the passed field exists in the layout.  
										Returns null string if the field does not exist in the layout.

	Example:
	tools.mac_GetFieldType(DCAV2.Layouts.base.companies	,'rid',doesbdidexist);
	output(doesbdidexist	,named('doesbdidexist'));

*/
export mac_GetFieldType(

	 pLayout														// input layout(if using in macro, this will be meta data from #exportxml)
	,pField															// Field to search for in the above layout
	,pOutput														// Named output to run ecl generated by macro
	,pForUseInMacro						= 'false'	// is output going to be used in a macro(then use set command), otherwise, just :=
	
) :=
macro

	/////////////////////////////////////////////
	// -- Start XML
	/////////////////////////////////////////////
	#IF(pForUseInMacro	= false)
		LOADXML('<xml/>');
		#EXPORTXML(pLayout_MetaInfo							,pLayout)
	#END

	#uniquename(name							)
	#uniquename(named_layout			)
	#uniquename(moutput						)
	#uniquename(lsize							)

	#IF(pForUseInMacro = true)
		#uniquename(pOutput)
	#END
	
	#SET(moutput	,'')
	#SET(named_layout	, '')
	#SET(name					, '')
	#IF(pForUseInMacro	= true)
		#FOR (pLayout)
			#FOR (Field)
				#IF(%'@isRecord'% = '1')
					#SET(named_layout, %'@name'%)
				#ELSE
					#IF(%'named_layout'% = %'@name'% and %'@type'% = '')
						#SET(named_layout, '')
					#ELSE
						#IF(%'named_layout'% != '')
							#SET(name, %'named_layout'% + '.' + %'@name'%)
						#ELSE
							#SET(name			, %'@name'%)
						#END
						#IF(stringlib.stringtouppercase(trim(%'name'%,all)) = stringlib.stringtouppercase(trim(pField,all)))		
							#SET(moutput	,%'@type'% + %'@size'%)
							#BREAK
						#END
					#END
				#END
			#END
		#END
	#ELSE	
		#FOR (pLayout_MetaInfo)
			#FOR (Field)
				#IF(%'@isRecord'% = '1')
					#SET(named_layout, %'@name'%)
				#ELSE
					#IF(%'named_layout'% = %'@name'% and %'@type'% = '')
						#SET(named_layout, '')
					#ELSE
						#IF(%'named_layout'% != '')
							#SET(name, %'named_layout'% + '.' + %'@name'%)
						#ELSE
							#SET(name			, %'@name'%)
						#END
						#IF(stringlib.stringtouppercase(trim(%'name'%,all)) = stringlib.stringtouppercase(trim(pField,all)))		
							#SET(moutput	,%'@type'% + %'@size'%)
							#BREAK
						#END
					#END
				#END
			#END
		#END
	#END
	#IF(pForUseInMacro = true)
		#SET(pOutput, %'moutput'%)
	#ELSE
		pOutput := %'moutput'%;
	#END
endmacro;
