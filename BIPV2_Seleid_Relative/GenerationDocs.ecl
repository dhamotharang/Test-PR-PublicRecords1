Generated by SALT V3.1.3
File being processed :-
MODULE:BIPV2_Seleid_Relative
FILENAME:Base
IDFIELD:EXISTS:Seleid
RIDFIELD:rcid
RECORDS:2919259912
POPULATION:2500000000
NINES:3
FIELDTYPE:wordbag:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'):SPACES( <>{}[]-^=!+&,./):ONFAIL(CLEAN)
FIELDTYPE:alpha:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ)
//BESTTYPE:UniqueSingleValue:BASIS(Proxid):UNIQUE:PROP
// ------------------------------------
//  1. Company
// ------------------------------------
//FIELD:company_name:LIKE(cname):CARRY:0,0
FIELD:cnp_name:EDIT1:LIKE(wordbag):25,278
FIELD:company_inc_state:PROP:7,25
FIELD:company_charter_number:CONTEXT(company_inc_state):PROP:EDIT1:27,47
FIELD:company_fein:PROP:27,160
FIELD:prim_range:FORCE(--):13,138
FIELD:prim_name:15,167
FIELD:postdir:CONTEXT(prim_name):7,54
FIELD:unit_desig:CARRY:0,0
FIELD:sec_range:PROP:FORCE(--):12,199
FIELD:v_city_name:CONTEXT(st):11,99
FIELD:st:LIKE(alpha):5,21
// Active ID fields from reliable sources
//FIELD:active_duns_number:UniqueSingleValue:FORCE(--):25,9
//FIELD:active_enterprise_number:FORCE(--):UniqueSingleValue:26,8
FIELD:active_duns_number:FORCE(--):28,43
FIELD:active_enterprise_number:FORCE(--):28,39
FIELD:source:4,686
FIELD:source_record_id:27,900
FIELD:fname:11,470
FIELD:mname:8,316
FIELD:lname:16,355
FIELD:contact_ssn:27,143
FIELD:contact_phone:27,216
FIELD:company_department:CARRY:0,0
FIELD:contact_email_username:27,201
FIELD:dt_first_seen:RECORDDATE(FIRST):0,0
FIELD:dt_last_seen:RECORDDATE(LAST):0,0
FIELD:dt_first_seen_contact:RECORDDATE(FIRST):0,0
FIELD:dt_last_seen_contact:RECORDDATE(LAST):0,0
HACK:KEYPREFIX
HACK:KEYINFIX
HACK:KEYSUPERFILE
//BLOCKTHRESHOLD:13
// Relationships
RELATIONSHIP:NAMEST:BASIS(cnp_name:st):TRACK(dt_first_seen:dt_last_seen):LINK(NONE):THRESHOLD(10)
RELATIONSHIP:CHARTER:BASIS(company_charter_number:company_inc_state):TRACK(dt_first_seen:dt_last_seen):LINK(NONE):THRESHOLD(20)
RELATIONSHIP:FEIN:BASIS(company_fein):LINK(NONE):TRACK(dt_first_seen:dt_last_seen):THRESHOLD(10)
RELATIONSHIP:CONTACT:BASIS(fname:lname):SCORE(mname:contact_ssn:contact_phone:contact_email_username):TRACK(dt_first_seen_contact:dt_last_seen_contact):MULTIPLE(2):LINK(NONE):THRESHOLD(18)
RELATIONSHIP:ADDRESS:BASIS(prim_name:prim_range:v_city_name:st:?:sec_range):SPLIT(16):DEDUP(prim_range):TRACK(dt_first_seen:dt_last_seen):MULTIPLE(2):LINK(NONE):THRESHOLD(10)
RELATIONSHIP:DUNS_NUMBER:BASIS(active_duns_number):LINK(NONE):TRACK(dt_first_seen:dt_last_seen):THRESHOLD(10)
RELATIONSHIP:ENTERPRISE_NUMBER:BASIS(active_enterprise_number):TRACK(dt_first_seen:dt_last_seen):LINK(NONE):THRESHOLD(10)
RELATIONSHIP:SOURCE:BASIS(source:source_record_id):LINK(NONE):TRACK(dt_first_seen:dt_last_seen):THRESHOLD(20)
RELATIONSHIP:ASSOC:DUNS_NUMBER:ENTERPRISE_NUMBER:SOURCE:CONTACT:ADDRESS:NAMEST:CHARTER:FEIN:CONTACT:ADDRESS:THRESHOLD(18)
Total available specificity:352
Specificity number that should imply one record specified 31.
Assuming an average of 1 records per cluster
Specificity value at which N^2 joins will be tolerated: 25
Recommended matching threshold 41
Search Threshold set at 20
Use of PERSISTs in code set at:3
______________________________English Description of Matching Process___________________________
A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 3 nines of accuracy on a population of -2147483648 with  2919259904 records.
The matching threshold is therefore set at 41.
___Field by Field Breakdown of Scoring Method___
cnp_name Scoring: Two cnp_name fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the cnp_name
and the degree of fuzziness required but should average 25 points with a failed match substracting 18 points.
(This subtraction estimate is based upon 27% of clusters with 2 or more records have 2 or more values for cnp_name.)
company_inc_state Scoring: If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two company_inc_state fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the company_inc_state
but should average 7 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for company_inc_state.)
company_charter_number Scoring:
The scoring for this field is ignored unless the company_inc_state fields are identical.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two company_charter_number fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the company_charter_number
and the degree of fuzziness required but should average 27 points with a failed match substracting 25 points.
(This subtraction estimate is based upon 4% of clusters with 2 or more records have 2 or more values for company_charter_number.)
company_fein Scoring: If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two company_fein fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the company_fein
but should average 27 points with a failed match substracting 22 points.
(This subtraction estimate is based upon 16% of clusters with 2 or more records have 2 or more values for company_fein.)
prim_range Scoring: In order for two records to be a match it is also required that the prim_range fields not not match.
Two prim_range fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the prim_range
but should average 13 points with a failed match substracting 11 points.
(This subtraction estimate is based upon 13% of clusters with 2 or more records have 2 or more values for prim_range.)
prim_name Scoring: Two prim_name fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the prim_name
but should average 15 points with a failed match substracting 12 points.
(This subtraction estimate is based upon 16% of clusters with 2 or more records have 2 or more values for prim_name.)
postdir Scoring:
The scoring for this field is ignored unless the prim_name fields are identical.
Two postdir fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the postdir
but should average 7 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 5% of clusters with 2 or more records have 2 or more values for postdir.)
unit_desig Scoring: This field is not used for scoring; rather it is carried along for context and debugging
sec_range Scoring: In order for two records to be a match it is also required that the sec_range fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two sec_range fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the sec_range
but should average 12 points with a failed match substracting 9 points.
(This subtraction estimate is based upon 19% of clusters with 2 or more records have 2 or more values for sec_range.)
v_city_name Scoring:
The scoring for this field is ignored unless the st fields are identical.
Two v_city_name fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the v_city_name
but should average 11 points with a failed match substracting 9 points.
(This subtraction estimate is based upon 9% of clusters with 2 or more records have 2 or more values for v_city_name.)
st Scoring: Two st fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the st
but should average 5 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for st.)
active_duns_number Scoring: In order for two records to be a match it is also required that the active_duns_number fields not not match.
Two active_duns_number fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the active_duns_number
but should average 28 points with a failed match substracting 26 points.
(This subtraction estimate is based upon 4% of clusters with 2 or more records have 2 or more values for active_duns_number.)
active_enterprise_number Scoring: In order for two records to be a match it is also required that the active_enterprise_number fields not not match.
Two active_enterprise_number fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the active_enterprise_number
but should average 28 points with a failed match substracting 26 points.
(This subtraction estimate is based upon 3% of clusters with 2 or more records have 2 or more values for active_enterprise_number.)
source Scoring: Two source fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the source
but should average 4 points with a failed match substracting 1 points.
(This subtraction estimate is based upon 68% of clusters with 2 or more records have 2 or more values for source.)
source_record_id Scoring: Two source_record_id fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the source_record_id
but should average 27 points with a failed match substracting 2 points.
(This subtraction estimate is based upon 90% of clusters with 2 or more records have 2 or more values for source_record_id.)
fname Scoring: Two fname fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the fname
but should average 11 points with a failed match substracting 5 points.
(This subtraction estimate is based upon 47% of clusters with 2 or more records have 2 or more values for fname.)
mname Scoring: Two mname fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the mname
but should average 8 points with a failed match substracting 5 points.
(This subtraction estimate is based upon 31% of clusters with 2 or more records have 2 or more values for mname.)
lname Scoring: Two lname fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the lname
but should average 16 points with a failed match substracting 10 points.
(This subtraction estimate is based upon 35% of clusters with 2 or more records have 2 or more values for lname.)
contact_ssn Scoring: Two contact_ssn fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the contact_ssn
but should average 27 points with a failed match substracting 23 points.
(This subtraction estimate is based upon 14% of clusters with 2 or more records have 2 or more values for contact_ssn.)
contact_phone Scoring: Two contact_phone fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the contact_phone
but should average 27 points with a failed match substracting 21 points.
(This subtraction estimate is based upon 21% of clusters with 2 or more records have 2 or more values for contact_phone.)
company_department Scoring: This field is not used for scoring; rather it is carried along for context and debugging
contact_email_username Scoring: Two contact_email_username fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the contact_email_username
but should average 27 points with a failed match substracting 21 points.
(This subtraction estimate is based upon 20% of clusters with 2 or more records have 2 or more values for contact_email_username.)
dt_first_seen Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
dt_last_seen Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
dt_first_seen_contact Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
dt_last_seen_contact Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
______________________________English Description of Relationships___________________________
In SALT relationships use identical mathematics and similar logic to normal SALT linking.
The principle difference is that SALT relationships allow a single field or series of fields to acquire a score for more than one field value.
This allows you to capture concepts such as 'these two people share 5 addresses'.
The relationships tracked are :-
NAMEST Relationship:
This relationship is determined by looking for entities that share common values for the fields(the Basis) cnp_name AND st.
The best score for each Basis is kept; two basis are considered different if they have different values for the fields cnp_name AND st.
For a relationship to occur the total score across all Basis values must equal or exceed 10.
CHARTER Relationship:
This relationship is determined by looking for entities that share common values for the fields(the Basis) company_charter_number AND company_inc_state.
The best score for each Basis is kept; two basis are considered different if they have different values for the fields company_charter_number AND company_inc_state.
For a relationship to occur the total score across all Basis values must equal or exceed 20.
FEIN Relationship:
This relationship is determined by looking for entities that share common values for the field(the Basis) company_fein.
The best score for each Basis is kept; two basis are considered different if they have different values for the field company_fein.
For a relationship to occur the total score across all Basis values must equal or exceed 10.
CONTACT Relationship:
This relationship is determined by looking for entities that share common values for the fields(the Basis) fname AND lname.
At least 2 different values for those fields must be shared for a relationship to occur.
The following fields are also scored towards a relationship:mname,contact_ssn,contact_phone,contact_email_username and the highest match score is kept.
The best score for each Basis is kept; two basis are considered different if they have different values for the fields fname AND lname.
For a relationship to occur the total score across all Basis values and score fields must equal or exceed 18.
ADDRESS Relationship:
This relationship is determined by looking for entities that share common values for the fields(the Basis) prim_name,prim_range,v_city_name AND st in addition sec_range must be null or equal.
At least 2 different values for those fields must be shared for a relationship to occur.
The best score for each Basis is kept; two basis are considered different if they have different values for the field prim_range.
For a relationship to occur the total score across all Basis values must equal or exceed 10.
DUNS_NUMBER Relationship:
This relationship is determined by looking for entities that share common values for the field(the Basis) active_duns_number.
The best score for each Basis is kept; two basis are considered different if they have different values for the field active_duns_number.
For a relationship to occur the total score across all Basis values must equal or exceed 10.
ENTERPRISE_NUMBER Relationship:
This relationship is determined by looking for entities that share common values for the field(the Basis) active_enterprise_number.
The best score for each Basis is kept; two basis are considered different if they have different values for the field active_enterprise_number.
For a relationship to occur the total score across all Basis values must equal or exceed 10.
SOURCE Relationship:
This relationship is determined by looking for entities that share common values for the fields(the Basis) source AND source_record_id.
The best score for each Basis is kept; two basis are considered different if they have different values for the fields source AND source_record_id.
For a relationship to occur the total score across all Basis values must equal or exceed 20.
ASSOC Relationship:
Two entities are considered to be in the ASSOC relationship if they are in one or more of the following relationships:
  - DUNS_NUMBER
  - ENTERPRISE_NUMBER
  - SOURCE
  - CONTACT
  - ADDRESS
  - NAMEST
  - CHARTER
  - FEIN
The scores from the child relationships are retained for information purposes although all double-counts are removed.
For a relationship to occur the total score across all Basis values must equal or exceed 18.
__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters
Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.
Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.
__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.