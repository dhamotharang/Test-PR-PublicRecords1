IMPORT corp2, corp2_mapping;

EXPORT Functions := Module

  //********************************************************************
	//  For_or_Dom: Returns "F" or "D"
	//********************************************************************	
	EXPORT  For_or_Dom(STRING filtyp) 
				:= map (corp2.t2u(filtyp) in ['GENERAL BUSINESS CORPORATION (D)',
																			'GENERAL PARTNERSHIP (D)',
																			'LIMITED LIABILITY COMPANY (D)',
																			'LIMITED LIABILITY LIMITED PARTNERSHIP (D)',
																			'LIMITED LIABILITY PARTNERSHIP (D)',
																			'LIMITED PARTNERSHIP (D)',
																			'MUNICIPAL CORPORATION (D)',
																			'NON-PROFIT CORPORATION (D)',
																			'NONREGISTERED ENTITY DESIGNATION OF REGISTERED AGENT',
																			'PROFESSIONAL LIMITED LIABILITY COMPANY (D)',
																			'PROFESSIONAL LIMITED LIABILITY PARTNERSHIP (D)',
																			'PROFESSIONAL SERVICE CORPORATION (D)',
																			'RELIGIOUS NON-PROFIT CORPORATION (D)',
																			'UNINCORPORATED NONPROFIT ASSOCIATION (D)']	            => 'D',
								corp2.t2u(filtyp) in ['FOREIGN BUSINESS CORPORATION',
																			'FOREIGN GENERAL COOPERATIVE ASSOCIATION',
																			'FOREIGN GENERAL PARTNERSHIP',
																			'FOREIGN LIMITED LIABILITY COMPANY',
																			'FOREIGN LIMITED LIABILITY PARTNERSHIP',
																			'FOREIGN LIMITED PARTNERSHIP',
																			'FOREIGN NAME REGISTRATION',
																			'FOREIGN NONPROFIT CORPORATION',
																			'FOREIGN STATUTORY TRUST OR COMMON-LAW BUSINESS TRUST']	=> 'F',
								'');
	
	//********************************************************************
	//  For_Profit: Returns "N" or blank
	//********************************************************************	
	EXPORT  For_Profit(STRING filtyp) 
				:= map (corp2.t2u(filtyp) in ['NON-PROFIT CORPORATION (D)',
																			'RELIGIOUS NON-PROFIT CORPORATION (D)',
																			'UNINCORPORATED NONPROFIT ASSOCIATION (D)',	 
																			'FOREIGN NONPROFIT CORPORATION']            => 'N',
								'');
	
	//********************************************************************
	//  NameTyp_cd: Returns value for CORP_LN_NAME_TYPE_CD
	//********************************************************************	
	EXPORT  NameTyp_cd(STRING filtyp) 
				:= map (corp2.t2u(filtyp) in ['FOREIGN BUSINESS CORPORATION',
																			'FOREIGN GENERAL COOPERATIVE ASSOCIATION',
																			'FOREIGN GENERAL PARTNERSHIP',
																			'FOREIGN LIMITED LIABILITY COMPANY',
																			'FOREIGN LIMITED LIABILITY PARTNERSHIP',
																			'FOREIGN LIMITED PARTNERSHIP',
																			'FOREIGN NONPROFIT CORPORATION',
																			'FOREIGN STATUTORY TRUST OR COMMON-LAW BUSINESS TRUST',
																			'GENERAL BUSINESS CORPORATION (D)',
																			'GENERAL PARTNERSHIP (D)',
																			'LIMITED LIABILITY COMPANY (D)',
																			'LIMITED LIABILITY LIMITED PARTNERSHIP (D)',
																			'LIMITED LIABILITY PARTNERSHIP (D)',
																			'LIMITED PARTNERSHIP (D)',
																			'MUNICIPAL CORPORATION (D)',
																			'NON-PROFIT CORPORATION (D)',
																			'NONREGISTERED ENTITY DESIGNATION OF REGISTERED AGENT',
																			'PROFESSIONAL LIMITED LIABILITY COMPANY (D)',
																			'PROFESSIONAL LIMITED LIABILITY PARTNERSHIP (D)',
																			'PROFESSIONAL SERVICE CORPORATION (D)',
																			'RELIGIOUS NON-PROFIT CORPORATION (D)',
																			'UNINCORPORATED NONPROFIT ASSOCIATION (D)']	      => '01',
								corp2.t2u(filtyp) =   'ASSUMED BUSINESS NAME'  				                  => '06',
								corp2.t2u(filtyp) =   'RESERVATION OF LEGAL ENTITY NAME'  				      => '07',
								corp2.t2u(filtyp) =   'FOREIGN NAME REGISTRATION'                       => '11',
								'');
		
  //********************************************************************
	//  NameTyp_Desc: Returns value for CORP_LN_NAME_TYPE_DESC
	//********************************************************************	
	EXPORT  NameTyp_Desc(STRING filtyp) 
				:= map (corp2.t2u(filtyp) in ['LIMITED LIABILITY COMPANY (D)',
																			'GENERAL BUSINESS CORPORATION (D)',
																			'FOREIGN BUSINESS CORPORATION',
																			'NON-PROFIT CORPORATION (D)',
																			'FOREIGN LIMITED LIABILITY COMPANY',
																			'PROFESSIONAL SERVICE CORPORATION (D)',
																			'UNINCORPORATED NONPROFIT ASSOCIATION (D)',
																			'LIMITED PARTNERSHIP (D)',
																			'PROFESSIONAL LIMITED LIABILITY COMPANY (D)',
																			'RELIGIOUS NON-PROFIT CORPORATION (D)',
																			'LIMITED LIABILITY PARTNERSHIP (D)',
																			'FOREIGN LIMITED PARTNERSHIP',
																			'FOREIGN NONPROFIT CORPORATION',
																			'FOREIGN STATUTORY TRUST OR COMMON-LAW BUSINESS TRUST',
																			'GENERAL PARTNERSHIP (D)',
																			'LIMITED LIABILITY LIMITED PARTNERSHIP (D)',
																			'FOREIGN LIMITED LIABILITY PARTNERSHIP',
																			'FOREIGN GENERAL COOPERATIVE ASSOCIATION',
																			'FOREIGN GENERAL PARTNERSHIP',
																			'MUNICIPAL CORPORATION (D)',
																			'NONREGISTERED ENTITY DESIGNATION OF REGISTERED AGENT',
																			'PROFESSIONAL LIMITED LIABILITY PARTNERSHIP (D)',
																			'NONREGISTERED ENTITY DESIGNATION OF REGISTERED AGENT']	=> 'LEGAL',
								corp2.t2u(filtyp) =   'ASSUMED BUSINESS NAME'  				                        => 'ASSUMED',
								corp2.t2u(filtyp) =   'RESERVATION OF LEGAL ENTITY NAME'  				            => 'RESERVED',
								corp2.t2u(filtyp) =   'FOREIGN NAME REGISTRATION'                             => 'FOREIGN REGISTERED NAME',
								'**|'+ corp2.t2u(filtyp));
								
  //********************************************************************
	//  org_structure: Returns value for CORP_ORIG_ORG_STRUCTURE_DESC
	//********************************************************************	
	EXPORT  org_structure(STRING filtyp) 
				:= map (corp2.t2u(filtyp) in ['FOREIGN BUSINESS CORPORATION',
																			'FOREIGN GENERAL COOPERATIVE ASSOCIATION',
																			'FOREIGN GENERAL PARTNERSHIP',
																			'FOREIGN LIMITED LIABILITY COMPANY',
																			'FOREIGN LIMITED LIABILITY PARTNERSHIP',
																			'FOREIGN LIMITED PARTNERSHIP',
																			'FOREIGN NAME REGISTRATION',
																			'FOREIGN NONPROFIT CORPORATION',
																			'FOREIGN STATUTORY TRUST OR COMMON-LAW BUSINESS TRUST',
																			'GENERAL BUSINESS CORPORATION (D)',
																			'GENERAL PARTNERSHIP (D)',
																			'LIMITED LIABILITY COMPANY (D)',
																			'LIMITED LIABILITY LIMITED PARTNERSHIP (D)',
																			'LIMITED LIABILITY PARTNERSHIP (D)',
																			'LIMITED PARTNERSHIP (D)',
																			'MUNICIPAL CORPORATION (D)',
																			'NON-PROFIT CORPORATION (D)',
																			'NONREGISTERED ENTITY DESIGNATION OF REGISTERED AGENT',
																			'PROFESSIONAL LIMITED LIABILITY COMPANY (D)',
																			'PROFESSIONAL LIMITED LIABILITY PARTNERSHIP (D)',
																			'PROFESSIONAL SERVICE CORPORATION (D)',
																			'RELIGIOUS NON-PROFIT CORPORATION (D)',
																			'RESERVATION OF LEGAL ENTITY NAME',
																			'UNINCORPORATED NONPROFIT ASSOCIATION (D)']	 => corp2.t2u(filtyp),
								corp2.t2u(filtyp) in ['ASSUMED BUSINESS NAME','']			             => '',
								'**|'+ corp2.t2u(filtyp));
								
	//********************************************************************
	// StateCode: returns 2-digit state code 
	//********************************************************************	
	EXPORT  string StateCode(STRING state) := FUNCTION

		st  := corp2.t2u(state);
		RETURN case(st,
						'ALABAMA'										=> 'AL',
						'ALASKA'										=> 'AK',
						'ARIZONA'										=> 'AZ',
						'ARKANSAS'									=> 'AR',
						'CALIFORNIA'								=> 'CA',
						'COLORADO'									=> 'CO',
						'CONNECTICUT'								=> 'CT',
						'DELAWARE'									=> 'DE',
						'DISTRICT OF COLUMBIA'			=> 'DC',
						'FLORIDA'										=> 'FL',
						'GEORGIA'										=> 'GA',
						'HAWAII'										=> 'HI',
						'ILLINOIS'									=> 'IL',
						'INDIANA'										=> 'IN',
						'IOWA'											=> 'IA',
						'KANSAS'										=> 'KS',
						'KENTUCKY'									=> 'KY',
						'STATE OF KENTUCKY'         => 'KY',
						'LOUISIANA'									=> 'LA',
						'MAINE'											=> 'ME',
						'MARYLAND'									=> 'MD',
						'MASSACHUSETTS'							=> 'MA',
						'MICHIGAN'									=> 'MI',
						'MINNESOTA'									=> 'MN',
						'MISSISSIPPI'								=> 'MS',
						'MISSOURI'									=> 'MO',
						'MONTANA'										=> 'MT',
						'NEBRASKA'									=> 'NE',
						'NEVADA'										=> 'NV',
						'NEW HAMPSHIRE'							=> 'NH',
						'NEW JERSEY'								=> 'NJ',
						'NEW MEXICO'								=> 'NM',
						'NEW YORK'									=> 'NY',
						'NORTH CAROLINA'						=> 'NC',
						'NC'                        => 'NC',
						'NORTH DAKOTA'							=> 'ND',
						'OHIO'											=> 'OH',
						'OKLAHOMA'									=> 'OK',
						'OREGON'										=> 'OR',
						'PENNSYLVANIA'							=> 'PA',
						'RHODE ISLAND'							=> 'RI',
						'SOUTH CAROLINA'						=> 'SC',
						'SOUTH DAKOTA'							=> 'SD',
						'TENNESSEE'									=> 'TN',
						'TEXAS'											=> 'TX',
						'UTAH'											=> 'UT',
						'UT'  											=> 'UT',
						'VERMONT'										=> 'VT',
						'VIRGINIA'									=> 'VA',
						'WASHINGTON'								=> 'WA',
						'WASHINGTON STATE'					=> 'WA',
						'WEST VIRGINIA'							=> 'WV',
						'WISCONSIN'									=> 'WI',
						'WYOMING'										=> 'WY',
						'CANADA'										=> 'CN',
						'BRITISH COLUMBIA, CANADA' 	=> 'CN',
						'PUERTO RICO' 							=> 'PR',
						'UNITED STATES'							=> 'US',
						'VIRGIN ISLANDS'						=> 'VI',
						'');							
	END;
								
	//***********************************************************************************************
	// StateDesc: Returns full state name and '**' if we receive invalid /new state values from vendor
	//***********************************************************************************************	
	EXPORT  string StateDesc(STRING state) := FUNCTION

		st  := corp2.t2u(state);
		RETURN case(st,
						'ALABAMA'										=> 'ALABAMA',
						'ALASKA'										=> 'ALASKA',
						'ARIZONA'										=> 'ARIZONA',
						'ARKANSAS'									=> 'ARKANSAS',
						'CALIFORNIA'								=> 'CALIFORNIA',
						'COLORADO'									=> 'COLORADO',
						'CONNECTICUT'								=> 'CONNECTICUT',
						'DELAWARE'									=> 'DELAWARE',
						'DISTRICT OF COLUMBIA'			=> 'DISTRICT OF COLUMBIA',
						'FLORIDA'										=> 'FLORIDA',
						'GEORGIA'										=> 'GEORGIA',
						'HAWAII'										=> 'HAWAII',
						'ILLINOIS'									=> 'ILLINOIS',
						'INDIANA'										=> 'INDIANA',
						'IOWA'											=> 'IOWA',
						'KANSAS'										=> 'KANSAS',
						'KENTUCKY'									=> 'KENTUCKY',
						'STATE OF KENTUCKY'         => 'KENTUCKY',
						'LOUISIANA'									=> 'LOUISIANA',
						'MAINE'											=> 'MAINE',
						'MARYLAND'									=> 'MARYLAND',
						'MASSACHUSETTS'							=> 'MASSACHUSETTS',
						'MICHIGAN'									=> 'MICHIGAN',
						'MINNESOTA'									=> 'MINNESOTA',
						'MISSISSIPPI'								=> 'MISSISSIPPI',
						'MISSOURI'									=> 'MISSOURI',
						'MONTANA'										=> 'MONTANA',
						'NEBRASKA'									=> 'NEBRASKA',
						'NEVADA'										=> 'NEVADA',
						'NEW HAMPSHIRE'							=> 'NEW HAMPSHIRE',
						'NEW JERSEY'								=> 'NEW JERSEY',
						'NEW MEXICO'								=> 'NEW MEXICO',
						'NEW YORK'									=> 'NEW YORK',
						'NC'                        => 'NORTH CAROLINA',
						'NORTH CAROLINA'						=> 'NORTH CAROLINA',
						'NORTH DAKOTA'							=> 'NORTH DAKOTA',
						'OHIO'											=> 'OHIO',
						'OKLAHOMA'									=> 'OKLAHOMA',
						'OREGON'										=> 'OREGON',
						'PENNSYLVANIA'							=> 'PENNSYLVANIA',
						'RHODE ISLAND'							=> 'RHODE ISLAND',
						'SOUTH CAROLINA'						=> 'SOUTH CAROLINA',
						'SOUTH DAKOTA'							=> 'SOUTH DAKOTA',
						'TENNESSEE'									=> 'TENNESSEE',
						'TEXAS'											=> 'TEXAS',
						'UTAH'											=> 'UTAH',
						'UT'                        => 'UTAH',
						'VERMONT'										=> 'VERMONT',
						'VIRGINIA'									=> 'VIRGINIA',
						'WASHINGTON'								=> 'WASHINGTON',
						'WASHINGTON STATE'					=> 'WASHINGTON',
						'WEST VIRGINIA'							=> 'WEST VIRGINIA',
						'WISCONSIN'									=> 'WISCONSIN',
						'WYOMING'										=> 'WYOMING',
						'BRITISH COLUMBIA, CANADA' 	=> 'CANADA',
						'CANADA'										=> 'CANADA',
						'INDIA'                     => 'INDIA',
						'NEW ZEALAND'               => 'NEW ZEALAND',
						'PUERTO RICO'               => 'PUERTO RICO',
						'UNITED STATES'							=> 'UNITED STATES',
						'VIRGIN ISLANDS'						=> 'VIRGIN ISLANDS',
						'04/15/2013'								=> '',
						'12/04/2017'								=> '',
						''                      		=> '',
						'**|'+st);							
	END;
	
	//********************************************************************
	// CountryDesc: Returns valid country description.
	//********************************************************************	
	EXPORT  CountryDesc(STRING st) 
		:= map (corp2.t2u(st) in ['AGENTINA','ARGENTINA']					=> 'ARGENTINA',
						corp2.t2u(st) in ['ARUBA']												=> 'ARUBA',
						corp2.t2u(st) in ['AUSTRAILIA','AUSTRALIA',
															'WESTERN AUSTRAILIA','AUS',
															'QUEENSLAND AU']								=> 'AUSTRAILIA',
						corp2.t2u(st) in ['BARBADOS','BRB']								=> 'BARBADOS',
						corp2.t2u(st) in ['BELARUS']											=> 'BELARUS',
						corp2.t2u(st) in ['BELIZE']												=> 'BELIZE',
						corp2.t2u(st) in ['BERMUDA']											=> 'BERMUDA',
						corp2.t2u(st) in ['ALBERTA','BC','BRITISH COLOMBIA',
															'BRITISH COLUMBIA','CANADA',
															'CANADA QC','CANADA V2T 6W3',
															'ONTARIO CANADA']								=> 'CANADA',
						corp2.t2u(st) in ['CHINA','CHN']									=> 'CHINA',
						corp2.t2u(st) in ['CURACAO']											=> 'CURACAO',
						corp2.t2u(st) in ['EGYPT']												=> 'EGYPT',
						corp2.t2u(st) in ['ENGLAND']											=> 'ENGLAND',
						corp2.t2u(st) in ['FINLAND']											=> 'FINLAND',
						corp2.t2u(st) in ['FRANCE']												=> 'FRANCE',
						corp2.t2u(st) in ['GERMANY']											=> 'GERMANY',
						corp2.t2u(st) in ['GBR']													=> 'GREAT BRITAIN',
						corp2.t2u(st) in ['GREECE']												=> 'GREECE',
						corp2.t2u(st) in ['GUAM']													=> 'GUAM',
						corp2.t2u(st) in ['HUNGARY']											=> 'HUNGARY',
						corp2.t2u(st) in ['INDIA','KARNATAKA']						=> 'INDIA',
						corp2.t2u(st) in ['ISLE OF MAN']									=> 'ISLE OF MAN',
						corp2.t2u(st) in ['ISRAEL']												=> 'ISRAEL',
						corp2.t2u(st) in ['ITALY']												=> 'ITALY',
						corp2.t2u(st) in ['JAPAN']												=> 'JAPAN',
						corp2.t2u(st) in ['KAZAKHSTAN']										=> 'KAZAKHSTAN',
						corp2.t2u(st) in ['KYRGYZSTAN']										=> 'KYRGYZSTAN',
						corp2.t2u(st) in ['LUXEMBOURG']										=> 'LUXEMBOURG',
						corp2.t2u(st) in ['MALAYSIA','SELANGOR']					=> 'MALAYSIA',
						corp2.t2u(st) in ['MEX','MEXICO']									=> 'MEXICO',
						corp2.t2u(st) in ['NAMIBIA']											=> 'NAMIBIA',
						corp2.t2u(st) in ['NEW ZEALAND']									=> 'NEW ZEALAND',
						corp2.t2u(st) in ['NORWAY']												=> 'NORWAY',
						corp2.t2u(st) in ['PAN']													=> 'PANAMA',
						corp2.t2u(st) in ['PHILIPPINES','PHL']						=> 'PHILIPPINES',
						corp2.t2u(st) in ['PUERTO RICO']									=> 'PUERTO RICO',
						corp2.t2u(st) in ['SEYCHELLES']										=> 'SEYCHELLES',
						corp2.t2u(st) in ['SINGAPORE']										=> 'SINGAPORE',
						corp2.t2u(st) in ['REP. OF SOUTH AFRICA']					=> 'SOUTH AFRICA',
						corp2.t2u(st) in ['SPAIN']												=> 'SPAIN',
						corp2.t2u(st) in ['SWEDEN']												=> 'SWEDEN',
						corp2.t2u(st) in ['TAIWAN',
															'TAIWAN, PROVINCE OF CHINA']		=> 'TAIWAN',
						corp2.t2u(st) in ['NETHERLANDS','NETHERLANDS, THE',
															'THE NETHERLANDS']							=> 'THE NETHERLANDS',
						corp2.t2u(st) in ['UNITED ARAB EMIRATES']         => 'UNITED ARAB EMIRATES',
						corp2.t2u(st) in ['UNITED KINGDOM','UK','U.K.']   => 'UNITED KINGDOM',
						corp2.t2u(st) in ['KIEV UKRAINE','UKRAINE']				=> 'UKRAINE',
						corp2.t2u(st) in ['URUGUAY']											=> 'URUGUAY',
						corp2.t2u(st) in ['83350','83554','83616','83639',
															'83702','83705','83705-5204',
															'83706','83709','83814','83852',
															'83864','84003','84003-1728',
															'97224','97281-3773','99201',
															'ADA','BANNOCK','BENAWHA',
															'BINGHAM','BLAINE','BONNEVILLE',
															'CANYON','ELMORE','GEM','HI',
															'ID','KOOTENAI','LEWIS',
															'SALT LAKE COUNTY','SANTA CLARA',
															'TWIN FALLS','U S A','UNITED STATES',
															'U.S.','U.S.A','U.S.A.','US',
															'USA','WA']											=> 'US',
						corp2.t2u(st) in ['UZBEKISTAN']                   => 'UZBEKISTAN',
						corp2.t2u(st) in ['VIETNAM']											=> 'VIETNAM',
						corp2.t2u(st) in ['US VIRGIN ISLANDS','USVI',
															'VIRGIN ISLANDS']								=> 'VIRGIN ISLANDS',
						corp2.t2u(st) in ['','2189','ERIE']								=> '',
						'**|' + corp2.t2u(st));
		
END;		