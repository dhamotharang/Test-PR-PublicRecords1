IMPORT SALT34,ut;
EXPORT BasicMatch(DATASET(layout_PROPERTY_TRANSACTION) ih) := MODULE// An extremely tight pre-match designed to quickly eliminate high volume duplicates
SHARED  h00 := Specificities(ih).input_file;
  SHARED s := Specificities(ih).specificities[1];
  SHARED h00_match := h00(((recorder_page_number NOT IN SET(s.nulls_recorder_page_number,recorder_page_number) AND recorder_page_number <> (TYPEOF(recorder_page_number))'') OR (document_number NOT IN SET(s.nulls_document_number,document_number) AND document_number <> (TYPEOF(document_number))'')), 
      0 + IF( (fips_code  IN SET(s.nulls_fips_code,fips_code) OR fips_code = (TYPEOF(fips_code))''), 0, 8 ) + IF( (apnt_or_pin_number  IN SET(s.nulls_apnt_or_pin_number,apnt_or_pin_number) OR apnt_or_pin_number = (TYPEOF(apnt_or_pin_number))''), 0, 25 ) + IF( (did  IN SET(s.nulls_did,did) OR did = (TYPEOF(did))''), 0, 26 ) + IF( (name  IN SET(s.nulls_name,name) OR name = (TYPEOF(name))''), 0, 9 ) + IF( (prim_range_alpha  IN SET(s.nulls_prim_range_alpha,prim_range_alpha) OR prim_range_alpha = (TYPEOF(prim_range_alpha))''), 0, 10 ) + IF( (prim_range_num  IN SET(s.nulls_prim_range_num,prim_range_num) OR prim_range_num = (TYPEOF(prim_range_num))''), 0, 6 ) + IF( (prim_name_num  IN SET(s.nulls_prim_name_num,prim_name_num) OR prim_name_num = (TYPEOF(prim_name_num))''), 0, 8 ) + IF( (prim_name_alpha  IN SET(s.nulls_prim_name_alpha,prim_name_alpha) OR prim_name_alpha = (TYPEOF(prim_name_alpha))''), 0, 8 ) + IF( (sec_range_alpha  IN SET(s.nulls_sec_range_alpha,sec_range_alpha) OR sec_range_alpha = (TYPEOF(sec_range_alpha))''), 0, 10 ) + IF( (sec_range_num  IN SET(s.nulls_sec_range_num,sec_range_num) OR sec_range_num = (TYPEOF(sec_range_num))''), 0, 8 ) + IF( (city  IN SET(s.nulls_city,city) OR city = (TYPEOF(city))''), 0, 6 ) + IF( (st  IN SET(s.nulls_st,st) OR st = (TYPEOF(st))''), 0, 6 ) + IF( (zip  IN SET(s.nulls_zip,zip) OR zip = (TYPEOF(zip))''), 0, 13 ) + IF( (recording_date  IN SET(s.nulls_recording_date,recording_date) OR recording_date = (TYPEOF(recording_date))''), 0, 12 ) + IF( (SourceType  IN SET(s.nulls_SourceType,SourceType) OR SourceType = (TYPEOF(SourceType))''), 0, 1 ) + IF( (contract_date  IN SET(s.nulls_contract_date,contract_date) OR contract_date = (TYPEOF(contract_date))''), 0, 12 ) + IF( (document_number  IN SET(s.nulls_document_number,document_number) OR document_number = (TYPEOF(document_number))''), 0, 12 ) + IF( (recorder_book_number  IN SET(s.nulls_recorder_book_number,recorder_book_number) OR recorder_book_number = (TYPEOF(recorder_book_number))''), 0, 16 ) + IF( (recorder_page_number  IN SET(s.nulls_recorder_page_number,recorder_page_number) OR recorder_page_number = (TYPEOF(recorder_page_number))''), 0, 12 ) + IF( (sales_price  IN SET(s.nulls_sales_price,sales_price) OR sales_price = (TYPEOF(sales_price))''), 0, 13 ) + IF( (first_td_loan_amount  IN SET(s.nulls_first_td_loan_amount,first_td_loan_amount) OR first_td_loan_amount = (TYPEOF(first_td_loan_amount))''), 0, 13 ) + IF( (lender_name  IN SET(s.nulls_lender_name,lender_name) OR lender_name = (TYPEOF(lender_name))''), 0, 7 ) + IF( (county_name  IN SET(s.nulls_county_name,county_name) OR county_name = (TYPEOF(county_name))''), 0, 8 ) >= Config.BasicMatchThreshold); // Potentially remove anything that would violate FORCE(+) constraints
  MatchCands := JOIN(h00_match,Specificities(ih).ClusterSizes(InCluster=1),LEFT.DPROPTXID=RIGHT.DPROPTXID,TRANSFORM(LEFT),LOCAL); // Singletons only may match
  Rec := RECORD
    SALT34.UIDType DPROPTXID1;
    SALT34.UIDType DPROPTXID2;
  END;
// It is important that this is an EQUIVALENCE relationship - it allows us to form an implicit transitive closure
  h01 := SORT(h00_match,fips_code,apnt_or_pin_number,did,name,prim_range_alpha,prim_range_num,prim_name_num,prim_name_alpha,sec_range_alpha,sec_range_num,city,st,zip,recording_date,SourceType,contract_date,document_number,recorder_book_number,recorder_page_number,sales_price,first_td_loan_amount,lender_name,county_name,DPROPTXID);
  h02 := DEDUP(h01,fips_code,apnt_or_pin_number,did,name,prim_range_alpha,prim_range_num,prim_name_num,prim_name_alpha,sec_range_alpha,sec_range_num,city,st,zip,recording_date,SourceType,contract_date,document_number,recorder_book_number,recorder_page_number,sales_price,first_td_loan_amount,lender_name,county_name,LOCAL); // ,LOCAL ok - we don't need a perfect dedup - this is an optimization
  Match := JOIN(h02,MatchCands,LEFT.fips_code = RIGHT.fips_code AND LEFT.apnt_or_pin_number = RIGHT.apnt_or_pin_number AND LEFT.did = RIGHT.did AND LEFT.name = RIGHT.name AND LEFT.prim_range_alpha = RIGHT.prim_range_alpha
       AND LEFT.prim_range_num = RIGHT.prim_range_num AND LEFT.prim_name_num = RIGHT.prim_name_num AND LEFT.prim_name_alpha = RIGHT.prim_name_alpha AND LEFT.sec_range_alpha = RIGHT.sec_range_alpha AND LEFT.sec_range_num = RIGHT.sec_range_num
       AND LEFT.city = RIGHT.city AND LEFT.st = RIGHT.st AND LEFT.zip = RIGHT.zip AND LEFT.recording_date = RIGHT.recording_date AND LEFT.SourceType = RIGHT.SourceType
       AND LEFT.contract_date = RIGHT.contract_date AND LEFT.document_number = RIGHT.document_number AND LEFT.recorder_book_number = RIGHT.recorder_book_number AND LEFT.recorder_page_number = RIGHT.recorder_page_number AND LEFT.recorder_book_number = RIGHT.recorder_book_number AND LEFT.sales_price = RIGHT.sales_price
       AND LEFT.first_td_loan_amount = RIGHT.first_td_loan_amount AND LEFT.lender_name = RIGHT.lender_name AND LEFT.county_name = RIGHT.county_name AND LEFT.DPROPTXID < RIGHT.DPROPTXID,TRANSFORM(Rec,SELF.DPROPTXID2 := LEFT.DPROPTXID,SELF.DPROPTXID1 := RIGHT.DPROPTXID), HASH);
SHARED PickOne := DEDUP( SORT( DISTRIBUTE( Match,HASH(DPROPTXID1) ), DPROPTXID1, DPROPTXID2, LOCAL), DPROPTXID1, LOCAL); // Lowest collector ID for each singleton
EXPORT patch_file := PickOne;
  ut.MAC_Patch_Id_local(h00,DPROPTXID,PickOne,DPROPTXID1,DPROPTXID2,o1); // Patch the input file
EXPORT input_file := o1 : INDEPENDENT;
EXPORT basic_match_count := COUNT(PickOne);
EXPORT id_delta := COUNT(DEDUP(h00,DPROPTXID,ALL))-COUNT(DEDUP(input_file,DPROPTXID,ALL)); // Should equal basic_match_count
END;
