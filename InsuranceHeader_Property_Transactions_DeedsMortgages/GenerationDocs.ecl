Generated by SALT V3.4.1
Command line options: -gs2 -ga 
File being processed :-
THRESHOLD:25
MODULE:InsuranceHeader_Property_Transactions_DeedsMortgages
FILENAME:PROPERTY_TRANSACTION 
IDFIELD:EXISTS:DPROPTXID 
IDNAME:DPROPTXID
RIDFIELD:rid
RECORDS:629786819
POPULATION:629786819
NINES:3
FIELDTYPE:WORDBAG:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'):SPACES( <>{}[]-^=!+&,./):ONFAIL(CLEAN):
//Fuzzy document number function 
FUZZY:InitialDoc:RS:CUSTOM(InsuranceHeader_Property_Transactions_DeedsMortgages.fn_document_number):TYPE(STRING20)
FIELD:fips_code:8,0
FIELD:apnt_or_pin_number:TYPE(STRING45):EDIT1:WEIGHT(0.5):25,0
FIELD:ln_fares_id:CARRY
FIELD:did:WEIGHT(0.5):26,0
FIELD:name:TYPE(STRING80):EDIT1:HYPHEN2:ABBR:BAGOFWORDS(ALL):9,0
FIELD:prim_range:CARRY
FIELD:prim_range_alpha:10,0
FIELD:prim_range_num:INITIAL:HYPHEN2:FORCE(+):6,0
FIELD:prim_name:CARRY
FIELD:prim_name_num:INITIAL:FORCE(--):8,0
FIELD:prim_name_alpha:TYPE(STRING28):EDIT1:HYPHEN2:BAGOFWORDS(ALL):FORCE(+):8,0
FIELD:sec_range:CARRY
FIELD:sec_range_alpha:PROP:FORCE(--):10,0
FIELD:sec_range_num:INITIAL:HYPHEN2:PROP:FORCE(--):8,0
FIELD:city:TYPE(STRING25):BAGOFWORDS(MOST):EDIT2:HYPHEN2:6,0
FIELD:st:6,0
FIELD:zip:EDIT1:FORCE(+):13,0
FIELD:recording_date:FORCE:12,0
FIELD:SourceType:FORCE:1,0
FIELD:contract_date:PROP:FORCE(--):12,0
FIELD:document_number:SWITCH0:InitialDoc:12,0
FIELD:document_type_code:CARRY
FIELD:recorder_book_number:16,0
FIELD:recorder_page_number:CONTEXT(recorder_book_number):FORCE(+5,OR(document_number)):12,0
FIELD:sales_price:PROP:FORCE(--):13,0
FIELD:first_td_loan_amount:PROP:FORCE(--):13,0
FIELD:lender_name:TYPE(STRING40):EDIT1:HYPHEN2:ABBR:BAGOFWORDS(ALL):SWITCH0:7,0
FIELD:county_name:8,0
CONCEPT:primrange:prim_range_alpha:prim_range_num:13,0
CONCEPT:primname:prim_name_alpha:prim_name_num:14,0
CONCEPT:secrange:sec_range_alpha:sec_range_num:13,0
CONCEPT:locale:city:st:zip:13,0
CONCEPT:address:primrange:primname:secrange:locale:FORCE(+):25,0
Total available specificity:327
Specificity number that should imply one record specified 29.
Assuming an average of 1 records per cluster
Specificity value at which N^2 joins will be tolerated: 23
User specified threshold 25
Recommended matching threshold 39
Search Threshold set at 17
Use of PERSISTs in code set at:3
______________________________English Description of Matching Process___________________________
A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 3 nines of accuracy on a population of 629786816 with   629786816 records.
A matching threshold of 39 is recommended although this was overridden to 25.
___Field by Field Breakdown of Scoring Method___
fips_code Scoring: Two fips_code fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the fips_code
but should average 8 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for fips_code.)
apnt_or_pin_number Scoring: Two apnt_or_pin_number fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the apnt_or_pin_number
and the degree of fuzziness required but should average 25 points with a failed match substracting 25 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for apnt_or_pin_number.)
The SPC file has specified that the weight should be multiplied by  0.50
ln_fares_id Scoring: This field is not used for scoring; rather it is carried along for context and debugging
did Scoring: Two did fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the did
but should average 26 points with a failed match substracting 26 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for did.)
The SPC file has specified that the weight should be multiplied by  0.50
name Scoring: Two name fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - if the space separated tokens in one match the other if re-arranged
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the name
and the degree of fuzziness required but should average 9 points with a failed match substracting 9 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for name.)
prim_range Scoring: This field is not used for scoring; rather it is carried along for context and debugging
prim_range_alpha Scoring: Two prim_range_alpha fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the prim_range_alpha
but should average 10 points with a failed match substracting 10 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for prim_range_alpha.)
It should also be noted that prim_range_alpha is a child field of primrange. Therefore if primrange is a full match this field will score 0.
This field is scaled to match with its parent primrange, on average that will mean multiplying by 81%
prim_range_num Scoring: In order for two records to be a match it is also required that the prim_range_num fields match.
Two prim_range_num fields will be considered to match if:
  - they are identical
  - one is the leading part of the other
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the prim_range_num
and the degree of fuzziness required but should average 6 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for prim_range_num.)
It should also be noted that prim_range_num is a child field of primrange. Therefore if primrange is a full match this field will score 0.
This field is scaled to match with its parent primrange, on average that will mean multiplying by 81%
(Although the score is still computed to satisfy the forcing condition.)
prim_name Scoring: This field is not used for scoring; rather it is carried along for context and debugging
prim_name_num Scoring: In order for two records to be a match it is also required that the prim_name_num fields not not match.
Two prim_name_num fields will be considered to match if:
  - they are identical
  - one is the leading part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the prim_name_num
and the degree of fuzziness required but should average 8 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for prim_name_num.)
It should also be noted that prim_name_num is a child field of primname. Therefore if primname is a full match this field will score 0.
This field is scaled to match with its parent primname, on average that will mean multiplying by 87%
(Although the score is still computed to satisfy the forcing condition.)
prim_name_alpha Scoring: In order for two records to be a match it is also required that the prim_name_alpha fields match.
Two prim_name_alpha fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - if the space separated tokens in one match the other if re-arranged
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the prim_name_alpha
and the degree of fuzziness required but should average 8 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for prim_name_alpha.)
It should also be noted that prim_name_alpha is a child field of primname. Therefore if primname is a full match this field will score 0.
This field is scaled to match with its parent primname, on average that will mean multiplying by 87%
(Although the score is still computed to satisfy the forcing condition.)
sec_range Scoring: This field is not used for scoring; rather it is carried along for context and debugging
sec_range_alpha Scoring: In order for two records to be a match it is also required that the sec_range_alpha fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two sec_range_alpha fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the sec_range_alpha
but should average 10 points with a failed match substracting 10 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for sec_range_alpha.)
It should also be noted that sec_range_alpha is a child field of secrange. Therefore if secrange is a full match this field will score 0.
This field is scaled to match with its parent secrange, on average that will mean multiplying by 72%
(Although the score is still computed to satisfy the forcing condition.)
sec_range_num Scoring: In order for two records to be a match it is also required that the sec_range_num fields not not match.
If a field is null or an initial and another record in the same cluster has a fuller value for that field then the other records value will be used.
Two sec_range_num fields will be considered to match if:
  - they are identical
  - one is the leading part of the other
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the sec_range_num
and the degree of fuzziness required but should average 8 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for sec_range_num.)
It should also be noted that sec_range_num is a child field of secrange. Therefore if secrange is a full match this field will score 0.
This field is scaled to match with its parent secrange, on average that will mean multiplying by 72%
(Although the score is still computed to satisfy the forcing condition.)
city Scoring: Two city fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 2 edits (see Glossary)
  - if the space separated tokens in one match the other if re-arranged
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the city
and the degree of fuzziness required but should average 6 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for city.)
It should also be noted that city is a child field of locale. Therefore if locale is a full match this field will score 0.
This field is scaled to match with its parent locale, on average that will mean multiplying by 52%
st Scoring: Two st fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the st
but should average 6 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for st.)
It should also be noted that st is a child field of locale. Therefore if locale is a full match this field will score 0.
This field is scaled to match with its parent locale, on average that will mean multiplying by 52%
zip Scoring: In order for two records to be a match it is also required that the zip fields match.
Two zip fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the zip
and the degree of fuzziness required but should average 13 points with a failed match substracting 13 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for zip.)
It should also be noted that zip is a child field of locale. Therefore if locale is a full match this field will score 0.
This field is scaled to match with its parent locale, on average that will mean multiplying by 52%
(Although the score is still computed to satisfy the forcing condition.)
recording_date Scoring: In order for two records to be a match it is also required that the recording_date fields match.
Two recording_date fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the recording_date
but should average 12 points with a failed match substracting 12 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for recording_date.)
SourceType Scoring: In order for two records to be a match it is also required that the SourceType fields match.
Two SourceType fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the SourceType
but should average 1 points with a failed match substracting 1 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for SourceType.)
contract_date Scoring: In order for two records to be a match it is also required that the contract_date fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two contract_date fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the contract_date
but should average 12 points with a failed match substracting 12 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for contract_date.)
document_number Scoring: Two document_number fields will be considered to match if:
  - they are identical
  - if the two fields have the same value for the function InitialDoc
The exact number of points allocated to a match will depend upon the global scarcity of the document_number
but should average 12 points with a failed match substracting 12 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for document_number.)
document_type_code Scoring: This field is not used for scoring; rather it is carried along for context and debugging
recorder_book_number Scoring: Two recorder_book_number fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the recorder_book_number
but should average 16 points with a failed match substracting 16 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for recorder_book_number.)
recorder_page_number Scoring: In order for two records to be a match it is also required that the recorder_page_number fields match.
Specifically the score awarded to this field must be >= 5 .
The scoring for this field is ignored unless the recorder_book_number fields are identical.
Two recorder_page_number fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the recorder_page_number
but should average 12 points with a failed match substracting 12 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for recorder_page_number.)
sales_price Scoring: In order for two records to be a match it is also required that the sales_price fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two sales_price fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the sales_price
but should average 13 points with a failed match substracting 13 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for sales_price.)
first_td_loan_amount Scoring: In order for two records to be a match it is also required that the first_td_loan_amount fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two first_td_loan_amount fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the first_td_loan_amount
but should average 13 points with a failed match substracting 13 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for first_td_loan_amount.)
lender_name Scoring: Two lender_name fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - if the space separated tokens in one match the other if re-arranged
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the lender_name
and the degree of fuzziness required but should average 7 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for lender_name.)
county_name Scoring: Two county_name fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the county_name
but should average 8 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for county_name.)
primrange Scoring: Two primrange fields will be considered to match if:
  - they are identical
Note: primrange is an amalgam of (prim_range_alpha,prim_range_num)
Points will only be allocated for a match, the amount depending upon the scarcity of primrange
but should average 13 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that primrange is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 47%
primname Scoring: Two primname fields will be considered to match if:
  - they are identical
Note: primname is an amalgam of (prim_name_alpha,prim_name_num)
Points will only be allocated for a match, the amount depending upon the scarcity of primname
but should average 14 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that primname is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 47%
secrange Scoring: Two secrange fields will be considered to match if:
  - they are identical
Note: secrange is an amalgam of (sec_range_alpha,sec_range_num)
Points will only be allocated for a match, the amount depending upon the scarcity of secrange
but should average 13 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that secrange is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 47%
locale Scoring: Two locale fields will be considered to match if:
  - they are identical
Note: locale is an amalgam of (city,st,zip)
Points will only be allocated for a match, the amount depending upon the scarcity of locale
but should average 13 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that locale is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 47%
address Scoring: In order for two records to be a match it is also required that the address fields match.
Two address fields will be considered to match if:
  - they are identical
Note: address is an amalgam of (primrange,primname,secrange,locale)
Points will only be allocated for a match, the amount depending upon the scarcity of address
but should average 25 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score) and the sum of the scores of its' children will be used to determine the force criteria.
__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters
Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.
Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.
__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.
