
EXPORT KEL_GraphPrep := MODULE

  IMPORT FraudgovKEL, FraudGovPlatform_Analytics, FraudGovPlatform, Data_services, Std;

	/*
  // LEAVING THIS HERE FOR R&D to switch in to limit compile times.
	jr := RECORD
  integer1 entitytype;
  string label;
  integer1 riskindx;
  integer1 islastentityeventflag;
  integer1 aotkractflagev;
  integer1 aotsafeactflagev;
  unsigned8 eventcount;
  unsigned8 event30count;
  unsigned8 event365count;
  integer1 eventafterkrflag;
  unsigned8 eventafterkrcount;
  integer8 industrytype;
  integer8 customerid;
  string entitycontextuid;
  integer8 recordid;
  string caseid;
  unsigned4 eventdate;
  string ottoaddressid;
  unsigned4 deceaseddate;
  unsigned4 deceaseddateofbirth;
  string deceasedfirst;
  string deceasedmiddle;
  string deceasedlast;
  string phonenumber;
  string ottoemailid;
  string ottoipaddressid;
  string ottodriverslicenseid;
  integer8 currentlyincarceratedflag;
  integer8 deceased;
  integer8 eventage;
  integer8 contributorsafeflag;
  integer8 safeflag;
  integer8 incustomerpopulation;
  integer8 addressisvacant;
  integer8 addressiscmra;
  integer8 addressispobox;
  integer8 invalidaddress;
  integer8 addressoutofstate;
  string unique_number;
  string mac_address;
  string serial_number;
  string device_type;
  string device_identification_provider;
  integer8 addreventcount;
  integer8 ssneventcount;
  integer8 personeventcount;
  integer8 phoneeventcount;
  integer8 emaileventcount;
  integer8 ipeventcount;
  integer8 bankaccounteventcount;
  integer8 driverslicenseeventcount;
  integer8 addrevent30count;
  integer8 ssnevent30count;
  integer8 personevent30count;
  integer8 phoneevent30count;
  integer8 emailevent30count;
  integer8 ipevent30count;
  integer8 bankaccountevent30count;
  integer8 driverslicenseevent30count;
  integer8 addrevent365count;
  integer8 ssnevent365count;
  integer8 personevent365count;
  integer8 phoneevent365count;
  integer8 emailevent365count;
  integer8 ipevent365count;
  integer8 bankaccountevent365count;
  integer8 driverslicenseevent365count;
  integer8 addreventafterkrflag;
  integer8 ssneventafterkrflag;
  integer8 personeventafterkrflag;
  integer8 phoneeventafterkrflag;
  integer8 emaileventafterkrflag;
  integer8 ipeventafterkrflag;
  integer8 bankaccounteventafterkrflag;
  integer8 driverslicenseeventafterkrflag;
  integer8 addreventafterkrcount;
  integer8 ssneventafterkrcount;
  integer8 personeventafterkrcount;
  integer8 phoneeventafterkrcount;
  integer8 emaileventafterkrcount;
  integer8 ipeventafterkrcount;
  integer8 bankaccounteventafterkrcount;
  integer8 driverslicenseeventafterkrcount;
  integer8 kreventafterknownrisk;
  integer8 krpersonprofileflag;
  integer8 kremailprofileflag;
  integer8 kraddressprofileflag;
  integer8 kripprofileflag;
  integer8 krssnprofileflag;
  integer8 krphoneprofileflag;
  integer8 krbankaccountprofileflag;
  integer8 krdriverslicenseprofileflag;
  integer8 idislasteventid;
  integer8 emlislasteventid;
  integer8 addrislasteventid;
  integer8 ipislasteventid;
  integer8 bnkislasteventid;
  integer8 dlislasteventid;
  integer8 ssnislasteventid;
  integer8 phislasteventid;
  string personlabel;
  string emaillabel;
  string addresslabel;
  string iplabel;
  string bankaccountlabel;
  string driverslicenselabel;
  string ssnlabel;
  string phonelabel;
  string addressentitycontextuid;
  string ssnentitycontextuid;
  string personentitycontextuid;
  string phoneentitycontextuid;
  string emailentitycontextuid;
  string ipentitycontextuid;
  string bankaccountentitycontextuid;
  string driverslicenseentitycontextuid;
  string streetaddress;
  string city;
  string state;
  string zip;
  integer8 agencyuid;
  integer8 agencyprogtype;
  string agencyprogjurst;
  integer8 t_srcagencyuid;
  integer8 t_srcagencyprogtype;
  integer8 t_actuid;
  unsigned4 t_actdtecho;
  integer8 t_srctype;
  integer8 t_srcclasstype;
  integer8 t_personuidecho;
  string t_inpclntitleecho;
  string t_inpclnfirstnmecho;
  string t_inpclnlastnmecho;
  string t_inpclnnmsuffixecho;
  string t_inpclnaddrprimrangeecho;
  string t_inpclnaddrpredirecho;
  string t_inpclnaddrprimnmecho;
  string t_inpclnaddrsuffixecho;
  string t_inpclnaddrpostdirecho;
  string t_inpclnaddrunitdesigecho;
  string t_inpclnaddrsecrangeecho;
  string t_inpclnaddrcityecho;
  string t_inpclnaddrstecho;
  string t_inpclnaddrzip5echo;
  string t_inpclnaddrzip4echo;
  real8 t_inpclnaddrlatecho;
  real8 t_inpclnaddrlongecho;
  integer8 t_inpclnaddrcountyecho;
  integer8 t_inpclnaddrgeoblkecho;
  string t_inpclnssnecho;
  integer8 t_inpclndobecho;
  string t_inpclndlecho;
  string t_inpclndlstecho;
  string t_inpclnemailecho;
  string t_inpclnbnkacctecho;
  string t_inpclnbnkacctrtgecho;
  string t_inpclnipaddrecho;
  string t_inpclnphnecho;
  integer8 t1_lexidpopflag;
  integer8 t1_rinidpopflag;
  integer8 t18_isipmetahitflag;
  string t18_ipaddrcity;
  string t18_ipaddrcountry;
  string t18_ipaddrregion;
  string t18_ipaddrdomain;
  string t18_ipaddrispnm;
  string t18_ipaddrloctype;
  string t18_ipaddrproxytype;
  string t18_ipaddrproxydesc;
  integer8 t18_ipaddrisispflag;
  string t18_ipaddrasncompnm;
  string t18_ipaddrasn;
  string t18_ipaddrcompnm;
  string t18_ipaddrorgnm;
  integer8 t18_ipaddrhostedflag;
  integer8 t18_ipaddrvpnflag;
  integer8 t18_ipaddrtornodeflag;
  integer8 t18_ipaddrlocnonusflag;
  integer8 t18_ipaddrlocmiamiflag;
  integer8 t19_bnkacctpopflag;
  integer8 t19_isbnkapphitflag;
  string t19_bnkacctbnknm;
  integer8 t19_bnkaccthrprepdrtgflag;
  integer8 t17_emailpopflag;
  string t17_emaildomain;
  integer8 t17_emaildomaindispflag;
  integer8 t9_addrpopflag;
  string t9_addrtype;
  string t9_addrstatus;
  integer8 t16_phnpopflag;
  integer8 t15_ssnpopflag;
  integer8 t20_dlpopflag;
  integer8 t18_ipaddrpopflag;
  integer8 t_inagencyflag;
  integer8 t_evttype1krcodeecho;
  integer8 t_evttype2krcodeecho;
  integer8 t_evttype3krcodeecho;
  integer8 t_idkrcodeecho;
  integer8 t_ssnkrcodeecho;
  integer8 t_dlkrcodeecho;
  integer8 t_addrkrcodeecho;
  integer8 t_phnkrcodeecho;
  integer8 t_emailkrcodeecho;
  integer8 t_ipaddrkrcodeecho;
  integer8 t_bnkacctkrcodeecho;
  integer8 t15_ssniskrflag;
  integer8 t20_dliskrflag;
  integer8 t9_addriskrflag;
  integer8 t16_phniskrflag;
  integer8 t17_emailiskrflag;
  integer8 t18_ipaddriskrflag;
  integer8 t19_bnkacctiskrflag;
  integer8 t1_idiskrgenfrdflag;
  integer8 t1_idiskrstolidflag;
  integer8 t1_idiskrappfrdflag;
  integer8 t1_idiskrothfrdflag;
  integer8 t1_idiskrflag;
  integer8 t_firstnmpopflag;
  integer8 t_lastnmpopflag;
  integer8 t_dobpopflag;
  integer8 p1_aotidcurrprofflag;
  integer8 p9_aotaddrcurrprofflag;
  integer8 p15_aotssncurrprofflag;
  integer8 p20_aotdlcurrprofflag;
  integer8 p16_aotphncurrprofflag;
  integer8 p17_aotemailcurrprofflag;
  integer8 p18_aotipaddrcurrprofflag;
  integer8 p19_aotbnkacctcurrprofflag;
  integer8 p1_aotidkractcntev;
  integer8 p1_aotidkractflagev;
  integer8 p1_aotidkractshrdcntev;
  integer8 p1_aotidkractshrdflagev;
  integer8 p1_aotidkractolddtev;
  integer8 p1_aotidkractnewdtev;
  integer8 p1_aotidkractshrdolddtev;
  integer8 p1_aotidkractshrdnewdtev;
  integer8 p1_aotidkrappfrdactcntev;
  integer8 p1_aotidkrappfrdactflagev;
  integer8 p1_aotidkrappfrdactshrdcntev;
  integer8 p1_aotidkrappfrdactshrdflagev;
  integer8 p1_aotidkrappfrdactolddtev;
  integer8 p1_aotidkrappfrdactnewdtev;
  integer8 p1_aotidkrappfrdactshrdolddtev;
  integer8 p1_aotidkrappfrdactshrdnewdtev;
  integer8 p1_aotidkrgenfrdactcntev;
  integer8 p1_aotidkrgenfrdactflagev;
  integer8 p1_aotidkrgenfrdactshrdcntev;
  integer8 p1_aotidkrgenfrdactshrdflagev;
  integer8 p1_aotidkrgenfrdactolddtev;
  integer8 p1_aotidkrgenfrdactnewdtev;
  integer8 p1_aotidkrgenfrdactshrdolddtev;
  integer8 p1_aotidkrgenfrdactshrdnewdtev;
  integer8 p1_aotidkrothfrdactcntev;
  integer8 p1_aotidkrothfrdactflagev;
  integer8 p1_aotidkrothfrdactshrdcntev;
  integer8 p1_aotidkrothfrdactshrdflagev;
  integer8 p1_aotidkrothfrdactolddtev;
  integer8 p1_aotidkrothfrdactnewdtev;
  integer8 p1_aotidkrothfrdactshrdolddtev;
  integer8 p1_aotidkrothfrdactshrdnewdtev;
  integer8 p1_aotidkrstolidactcntev;
  integer8 p1_aotidkrstolidactflagev;
  integer8 p1_aotidkrstolidactshrdcntev;
  integer8 p1_aotidkrstolidactshrdflagev;
  integer8 p1_aotidkrstolidactolddtev;
  integer8 p1_aotidkrstolidactnewdtev;
  integer8 p1_aotidkrstolidactshrdolddtev;
  integer8 p1_aotidkrstolidactshrdnewdtev;
  integer8 p9_aotaddrkractcntev;
  integer8 p9_aotaddrkractflagev;
  integer8 p9_aotaddrkractshrdcntev;
  integer8 p9_aotaddrkractshrdflagev;
  integer8 p9_aotaddrkractolddtev;
  integer8 p9_aotaddrkractnewdtev;
  integer8 p9_aotaddrkractshrdolddtev;
  integer8 p9_aotaddrkractshrdnewdtev;
  integer8 p15_aotssnkractcntev;
  integer8 p15_aotssnkractflagev;
  integer8 p15_aotssnkractshrdcntev;
  integer8 p15_aotssnkractshrdflagev;
  integer8 p15_aotssnkractolddtev;
  integer8 p15_aotssnkractnewdtev;
  integer8 p15_aotssnkractshrdolddtev;
  integer8 p15_aotssnkractshrdnewdtev;
  integer8 p16_aotphnkractcntev;
  integer8 p16_aotphnkractflagev;
  integer8 p16_aotphnkractshrdcntev;
  integer8 p16_aotphnkractshrdflagev;
  integer8 p16_aotphnkractolddtev;
  integer8 p16_aotphnkractnewdtev;
  integer8 p16_aotphnkractshrdolddtev;
  integer8 p16_aotphnkractshrdnewdtev;
  integer8 p17_aotemailkractcntev;
  integer8 p17_aotemailkractflagev;
  integer8 p17_aotemailkractshrdcntev;
  integer8 p17_aotemailkractshrdflagev;
  integer8 p17_aotemailkractolddtev;
  integer8 p17_aotemailkractnewdtev;
  integer8 p17_aotemailkractshrdolddtev;
  integer8 p17_aotemailkractshrdnewdtev;
  integer8 p18_aotipaddrkractcntev;
  integer8 p18_aotipaddrkractflagev;
  integer8 p18_aotipaddrkractshrdcntev;
  integer8 p18_aotipaddrkractshrdflagev;
  integer8 p18_aotipaddrkractolddtev;
  integer8 p18_aotipaddrkractnewdtev;
  integer8 p18_aotipaddrkractshrdolddtev;
  integer8 p18_aotipaddrkractshrdnewdtev;
  integer8 p19_aotbnkacctkractcntev;
  integer8 p19_aotbnkacctkractflagev;
  integer8 p19_aotbnkacctkractshrdcntev;
  integer8 p19_aotbnkacctkractshrdflagev;
  integer8 p19_aotbnkacctkractolddtev;
  integer8 p19_aotbnkacctkractnewdtev;
  integer8 p19_aotbnkacctkractshrdolddtev;
  integer8 p19_aotbnkacctkractshrdnewdtev;
  integer8 p20_aotdlkractcntev;
  integer8 p20_aotdlkractflagev;
  integer8 p20_aotdlkractshrdcntev;
  integer8 p20_aotdlkractshrdflagev;
  integer8 p20_aotdlkractolddtev;
  integer8 p20_aotdlkractnewdtev;
  integer8 p20_aotdlkractshrdolddtev;
  integer8 p20_aotdlkractshrdnewdtev;
  integer1 p1_idriskindx;
  integer1 p15_ssnriskindx;
  integer1 p16_phnriskindx;
  integer1 p17_emailriskindx;
  integer1 p19_bnkacctriskindx;
  integer1 p20_dlriskindx;
  integer1 p18_ipaddrriskindx;
  integer1 p9_addrriskindx;
 END;

	SHARED EntityEventPivot := DATASET('~gov::otto::eventpivot', jr, THOR);
*/
	SHARED EntityEventPivot := FraudgovKEL.KEL_EventPivot.EventPivotShell;

	// build only for profile records in pivot
  EXPORT LinksPrep := JOIN(EntityEventPivot(iscurrent = 1), EntityEventPivot, 
	               LEFT.customerid = RIGHT.customerid AND LEFT.industrytype=RIGHT.industrytype AND LEFT.recordid=RIGHT.recordid AND LEFT.entitycontextuid != RIGHT.entitycontextuid AND 
								 (LEFT.entitytype != 1 AND RIGHT.entitytype = 1 OR LEFT.entitytype = 1 AND RIGHT.entitytype != 1),
	               TRANSFORM({LEFT.customerid, LEFT.industrytype, STRING treeuid, RIGHT.entitycontextuid, LEFT.t_actdtecho}, SELF.treeuid := LEFT.entitycontextuid, SELF.entitycontextuid := RIGHT.entitycontextuid, SELF := LEFT), HASH);
								 
  
  // Zero Degree
  SHARED Links0 := PROJECT(DEDUP(SORT(LinksPrep, customerid, industrytype, treeuid, LOCAL), customerid, industrytype, treeuid, LOCAL), TRANSFORM(RECORDOF(LEFT), SELF.entitycontextuid := LEFT.treeuid, SELF := LEFT));
  // 1st degree
  EXPORT Links1 := DEDUP(SORT(JOIN(LinksPrep, LinksPrep, 
	               LEFT.customerid = RIGHT.customerid AND LEFT.industrytype = RIGHT.industrytype AND LEFT.entitycontextuid = RIGHT.treeuid AND LEFT.treeuid != RIGHT.entitycontextuid,
	               TRANSFORM(RECORDOF(LEFT), SELF.treeuid := LEFT.treeuid, SELF.entitycontextuid := RIGHT.entitycontextuid, SELF := LEFT), HASH), customerid, industrytype, treeuid, entitycontextuid), customerid, industrytype, treeuid, entitycontextuid);

/*  EXPORT Links2 := JOIN(Links1, LinksPrep, 
	               LEFT.customerid = RIGHT.customerid AND LEFT.industrytype = RIGHT.industrytype AND LEFT.entitycontextuid = RIGHT.treeuid AND LEFT.treeuid != RIGHT.entitycontextuid,
	               TRANSFORM(RECORDOF(LEFT), SELF.treeuid := LEFT.treeuid, SELF.entitycontextuid := RIGHT.entitycontextuid, SELF := LEFT), HASH);
*/	
	EXPORT LinksFinal := DEDUP(SORT(DISTRIBUTE(Links0 + LinksPrep + Links1/* + Links2*/, HASH32(treeuid)), customerid, industrytype, treeuid, entitycontextuid, LOCAL), customerid, industrytype, treeuid, entitycontextuid, LOCAL);
	
	GraphFinal := JOIN(LinksFinal, EntityEventPivot, LEFT.customerid = RIGHT.customerid AND LEFT.industrytype = RIGHT.industrytype AND LEFT.entitycontextuid = RIGHT.entitycontextuid, 
	              TRANSFORM({LEFT.customerid, LEFT.industrytype, LEFT.treeuid, LEFT.entitycontextuid, RIGHT.t_actdtecho, RIGHT.entitytype, RIGHT.label, 
								RIGHT.riskindx, RIGHT.aotkractflagev, RIGHT.aotsafeactflagev, RIGHT.personeventcount,
								RIGHT.t_inpclndobecho, RIGHT.t1L_iddeceasedflag, RIGHT.aotidactcntev,RIGHT.deceaseddate}, 
								SELF.customerid := LEFT.customerid, SELF.treeuid := LEFT.treeuid, SELF.entitycontextuid := LEFT.entitycontextuid, SELF := RIGHT),
                KEEP(1), HASH) : PERSIST('~temp::fraudgov::temp::persist::entities');
	
	EXPORT Vertices := GraphFinal;
	
	EdgesFinal := JOIN(LinksFinal, LinksPrep(treeuid[2..3] = '01'), LEFT.customerid = RIGHT.customerid AND LEFT.industrytype = RIGHT.industrytype AND LEFT.entitycontextuid = RIGHT.treeuid,
	              TRANSFORM({LEFT.customerid, LEFT.industrytype, LEFT.treeuid, STRING fromentitycontextuid, STRING toentitycontextuid}, 
								   SELF.fromentitycontextuid := RIGHT.treeuid, SELF.toentitycontextuid := RIGHT.entitycontextuid, SELF := LEFT), HASH);// : PERSIST('~temp::fraudgov::temp::persist::edges');

  EXPORT Edges := EdgesFinal;	

END;
