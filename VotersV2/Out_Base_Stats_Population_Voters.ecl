import STRATA;

export Out_Base_Stats_Population_Voters(string filedate) := function

	rPopulationStats_VotersV2__File_Voters_Base
	 :=
	  record
		CountGroup 									   := count(group); 
		VotersV2.File_Voters_Building.source_state;
		rid_CountNonZero                               := sum(group,if(VotersV2.File_Voters_Building.rid<>0,1,0));
		did_CountNonZero                               := sum(group,if(VotersV2.File_Voters_Building.did<>0,1,0));
		did_score_CountNonZero                         := sum(group,if(VotersV2.File_Voters_Building.did_score<>0,1,0));
		ssn_CountNonBlank                              := sum(group,if(VotersV2.File_Voters_Building.ssn<>'',1,0));
		vtid_CountNonZero                              := sum(group,if(VotersV2.File_Voters_Building.vtid<>0,1,0));
		process_date_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.process_date<>'',1,0));
		date_first_seen_CountNonBlank                  := sum(group,if(VotersV2.File_Voters_Building.date_first_seen<>'',1,0));
		date_last_seen_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.date_last_seen<>'',1,0));
		Source_CountNonBlank                           := sum(group,if(VotersV2.File_Voters_Building.Source<>'',1,0));
		file_id_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.file_id<>'',1,0));
		vendor_id_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.vendor_id<>'',1,0));
		source_code_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.source_code<>'',1,0));
		file_acquired_date_CountNonBlank               := sum(group,if(VotersV2.File_Voters_Building.file_acquired_date<>'',1,0));
		use_code_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.use_code<>'',1,0));
		name_type_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.name_type<>'',1,0));
		prefix_title_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.prefix_title<>'',1,0));
		last_name_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.last_name<>'',1,0));
		first_name_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.first_name<>'',1,0));
		middle_name_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.middle_name<>'',1,0));
		maiden_prior_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.maiden_prior<>'',1,0));
		clean_maiden_pri_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.clean_maiden_pri<>'',1,0));
		name_suffix_in_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.name_suffix_in<>'',1,0));
		voterfiller_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.voterfiller<>'',1,0));
		source_voterId_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.source_voterId<>'',1,0));		
		dob_CountNonBlank                              := sum(group,if(VotersV2.File_Voters_Building.dob<>'',1,0));
		ageCat_CountNonBlank                           := sum(group,if(VotersV2.File_Voters_Building.ageCat<>'',1,0));
		ageCat_exp_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.ageCat_exp<>'',1,0));
		headHousehold_CountNonBlank                    := sum(group,if(VotersV2.File_Voters_Building.headHousehold<>'',1,0));
		place_of_birth_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.place_of_birth<>'',1,0));
		occupation_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.occupation<>'',1,0));
		maiden_name_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.maiden_name<>'',1,0));
		motorVoterId_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.motorVoterId<>'',1,0));
		regSource_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.regSource<>'',1,0));
		regDate_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.regDate<>'',1,0));
		race_CountNonBlank                             := sum(group,if(VotersV2.File_Voters_Building.race<>'',1,0));
		race_exp_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.race_exp<>'',1,0));
		gender_CountNonBlank                           := sum(group,if(VotersV2.File_Voters_Building.gender<>'',1,0));
		political_party_CountNonBlank                  := sum(group,if(VotersV2.File_Voters_Building.political_party<>'',1,0));
		politicalparty_exp_CountNonBlank               := sum(group,if(VotersV2.File_Voters_Building.politicalparty_exp<>'',1,0));
		phone_CountNonBlank                            := sum(group,if(VotersV2.File_Voters_Building.phone<>'',1,0));
		work_phone_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.work_phone<>'',1,0));
		other_phone_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.other_phone<>'',1,0));
		active_status_CountNonBlank                    := sum(group,if(VotersV2.File_Voters_Building.active_status<>'',1,0));
		active_status_exp_CountNonBlank                := sum(group,if(VotersV2.File_Voters_Building.active_status_exp<>'',1,0));
		GenderSurNamGuess_CountNonBlank                := sum(group,if(VotersV2.File_Voters_Building.GenderSurNamGuess<>'',1,0));
		active_other_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.active_other<>'',1,0));
		voter_status_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.voter_status<>'',1,0));
		voter_status_exp_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.voter_status_exp<>'',1,0));
		res_Addr1_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.res_Addr1<>'',1,0));
		res_Addr2_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.res_Addr2<>'',1,0));
		res_city_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.res_city<>'',1,0));
		res_state_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.res_state<>'',1,0));
		res_zip_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.res_zip<>'',1,0));
		res_county_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.res_county<>'',1,0));
		mail_addr1_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.mail_addr1<>'',1,0));
		mail_addr2_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.mail_addr2<>'',1,0));
		mail_city_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.mail_city<>'',1,0));
		mail_state_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.mail_state<>'',1,0));
		mail_zip_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.mail_zip<>'',1,0));
		mail_county_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.mail_county<>'',1,0));
		addr_filler1_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.addr_filler1<>'',1,0));
		addr_filler2_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.addr_filler2<>'',1,0));
		city_filler_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.city_filler<>'',1,0));
		state_filler_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.state_filler<>'',1,0));
		zip_filler_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.zip_filler<>'',1,0));
		TimeZoneTbl_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.TimeZoneTbl<>'',1,0));
		towncode_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.towncode<>'',1,0));
		distcode_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.distcode<>'',1,0));
		countycode_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.countycode<>'',1,0));
		schoolcode_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.schoolcode<>'',1,0));
		cityInOut_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.cityInOut<>'',1,0));
		spec_dist1_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.spec_dist1<>'',1,0));
		spec_dist2_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.spec_dist2<>'',1,0));
		precinct1_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.precinct1<>'',1,0));
		precinct2_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.precinct2<>'',1,0));
		precinct3_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.precinct3<>'',1,0));
		villagePrecinct_CountNonBlank                  := sum(group,if(VotersV2.File_Voters_Building.villagePrecinct<>'',1,0));
		schoolPrecinct_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.schoolPrecinct<>'',1,0));
		ward_CountNonBlank                             := sum(group,if(VotersV2.File_Voters_Building.ward<>'',1,0));
		precinct_cityTown_CountNonBlank                := sum(group,if(VotersV2.File_Voters_Building.precinct_cityTown<>'',1,0));
		ANCSMDinDC_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.ANCSMDinDC<>'',1,0));
		cityCouncilDist_CountNonBlank                  := sum(group,if(VotersV2.File_Voters_Building.cityCouncilDist<>'',1,0));
		countyCommDist_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.countyCommDist<>'',1,0));
		stateHouse_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.stateHouse<>'',1,0));
		stateSenate_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.stateSenate<>'',1,0));
		USHouse_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.USHouse<>'',1,0));
		elemSchoolDist_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.elemSchoolDist<>'',1,0));
		schoolDist_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.schoolDist<>'',1,0));
		schoolFiller_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.schoolFiller<>'',1,0));
		CommCollDist_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.CommCollDist<>'',1,0));
		dist_filler_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.dist_filler<>'',1,0));
		municipal_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.municipal<>'',1,0));
		VillageDist_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.VillageDist<>'',1,0));
		PoliceJury_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.PoliceJury<>'',1,0));
		PoliceDist_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.PoliceDist<>'',1,0));
		PublicServComm_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.PublicServComm<>'',1,0));
		Rescue_CountNonBlank                           := sum(group,if(VotersV2.File_Voters_Building.Rescue<>'',1,0));
		Fire_CountNonBlank                             := sum(group,if(VotersV2.File_Voters_Building.Fire<>'',1,0));
		Sanitary_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.Sanitary<>'',1,0));
		SewerDist_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.SewerDist<>'',1,0));
		WaterDist_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.WaterDist<>'',1,0));
		MosquitoDist_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.MosquitoDist<>'',1,0));
		TaxDist_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.TaxDist<>'',1,0));
		SupremeCourt_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.SupremeCourt<>'',1,0));
		JusticeOfPeace_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.JusticeOfPeace<>'',1,0));
		JudicialDist_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.JudicialDist<>'',1,0));
		SuperiorCtDist_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.SuperiorCtDist<>'',1,0));
		AppealsCt_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.AppealsCt<>'',1,0));
		CourtFIller_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.CourtFIller<>'',1,0));
		CassAddrTypTbl_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.CassAddrTypTbl<>'',1,0));
		CassDelivPointCd_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.CassDelivPointCd<>'',1,0));
		CassCarrierRteTbl_CountNonBlank                := sum(group,if(VotersV2.File_Voters_Building.CassCarrierRteTbl<>'',1,0));
		BlkGrpEnumDist_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.BlkGrpEnumDist<>'',1,0));
		CongressionalDist_CountNonBlank                := sum(group,if(VotersV2.File_Voters_Building.CongressionalDist<>'',1,0));
		Lattitude_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.Lattitude<>'',1,0));
		CountyFips_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.CountyFips<>'',1,0));
		CensusTract_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.CensusTract<>'',1,0));
		FipsStCountyCd_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.FipsStCountyCd<>'',1,0));
		Longitude_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.Longitude<>'',1,0));
		LastDateVote_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.LastDateVote<>'',1,0));
		MiscVoteHist_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.MiscVoteHist<>'',1,0));
		title_CountNonBlank                            := sum(group,if(VotersV2.File_Voters_Building.title<>'',1,0));
		fname_CountNonBlank                            := sum(group,if(VotersV2.File_Voters_Building.fname<>'',1,0));
		mname_CountNonBlank                            := sum(group,if(VotersV2.File_Voters_Building.mname<>'',1,0));
		lname_CountNonBlank                            := sum(group,if(VotersV2.File_Voters_Building.lname<>'',1,0));
		name_suffix_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.name_suffix<>'',1,0));
		name_score_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.name_score<>'',1,0));
		addr_type_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.addr_type<>'',1,0));
		prim_range_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.prim_range<>'',1,0));
		predir_CountNonBlank                           := sum(group,if(VotersV2.File_Voters_Building.predir<>'',1,0));
		prim_name_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.prim_name<>'',1,0));
		addr_suffix_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.addr_suffix<>'',1,0));
		postdir_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.postdir<>'',1,0));
		unit_desig_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.unit_desig<>'',1,0));
		sec_range_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.sec_range<>'',1,0));
		p_city_name_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.p_city_name<>'',1,0));
		v_city_name_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.v_city_name<>'',1,0));
		st_CountNonBlank                               := sum(group,if(VotersV2.File_Voters_Building.st<>'',1,0));
		zip_CountNonBlank                              := sum(group,if(VotersV2.File_Voters_Building.zip<>'',1,0));
		zip4_CountNonBlank                             := sum(group,if(VotersV2.File_Voters_Building.zip4<>'',1,0));
		cart_CountNonBlank                             := sum(group,if(VotersV2.File_Voters_Building.cart<>'',1,0));
		cr_sort_sz_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.cr_sort_sz<>'',1,0));
		lot_CountNonBlank                              := sum(group,if(VotersV2.File_Voters_Building.lot<>'',1,0));
		lot_order_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.lot_order<>'',1,0));
		dpbc_CountNonBlank                             := sum(group,if(VotersV2.File_Voters_Building.dpbc<>'',1,0));
		chk_digit_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.chk_digit<>'',1,0));
		rec_type_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.rec_type<>'',1,0));
		ace_fips_st_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.ace_fips_st<>'',1,0));
		fips_county_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.fips_county<>'',1,0));
		geo_lat_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.geo_lat<>'',1,0));
		geo_long_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.geo_long<>'',1,0));
		msa_CountNonBlank                              := sum(group,if(VotersV2.File_Voters_Building.msa<>'',1,0));
		geo_blk_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.geo_blk<>'',1,0));
		geo_match_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.geo_match<>'',1,0));
		err_stat_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.err_stat<>'',1,0));
		mail_prim_range_CountNonBlank                  := sum(group,if(VotersV2.File_Voters_Building.mail_prim_range<>'',1,0));
		mail_predir_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.mail_predir<>'',1,0));
		mail_prim_name_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.mail_prim_name<>'',1,0));
		mail_addr_suffix_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.mail_addr_suffix<>'',1,0));
		mail_postdir_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.mail_postdir<>'',1,0));
		mail_unit_desig_CountNonBlank                  := sum(group,if(VotersV2.File_Voters_Building.mail_unit_desig<>'',1,0));
		mail_sec_range_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.mail_sec_range<>'',1,0));
		mail_p_city_name_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.mail_p_city_name<>'',1,0));
		mail_v_city_name_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.mail_v_city_name<>'',1,0));
		mail_st_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.mail_st<>'',1,0));
		mail_ace_zip_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.mail_ace_zip<>'',1,0));
		mail_zip4_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.mail_zip4<>'',1,0));
		mail_cart_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.mail_cart<>'',1,0));
		mail_cr_sort_sz_CountNonBlank                  := sum(group,if(VotersV2.File_Voters_Building.mail_cr_sort_sz<>'',1,0));
		mail_lot_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.mail_lot<>'',1,0));
		mail_lot_order_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.mail_lot_order<>'',1,0));
		mail_dpbc_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.mail_dpbc<>'',1,0));
		mail_chk_digit_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.mail_chk_digit<>'',1,0));
		mail_rec_type_CountNonBlank                    := sum(group,if(VotersV2.File_Voters_Building.mail_rec_type<>'',1,0));
		mail_ace_fips_st_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.mail_ace_fips_st<>'',1,0));
		mail_fips_county_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.mail_fips_county<>'',1,0));
		mail_geo_lat_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.mail_geo_lat<>'',1,0));
		mail_geo_long_CountNonBlank                    := sum(group,if(VotersV2.File_Voters_Building.mail_geo_long<>'',1,0));
		mail_msa_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.mail_msa<>'',1,0));
		mail_geo_blk_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.mail_geo_blk<>'',1,0));
		mail_geo_match_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.mail_geo_match<>'',1,0));
		mail_err_stat_CountNonBlank                    := sum(group,if(VotersV2.File_Voters_Building.mail_err_stat<>'',1,0));
		IDTypes_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.IDTypes<>'',1,0));
		precinct_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.precinct<>'',1,0));
		ward1_CountNonBlank                            := sum(group,if(VotersV2.File_Voters_Building.ward1<>'',1,0));
		IDCode_CountNonBlank                           := sum(group,if(VotersV2.File_Voters_Building.IDCode<>'',1,0));
		PrecinctPartTextDesig_CountNonBlank            := sum(group,if(VotersV2.File_Voters_Building.PrecinctPartTextDesig<>'',1,0));
		PrecinctPartTextName_CountNonBlank             := sum(group,if(VotersV2.File_Voters_Building.PrecinctPartTextName<>'',1,0));
		PrecinctTextDesig_CountNonBlank                := sum(group,if(VotersV2.File_Voters_Building.PrecinctTextDesig<>'',1,0));
		MarriedAppend_CountNonBlank                    := sum(group,if(VotersV2.File_Voters_Building.MarriedAppend<>'',1,0));
		SupervisorDistrict_CountNonBlank               := sum(group,if(VotersV2.File_Voters_Building.SupervisorDistrict<>'',1,0));
		district_CountNonBlank                         := sum(group,if(VotersV2.File_Voters_Building.district<>'',1,0));
		ward2_CountNonBlank                            := sum(group,if(VotersV2.File_Voters_Building.ward2<>'',1,0));
		CityCountyCouncil_CountNonBlank                := sum(group,if(VotersV2.File_Voters_Building.CityCountyCouncil<>'',1,0));
		CountyPrecinct_CountNonBlank                   := sum(group,if(VotersV2.File_Voters_Building.CountyPrecinct<>'',1,0));
		CountyCommis_CountNonBlank                     := sum(group,if(VotersV2.File_Voters_Building.CountyCommis<>'',1,0));
		SchoolBoard_CountNonBlank                      := sum(group,if(VotersV2.File_Voters_Building.SchoolBoard<>'',1,0));
		ward3_CountNonBlank                            := sum(group,if(VotersV2.File_Voters_Building.ward3<>'',1,0));
		TownCityCouncil1_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.TownCityCouncil1<>'',1,0));
		TownCityCouncil2_CountNonBlank                 := sum(group,if(VotersV2.File_Voters_Building.TownCityCouncil2<>'',1,0));
		regents_CountNonBlank                          := sum(group,if(VotersV2.File_Voters_Building.regents<>'',1,0));
		WaterShed_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.WaterShed<>'',1,0));
		education_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.education<>'',1,0));
		PoliceConstable_CountNonBlank                  := sum(group,if(VotersV2.File_Voters_Building.PoliceConstable<>'',1,0));
		FreeHolder_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.FreeHolder<>'',1,0));
		MuniCourt_CountNonBlank                        := sum(group,if(VotersV2.File_Voters_Building.MuniCourt<>'',1,0));
		ChangeDate_CountNonBlank                       := sum(group,if(VotersV2.File_Voters_Building.ChangeDate<>'',1,0));
	  end;

	dPopulationStats_VotersV2__File_Voters_Base := table(VotersV2.File_Voters_Building,
														  rPopulationStats_VotersV2__File_Voters_Base,
														  source_state,
														  few
														);


	Layout_out := record
		string2 state_code := '';
		VotersV2.Layout_Voters_VoteHistory;
	end;

	vh_base := distribute(VotersV2.File_Voters_VoteHistory_base, vtid);

	v_base  := distribute(VotersV2.File_Voters_Building, vtid);

	Layout_out getStateCode(v_base l, vh_base r) := transform
	 self.state_code := l.source_state;
	 self := r; 
	end;

	out_vh_base := join(v_base, vh_base, left.vtid = right.vtid,
						getStateCode(left, right), left outer, local);
											

	rPopulationStats_VotersV2__File_Voters_VoteHistory_Base
	 :=
	  record
		out_vh_base.state_code;
		vh_vtid_CountNonZero            := sum(group,if(out_vh_base.vtid<>0,1,0));
		voted_year_CountNonBlank        := sum(group,if(out_vh_base.voted_year<>'',1,0));
		primary_CountNonBlank           := sum(group,if(out_vh_base.primary<>'',1,0));
		special_1_CountNonBlank         := sum(group,if(out_vh_base.special_1<>'',1,0));
		other_CountNonBlank             := sum(group,if(out_vh_base.other<>'',1,0));
		special_2_CountNonBlank         := sum(group,if(out_vh_base.special_2<>'',1,0));
		general_CountNonBlank           := sum(group,if(out_vh_base.general<>'',1,0));
		pres_CountNonBlank              := sum(group,if(out_vh_base.pres<>'',1,0));    
	end;

	dPopulationStats_VotersV2__File_Voters_VoteHistory_Base := table(out_vh_base,
														  rPopulationStats_VotersV2__File_Voters_VoteHistory_Base,
														  state_code,
																											  few
																		   );
	Layout_full_stats := record
		string source_state;
		integer CountGroup;
		integer rid_CountNonZero;
		integer did_CountNonZero;
		integer did_score_CountNonZero;
		integer ssn_CountNonBlank;
		integer vtid_CountNonZero;
		integer process_date_CountNonBlank;
		integer date_first_seen_CountNonBlank;
		integer date_last_seen_CountNonBlank;
		integer Source_CountNonBlank;
		integer file_id_CountNonBlank;
		integer vendor_id_CountNonBlank;
		integer source_code_CountNonBlank;
		integer file_acquired_date_CountNonBlank;
		integer use_code_CountNonBlank;
		integer name_type_CountNonBlank;
		integer prefix_title_CountNonBlank;
		integer last_name_CountNonBlank;
		integer first_name_CountNonBlank;
		integer middle_name_CountNonBlank;
		integer maiden_prior_CountNonBlank;
		integer clean_maiden_pri_CountNonBlank;
		integer name_suffix_in_CountNonBlank;
		integer voterfiller_CountNonBlank;
		integer source_voterId_CountNonBlank;
		integer dob_CountNonBlank;
		integer ageCat_CountNonBlank;
		integer ageCat_exp_CountNonBlank;
		integer headHousehold_CountNonBlank;
		integer place_of_birth_CountNonBlank;
		integer occupation_CountNonBlank;
		integer maiden_name_CountNonBlank;
		integer motorVoterId_CountNonBlank;
		integer regSource_CountNonBlank;
		integer regDate_CountNonBlank;
		integer race_CountNonBlank;
		integer race_exp_CountNonBlank;
		integer gender_CountNonBlank;
		integer political_party_CountNonBlank;
		integer politicalparty_exp_CountNonBlank;
		integer phone_CountNonBlank;
		integer work_phone_CountNonBlank;
		integer other_phone_CountNonBlank;
		integer active_status_CountNonBlank;
		integer active_status_exp_CountNonBlank;
		integer GenderSurNamGuess_CountNonBlank;
		integer active_other_CountNonBlank;
		integer voter_status_CountNonBlank;
		integer voter_status_exp_CountNonBlank;
		integer res_Addr1_CountNonBlank;
		integer res_Addr2_CountNonBlank;
		integer res_city_CountNonBlank;
		integer res_state_CountNonBlank;
		integer res_zip_CountNonBlank;
		integer res_county_CountNonBlank;
		integer mail_addr1_CountNonBlank;
		integer mail_addr2_CountNonBlank;
		integer mail_city_CountNonBlank;
		integer mail_state_CountNonBlank;
		integer mail_zip_CountNonBlank;
		integer mail_county_CountNonBlank;
		integer addr_filler1_CountNonBlank;
		integer addr_filler2_CountNonBlank;
		integer city_filler_CountNonBlank;
		integer state_filler_CountNonBlank;
		integer zip_filler_CountNonBlank;
		integer TimeZoneTbl_CountNonBlank;
		integer towncode_CountNonBlank;
		integer distcode_CountNonBlank;
		integer countycode_CountNonBlank;
		integer schoolcode_CountNonBlank;
		integer cityInOut_CountNonBlank;
		integer spec_dist1_CountNonBlank;
		integer spec_dist2_CountNonBlank;
		integer precinct1_CountNonBlank;
		integer precinct2_CountNonBlank;
		integer precinct3_CountNonBlank;
		integer villagePrecinct_CountNonBlank;
		integer schoolPrecinct_CountNonBlank;
		integer ward_CountNonBlank;
		integer precinct_cityTown_CountNonBlank;
		integer ANCSMDinDC_CountNonBlank;
		integer cityCouncilDist_CountNonBlank;
		integer countyCommDist_CountNonBlank;
		integer stateHouse_CountNonBlank;
		integer stateSenate_CountNonBlank;
		integer USHouse_CountNonBlank;
		integer elemSchoolDist_CountNonBlank;
		integer schoolDist_CountNonBlank;
		integer schoolFiller_CountNonBlank;
		integer CommCollDist_CountNonBlank;
		integer dist_filler_CountNonBlank;
		integer municipal_CountNonBlank;
		integer VillageDist_CountNonBlank;
		integer PoliceJury_CountNonBlank;
		integer PoliceDist_CountNonBlank;
		integer PublicServComm_CountNonBlank;
		integer Rescue_CountNonBlank;
		integer Fire_CountNonBlank;
		integer Sanitary_CountNonBlank;
		integer SewerDist_CountNonBlank;
		integer WaterDist_CountNonBlank;
		integer MosquitoDist_CountNonBlank;
		integer TaxDist_CountNonBlank;
		integer SupremeCourt_CountNonBlank;
		integer JusticeOfPeace_CountNonBlank;
		integer JudicialDist_CountNonBlank;
		integer SuperiorCtDist_CountNonBlank;
		integer AppealsCt_CountNonBlank;
		integer CourtFIller_CountNonBlank;
		integer CassAddrTypTbl_CountNonBlank;
		integer CassDelivPointCd_CountNonBlank;
		integer CassCarrierRteTbl_CountNonBlank;
		integer BlkGrpEnumDist_CountNonBlank;
		integer CongressionalDist_CountNonBlank;
		integer Lattitude_CountNonBlank;
		integer CountyFips_CountNonBlank;
		integer CensusTract_CountNonBlank;
		integer FipsStCountyCd_CountNonBlank;
		integer Longitude_CountNonBlank;
		integer LastDateVote_CountNonBlank;
		integer MiscVoteHist_CountNonBlank;
		integer title_CountNonBlank;
		integer fname_CountNonBlank;
		integer mname_CountNonBlank;
		integer lname_CountNonBlank;
		integer name_suffix_CountNonBlank;
		integer name_score_CountNonBlank;
		integer addr_type_CountNonBlank;
		integer prim_range_CountNonBlank;
		integer predir_CountNonBlank;
		integer prim_name_CountNonBlank;
		integer addr_suffix_CountNonBlank;
		integer postdir_CountNonBlank;
		integer unit_desig_CountNonBlank;
		integer sec_range_CountNonBlank;
		integer p_city_name_CountNonBlank;
		integer v_city_name_CountNonBlank;
		integer st_CountNonBlank;
		integer zip_CountNonBlank;
		integer zip4_CountNonBlank;
		integer cart_CountNonBlank;
		integer cr_sort_sz_CountNonBlank;
		integer lot_CountNonBlank;
		integer lot_order_CountNonBlank;
		integer dpbc_CountNonBlank;
		integer chk_digit_CountNonBlank;
		integer rec_type_CountNonBlank;
		integer ace_fips_st_CountNonBlank;
		integer fips_county_CountNonBlank;
		integer geo_lat_CountNonBlank;
		integer geo_long_CountNonBlank;
		integer msa_CountNonBlank;
		integer geo_blk_CountNonBlank;
		integer geo_match_CountNonBlank;
		integer err_stat_CountNonBlank;
		integer mail_prim_range_CountNonBlank;
		integer mail_predir_CountNonBlank;
		integer mail_prim_name_CountNonBlank;
		integer mail_addr_suffix_CountNonBlank;
		integer mail_postdir_CountNonBlank;
		integer mail_unit_desig_CountNonBlank;
		integer mail_sec_range_CountNonBlank;
		integer mail_p_city_name_CountNonBlank;
		integer mail_v_city_name_CountNonBlank;
		integer mail_st_CountNonBlank;
		integer mail_ace_zip_CountNonBlank;
		integer mail_zip4_CountNonBlank;
		integer mail_cart_CountNonBlank;
		integer mail_cr_sort_sz_CountNonBlank;
		integer mail_lot_CountNonBlank;
		integer mail_lot_order_CountNonBlank;
		integer mail_dpbc_CountNonBlank;
		integer mail_chk_digit_CountNonBlank;
		integer mail_rec_type_CountNonBlank;
		integer mail_ace_fips_st_CountNonBlank;
		integer mail_fips_county_CountNonBlank;
		integer mail_geo_lat_CountNonBlank;
		integer mail_geo_long_CountNonBlank;
		integer mail_msa_CountNonBlank;
		integer mail_geo_blk_CountNonBlank;
		integer mail_geo_match_CountNonBlank;
		integer mail_err_stat_CountNonBlank;
		integer IDTypes_CountNonBlank;
		integer precinct_CountNonBlank;
		integer ward1_CountNonBlank;
		integer IDCode_CountNonBlank;
		integer PrecinctPartTextDesig_CountNonBlank;
		integer PrecinctPartTextName_CountNonBlank;
		integer PrecinctTextDesig_CountNonBlank;
		integer MarriedAppend_CountNonBlank;
		integer SupervisorDistrict_CountNonBlank;
		integer district_CountNonBlank;
		integer ward2_CountNonBlank;
		integer CityCountyCouncil_CountNonBlank;
		integer CountyPrecinct_CountNonBlank;
		integer CountyCommis_CountNonBlank;
		integer SchoolBoard_CountNonBlank;
		integer ward3_CountNonBlank;
		integer TownCityCouncil1_CountNonBlank;
		integer TownCityCouncil2_CountNonBlank;
		integer regents_CountNonBlank;
		integer WaterShed_CountNonBlank;
		integer education_CountNonBlank;
		integer PoliceConstable_CountNonBlank;
		integer FreeHolder_CountNonBlank;
		integer MuniCourt_CountNonBlank;
		integer ChangeDate_CountNonBlank;
		integer vh_vtid_CountNonZero;   
		integer voted_year_CountNonBlank;
		integer primary_CountNonBlank;          
		integer special_1_CountNonBlank;        
		integer other_CountNonBlank;            
		integer special_2_CountNonBlank;
		integer general_CountNonBlank;          
		integer pres_CountNonBlank;              
	end;	

	Layout_full_stats trfJoinStats(dPopulationStats_VotersV2__File_Voters_Base l, 
																 dPopulationStats_VotersV2__File_Voters_VoteHistory_Base r) := transform
	 self := l;
	 self.vh_vtid_CountNonZero     := r.vh_vtid_CountNonZero;
	 self.voted_year_CountNonBlank := r.voted_year_CountNonBlank;
	 self.primary_CountNonBlank    := r.primary_CountNonBlank;
	 self.special_1_CountNonBlank  := r.special_1_CountNonBlank;
	 self.other_CountNonBlank      := r.other_CountNonBlank;
	 self.special_2_CountNonBlank  := r.special_2_CountNonBlank;
	 self.general_CountNonBlank    := r.general_CountNonBlank;
	 self.pres_CountNonBlank       := r.pres_CountNonBlank;
	end;

	dPopulationStats_VotersV2_File_Base := join(dPopulationStats_VotersV2__File_Voters_Base,
																							 dPopulationStats_VotersV2__File_Voters_VoteHistory_Base,
																							 left.source_state = right.state_code,
																							 trfJoinStats(left,right));

	STRATA.createXMLStats(dPopulationStats_VotersV2_File_Base,
							'eMerges',
							'votersV2',
							filedate,
							'',
							resultsOut,
							'view',
							'population'
						  );

	return resultsOut;
end;