IMPORT ut, HealthCareHeader;
EXPORT ExtractBestData (DATASET(Layouts.Best_Data_Input) Infile) := FUNCTION

	Header_DS := HealthCareProvider.Files.Provider_Header_DS;
 
	H_dist := DISTRIBUTE (Header_DS, HASH32(lnpid));  
	P_dist := DISTRIBUTE (Infile, HASH32(lnpid));

	Header_REC := RECORD
		HealthCareProvider.Layout_HealthProvider.HealthCareProvider_Header;
		UNSIGNED8	UniqueID;
		STRING10  Inp_PRIM_RANGE;
		STRING2   Inp_PREDIR;
		STRING28  Inp_PRIM_NAME;
		STRING4   Inp_ADDR_SUFFIX;
		STRING2   Inp_POSTDIR;
		STRING10  Inp_UNIT_DESIG;
		STRING8   Inp_SEC_RANGE;
		STRING25  Inp_CITY;
		STRING2   Inp_ST;
		STRING5   Inp_ZIP;
		STRING25	Inp_LIC_NBR;
		STRING2		Inp_LIC_STATE;
		STRING10	Inp_NPI_NUMBER;
		STRING10	Inp_DEA_NUMBER;
	END;
	
	P_CDS := JOIN (H_Dist, P_Dist, LEFT.LNPID = RIGHT.LNPID, TRANSFORM(Header_Rec, 
		SELF.UniqueID				:= RIGHT.UNIQUEID;
		SELF.Inp_PRIM_RANGE	:= RIGHT.PRIM_RANGE;
		SELF.Inp_PREDIR			:= RIGHT.PREDIR;
		SELF.Inp_PRIM_NAME	:= RIGHT.PRIM_NAME;
		SELF.Inp_ADDR_SUFFIX	:= RIGHT.ADDR_SUFFIX;
		SELF.Inp_POSTDIR		:= RIGHT.POSTDIR;
		SELF.Inp_UNIT_DESIG	:= RIGHT.UNIT_DESIG;
		SELF.Inp_SEC_RANGE	:= RIGHT.SEC_RANGE;
		SELF.Inp_CITY				:= RIGHT.CITY;
		SELF.Inp_ST					:= RIGHT.ST;
		SELF.Inp_ZIP				:= RIGHT.ZIP;
		SELF.Inp_LIC_NBR		:= RIGHT.PROV_LIC_NBR;
		SELF.Inp_LIC_STATE	:= RIGHT.PROV_LIC_STATE;
		SELF.Inp_NPI_NUMBER	:= RIGHT.PROV_NPI_NUMBER;
		SELF.Inp_DEA_NUMBER	:= RIGHT.PROV_DEA_NUMBER;
		SELF := LEFT;),LOCAL);

	G_CDS	:=	GROUP (SORT(P_CDS,LNPID,LOCAL),LNPID,LOCAL);
	STRING8 Current_Date := ut.GetDate [1..8];
	
	HealthCareProvider.Layouts.Best_Data_Rec GetBestData (Header_Rec L, DATASET (Header_Rec) R) := TRANSFORM
		SELF.HDR_DID										:=	DEDUP(SORT(R(DID_FLAG IN ['O','G','F']),MAP(DID_FLAG = 'O' => 1, DID_FLAG = 'G' => 2,3)),DID_FLAG)[1].DID; 
		SELF.HDR_ENTITY_TYPE						:=	R(ENTITY_TYPE <> '')[1].ENTITY_TYPE; 
		SELF.HDR_SSN										:=	DEDUP(SORT(R(SSN_FLAG IN ['O','G','F']),MAP(SSN_FLAG = 'O' => 1, SSN_FLAG = 'G' => 2,3)),SSN_FLAG)[1].SSN; 
		SELF.HDR_CNSMR_SSN							:=	DEDUP(SORT(R(CNSMR_SSN_FLAG IN ['O','G','F']),MAP(CNSMR_SSN_FLAG = 'O' => 1, CNSMR_SSN_FLAG = 'G' => 2,3)),CNSMR_SSN_FLAG)[1].CNSMR_SSN; 
		SELF.HDR_DOB										:=	DEDUP(SORT(R(DOB_FLAG IN ['G','F']),MAP(DOB_FLAG = 'G' => 1, 2)),DOB_FLAG)[1].DOB; 
		SELF.HDR_CNSMR_DOB							:=	DEDUP(SORT(R(CNSMR_DOB_FLAG IN ['G','F']),MAP(CNSMR_DOB_FLAG = 'G' => 1, 2)),CNSMR_DOB_FLAG)[1].CNSMR_DOB; 
		STRING2 iState									:=	MAP (L.Inp_LIC_STATE <> '' => L.Inp_LIC_STATE, L.Inp_ST <> '' => L.Inp_ST, '');
		SELF.PROV_DT_LIC_EXPIRED				:=	SORT (R(LIC_NBR = Inp_LIC_NBR AND Inp_LIC_NBR <> '' AND DT_LIC_EXPIRATION > 0),-DT_LIC_EXPIRATION)[1].DT_LIC_EXPIRATION;
		PROV_LIC_TYPE										:=	SORT (R(LIC_NBR = Inp_LIC_NBR AND Inp_LIC_NBR <> '' AND LIC_TYPE <> ''),-DT_LIC_EXPIRATION)[1].LIC_TYPE;
		SELF.PROV_LIC_TYPE							:=	TRIM(HealthCareProvider.CleanData.fRemoveALLDash(HealthCareProvider.CleanData.fRemoveLeadingTrailingSpecialChar(REGEXREPLACE(CleanData.Name,CleanData.fUpperCleanSpaces(CleanData.fReplaceUnprintable(PROV_LIC_TYPE)),' '))),LEFT,RIGHT);
		Enc_LIC_Status									:=	SORT (R(LIC_NBR = Inp_LIC_NBR AND Inp_LIC_NBR <> '' AND LIC_STATUS <> '' AND SRC = '64'),-DT_LIC_EXPIRATION)[1].LIC_STATUS;
		SELF.PROV_LIC_STATUS						:=	IF(Enc_LIC_Status <> '',Enc_LIC_Status,SORT (R(LIC_NBR = Inp_LIC_NBR AND Inp_LIC_NBR <> '' AND LIC_STATUS <> ''),-DT_LIC_EXPIRATION)[1].LIC_STATUS);
		SELF.HDR_LIC_NBR								:=	DEDUP(SORT(R(LIC_NBR_FLAG IN ['G','F'] AND LIC_STATE = iState),MAP(LIC_NBR_FLAG = 'G' => 1, 2)),LIC_NBR_FLAG)[1].LIC_NBR; 
		SELF.HDR_C_LIC_NBR							:=	DEDUP(SORT(R(C_LIC_NBR_FLAG IN ['G','F'] AND LIC_STATE = iState),MAP(C_LIC_NBR_FLAG = 'G' => 1, 2)),C_LIC_NBR_FLAG)[1].C_LIC_NBR; 
		SELF.HDR_LIC_STATE							:=	R(LIC_STATE = iState)[1].LIC_STATE; 
		HDR_LIC_TYPE										:=	DEDUP(SORT(R(LIC_NBR_FLAG IN ['G','F'] AND LIC_STATE = iState),MAP(LIC_NBR_FLAG = 'G' => 1, 2)),LIC_NBR_FLAG)[1].LIC_TYPE; 
		SELF.HDR_LIC_TYPE								:=	TRIM(HealthCareProvider.CleanData.fRemoveALLDash(HealthCareProvider.CleanData.fRemoveLeadingTrailingSpecialChar(REGEXREPLACE(CleanData.Name,CleanData.fUpperCleanSpaces(CleanData.fReplaceUnprintable(HDR_LIC_TYPE)),' '))),LEFT,RIGHT);
		SELF.HDR_LIC_STATUS							:=	DEDUP(SORT(R(LIC_NBR_FLAG IN ['G','F'] AND LIC_STATE = iState),MAP(LIC_NBR_FLAG = 'G' => 1, 2)),LIC_NBR_FLAG)[1].LIC_STATUS; 
		SELF.HDR_DT_LIC_EXPIRATION			:=	DEDUP(SORT(R(LIC_NBR_FLAG IN ['G','F'] AND LIC_STATE = iState),MAP(LIC_NBR_FLAG = 'G' => 1, 2)),LIC_NBR_FLAG)[1].DT_LIC_EXPIRATION; 
		SELF.HDR_DEATH_IND							:=	R(DEATH_IND = 'Y')[1].DEATH_IND; 
		SELF.HDR_DOD										:=	R(DOD > 0)[1].DOD; 
		SELF.HDR_BILLING_TAX_ID 				:=	DEDUP(SORT(R(BILLING_TAX_ID_FLAG IN ['G','F']),MAP(BILLING_TAX_ID_FLAG = 'G' => 1, 2)),BILLING_TAX_ID_FLAG)[1].BILLING_TAX_ID; 
		SELF.HDR_UPIN										:=	DEDUP(SORT(R(UPIN_FLAG IN ['O','G','F']),MAP(UPIN_FLAG = 'O' => 1,UPIN_FLAG = 'G' => 2, 3)),UPIN_FLAG)[1].UPIN; 
		SELF.PROV_NPI_FLAG							:=	IF (EXISTS(R(NPI_NUMBER = Inp_NPI_NUMBER AND DT_NPI_DEACT > 0 AND Inp_NPI_NUMBER <> '')),'I','');
		SELF.PROV_DT_NPI_DEACTIVATED		:=	SORT (R(NPI_NUMBER = Inp_NPI_NUMBER AND Inp_NPI_NUMBER <> '' AND DT_NPI_DEACT > 0),-DT_NPI_DEACT)[1].DT_NPI_DEACT;
		SELF.HDR_NPI_NUMBER							:=	DEDUP(SORT(R(NPI_NUMBER_FLAG IN ['O','G','F']),MAP(NPI_NUMBER_FLAG = 'O' => 1,NPI_NUMBER_FLAG = 'G' => 2, 3)),NPI_NUMBER_FLAG)[1].NPI_NUMBER; 
		PROV_DEA_DS											:=	SORT(R(DEA_NUMBER = Inp_DEA_NUMBER AND DT_DEA_EXPIRATION < (integer) CURRENT_DATE AND LENGTH(TRIM(Inp_DEA_NUMBER)) > 0),-DT_DEA_EXPIRATION);
		PROV_DT_DEA_EXPIRED							:=	SORT(R(DEA_NUMBER = Inp_DEA_NUMBER AND LENGTH(TRIM(Inp_DEA_NUMBER)) > 0 AND DT_DEA_EXPIRATION > 0),-DT_DEA_EXPIRATION)[1].DT_DEA_EXPIRATION;		
		SELF.PROV_DEA_FLAG							:=	IF ((INTEGER)PROV_DT_DEA_EXPIRED > 0 AND (INTEGER)PROV_DT_DEA_EXPIRED < (integer) CURRENT_DATE,'I','');
		SELF.PROV_DT_DEA_EXPIRATION			:=	PROV_DT_DEA_EXPIRED; 
		SELF.HDR_DEA_NUMBER							:=	DEDUP(SORT(R(DEA_NUMBER_FLAG IN ['O','G','F']),MAP(DEA_NUMBER_FLAG = 'O' => 1,DEA_NUMBER_FLAG = 'G' => 2, 3)),DEA_NUMBER_FLAG)[1].DEA_NUMBER; 
		SELF.HDR_DT_DEA_EXPIRATION			:=	DEDUP(SORT(R(DEA_NUMBER_FLAG IN ['O','G','F']),MAP(DEA_NUMBER_FLAG = 'O' => 1,DEA_NUMBER_FLAG = 'G' => 2, 3)),DEA_NUMBER_FLAG)[1].DT_DEA_EXPIRATION; 
		SELF.HDR_PHONE									:=	DEDUP(SORT(R(PHONE_FLAG IN ['B','P']),MAP(PHONE_FLAG = 'P' AND SRC = '64' => 1,PHONE_FLAG = 'B' AND SRC = '64' => 2, PHONE_FLAG = 'P' => 3, 4)),PHONE_FLAG)[1].PHONE; 
		SELF.HDR_FAX										:=	DEDUP(SORT(R(FAX_FLAG IN ['B','P']),MAP(FAX_FLAG = 'P' AND SRC = '64' => 1,FAX_FLAG = 'B' AND SRC = '64' => 2, FAX_FLAG = 'P' => 3,4)),FAX_FLAG)[1].FAX; 
		SELF.HDR_TAXONOMY								:=	DEDUP(SORT(R(TAXONOMY_FLAG IN ['O','G','F']),MAP(TAXONOMY_FLAG = 'O' => 1,TAXONOMY_FLAG = 'G' => 2, 3)),TAXONOMY_FLAG)[1].TAXONOMY; 
		SELF.HDR_TAXONOMY_Desc					:=	'';
		SPECIALITY_CODE									:=	HealthCareHeader.Translate_Taxonomy_Speciality_Code (SELF.HDR_TAXONOMY);
		SELF.HDR_SPECIALITY_CODE				:=	SPECIALITY_CODE;
		SELF.HDR_DEA_BUS_ACT_IND				:=	R(DEA_BUS_ACT_IND <> '')[1].DEA_BUS_ACT_IND; 
		SELF.HDR_PROVIDER_STATUS				:=	R(PROVIDER_STATUS <> '')[1].PROVIDER_STATUS; 
		SELF.HDR_LIC_CNT								:=	COUNT(DEDUP(SORT(R(C_LIC_NBR <> ''),C_LIC_NBR),C_LIC_NBR)); 
		SELF.HDR_LIC_ST_CNT							:=	COUNT(DEDUP(SORT(R(LIC_STATE <> ''),LIC_STATE),LIC_STATE)); 
		LIC_DS													:=	DEDUP(SORT(R(C_LIC_NBR <> ''),C_LIC_NBR,-DT_LIC_EXPIRATION),C_LIC_NBR);
		R_LIC_DS												:=	DEDUP(SORT(R(C_LIC_NBR <> '' AND LIC_STATUS = 'S' AND SRC = '64'),C_LIC_NBR),C_LIC_NBR);		
		SELF.HDR_ACTIVE_LIC_CNT					:=	COUNT(LIC_DS(DT_LIC_EXPIRATION > 0 AND DT_LIC_EXPIRATION > (integer) CURRENT_DATE));
		SELF.HDR_INACTIVE_LIC_CNT				:=	COUNT(LIC_DS(DT_LIC_EXPIRATION > 0 AND DT_LIC_EXPIRATION < (integer) CURRENT_DATE));
		SELF.HDR_REVOKED_LIC_CNT				:=	COUNT(R_LIC_DS);
		SELF.HDR_DEA_CNT								:=	COUNT(DEDUP(SORT(R(DEA_NUMBER <> ''),DEA_NUMBER),DEA_NUMBER)); 
		DEA_DS													:=	DEDUP(SORT(R(DEA_NUMBER <> ''),DEA_NUMBER,-DT_DEA_EXPIRATION),DEA_NUMBER);
		SELF.HDR_DEA_ACTIVE_CNT					:=	COUNT(DEA_DS(DT_DEA_EXPIRATION > 0 AND DT_DEA_EXPIRATION > (integer) CURRENT_DATE));
		SELF.HDR_DEA_EXPIRED_CNT				:=	COUNT(DEA_DS(DT_DEA_EXPIRATION > 0 AND DT_DEA_EXPIRATION < (integer) CURRENT_DATE));;
		SELF.HDR_NPI_DEACT_CNT					:=	COUNT(DEDUP(SORT(R(NPI_NUMBER <> '' AND DT_NPI_DEACT > 0),NPI_NUMBER),NPI_NUMBER));
		SELF.HDR_IS_STATE_SANCTION			:=	R(IS_STATE_SANCTION = TRUE)[1].IS_STATE_SANCTION;
		SELF.HDR_IS_OIG_SANCTION				:=	R(IS_OIG_SANCTION = TRUE)[1].IS_OIG_SANCTION;
		SELF.HDR_IS_OPM_SANCTION				:=	R(IS_OPM_SANCTION = TRUE)[1].IS_OPM_SANCTION;	
		SELF.HDR_PRAC_PRIM_RANGE 				:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].PRIM_RANGE; 
		SELF.HDR_PRAC_PREDIR	 					:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].PREDIR;
		SELF.HDR_PRAC_PRIM_NAME 				:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].PRIM_NAME;
		SELF.HDR_PRAC_ADDR_SUFFIX  			:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].ADDR_Suffix;
		SELF.HDR_PRAC_POSTDIR 					:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].POSTDIR;
		SELF.HDR_PRAC_UNIT_DESIG 				:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].UNIT_DESIG;
		SELF.HDR_PRAC_SEC_RANGE 				:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].SEC_RANGE;
		SELF.HDR_PRAC_CITY_NAME 				:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].V_CITY_NAME;
		SELF.HDR_PRAC_ST 								:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].ST;
		SELF.HDR_PRAC_ZIP 							:= 	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].ZIP;
		SELF.HDR_PRAC_ADDR_LAST_VERIFIED	:=	DEDUP(SORT(R(ADDR_FLAG IN ['G','F','L']),MAP(ADDR_FLAG = 'G' => 1,ADDR_FLAG = 'F' => 2, 3)),ADDR_FLAG)[1].DT_ADDRESS_VERIFIED;
		SELF := L;
		SELF := [];
	END;
	
	Best_Data	:= ROLLUP (G_CDS,GROUP,GetBestData (LEFT,ROWS(LEFT)));
	
	Append_Taxonomy_Desc := JOIN (Best_Data,HealthCareProvider.Files.Taxonomy_Code_DS,LEFT.HDR_TAXONOMY [1..4] = RIGHT.Taxonomy_Code,
			TRANSFORM(HealthCareProvider.Layouts.Best_Data_Rec, SELF.HDR_TAXONOMY_DESC := RIGHT.Classification, SELF := LEFT;),LEFT OUTER, LOOKUP);
	
	RETURN JOIN (Infile,Append_Taxonomy_Desc,LEFT.UNIQUEID = RIGHT.UniqueID,TRANSFORM(HealthCareProvider.Layouts.Best_Data_Rec, SELF := LEFT; SELF := RIGHT), LEFT OUTER,HASH);
END;
