export VehicleV2Keys := macro
output(choosen(VehicleV2.Key_Vehicle_BDID,10));
output(choosen(VehicleV2.Key_Vehicle_DID,10));
output(choosen(VehicleV2.Key_vehicle_DL_number,10));
output(choosen(VehicleV2.Key_Vehicle_Lic_plate,10));
output(choosen(VehicleV2.Key_Vehicle_Main_Key,10));
output(choosen(VehicleV2.Key_Vehicle_Party_Key,10));
output(choosen(VehicleV2.Key_Vehicle_title_number,10));
output(choosen(VehicleV2.Key_vehicle_VIN,10));
output(choosen(Autokey.Key_Address(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKey.Key_CityStName(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKey.Key_Name(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKey.Key_SSN2(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKey.Key_StName(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKey.Key_Zip(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutokeyB2.Key_Address(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKeyB2.Key_CityStName(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKeyB2.Key_FEIN(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKeyB2.key_name(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKeyB2.Key_NameWords(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKeyB2.Key_StName(VehicleV2.constant.str_AutokeyName),10));
output(choosen(AutoKeyB2.Key_Zip(VehicleV2.constant.str_AutokeyName),10));
output(choosen(VehicleV2.key_AutokeyPayload,10));
output(choosen(VehicleV2.key_Vehicle_reverse_Lic_plate,10));
output(choosen(VehicleV2.Key_BocaShell_Vehicles,10));
output(choosen(Vehicle_wildcard.key_NameIndex,10));
output(choosen(Vehicle_wildcard.key_ModelIndex,10));
output(choosen(dataset('~thor_data400::hole::wildcard_' + doxie_build.buildstate, vehicle_wildcard.layout_hole_veh, THOR, preload(0)),10));
output(choosen(VehicleV2.Key_Vehicle_Lic_Plate_Blur,10));
output(choosen(Address_Attributes.key_vehicles_addr,10));
output(choosen(VehicleV2.Key_Vehicle_BID,10));
output(choosen(VehicleV2.Key_Vehicle_Party_Key_bid,10));
output(choosen(Autokey.Key_Address(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKey.Key_CityStName(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKey.Key_Name(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKey.Key_SSN2(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKey.Key_StName(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKey.Key_Zip(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutokeyB2.Key_Address(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKeyB2.Key_CityStName(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKeyB2.Key_FEIN(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKeyB2.key_name(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKeyB2.Key_NameWords(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKeyB2.Key_StName(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(AutoKeyB2.Key_Zip(VehicleV2.constant.str_Bid_autokeyname),10));
output(choosen(VehicleV2.key_AutokeyPayload_bid,10));
endmacro;