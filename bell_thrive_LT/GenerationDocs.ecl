Generated by SALT V2.0 Gold
File being processed :-
ï»¿MODULE:bell_thrive_LT
FILENAME:files().input.used
FIELD:fname:0,0
FIELD:lname:0,0
FIELD:addr:0,0
FIELD:city:0,0
FIELD:state:0,0
FIELD:zip:0,0
FIELD:zip4:0,0
FIELD:EMAIL:0,0
FIELD:phone:0,0
FIELD:LoanType:0,0
FIELD:BESTTIME:0,0
FIELD:MortRate:0,0
FIELD:PROPERTYTYPE:0,0
FIELD:RateType:0,0
FIELD:LTV:0,0
FIELD:YrsThere:0,0
FIELD:employer:0,0
FIELD:credit:0,0
FIELD:Income:0,0
FIELD:LoanAmt:0,0
FIELD:dt:0,0
FIELD:ip:0,0
Total available specificity:0
Search Threshold set at -4
Need threshold and blockthreshold to continue
Use of PERSISTs in code set at:3
______________________________English Description of Matching Process___________________________
A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 0 nines of accuracy on a population of 0 with 0 records.
The matching threshold is therefore set at 0.
___Field by Field Breakdown of Scoring Method___
fname Scoring: Two fname fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the fname
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for fname.)
lname Scoring: Two lname fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the lname
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for lname.)
addr Scoring: Two addr fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the addr
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for addr.)
city Scoring: Two city fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the city
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for city.)
state Scoring: Two state fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the state
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for state.)
zip Scoring: Two zip fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the zip
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for zip.)
zip4 Scoring: Two zip4 fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the zip4
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for zip4.)
EMAIL Scoring: Two EMAIL fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the EMAIL
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for EMAIL.)
phone Scoring: Two phone fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the phone
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for phone.)
LoanType Scoring: Two LoanType fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the LoanType
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for LoanType.)
BESTTIME Scoring: Two BESTTIME fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the BESTTIME
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for BESTTIME.)
MortRate Scoring: Two MortRate fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the MortRate
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for MortRate.)
PROPERTYTYPE Scoring: Two PROPERTYTYPE fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PROPERTYTYPE
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for PROPERTYTYPE.)
RateType Scoring: Two RateType fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the RateType
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for RateType.)
LTV Scoring: Two LTV fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the LTV
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for LTV.)
YrsThere Scoring: Two YrsThere fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the YrsThere
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for YrsThere.)
employer Scoring: Two employer fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the employer
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for employer.)
credit Scoring: Two credit fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the credit
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for credit.)
Income Scoring: Two Income fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the Income
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for Income.)
LoanAmt Scoring: Two LoanAmt fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the LoanAmt
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for LoanAmt.)
dt Scoring: Two dt fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dt
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dt.)
ip Scoring: Two ip fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ip
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for ip.)
__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters
Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.
Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.
__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.
