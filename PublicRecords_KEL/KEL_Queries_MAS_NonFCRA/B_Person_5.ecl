//HPCC Systems KEL Compiler Version 1.5.0rc1
IMPORT KEL15 AS KEL;
IMPORT B_Bankruptcy_6,B_Bankruptcy_9,B_Input_P_I_I_6,B_Person_6,B_Person_7,B_Person_8,B_Person_Accident_8,B_Person_Address_6,CFG_Compile,E_Accident,E_Address,E_Address_Slim,E_Address_Summary,E_Bankruptcy,E_Email,E_Geo_Link,E_Input_P_I_I,E_Name_Summary,E_Person,E_Person_Accident,E_Person_Address,E_Person_Bankruptcy,E_Phone,E_Phone_Summary,E_Property,E_S_S_N_Summary,E_Social_Security_Number,E_Surname,E_Zip_Code,FN_Compile FROM PublicRecords_KEL.KEL_Queries_MAS_NonFCRA;
IMPORT * FROM KEL15.Null;
EXPORT B_Person_5(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Bankruptcy_6(__in,__cfg).__ENH_Bankruptcy_6) __ENH_Bankruptcy_6 := B_Bankruptcy_6(__in,__cfg).__ENH_Bankruptcy_6;
  SHARED VIRTUAL TYPEOF(B_Input_P_I_I_6(__in,__cfg).__ENH_Input_P_I_I_6) __ENH_Input_P_I_I_6 := B_Input_P_I_I_6(__in,__cfg).__ENH_Input_P_I_I_6;
  SHARED VIRTUAL TYPEOF(B_Person_6(__in,__cfg).__ENH_Person_6) __ENH_Person_6 := B_Person_6(__in,__cfg).__ENH_Person_6;
  SHARED VIRTUAL TYPEOF(B_Person_Address_6(__in,__cfg).__ENH_Person_Address_6) __ENH_Person_Address_6 := B_Person_Address_6(__in,__cfg).__ENH_Person_Address_6;
  SHARED VIRTUAL TYPEOF(E_Person_Bankruptcy(__in,__cfg).__Result) __E_Person_Bankruptcy := E_Person_Bankruptcy(__in,__cfg).__Result;
  SHARED __EE4774516 := __ENH_Person_6;
  SHARED __EE4774522 := __ENH_Bankruptcy_6;
  SHARED __EE4774520 := __E_Person_Bankruptcy;
  SHARED __EE4779912 := __EE4774520(__NN(__EE4774520.Subject_) AND __NN(__EE4774520.Bankrupt_));
  SHARED __ST379335_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_9(__in,__cfg).__ST211660_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST332197_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4779930(B_Bankruptcy_6(__in,__cfg).__ST205543_Layout __EE4774522, E_Person_Bankruptcy(__in,__cfg).Layout __EE4779912) := __EEQP(__EE4779912.Bankrupt_,__EE4774522.UID);
  __ST379335_Layout __JT4779930(B_Bankruptcy_6(__in,__cfg).__ST205543_Layout __l, E_Person_Bankruptcy(__in,__cfg).Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE4779931 := JOIN(__EE4779912,__EE4774522,__JC4779930(RIGHT,LEFT),__JT4779930(RIGHT,LEFT),INNER,HASH);
  SHARED __ST379673_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_9(__in,__cfg).__ST211660_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST332197_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nbool Banko1_Year_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4780014(__ST379335_Layout __EE4779931, B_Bankruptcy_6(__in,__cfg).__ST332197_Layout __EE4780000) := __T(__EE4780000.Banko1_Year_);
  __ST379673_Layout __JT4780014(__ST379335_Layout __l, B_Bankruptcy_6(__in,__cfg).__ST332197_Layout __r) := TRANSFORM, SKIP(NOT(__JC4780014(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE4780015 := NORMALIZE(__EE4779931,__T(LEFT.Best_Child_Record_),__JT4780014(LEFT,RIGHT));
  SHARED __ST378011_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_9(__in,__cfg).__ST211660_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST332197_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nbool Banko1_Year_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST378011_Layout __ND4780106__Project(__ST379673_Layout __PP4780016) := TRANSFORM
    SELF.UID := __PP4780016.Subject_;
    SELF.Data_Sources_ := __PP4780016.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP4780016.UID;
    SELF.Data_Sources__1_ := __PP4780016.Data_Sources_;
    SELF := __PP4780016;
  END;
  SHARED __EE4780351 := PROJECT(__EE4780015,__ND4780106__Project(LEFT));
  SHARED __ST378206_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE4780365 := PROJECT(__EE4780351,__ST378206_Layout);
  SHARED __ST378224_Layout := RECORD
    KEL.typ.nkdate M_A_X___Bankruptcy_Date_;
    KEL.typ.nkdate M_I_N___Bankruptcy_Date_;
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE4780386 := PROJECT(__CLEANANDDO(__EE4780365,TABLE(__EE4780365,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.Aggregates.MaxNG(__EE4780365.Bankruptcy_Date_) M_A_X___Bankruptcy_Date_,KEL.Aggregates.MinNG(__EE4780365.Bankruptcy_Date_) M_I_N___Bankruptcy_Date_,UID},UID,MERGE)),__ST378224_Layout);
  SHARED __ST380114_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250558_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250573_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250587_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99011_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91397_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr L_T_D1_Y_Old_Date_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt1_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt1_Y_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST336129_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST107753_Layout) Person_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST108495_Layout) Person_S_S_N_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99916_Layout) S_S_N_Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST336143_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99580_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99742_Layout) Verified_Last_Name_Sources_;
    KEL.typ.nkdate M_A_X___Bankruptcy_Date_;
    KEL.typ.nkdate M_I_N___Bankruptcy_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4780392(B_Person_6(__in,__cfg).__ST250553_Layout __EE4774516, __ST378224_Layout __EE4780386) := __EEQP(__EE4774516.UID,__EE4780386.UID);
  __ST380114_Layout __JT4780392(B_Person_6(__in,__cfg).__ST250553_Layout __l, __ST378224_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE4780393 := JOIN(__EE4774516,__EE4780386,__JC4780392(LEFT,RIGHT),__JT4780392(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE4774518 := __ENH_Input_P_I_I_6;
  SHARED __ST381814_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250558_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250573_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250587_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99011_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91397_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr L_T_D1_Y_Old_Date_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt1_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt1_Y_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST336129_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST107753_Layout) Person_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST108495_Layout) Person_S_S_N_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99916_Layout) S_S_N_Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST336143_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99580_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99742_Layout) Verified_Last_Name_Sources_;
    KEL.typ.nkdate M_A_X___Bankruptcy_Date_;
    KEL.typ.nkdate M_I_N___Bankruptcy_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_State_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Addr_Zip4_;
    KEL.typ.nstr Current_Addr_State_Code_;
    KEL.typ.nstr Current_Addr_Cnty_;
    KEL.typ.nstr Current_Addr_Geo_;
    KEL.typ.nstr Current_Addr_City_;
    KEL.typ.nstr Current_Addr_Post_Dir_;
    KEL.typ.nstr Current_Addr_Lat_;
    KEL.typ.nstr Current_Addr_Lng_;
    KEL.typ.nstr Current_Addr_Unit_Designation_;
    KEL.typ.nstr Current_Addr_Type_;
    KEL.typ.nstr Current_Addr_Status_;
    KEL.typ.nkdate Current_Addr_Date_First_Seen_;
    KEL.typ.nkdate Current_Addr_Date_Last_Seen_;
    KEL.typ.nstr Current_Addr_Full_;
    KEL.typ.ntyp(E_Address().Typ) Current_Address_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_State_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Addr_Zip4_;
    KEL.typ.nstr Previous_Addr_State_Code_;
    KEL.typ.nstr Previous_Addr_Cnty_;
    KEL.typ.nstr Previous_Addr_Geo_;
    KEL.typ.nstr Previous_Addr_City_;
    KEL.typ.nstr Previous_Addr_Post_Dir_;
    KEL.typ.nstr Previous_Addr_Lat_;
    KEL.typ.nstr Previous_Addr_Lng_;
    KEL.typ.nstr Previous_Addr_Unit_Designation_;
    KEL.typ.nstr Previous_Addr_Type_;
    KEL.typ.nstr Previous_Addr_Status_;
    KEL.typ.nkdate Previous_Addr_Date_First_Seen_;
    KEL.typ.nkdate Previous_Addr_Date_Last_Seen_;
    KEL.typ.nstr Previous_Addr_Full_;
    KEL.typ.ntyp(E_Address().Typ) Previous_Address_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4780636(__ST380114_Layout __EE4780393, B_Input_P_I_I_6(__in,__cfg).__ST221031_Layout __EE4774518) := __EEQP(__EE4780393.P_I_I_,__EE4774518.UID);
  __ST381814_Layout __JT4780636(__ST380114_Layout __l, B_Input_P_I_I_6(__in,__cfg).__ST221031_Layout __r) := TRANSFORM
    SELF.U_I_D__2_ := __r.UID;
    SELF.P___Inp_Cln_Addr_Prim_Rng__1_ := __r.P___Inp_Cln_Addr_Prim_Rng_;
    SELF.P___Inp_Cln_Addr_Pre_Dir__1_ := __r.P___Inp_Cln_Addr_Pre_Dir_;
    SELF.P___Inp_Cln_Addr_Prim_Name__1_ := __r.P___Inp_Cln_Addr_Prim_Name_;
    SELF.P___Inp_Cln_Addr_Sffx__1_ := __r.P___Inp_Cln_Addr_Sffx_;
    SELF.P___Inp_Cln_Addr_Post_Dir__1_ := __r.P___Inp_Cln_Addr_Post_Dir_;
    SELF.P___Inp_Cln_Addr_Sec_Rng__1_ := __r.P___Inp_Cln_Addr_Sec_Rng_;
    SELF.P___Inp_Cln_Addr_Zip5__1_ := __r.P___Inp_Cln_Addr_Zip5_;
    SELF.P___Inp_Cln_S_S_N__1_ := __r.P___Inp_Cln_S_S_N_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE4780637 := JOIN(__EE4780393,__EE4774518,__JC4780636(LEFT,RIGHT),__JT4780636(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __EE4774531 := __ENH_Person_Address_6;
  SHARED __EE4785071 := __EE4774531(__T(__AND(__OR(__EE4774531.Input_Address_Match_,__CN(__EE4774531.Address_Similarity_Match_ = 1)),__CN(__NN(__EE4774531.Subject_)))));
  SHARED __ST379003_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr Cart_;
    KEL.typ.nstr C_R_Sort_Sz_;
    KEL.typ.nstr Lot_;
    KEL.typ.nstr Lot_Order_;
    KEL.typ.nstr D_P_B_C_;
    KEL.typ.nstr C_H_K_Digit_;
    KEL.typ.nstr Ace_Fips_St_;
    KEL.typ.nstr Ace_Fips_County_;
    KEL.typ.nstr M_S_A_;
    KEL.typ.nstr Verified_City_;
    KEL.typ.ndataset(E_Person_Address(__in,__cfg).Address_Rank_Details_Layout) Address_Rank_Details_;
    KEL.typ.ndataset(E_Person_Address(__in,__cfg).Address_Hierarchy_Layout) Address_Hierarchy_;
    KEL.typ.ndataset(B_Person_Address_6(__in,__cfg).__ST233712_Layout) Data_Sources_;
    KEL.typ.int Address_Similarity_Match_ := 0;
    KEL.typ.nstr Grouped_Address_;
    KEL.typ.nstr Grouped_Input_Address_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool F_D_N_Indicator_;
    KEL.typ.nkdate Address_Source_Date_First_Seen_;
    KEL.typ.nkdate Address_Source_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4785093(B_Person_Address_6(__in,__cfg).__ST233656_Layout __EE4785071, B_Person_Address_6(__in,__cfg).__ST233712_Layout __EE4785074) := __T(__AND(__OP2(__EE4785074.Translated_Source_Code_,<>,__CN('')),__EE4785074.Header_Hit_Flag_));
  __ST379003_Layout __JT4785093(B_Person_Address_6(__in,__cfg).__ST233656_Layout __l, B_Person_Address_6(__in,__cfg).__ST233712_Layout __r) := TRANSFORM, SKIP(NOT(__JC4785093(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE4785094 := NORMALIZE(__EE4785071,__T(LEFT.Data_Sources_),__JT4785093(LEFT,RIGHT));
  SHARED __ST4783308_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE4785179 := PROJECT(TABLE(PROJECT(__EE4785094,__ST4783308_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Subject_,Translated_Source_Code_},Subject_,Translated_Source_Code_,MERGE),__ST4783308_Layout);
  SHARED __ST4783326_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250558_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250573_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST250587_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99011_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91397_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr L_T_D1_Y_Old_Date_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt1_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt1_Y_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST336129_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST107753_Layout) Person_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST108495_Layout) Person_S_S_N_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99916_Layout) S_S_N_Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST336143_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99580_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99742_Layout) Verified_Last_Name_Sources_;
    KEL.typ.nkdate M_A_X___Bankruptcy_Date_;
    KEL.typ.nkdate M_I_N___Bankruptcy_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5__1_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_State_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Addr_Zip4_;
    KEL.typ.nstr Current_Addr_State_Code_;
    KEL.typ.nstr Current_Addr_Cnty_;
    KEL.typ.nstr Current_Addr_Geo_;
    KEL.typ.nstr Current_Addr_City_;
    KEL.typ.nstr Current_Addr_Post_Dir_;
    KEL.typ.nstr Current_Addr_Lat_;
    KEL.typ.nstr Current_Addr_Lng_;
    KEL.typ.nstr Current_Addr_Unit_Designation_;
    KEL.typ.nstr Current_Addr_Type_;
    KEL.typ.nstr Current_Addr_Status_;
    KEL.typ.nkdate Current_Addr_Date_First_Seen_;
    KEL.typ.nkdate Current_Addr_Date_Last_Seen_;
    KEL.typ.nstr Current_Addr_Full_;
    KEL.typ.ntyp(E_Address().Typ) Current_Address_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_State_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Addr_Zip4_;
    KEL.typ.nstr Previous_Addr_State_Code_;
    KEL.typ.nstr Previous_Addr_Cnty_;
    KEL.typ.nstr Previous_Addr_Geo_;
    KEL.typ.nstr Previous_Addr_City_;
    KEL.typ.nstr Previous_Addr_Post_Dir_;
    KEL.typ.nstr Previous_Addr_Lat_;
    KEL.typ.nstr Previous_Addr_Lng_;
    KEL.typ.nstr Previous_Addr_Unit_Designation_;
    KEL.typ.nstr Previous_Addr_Type_;
    KEL.typ.nstr Previous_Addr_Status_;
    KEL.typ.nkdate Previous_Addr_Date_First_Seen_;
    KEL.typ.nkdate Previous_Addr_Date_Last_Seen_;
    KEL.typ.nstr Previous_Addr_Full_;
    KEL.typ.ntyp(E_Address().Typ) Previous_Address_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.ndataset(__ST4783308_Layout) Person_Address_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4785185(__ST381814_Layout __EE4780637, __ST4783308_Layout __EE4785179) := __EEQP(__EE4780637.UID,__EE4785179.Subject_);
  __ST4783326_Layout __Join__ST4783326_Layout(__ST381814_Layout __r, DATASET(__ST4783308_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Address_ := __CN(__recs);
  END;
  SHARED __EE4785572 := DENORMALIZE(DISTRIBUTE(__EE4780637,HASH(UID)),DISTRIBUTE(__EE4785179,HASH(Subject_)),__JC4785185(LEFT,RIGHT),GROUP,__Join__ST4783326_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  EXPORT __ST251829_Layout := RECORD
    KEL.typ.nstr Title_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Middle_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr Name_Suffix_;
    KEL.typ.nstr Name_Score_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nstr Source_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.bool Verified_First_Name_ := FALSE;
    KEL.typ.bool Verified_Last_Name_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST251844_Layout := RECORD
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Date_Of_Birth_Padded_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nstr Valid_D_O_B_;
    KEL.typ.nbool Best_D_O_B_Rec_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST251858_Layout := RECORD
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool F_D_N_Indicator_;
    KEL.typ.nkdate Source_Date_First_Seen_;
    KEL.typ.nkdate Source_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST109157_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST107780_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nkdate Source_Date_First_Seen_;
    KEL.typ.nkdate Source_Date_Last_Seen_;
    KEL.typ.nint Bankruptcy_Age_In_Days_;
    KEL.typ.nint Liens_Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST108534_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nkdate S_S_N_Source_Date_First_Seen_;
    KEL.typ.nkdate S_S_N_Source_Date_Last_Seen_;
    KEL.typ.nint Bankruptcy_Age_In_Days_;
    KEL.typ.nint Liens_Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST370464_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST109430_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nkdate Address_Source_Date_First_Seen_;
    KEL.typ.nkdate Address_Source_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST109438_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nkdate Address_Source_Date_First_Seen_;
    KEL.typ.nkdate Address_Source_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST98658_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr First_Seen_Date_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.nbool Valid_Bankruptcy_Sources_;
    KEL.typ.nbool Valid_Liens_Sources_;
    KEL.typ.nbool Other_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST99642_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr First_Seen_Date_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST99804_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr First_Seen_Date_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST251824_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(__ST251829_Layout) Full_Name_;
    KEL.typ.ndataset(__ST251844_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(__ST251858_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99011_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99011_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(__ST109157_Layout) Address_Translated_Sources_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.ntyp(E_Address().Typ) Curr_Addr_Helper_Attribute_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91397_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91397_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr L_T_D1_Y_Old_Date_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Max_New_Date1_Y_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date1_Y_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt1_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_L_T_D_Old_Dt1_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST336129_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST107753_Layout) Person_Match_Sources_All_Pre_;
    KEL.typ.ndataset(__ST107780_Layout) Person_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST108495_Layout) Person_S_S_N_Match_Sources_All_Pre_;
    KEL.typ.ndataset(__ST108534_Layout) Person_S_S_N_Match_Sources_Group_All_;
    KEL.typ.ndataset(__ST370464_Layout) S_S_N_Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST336143_Layout) Translated_Sources_;
    KEL.typ.ndataset(__ST109430_Layout) Ver_Address_Source_List_F_C_R_A_Data_Set_;
    KEL.typ.ndataset(__ST109438_Layout) Ver_Address_Source_List_Non_F_C_R_A_Data_Set_;
    KEL.typ.ndataset(__ST98658_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99580_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(__ST99642_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99742_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(__ST99804_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST251824_Layout __ND4785621__Project(__ST4783326_Layout __PP4785617) := TRANSFORM
    __EE4785575 := __PP4785617.Full_Name_;
    SELF.Full_Name_ := __BN(PROJECT(__T(__EE4785575),__ST251829_Layout),__NL(__EE4785575));
    __EE4785579 := __PP4785617.Reported_Dates_Of_Birth_;
    SELF.Reported_Dates_Of_Birth_ := __BN(PROJECT(__T(__EE4785579),__ST251844_Layout),__NL(__EE4785579));
    __EE4785583 := __PP4785617.Data_Sources_;
    SELF.Data_Sources_ := __BN(PROJECT(__T(__EE4785583),__ST251858_Layout),__NL(__EE4785583));
    __EE4785995 := __PP4785617.Accident_Recs_Formatted_;
    __EE4786009 := __BN(PROJECT(DEDUP(SORT(__T(__EE4785995),__T(__T(__EE4785995).Date_Of_Accident_), -__T(__T(__EE4785995).Estimated_Vehicle_Damage_),__T(Accident_Age_In_Days_),__T(Formatted_Date_)),__T(__OP2(LEFT.Date_Of_Accident_,=,RIGHT.Date_Of_Accident_))),B_Person_6(__in,__cfg).__ST99011_Layout),__NL(__PP4785617.Accident_Recs_Formatted_));
    SELF.Accident_Recs_Formatted_Dedup_ := __EE4786009;
    __EE4785615 := __PP4785617.Person_Address_;
    SELF.Address_Translated_Sources_ := __PROJECT(__EE4785615,__ST109157_Layout);
    __EE4786029 := __PP4785617.Reported_Dates_Of_Birth_;
    __BS4786033 := __T(__EE4786029);
    __EE4786038 := __BS4786033(__T(__T(__EE4786029).Best_D_O_B_Rec_));
    SELF.Best_D_O_B_ := (__EE4786038)[1].Date_Of_Birth_;
    SELF.Curr_Addr_Helper_Attribute_ := __PP4785617.Current_Address_;
    __EE4786054 := __PP4785617.Edu_Rec_Ver_Source_List_;
    __CC14181 := '-99997';
    __BS4786058 := __T(__EE4786054);
    __EE4786071 := __BN(TOPN(__BS4786058(__NN(__OP2(__T(__EE4786054).Source_Date_Last_Seen_,=,__CN(__CC14181))) AND __NN(__T(__EE4786054).Source_Date_Last_Seen_) AND __NN(__T(__EE4786054).Source_Date_First_Seen_)),1000,__T(__OP2(__T(__EE4786054).Source_Date_Last_Seen_,=,__CN(__CC14181))),__T(__T(__EE4786054).Source_Date_Last_Seen_),__T(__T(__EE4786054).Source_Date_First_Seen_),__T(College_Code_),__T(College_Type_),__T(File_Type_)),__NL(__EE4786054));
    SELF.Edu_Rec_Ver_Source_List_Sorted_ := __EE4786071;
    __EE4786082 := __PP4785617.All_Lien_Data_;
    __BS4786086 := __T(__EE4786082);
    __EE4786094 := __BS4786086(__T(__AND(__T(__EE4786082).Seen___In___Seven___Years_,__T(__EE4786082).Is_Landlord_Tenant_Dispute_)));
    __CC14151 := '-99997';
    SELF.L_T_D7_Y_Old_Date_ := FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,KEL.Aggregates.MinN(__EE4786094,__EE4786094.Original_Filing_Date_))),__ECAST(KEL.typ.nstr,__CN(__CC14151)));
    SELF.Ln_J_L_T_D_Max_New_Date1_Y_ := KEL.Routines.MaxN(__PP4785617.P_L___Drg_Ln_J_New_Dt1_Y_,__PP4785617.P_L___Drg_L_T_D_New_Dt1_Y_);
    __CC14179 := '-99998';
    SELF.Ln_J_L_T_D_Min_Old_Date1_Y_ := IF(__T(__OR(__OP2(KEL.Routines.MinN(__PP4785617.P_L___Drg_Ln_J_Old_Dt1_Y_,__PP4785617.L_T_D1_Y_Old_Date_),=,__CN(__CC14181)),__OP2(KEL.Routines.MinN(__PP4785617.P_L___Drg_Ln_J_Old_Dt1_Y_,__PP4785617.L_T_D1_Y_Old_Date_),=,__CN(__CC14179)))),__ECAST(KEL.typ.nstr,KEL.Routines.MaxN(__PP4785617.P_L___Drg_Ln_J_Old_Dt1_Y_,__PP4785617.L_T_D1_Y_Old_Date_)),__ECAST(KEL.typ.nstr,KEL.Routines.MinN(__PP4785617.P_L___Drg_Ln_J_Old_Dt1_Y_,__PP4785617.L_T_D1_Y_Old_Date_)));
    __CC14107 := '-99999';
    __CC14112 := '-99998';
    SELF.P_L___Drg_Bk_New_Dt1_Y_ := IF(__PP4785617.P___Lex_I_D_Seen_Flag_ = '0',__ECAST(KEL.typ.nstr,__CN(__CC14107)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,__PP4785617.M_A_X___Bankruptcy_Date_)),__ECAST(KEL.typ.nstr,__CN(__CC14112)))));
    SELF.P_L___Drg_Bk_Old_Dt1_Y_ := IF(__PP4785617.P___Lex_I_D_Seen_Flag_ = '0',__ECAST(KEL.typ.nstr,__CN(__CC14107)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,__PP4785617.M_I_N___Bankruptcy_Date_)),__ECAST(KEL.typ.nstr,__CN(__CC14112)))));
    __CC14141 := '-99999';
    __CC14146 := '-99998';
    __BS4786182 := __T(__PP4785617.All_Lien_Data_);
    SELF.P_L___Drg_L_T_D_New_Dt7_Y_ := MAP(__PP4785617.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14141)),__PP4785617.P_L___Drg_L_T_D_Cnt7_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC14146)), NOT EXISTS(__BS4786182(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP4785617.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC14151))),__AND(__T(__PP4785617.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP4785617.All_Lien_Data_).Is_Landlord_Tenant_Dispute_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC14151)),__ECAST(KEL.typ.nstr,__PP4785617.L_T_D7_Y_New_Date_));
    __BS4786216 := __T(__PP4785617.All_Lien_Data_);
    SELF.P_L___Drg_L_T_D_Old_Dt1_Y_ := MAP(__PP4785617.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14141)),__PP4785617.P_L___Drg_L_T_D_Cnt1_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC14146)), NOT EXISTS(__BS4786216(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP4785617.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC14151))),__AND(__T(__PP4785617.All_Lien_Data_).Seen___In___One___Year_,__T(__PP4785617.All_Lien_Data_).Is_Landlord_Tenant_Dispute_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC14151)),__ECAST(KEL.typ.nstr,__PP4785617.L_T_D1_Y_Old_Date_));
    __BS4786256 := __T(__PP4785617.All_Lien_Data_);
    SELF.P_L___Drg_Ln_J_New_Dt7_Y_ := MAP(__PP4785617.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14141)),__PP4785617.P_L___Drg_Ln_J_Cnt7_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC14146)), NOT EXISTS(__BS4786256(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP4785617.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC14151))),__AND(__T(__PP4785617.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP4785617.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC14151)),__ECAST(KEL.typ.nstr,__PP4785617.Ln_J7_Y_New_Date_));
    __BS4786292 := __T(__PP4785617.All_Lien_Data_);
    SELF.P_L___Drg_Ln_J_Old_Dt7_Y_ := MAP(__PP4785617.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14141)),__PP4785617.P_L___Drg_Ln_J_Cnt7_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC14146)), NOT EXISTS(__BS4786292(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP4785617.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC14151))),__AND(__T(__PP4785617.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP4785617.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC14151)),__ECAST(KEL.typ.nstr,__PP4785617.Ln_J7_Y_Old_Date_));
    __EE4785587 := __PP4785617.Person_Match_Sources_All_Pre_;
    __BS4786346 := __T(__EE4785587);
    __EE4786353 := __BS4786346(__T(__OP2(__T(__EE4785587).Translated_Source_Code_,<>,__CN(''))));
    __ST107780_Layout __ND4786358__Project(B_Person_6(__in,__cfg).__ST107753_Layout __PP4786354) := TRANSFORM
      __CC13355 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Bankruptcy_Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,__PP4786354.Source_Date_Last_Seen_),__ECAST(KEL.typ.nkdate,__CC13355));
      SELF.Liens_Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,__PP4786354.Source_Date_Last_Seen_),__ECAST(KEL.typ.nkdate,__CC13355));
      SELF := __PP4786354;
    END;
    SELF.Person_Match_Sources_Group_All_ := __CN(PROJECT(__EE4786353,__ND4786358__Project(LEFT)));
    __EE4785591 := __PP4785617.Person_S_S_N_Match_Sources_All_Pre_;
    __BS4786385 := __T(__EE4785591);
    __EE4786392 := __BS4786385(__T(__OP2(__T(__EE4785591).Translated_Source_Code_,<>,__CN(''))));
    __ST108534_Layout __ND4786397__Project(B_Person_6(__in,__cfg).__ST108495_Layout __PP4786393) := TRANSFORM
      __CC13355 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Bankruptcy_Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,__PP4786393.S_S_N_Source_Date_Last_Seen_),__ECAST(KEL.typ.nkdate,__CC13355));
      SELF.Liens_Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,__PP4786393.S_S_N_Source_Date_Last_Seen_),__ECAST(KEL.typ.nkdate,__CC13355));
      SELF := __PP4786393;
    END;
    SELF.Person_S_S_N_Match_Sources_Group_All_ := __CN(PROJECT(__EE4786392,__ND4786397__Project(LEFT)));
    __EE4786422 := __PP4785617.S_S_N_Translated_Sources_;
    __ST370464_Layout __ND4786430__Project(B_Person_6(__in,__cfg).__ST99916_Layout __PP4786426) := TRANSFORM
      __CC13355 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,KEL.era.ToDate(__PP4786426.Date_Last_Seen_)),__ECAST(KEL.typ.nkdate,__CC13355));
      SELF := __PP4786426;
    END;
    SELF.S_S_N_Translated_Sources_ := __PROJECT(__EE4786422,__ND4786430__Project(LEFT));
    __EE4785595 := __PP4785617.Person_Address_Match_Sources_Group_All_;
    __BS4786446 := __T(__EE4785595);
    __EE4786457 := __BS4786446(__T(__OR(__OR(__T(__EE4785595).Valid_Bankruptcy_Sources_,__T(__EE4785595).Valid_Liens_Sources_),__T(__EE4785595).Other_Sources_)));
    SELF.Ver_Address_Source_List_F_C_R_A_Data_Set_ := __CN(PROJECT(__EE4786457,__ST109430_Layout));
    __EE4785599 := __PP4785617.Person_Address_Match_Sources_Group_All_;
    SELF.Ver_Address_Source_List_Non_F_C_R_A_Data_Set_ := __PROJECT(__EE4785599,__ST109438_Layout);
    __EE4785603 := __PP4785617.Translated_Sources_;
    __BS4786496 := __T(__EE4785603);
    __EE4786503 := __BS4786496(__T(__OP2(__T(__EE4785603).Translated_Source_Code_,<>,__CN(''))));
    __ST98658_Layout __ND4786508__Project(B_Person_6(__in,__cfg).__ST336143_Layout __PP4786504) := TRANSFORM
      __CC13355 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      __CC14181 := '-99997';
      SELF.Source_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786504.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786504.Date_First_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14181)));
      __CC73680 := '99999999';
      SELF.First_Seen_Date_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786504.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786504.Date_First_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC73680)));
      SELF.Source_Date_Last_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786504.Date_Last_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786504.Date_Last_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14181)));
      __CC73684 := 3652;
      SELF.Valid_Bankruptcy_Sources_ := __AND(__AND(__OP2(__PP4786504.Translated_Source_Code_,=,__CN('BA')),__OP2(__PP4786504.Age_In_Days_,<=,__CN(__CC73684))),__NOT(__NT(__PP4786504.Age_In_Days_)));
      __CC73682 := 2556;
      SELF.Valid_Liens_Sources_ := __AND(__AND(__OP2(__PP4786504.Translated_Source_Code_,=,__CN('L2')),__OP2(__PP4786504.Age_In_Days_,<=,__CN(__CC73682))),__NOT(__NT(__PP4786504.Age_In_Days_)));
      SELF.Other_Sources_ := __AND(__OP2(__PP4786504.Translated_Source_Code_,<>,__CN('BA')),__OP2(__PP4786504.Translated_Source_Code_,<>,__CN('L2')));
      SELF := __PP4786504;
    END;
    SELF.Ver_Source_List_ := __CN(PROJECT(__EE4786503,__ND4786508__Project(LEFT)));
    __EE4785607 := __PP4785617.Verified_First_Name_Sources_;
    __ST99642_Layout __ND4786606__Project(B_Person_6(__in,__cfg).__ST99580_Layout __PP4786602) := TRANSFORM
      __CC13355 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      __CC14181 := '-99997';
      SELF.Source_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786602.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786602.Date_First_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14181)));
      __CC73680 := '99999999';
      SELF.First_Seen_Date_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786602.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786602.Date_First_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC73680)));
      SELF.Source_Date_Last_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786602.Date_Last_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786602.Date_Last_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14181)));
      SELF.Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,KEL.era.ToDate(__PP4786602.Date_Last_Seen_)),__ECAST(KEL.typ.nkdate,__CC13355));
      SELF := __PP4786602;
    END;
    SELF.Verified_First_Name_Sources_With_Dates_ := __PROJECT(__EE4785607,__ND4786606__Project(LEFT));
    __EE4785611 := __PP4785617.Verified_Last_Name_Sources_;
    __ST99804_Layout __ND4786667__Project(B_Person_6(__in,__cfg).__ST99742_Layout __PP4786663) := TRANSFORM
      __CC13355 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      __CC14181 := '-99997';
      SELF.Source_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786663.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786663.Date_First_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14181)));
      __CC73680 := '99999999';
      SELF.First_Seen_Date_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786663.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786663.Date_First_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC73680)));
      SELF.Source_Date_Last_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP4786663.Date_Last_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP4786663.Date_Last_Seen_),__CC13355),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14181)));
      SELF.Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,KEL.era.ToDate(__PP4786663.Date_Last_Seen_)),__ECAST(KEL.typ.nkdate,__CC13355));
      SELF := __PP4786663;
    END;
    SELF.Verified_Last_Name_Sources_With_Dates_ := __PROJECT(__EE4785611,__ND4786667__Project(LEFT));
    SELF := __PP4785617;
  END;
  EXPORT __ENH_Person_5 := PROJECT(__EE4785572,__ND4785621__Project(LEFT));
END;
