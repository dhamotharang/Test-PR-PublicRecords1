//HPCC Systems KEL Compiler Version 1.5.0rc1
IMPORT KEL15 AS KEL;
IMPORT B_Person_7,B_Person_8,B_Person_Accident_8,B_Person_S_S_N_7,CFG_Compile,E_Accident,E_Address,E_Address_Slim,E_Address_Summary,E_Email,E_Geo_Link,E_Input_P_I_I,E_Name_Summary,E_Person,E_Person_Accident,E_Person_S_S_N,E_Phone,E_Phone_Summary,E_Property,E_S_S_N_Summary,E_Social_Security_Number,E_Surname,E_Zip_Code,FN_Compile FROM PublicRecords_KEL.KEL_Queries_MAS_NonFCRA;
IMPORT * FROM KEL15.Null;
EXPORT B_Person_6(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(E_Accident(__in,__cfg).__Result) __E_Accident := E_Accident(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(B_Person_7(__in,__cfg).__ENH_Person_7) __ENH_Person_7 := B_Person_7(__in,__cfg).__ENH_Person_7;
  SHARED VIRTUAL TYPEOF(B_Person_S_S_N_7(__in,__cfg).__ENH_Person_S_S_N_7) __ENH_Person_S_S_N_7 := B_Person_S_S_N_7(__in,__cfg).__ENH_Person_S_S_N_7;
  SHARED __EE4732115 := __ENH_Person_7;
  SHARED __EE4732122 := __EE4732115;
  SHARED __ST346053_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249735_Layout) Full_Name_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Birth_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249763_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST109372_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST98562_Layout) Translated_Sources_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Accident().Typ) Acc_;
    KEL.typ.nstr Point_Of_Impact_;
    KEL.typ.nstr Driver_B_A_C_Test_Type_;
    KEL.typ.nint Driver_B_A_C_Test_Results_;
    KEL.typ.nint Driver_Alcohol_Drug_Code_;
    KEL.typ.nint Driver_Physical_Defects_;
    KEL.typ.nint Driver_Residence_;
    KEL.typ.nint Driver_Injury_Severity_;
    KEL.typ.nint First_Driver_Safety_;
    KEL.typ.nint Second_Driver_Safety_;
    KEL.typ.nint Driver_Eject_Code_;
    KEL.typ.nint Recommend_Reexam_;
    KEL.typ.nint First_Contributing_Cause_;
    KEL.typ.nint Second_Contributing_Cause_;
    KEL.typ.nint Third_Contributing_Cause_;
    KEL.typ.nstr Vehicle_Incident_I_D_;
    KEL.typ.nstr Vehicle_Status_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nint Airbags_Deploy_;
    KEL.typ.nint Towed_;
    KEL.typ.nstr Impact_Location_;
    KEL.typ.nint Vehicle_Owner_Driver_Code_;
    KEL.typ.nint Vehicle_Driver_Action_;
    KEL.typ.nstr Vehicle_Travel_On_;
    KEL.typ.nstr Direction_Of_Travel_;
    KEL.typ.nint Estimated_Vehicle_Speed_;
    KEL.typ.nint Posted_Speed_;
    KEL.typ.nint Estimated_Vehicle_Damage_;
    KEL.typ.nint Damage_Type_;
    KEL.typ.nstr Vehicle_Removed_By_;
    KEL.typ.nint How_Removed_Code_;
    KEL.typ.nint Vehicle_Movement_;
    KEL.typ.nint Vehicle_Function_;
    KEL.typ.nint Vehicle_First_Defect_;
    KEL.typ.nint Vehicle_Second_Defect_;
    KEL.typ.nint Vehicle_Roadway_Location_;
    KEL.typ.nint Hazardous_Material_Transport_;
    KEL.typ.nint Total_Occupancy_Vehicle_;
    KEL.typ.nint Total_Occupancy_Safety_Equipment_;
    KEL.typ.nint Moving_Violation_;
    KEL.typ.nint Vehicle_Fault_Code_;
    KEL.typ.nstr Vehicle_Insured_Code_;
    KEL.typ.ndataset(E_Person_Accident(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.bool Is_Accident_Record_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST346053_Layout __JT4732130(B_Person_7(__in,__cfg).__ST249730_Layout __l, B_Person_Accident_8(__in,__cfg).__ST211207_Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE4732365 := NORMALIZE(__EE4732122,__T(LEFT.Accident_Recs_),__JT4732130(LEFT,RIGHT));
  SHARED __EE4732117 := __E_Accident;
  SHARED __ST346342_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249735_Layout) Full_Name_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Birth_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249763_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST109372_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST98562_Layout) Translated_Sources_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Accident().Typ) Acc_;
    KEL.typ.nstr Point_Of_Impact_;
    KEL.typ.nstr Driver_B_A_C_Test_Type_;
    KEL.typ.nint Driver_B_A_C_Test_Results_;
    KEL.typ.nint Driver_Alcohol_Drug_Code_;
    KEL.typ.nint Driver_Physical_Defects_;
    KEL.typ.nint Driver_Residence_;
    KEL.typ.nint Driver_Injury_Severity_;
    KEL.typ.nint First_Driver_Safety_;
    KEL.typ.nint Second_Driver_Safety_;
    KEL.typ.nint Driver_Eject_Code_;
    KEL.typ.nint Recommend_Reexam_;
    KEL.typ.nint First_Contributing_Cause_;
    KEL.typ.nint Second_Contributing_Cause_;
    KEL.typ.nint Third_Contributing_Cause_;
    KEL.typ.nstr Vehicle_Incident_I_D_;
    KEL.typ.nstr Vehicle_Status_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nint Airbags_Deploy_;
    KEL.typ.nint Towed_;
    KEL.typ.nstr Impact_Location_;
    KEL.typ.nint Vehicle_Owner_Driver_Code_;
    KEL.typ.nint Vehicle_Driver_Action_;
    KEL.typ.nstr Vehicle_Travel_On_;
    KEL.typ.nstr Direction_Of_Travel_;
    KEL.typ.nint Estimated_Vehicle_Speed_;
    KEL.typ.nint Posted_Speed_;
    KEL.typ.nint Estimated_Vehicle_Damage_;
    KEL.typ.nint Damage_Type_;
    KEL.typ.nstr Vehicle_Removed_By_;
    KEL.typ.nint How_Removed_Code_;
    KEL.typ.nint Vehicle_Movement_;
    KEL.typ.nint Vehicle_Function_;
    KEL.typ.nint Vehicle_First_Defect_;
    KEL.typ.nint Vehicle_Second_Defect_;
    KEL.typ.nint Vehicle_Roadway_Location_;
    KEL.typ.nint Hazardous_Material_Transport_;
    KEL.typ.nint Total_Occupancy_Vehicle_;
    KEL.typ.nint Total_Occupancy_Safety_Equipment_;
    KEL.typ.nint Moving_Violation_;
    KEL.typ.nint Vehicle_Fault_Code_;
    KEL.typ.nstr Vehicle_Insured_Code_;
    KEL.typ.ndataset(E_Person_Accident(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.bool Is_Accident_Record_ := FALSE;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Accident_Number_;
    KEL.typ.nkdate Accident_Date_;
    KEL.typ.nstr Accident_Location_;
    KEL.typ.nstr Accident_Street_;
    KEL.typ.nstr Accident_Cross_Street_;
    KEL.typ.nstr Next_Street_;
    KEL.typ.nstr Incident_City_;
    KEL.typ.nstr Incident_State_;
    KEL.typ.nstr Jurisdiction_State_;
    KEL.typ.nstr Jurisdiction_;
    KEL.typ.nint Jurisdiction_Number_;
    KEL.typ.nstr Report_Category_;
    KEL.typ.nstr Report_Type_I_D_;
    KEL.typ.nstr Report_Code_Description_;
    KEL.typ.nbool Report_Has_Cover_Sheet_;
    KEL.typ.nstr Additional_Report_Number_;
    KEL.typ.ndataset(E_Accident(__in,__cfg).Report_Codes_Layout) Report_Codes_;
    KEL.typ.ndataset(E_Accident(__in,__cfg).Report_Statuses_Layout) Report_Statuses_;
    KEL.typ.ndataset(E_Accident(__in,__cfg).Data_Sources_Layout) Data_Sources__2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4732374(__ST346053_Layout __EE4732365, E_Accident(__in,__cfg).Layout __EE4732117) := __EEQP(__EE4732365.Acc_,__EE4732117.UID);
  __ST346342_Layout __JT4732374(__ST346053_Layout __l, E_Accident(__in,__cfg).Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF.Data_Sources__2_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE4732637 := JOIN(__EE4732365,__EE4732117,__JC4732374(LEFT,RIGHT),__JT4732374(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __ST4743961_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Estimated_Vehicle_Damage_;
    KEL.typ.nkdate Accident_Date_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE4743966 := PROJECT(TABLE(PROJECT(__EE4732637,__ST4743961_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Estimated_Vehicle_Damage_,Accident_Date_},UID,Estimated_Vehicle_Damage_,Accident_Date_,MERGE),__ST4743961_Layout);
  SHARED __ST4743982_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249735_Layout) Full_Name_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Birth_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249763_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST109372_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST98562_Layout) Translated_Sources_;
    KEL.typ.ndataset(__ST4743961_Layout) Person_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4743979(B_Person_7(__in,__cfg).__ST249730_Layout __EE4732115, __ST4743961_Layout __EE4743966) := __EEQP(__EE4732115.UID,__EE4743966.UID);
  __ST4743982_Layout __Join__ST4743982_Layout(B_Person_7(__in,__cfg).__ST249730_Layout __r, DATASET(__ST4743961_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_ := __CN(__recs);
  END;
  SHARED __EE4743980 := DENORMALIZE(DISTRIBUTE(__EE4732115,HASH(UID)),DISTRIBUTE(__EE4743966,HASH(UID)),__JC4743979(LEFT,RIGHT),GROUP,__Join__ST4743982_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE4733093 := __ENH_Person_S_S_N_7;
  SHARED __EE4747894 := __EE4733093(__T(__AND(__EE4733093.Input_S_S_N_Match_,__CN(__NN(__EE4733093.Subject_)))));
  SHARED __EE4747905 := __EE4747894.Valid_S_S_N_;
  __JC4747908(E_Person_S_S_N(__in,__cfg).Valid_S_S_N_Layout __EE4747905) := __T(__OP2(__EE4747905.Valid_S_S_N_,IN,__CN(['G','Z','R','O','F'])));
  SHARED __EE4747925 := __EE4747894(EXISTS(__CHILDJOINFILTER(__EE4747905,__JC4747908)));
  SHARED __ST340702_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Social_;
    KEL.typ.ndataset(E_Person_S_S_N(__in,__cfg).Valid_S_S_N_Layout) Valid_S_S_N_;
    KEL.typ.ndataset(B_Person_S_S_N_7(__in,__cfg).__ST209866_Layout) Data_Sources_;
    KEL.typ.nbool Input_S_S_N_Match_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool F_D_N_Indicator_;
    KEL.typ.nbool Death_Master_Flag_;
    KEL.typ.nkdate S_S_N_Source_Date_First_Seen_;
    KEL.typ.nkdate S_S_N_Source_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4747931(B_Person_S_S_N_7(__in,__cfg).__ST209858_Layout __EE4747925, B_Person_S_S_N_7(__in,__cfg).__ST209866_Layout __EE4746225) := __T(__AND(__EE4746225.Header_Hit_Flag_,__OP2(__EE4746225.Translated_Source_Code_,<>,__CN(''))));
  __ST340702_Layout __JT4747931(B_Person_S_S_N_7(__in,__cfg).__ST209858_Layout __l, B_Person_S_S_N_7(__in,__cfg).__ST209866_Layout __r) := TRANSFORM, SKIP(NOT(__JC4747931(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE4747955 := NORMALIZE(__EE4747925,__T(LEFT.Data_Sources_),__JT4747931(LEFT,RIGHT));
  SHARED __ST4744418_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nkdate S_S_N_Source_Date_First_Seen_;
    KEL.typ.nkdate S_S_N_Source_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE4746290 := PROJECT(TABLE(PROJECT(__EE4747955,__ST4744418_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Subject_,S_S_N_Source_Date_First_Seen_,S_S_N_Source_Date_Last_Seen_,Translated_Source_Code_},Subject_,S_S_N_Source_Date_First_Seen_,S_S_N_Source_Date_Last_Seen_,Translated_Source_Code_,MERGE),__ST4744418_Layout);
  SHARED __ST4744442_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249735_Layout) Full_Name_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Birth_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249763_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST109372_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST98562_Layout) Translated_Sources_;
    KEL.typ.ndataset(__ST4743961_Layout) Person_;
    KEL.typ.ndataset(__ST4744418_Layout) Person_S_S_N_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4746296(__ST4743982_Layout __EE4743980, __ST4744418_Layout __EE4746290) := __EEQP(__EE4743980.UID,__EE4746290.Subject_);
  __ST4744442_Layout __Join__ST4744442_Layout(__ST4743982_Layout __r, DATASET(__ST4744418_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_S_S_N_ := __CN(__recs);
  END;
  SHARED __EE4746493 := DENORMALIZE(DISTRIBUTE(__EE4743980,HASH(UID)),DISTRIBUTE(__EE4746290,HASH(Subject_)),__JC4746296(LEFT,RIGHT),GROUP,__Join__ST4744442_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __ST4744899_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249735_Layout) Full_Name_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Birth_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST249763_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST109372_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST98562_Layout) Translated_Sources_;
    KEL.typ.ndataset(__ST4743961_Layout) Person_;
    KEL.typ.ndataset(__ST4744418_Layout) Person_S_S_N_;
    KEL.typ.ndataset(__ST4744418_Layout) Person_S_S_N__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC4746567(__ST4744442_Layout __EE4746493, __ST4744418_Layout __EE4746290) := __EEQP(__EE4746493.UID,__EE4746290.Subject_);
  __ST4744899_Layout __Join__ST4744899_Layout(__ST4744442_Layout __r, DATASET(__ST4744418_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_S_S_N__1_ := __CN(__recs);
  END;
  SHARED __EE4746770 := DENORMALIZE(DISTRIBUTE(__EE4746493,HASH(UID)),DISTRIBUTE(__EE4746290,HASH(Subject_)),__JC4746567(LEFT,RIGHT),GROUP,__Join__ST4744899_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  EXPORT __ST250558_Layout := RECORD
    KEL.typ.nstr Title_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Middle_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr Name_Suffix_;
    KEL.typ.nstr Name_Score_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nstr Source_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.bool Verified_First_Name_ := FALSE;
    KEL.typ.bool Verified_Last_Name_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST250573_Layout := RECORD
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Date_Of_Birth_Padded_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nstr Valid_D_O_B_;
    KEL.typ.nbool Best_D_O_B_Rec_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST250587_Layout := RECORD
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool F_D_N_Indicator_;
    KEL.typ.nkdate Source_Date_First_Seen_;
    KEL.typ.nkdate Source_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST99011_Layout := RECORD
    KEL.typ.nstr Estimated_Vehicle_Damage_;
    KEL.typ.nstr Date_Of_Accident_;
    KEL.typ.nint Accident_Age_In_Days_;
    KEL.typ.nstr Formatted_Date_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST91397_Layout := RECORD
    KEL.typ.nstr File_Type_;
    KEL.typ.nstr College_Code_;
    KEL.typ.nstr College_Type_;
    KEL.typ.nstr College_Code_Convert_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST336129_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nkdate Address_Source_Date_First_Seen_;
    KEL.typ.nkdate Address_Source_Date_Last_Seen_;
    KEL.typ.nint Bankruptcy_Age_In_Days_;
    KEL.typ.nint Liens_Age_In_Days_;
    KEL.typ.nbool Other_Sources_;
    KEL.typ.nbool Valid_Bankruptcy_Sources_;
    KEL.typ.nbool Valid_Liens_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST107753_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nkdate Source_Date_First_Seen_;
    KEL.typ.nkdate Source_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST108495_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nkdate S_S_N_Source_Date_First_Seen_;
    KEL.typ.nkdate S_S_N_Source_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST99916_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST336143_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST99580_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST99742_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST250553_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(__ST250558_Layout) Full_Name_;
    KEL.typ.ndataset(__ST250573_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(__ST250587_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST211207_Layout) Accident_Recs_;
    KEL.typ.ndataset(__ST99011_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST317450_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(__ST91397_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST91361_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr L_T_D1_Y_Old_Date_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt1_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt1_Y_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST109345_Layout) Person_Address_Match_Sources_All_Pre_;
    KEL.typ.ndataset(__ST336129_Layout) Person_Address_Match_Sources_Group_All_;
    KEL.typ.ndataset(__ST107753_Layout) Person_Match_Sources_All_Pre_;
    KEL.typ.ndataset(__ST108495_Layout) Person_S_S_N_Match_Sources_All_Pre_;
    KEL.typ.ndataset(__ST99916_Layout) S_S_N_Translated_Sources_;
    KEL.typ.ndataset(__ST336143_Layout) Translated_Sources_;
    KEL.typ.ndataset(__ST99580_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(__ST99742_Layout) Verified_Last_Name_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST250553_Layout __ND4746819__Project(__ST4744899_Layout __PP4746815) := TRANSFORM
    __EE4746773 := __PP4746815.Full_Name_;
    SELF.Full_Name_ := __BN(PROJECT(__T(__EE4746773),__ST250558_Layout),__NL(__EE4746773));
    __EE4746777 := __PP4746815.Reported_Dates_Of_Birth_;
    __ST250573_Layout __ND4747052__Project(E_Person(__in,__cfg).Reported_Dates_Of_Birth_Layout __PP4747048) := TRANSFORM
      SELF.Best_D_O_B_Rec_ := __OP2(__PP4747048.Best_,=,__CN(TRUE));
      SELF := __PP4747048;
    END;
    SELF.Reported_Dates_Of_Birth_ := __PROJECT(__EE4746777,__ND4747052__Project(LEFT));
    __EE4746781 := __PP4746815.Data_Sources_;
    SELF.Data_Sources_ := __BN(PROJECT(__T(__EE4746781),__ST250587_Layout),__NL(__EE4746781));
    __EE4746801 := __PP4746815.Person_;
    __ST99011_Layout __ND4747138__Project(__ST4743961_Layout __PP4747124) := TRANSFORM
      __CC14305 := '-99997';
      SELF.Estimated_Vehicle_Damage_ := IF(__T(__OR(__OP2(__CAST(KEL.typ.str,__PP4747124.Estimated_Vehicle_Damage_),=,__CN('')),__NT(__PP4747124.Estimated_Vehicle_Damage_))),__ECAST(KEL.typ.nstr,__CN(__CC14305)),__ECAST(KEL.typ.nstr,__CAST(KEL.typ.str,__PP4747124.Estimated_Vehicle_Damage_)));
      __CC13603 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('accident_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Date_Of_Accident_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP4747124.Accident_Date_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(__PP4747124.Accident_Date_,__CC13603),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14305)));
      SELF.Accident_Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,__PP4747124.Accident_Date_),__ECAST(KEL.typ.nkdate,__CC13603));
      __CC73310 := '99999999';
      SELF.Formatted_Date_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP4747124.Accident_Date_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(__PP4747124.Accident_Date_,__CC13603),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC73310)));
      SELF := __PP4747124;
    END;
    SELF.Accident_Recs_Formatted_ := __BN(PROJECT(TABLE(PROJECT(__T(__EE4746801),__ND4747138__Project(LEFT))(__NN(Estimated_Vehicle_Damage_) OR __NN(Date_Of_Accident_) OR __NN(Accident_Age_In_Days_) OR __NN(Formatted_Date_)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Estimated_Vehicle_Damage_,Date_Of_Accident_,Accident_Age_In_Days_,Formatted_Date_},Estimated_Vehicle_Damage_,Date_Of_Accident_,Accident_Age_In_Days_,Formatted_Date_,MERGE),__ST99011_Layout),__NL(__EE4746801));
    __EE4746785 := __PP4746815.Edu_Rec_Ver_Source_List_Pre_;
    __ST91397_Layout __ND4747182__Project(B_Person_7(__in,__cfg).__ST91361_Layout __PP4747178) := TRANSFORM
      SELF.College_Code_Convert_ := MAP(__T(__OP2(__PP4747178.College_Code_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('3')),__T(__OP2(__PP4747178.College_Code_,=,__CN('2')))=>__ECAST(KEL.typ.nstr,__CN('1')),__T(__OP2(__PP4747178.College_Code_,=,__CN('4')))=>__ECAST(KEL.typ.nstr,__CN('2')),__N(KEL.typ.str));
      __CC14219 := '-99997';
      SELF.Source_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP4747178.Date_First_Seen_Min_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP4747178.Date_First_Seen_Min_,__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14219)));
      SELF.Source_Date_Last_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP4747178.Date_Last_Seen_Max_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(__PP4747178.Date_Last_Seen_Max_,__PP4746815.B_U_I_L_D___D_A_T_E_),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC14219)));
      SELF := __PP4747178;
    END;
    SELF.Edu_Rec_Ver_Source_List_ := __PROJECT(__EE4746785,__ND4747182__Project(LEFT));
    __EE4747244 := __PP4746815.All_Lien_Data_;
    __BS4747248 := __T(__EE4747244);
    __EE4747256 := __BS4747248(__T(__AND(__T(__EE4747244).Seen___In___One___Year_,__T(__EE4747244).Is_Landlord_Tenant_Dispute_)));
    __CC14151 := '-99997';
    SELF.L_T_D1_Y_Old_Date_ := FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,KEL.Aggregates.MinN(__EE4747256,__EE4747256.Original_Filing_Date_))),__ECAST(KEL.typ.nstr,__CN(__CC14151)));
    __EE4747269 := __PP4746815.All_Lien_Data_;
    __BS4747273 := __T(__EE4747269);
    __EE4747281 := __BS4747273(__T(__AND(__T(__EE4747269).Seen___In___Seven___Years_,__T(__EE4747269).Is_Landlord_Tenant_Dispute_)));
    SELF.L_T_D7_Y_New_Date_ := FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,KEL.Aggregates.MaxN(__EE4747281,__EE4747281.Original_Filing_Date_))),__ECAST(KEL.typ.nstr,__CN(__CC14151)));
    __EE4746813 := __PP4746815.All_Lien_Data_;
    __BS4747298 := __T(__EE4746813);
    __EE4747306 := __BS4747298(__T(__AND(__T(__EE4746813).Seen___In___Seven___Years_,__T(__EE4746813).Is_Over_All_Lien_Judgment_)));
    SELF.Ln_J7_Y_New_Date_ := FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,KEL.Aggregates.MaxN(__EE4747306,__EE4747306.Original_Filing_Date_))),__ECAST(KEL.typ.nstr,__CN(__CC14151)));
    __EE4747328 := __EE4747306;
    SELF.Ln_J7_Y_Old_Date_ := FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,KEL.Aggregates.MinN(__EE4747328,__EE4747328.Original_Filing_Date_))),__ECAST(KEL.typ.nstr,__CN(__CC14151)));
    __CC14144 := -99999;
    __BS4747348 := __T(__PP4746815.All_Lien_Data_);
    SELF.P_L___Drg_L_T_D_Cnt7_Y_ := IF(__PP4746815.P___Lex_I_D_Seen_Flag_ = '0',__CC14144,KEL.Routines.BoundsFold(COUNT(__BS4747348(__T(__AND(__T(__PP4746815.All_Lien_Data_).Seen___In___Seven___Years_,__OP2(__T(__PP4746815.All_Lien_Data_).Is_Landlord_Tenant_Dispute_,=,__CN(TRUE)))))),0,999));
    __CC14141 := '-99999';
    __CC14146 := '-99998';
    __BS4747372 := __T(__PP4746815.All_Lien_Data_);
    SELF.P_L___Drg_L_T_D_New_Dt1_Y_ := MAP(__PP4746815.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14141)),__PP4746815.P_L___Drg_L_T_D_Cnt1_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC14146)), NOT EXISTS(__BS4747372(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP4746815.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC14151))),__AND(__T(__PP4746815.All_Lien_Data_).Seen___In___One___Year_,__T(__PP4746815.All_Lien_Data_).Is_Landlord_Tenant_Dispute_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC14151)),__ECAST(KEL.typ.nstr,__PP4746815.L_T_D1_Y_New_Date_));
    __BS4747403 := __T(__PP4746815.All_Lien_Data_);
    SELF.P_L___Drg_Ln_J_Cnt7_Y_ := IF(__PP4746815.P___Lex_I_D_Seen_Flag_ = '0',__CC14144,KEL.Routines.BoundsFold(COUNT(__BS4747403(__T(__AND(__T(__PP4746815.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP4746815.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))),0,999));
    __BS4747425 := __T(__PP4746815.All_Lien_Data_);
    SELF.P_L___Drg_Ln_J_New_Dt1_Y_ := MAP(__PP4746815.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14141)),__PP4746815.P_L___Drg_Ln_J_Cnt1_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC14146)), NOT EXISTS(__BS4747425(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP4746815.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC14151))),__AND(__T(__PP4746815.All_Lien_Data_).Seen___In___One___Year_,__T(__PP4746815.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC14151)),__ECAST(KEL.typ.nstr,__PP4746815.Ln_J1_Y_New_Date_));
    __BS4747459 := __T(__PP4746815.All_Lien_Data_);
    SELF.P_L___Drg_Ln_J_Old_Dt1_Y_ := MAP(__PP4746815.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14141)),__PP4746815.P_L___Drg_Ln_J_Cnt1_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC14146)), NOT EXISTS(__BS4747459(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP4746815.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC14151))),__AND(__T(__PP4746815.All_Lien_Data_).Seen___In___One___Year_,__T(__PP4746815.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC14151)),__ECAST(KEL.typ.nstr,__PP4746815.Ln_J1_Y_Old_Date_));
    __EE4747509 := __PP4746815.Person_Address_Match_Sources_Group_All_;
    __ST336129_Layout __ND4747517__Project(B_Person_7(__in,__cfg).__ST109372_Layout __PP4747513) := TRANSFORM
      SELF.Other_Sources_ := __AND(__OP2(__PP4747513.Translated_Source_Code_,<>,__CN('BA')),__OP2(__PP4747513.Translated_Source_Code_,<>,__CN('L2')));
      __CC73684 := 3652;
      SELF.Valid_Bankruptcy_Sources_ := __AND(__AND(__OP2(__PP4747513.Translated_Source_Code_,=,__CN('BA')),__OP2(__PP4747513.Bankruptcy_Age_In_Days_,<=,__CN(__CC73684))),__NOT(__NT(__PP4747513.Bankruptcy_Age_In_Days_)));
      __CC73682 := 2556;
      SELF.Valid_Liens_Sources_ := __AND(__AND(__OP2(__PP4747513.Translated_Source_Code_,=,__CN('L2')),__OP2(__PP4747513.Liens_Age_In_Days_,<=,__CN(__CC73682))),__NOT(__NT(__PP4747513.Liens_Age_In_Days_)));
      SELF := __PP4747513;
    END;
    SELF.Person_Address_Match_Sources_Group_All_ := __PROJECT(__EE4747509,__ND4747517__Project(LEFT));
    __EE4746789 := __PP4746815.Data_Sources_;
    __BS4747584 := __T(__EE4746789);
    __EE4747594 := __BS4747584(__T(__AND(__T(__EE4746789).Header_Hit_Flag_,__OP2(__T(__EE4746789).Translated_Source_Code_,<>,__CN('')))));
    SELF.Person_Match_Sources_All_Pre_ := __CN(PROJECT(TABLE(PROJECT(__EE4747594,__ST107753_Layout)(__NN(Translated_Source_Code_) OR __NN(Source_Date_First_Seen_) OR __NN(Source_Date_Last_Seen_)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Translated_Source_Code_,Source_Date_First_Seen_,Source_Date_Last_Seen_},Translated_Source_Code_,Source_Date_First_Seen_,Source_Date_Last_Seen_,MERGE),__ST107753_Layout));
    __EE4746805 := __PP4746815.Person_S_S_N_;
    SELF.Person_S_S_N_Match_Sources_All_Pre_ := __PROJECT(__EE4746805,__ST108495_Layout);
    __EE4746809 := __PP4746815.Person_S_S_N__1_;
    SELF.S_S_N_Translated_Sources_ := __BN(PROJECT(TABLE(PROJECT(__T(__EE4746809),__ST99916_Layout)(__NN(Translated_Source_Code_)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Translated_Source_Code_},Translated_Source_Code_,MERGE),__ST99916_Layout),__NL(__EE4746809));
    __EE4747644 := __PP4746815.Translated_Sources_;
    __ST336143_Layout __ND4747652__Project(B_Person_7(__in,__cfg).__ST98562_Layout __PP4747648) := TRANSFORM
      __CC13355 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,KEL.era.ToDate(__PP4747648.Date_Last_Seen_)),__ECAST(KEL.typ.nkdate,__CC13355));
      SELF := __PP4747648;
    END;
    SELF.Translated_Sources_ := __PROJECT(__EE4747644,__ND4747652__Project(LEFT));
    __EE4746793 := __PP4746815.Full_Name_;
    __BS4747666 := __T(__EE4746793);
    __EE4747680 := __BS4747666(__T(__AND(__AND(__T(__EE4746793).Header_Hit_Flag_,__CN(__T(__EE4746793).Verified_First_Name_)),__OP2(__T(__EE4746793).Translated_Source_Code_,<>,__CN('')))));
    SELF.Verified_First_Name_Sources_ := __CN(PROJECT(TABLE(PROJECT(__EE4747680,__ST99580_Layout)(__NN(Translated_Source_Code_)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Translated_Source_Code_},Translated_Source_Code_,MERGE),__ST99580_Layout));
    __EE4746797 := __PP4746815.Full_Name_;
    __BS4747692 := __T(__EE4746797);
    __EE4747706 := __BS4747692(__T(__AND(__AND(__T(__EE4746797).Header_Hit_Flag_,__CN(__T(__EE4746797).Verified_Last_Name_)),__OP2(__T(__EE4746797).Translated_Source_Code_,<>,__CN('')))));
    SELF.Verified_Last_Name_Sources_ := __CN(PROJECT(TABLE(PROJECT(__EE4747706,__ST99742_Layout)(__NN(Translated_Source_Code_)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Translated_Source_Code_},Translated_Source_Code_,MERGE),__ST99742_Layout));
    SELF := __PP4746815;
  END;
  EXPORT __ENH_Person_6 := PROJECT(PROJECT(__EE4746770,__ND4746819__Project(LEFT)),__ST250553_Layout);
END;
