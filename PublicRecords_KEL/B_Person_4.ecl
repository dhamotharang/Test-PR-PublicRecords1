//HPCC Systems KEL Compiler Version 1.3.0beta5
IMPORT KEL13 AS KEL;
IMPORT B_Person_5,B_Person_6,B_Person_8,CFG_Compile,E_Person FROM PublicRecords_KEL;
IMPORT * FROM KEL13.Null;
EXPORT B_Person_4(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Person_5(__in,__cfg).__ENH_Person_5) __ENH_Person_5 := B_Person_5(__in,__cfg).__ENH_Person_5;
  SHARED __EE3697842 := __ENH_Person_5;
  EXPORT __ST181934_Layout := RECORD
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nbool D_O_B_Best_Not_Null_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Date_Vendor_First_Reported_ := 0;
    KEL.typ.epoch Date_Vendor_Last_Reported_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_First_Seen_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST596811_Layout := RECORD
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Filing_Type_Description_;
    KEL.typ.nint Amount_;
    KEL.typ.bool Landlord_Tenant_Dispute_Flag_ := FALSE;
    KEL.typ.nkdate Original_Filing_Date_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nbool Is_Civil_Court_Judgment_;
    KEL.typ.nbool Is_Federal_Tax_Lien_;
    KEL.typ.nbool Is_Foreclosure_Judgment_;
    KEL.typ.nbool Is_Landlord_Tenant_Dispute_;
    KEL.typ.nbool Is_Other_Lien_;
    KEL.typ.nbool Is_Other_Tax_Lien_;
    KEL.typ.nbool Is_Over_All_Judgment_;
    KEL.typ.nbool Is_Over_All_Lien_;
    KEL.typ.nbool Is_Small_Cliams_Judgment_;
    KEL.typ.nbool Is_State_Tax_Lien_;
    KEL.typ.nbool Is_Total_Tax_Lien_;
    KEL.typ.nbool Seen___In___Seven___Years_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Date_Vendor_First_Reported_ := 0;
    KEL.typ.epoch Date_Vendor_Last_Reported_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_First_Seen_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST181919_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Full_Name_Layout) Full_Name_;
    KEL.typ.ndataset(__ST181934_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST65387_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(__ST596811_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST65387_Layout) Curr_Addr_Full_Set_;
    B_Person_8(__in,__cfg).__ST65387_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST66819_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST66766_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST66819_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_8(__in,__cfg).__ST65387_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Date_Vendor_First_Reported_ := 0;
    KEL.typ.epoch Date_Vendor_Last_Reported_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_First_Seen_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST181919_Layout __ND3697569__Project(B_Person_5(__in,__cfg).__ST187594_Layout __PP3696788) := TRANSFORM
    __EE3697845 := __PP3696788.Reported_Dates_Of_Birth_;
    SELF.Reported_Dates_Of_Birth_ := __BN(PROJECT(__T(__EE3697845),__ST181934_Layout),__NL(__EE3697845));
    __EE3697567 := __PP3696788.All_Lien_Data_;
    __ST596811_Layout __ND3697363__Project(B_Person_5(__in,__cfg).__ST443001_Layout __PP3697004) := TRANSFORM
      __CC25125 := ['FORCIBLE ENTRY/DETAINER','LANDLORD TENANT JUDGMENT','FORCIBLE ENTRY/DETAINER RELEAS','FORCIBLE ENTRY/DETAINER RELEASE'];
      __CC25138 := ['CIVIL NEW FILING','CIVIL SUIT','CIVIL SUMMONS','COURT ORDER','FEDERAL COURT NEW FILING','FORECLOSURE NEW FILING','JUDGMENT - Chapter 7','LANDLORD TENANT SUIT','LIS PENDENS','LIS PENDENS NOTICE','LIS PENDENS RELEASE'];
      SELF.Is_Landlord_Tenant_Dispute_ := __AND(__OR(__CN(__PP3697004.Landlord_Tenant_Dispute_Flag_ = TRUE),__OP2(__PP3697004.Filing_Type_Description_,IN,__CN(__CC25125))),__NOT(__OP2(__PP3697004.Filing_Type_Description_,IN,__CN(__CC25138))));
      SELF.Is_Over_All_Judgment_ := __OR(__OR(__PP3697004.Is_Civil_Court_Judgment_,__PP3697004.Is_Foreclosure_Judgment_),__PP3697004.Is_Small_Cliams_Judgment_);
      SELF.Is_Over_All_Lien_ := __OR(__PP3697004.Is_Total_Tax_Lien_,__PP3697004.Is_Other_Lien_);
      __CC25119 := 2556;
      SELF.Seen___In___Seven___Years_ := __OP2(__PP3697004.Age_In_Days_,<=,__CN(__CC25119));
      SELF := __PP3697004;
    END;
    SELF.All_Lien_Data_ := __PROJECT(__EE3697567,__ND3697363__Project(LEFT));
    __EE3697581 := __PP3696788.Curr_Addr_Full_Set_;
    SELF.Curr_Addr_Full_ := (__T(__EE3697581))[1].Addr_Full_;
    SELF.Current_Addr_Pre_Dir_ := __PP3696788.Current_.Predirectional_;
    SELF.Current_Addr_Prim_Name_ := __PP3696788.Current_.Primary_Name_;
    SELF.Current_Addr_Prim_Rng_ := __PP3696788.Current_.Primary_Range_;
    SELF.Current_Addr_Sec_Rng_ := __PP3696788.Current_.Secondary_Range_;
    SELF.Current_Addr_Sffx_ := __PP3696788.Current_.Suffix_;
    SELF.Current_Addr_Zip5_ := __PP3696788.Current_.Z_I_P5_;
    SELF.Current_Postdirectional_ := __PP3696788.Current_.Postdirectional_;
    __EE3697636 := __PP3696788.Edu_Rec_Ver_Source_List_;
    __CC11377 := '-99997';
    __BS3697619 := __T(__EE3697636);
    __EE3697640 := __BN(TOPN(__BS3697619(__NN(__OP2(__T(__EE3697636).Source_Date_Last_Seen_,=,__CN(__CC11377))) AND __NN(__T(__EE3697636).Source_Date_Last_Seen_) AND __NN(__T(__EE3697636).Source_Date_First_Seen_)),1000,__T(__OP2(__T(__EE3697636).Source_Date_Last_Seen_,=,__CN(__CC11377))),__T(__T(__EE3697636).Source_Date_Last_Seen_),__T(__T(__EE3697636).Source_Date_First_Seen_),__T(File_Type_)),__NL(__EE3697636));
    SELF.Edu_Rec_Ver_Source_List_Sorted_ := __EE3697640;
    __BS3697643 := __T(__PP3696788.Data_Sources_);
    SELF.P___Lex_I_D_Seen_Flag_ := IF(EXISTS(__BS3697643(__T(__T(__PP3696788.Data_Sources_).Header_Hit_Flag_))),'1','0');
    __EE3697665 := __PP3696788.Reported_Dates_Of_Birth_;
    __BS3697666 := __T(__EE3697665);
    __EE3697671 := __BS3697666(__T(__T(__EE3697665).D_O_B_Best_Not_Null_));
    SELF.Select_Age_ := (__EE3697671)[1].Date_Of_Birth_;
    SELF := __PP3696788;
  END;
  EXPORT __ENH_Person_4 := PROJECT(__EE3697842,__ND3697569__Project(LEFT));
END;
