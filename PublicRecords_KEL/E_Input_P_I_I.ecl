//HPCC Systems KEL Compiler Version 0.11.4
IMPORT KEL011 AS KEL;
IMPORT CFG_Compile,E_Person FROM PublicRecords_KEL;
IMPORT * FROM KEL011.Null;
EXPORT E_Input_P_I_I(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  EXPORT Typ := KEL.typ.uid;
  EXPORT InLayout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr Account_;
    KEL.typ.nint Appended_Lex_I_D_;
    KEL.typ.nint Appended_Lex_I_D_Score_;
    KEL.typ.nstr Input_First_Name_;
    KEL.typ.nstr Input_Middle_Name_;
    KEL.typ.nstr Input_Last_Name_;
    KEL.typ.nstr Input_Address_;
    KEL.typ.nstr Input_City_;
    KEL.typ.nstr Input_State_;
    KEL.typ.nstr Input_Zip_;
    KEL.typ.nstr Input_Home_Phone_;
    KEL.typ.nstr Input_S_S_N_;
    KEL.typ.nstr Input_D_O_B_;
    KEL.typ.nstr Input_Work_Phone_;
    KEL.typ.nstr Input_Income_;
    KEL.typ.nstr Input_D_L_Number_;
    KEL.typ.nstr Input_D_L_State_;
    KEL.typ.nstr Input_Balance_;
    KEL.typ.nstr Input_Charge_Offd_;
    KEL.typ.nstr Input_Former_Name_;
    KEL.typ.nstr Input_Email_;
    KEL.typ.nstr Input_Employment_;
    KEL.typ.nstr Input_Archive_Date_;
    KEL.typ.nint Input_Lex_I_D_;
    KEL.typ.nstr Input_Clean_Prefix_;
    KEL.typ.nstr Input_Clean_First_Name_;
    KEL.typ.nstr Input_Clean_Suffix_;
    KEL.typ.nstr Input_Clean_Primary_Range_;
    KEL.typ.nstr Input_Clean_Pre_Direction_;
    KEL.typ.nstr Input_Clean_Primary_Name_;
    KEL.typ.nstr Input_Clean_Address_Suffix_;
    KEL.typ.nstr Input_Clean_Post_Direction_;
    KEL.typ.nstr Input_Clean_Unit_Desig_;
    KEL.typ.nstr Input_Clean_Secondary_Range_;
    KEL.typ.nstr Input_Clean_City_Name_;
    KEL.typ.nstr Input_Clean_State_;
    KEL.typ.nstr Input_Clean_Zip5_;
    KEL.typ.nstr Input_Clean_Zip4_;
    KEL.typ.nstr Input_Clean_Latitude_;
    KEL.typ.nstr Input_Clean_Longitude_;
    KEL.typ.nstr Input_Clean_County_;
    KEL.typ.nstr Input_Clean_Geoblock_;
    KEL.typ.nstr Input_Clean_Address_Type_;
    KEL.typ.nstr Input_Clean_Address_Status_;
    KEL.typ.nstr Input_Clean_Country_;
    KEL.typ.nstr Input_Clean_E_Mail_;
    KEL.typ.nstr Input_Clean_Home_Phone_;
    KEL.typ.nstr Input_Clean_Work_Phone_;
    KEL.typ.nstr Input_Clean_D_L_Number_;
    KEL.typ.nstr Input_Clean_D_L_State_;
    KEL.typ.nkdate Input_Clean_D_O_B_;
    KEL.typ.nstr Input_Clean_S_S_N_;
    KEL.typ.nstr Archive_Date_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    UNSIGNED1 __Permits;
  END;
  SHARED VIRTUAL __SourceFilter(DATASET(InLayout) __ds) := __ds;
  SHARED VIRTUAL __GroupedFilter(GROUPED DATASET(InLayout) __ds) := __ds;
  SHARED __Mapping := 'inputid(UID),subject(Subject_:0),account(Account_:\'\'),appendedlexid(Appended_Lex_I_D_:0),appendedlexidscore(Appended_Lex_I_D_Score_:0),inputfirstname(Input_First_Name_:\'\'),inputmiddlename(Input_Middle_Name_:\'\'),inputlastname(Input_Last_Name_:\'\'),inputaddress(Input_Address_:\'\'),inputcity(Input_City_:\'\'),inputstate(Input_State_:\'\'),inputzip(Input_Zip_:\'\'),inputhomephone(Input_Home_Phone_:\'\'),inputssn(Input_S_S_N_:\'\'),inputdob(Input_D_O_B_:\'\'),inputworkphone(Input_Work_Phone_:\'\'),inputincome(Input_Income_:\'\'),inputdlnumber(Input_D_L_Number_:\'\'),inputdlstate(Input_D_L_State_:\'\'),inputbalance(Input_Balance_:\'\'),inputchargeoffd(Input_Charge_Offd_:\'\'),inputformername(Input_Former_Name_:\'\'),inputemail(Input_Email_:\'\'),inputemployment(Input_Employment_:\'\'),inputarchivedate(Input_Archive_Date_:\'\'),inputlexid(Input_Lex_I_D_:0),inputcleanprefix(Input_Clean_Prefix_:\'\'),inputcleanfirstname(Input_Clean_First_Name_:\'\'),inputcleansuffix(Input_Clean_Suffix_:\'\'),inputcleanprimaryrange(Input_Clean_Primary_Range_:\'\'),inputcleanpredirection(Input_Clean_Pre_Direction_:\'\'),inputcleanprimaryname(Input_Clean_Primary_Name_:\'\'),inputcleanaddresssuffix(Input_Clean_Address_Suffix_:\'\'),inputcleanpostdirection(Input_Clean_Post_Direction_:\'\'),inputcleanunitdesig(Input_Clean_Unit_Desig_:\'\'),inputcleansecondaryrange(Input_Clean_Secondary_Range_:\'\'),inputcleancityname(Input_Clean_City_Name_:\'\'),inputcleanstate(Input_Clean_State_:\'\'),inputcleanzip5(Input_Clean_Zip5_:\'\'),inputcleanzip4(Input_Clean_Zip4_:\'\'),inputcleanlatitude(Input_Clean_Latitude_:\'\'),inputcleanlongitude(Input_Clean_Longitude_:\'\'),inputcleancounty(Input_Clean_County_:\'\'),inputcleangeoblock(Input_Clean_Geoblock_:\'\'),inputcleanaddresstype(Input_Clean_Address_Type_:\'\'),inputcleanaddressstatus(Input_Clean_Address_Status_:\'\'),inputcleancountry(Input_Clean_Country_:\'\'),inputcleanemail(Input_Clean_E_Mail_:\'\'),inputcleanhomephone(Input_Clean_Home_Phone_:\'\'),inputcleanworkphone(Input_Clean_Work_Phone_:\'\'),inputcleandlnumber(Input_Clean_D_L_Number_:\'\'),inputcleandlstate(Input_Clean_D_L_State_:\'\'),inputcleandob(Input_Clean_D_O_B_:DATE),inputcleanssn(Input_Clean_S_S_N_:\'\'),archivedate(Archive_Date_:\'\'),datefirstseen(Date_First_Seen_:EPOCH),datelastseen(Date_Last_Seen_:EPOCH)';
  EXPORT VIRTUAL DATASET(InLayout) InData := DATASET([],InLayout);
  EXPORT Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr Account_;
    KEL.typ.nint Appended_Lex_I_D_;
    KEL.typ.nint Appended_Lex_I_D_Score_;
    KEL.typ.nstr Input_First_Name_;
    KEL.typ.nstr Input_Middle_Name_;
    KEL.typ.nstr Input_Last_Name_;
    KEL.typ.nstr Input_Address_;
    KEL.typ.nstr Input_City_;
    KEL.typ.nstr Input_State_;
    KEL.typ.nstr Input_Zip_;
    KEL.typ.nstr Input_Home_Phone_;
    KEL.typ.nstr Input_S_S_N_;
    KEL.typ.nstr Input_D_O_B_;
    KEL.typ.nstr Input_Work_Phone_;
    KEL.typ.nstr Input_Income_;
    KEL.typ.nstr Input_D_L_Number_;
    KEL.typ.nstr Input_D_L_State_;
    KEL.typ.nstr Input_Balance_;
    KEL.typ.nstr Input_Charge_Offd_;
    KEL.typ.nstr Input_Former_Name_;
    KEL.typ.nstr Input_Email_;
    KEL.typ.nstr Input_Employment_;
    KEL.typ.nstr Input_Archive_Date_;
    KEL.typ.nint Input_Lex_I_D_;
    KEL.typ.nstr Input_Clean_Prefix_;
    KEL.typ.nstr Input_Clean_First_Name_;
    KEL.typ.nstr Input_Clean_Suffix_;
    KEL.typ.nstr Input_Clean_Primary_Range_;
    KEL.typ.nstr Input_Clean_Pre_Direction_;
    KEL.typ.nstr Input_Clean_Primary_Name_;
    KEL.typ.nstr Input_Clean_Address_Suffix_;
    KEL.typ.nstr Input_Clean_Post_Direction_;
    KEL.typ.nstr Input_Clean_Unit_Desig_;
    KEL.typ.nstr Input_Clean_Secondary_Range_;
    KEL.typ.nstr Input_Clean_City_Name_;
    KEL.typ.nstr Input_Clean_State_;
    KEL.typ.nstr Input_Clean_Zip5_;
    KEL.typ.nstr Input_Clean_Zip4_;
    KEL.typ.nstr Input_Clean_Latitude_;
    KEL.typ.nstr Input_Clean_Longitude_;
    KEL.typ.nstr Input_Clean_County_;
    KEL.typ.nstr Input_Clean_Geoblock_;
    KEL.typ.nstr Input_Clean_Address_Type_;
    KEL.typ.nstr Input_Clean_Address_Status_;
    KEL.typ.nstr Input_Clean_Country_;
    KEL.typ.nstr Input_Clean_E_Mail_;
    KEL.typ.nstr Input_Clean_Home_Phone_;
    KEL.typ.nstr Input_Clean_Work_Phone_;
    KEL.typ.nstr Input_Clean_D_L_Number_;
    KEL.typ.nstr Input_Clean_D_L_State_;
    KEL.typ.nkdate Input_Clean_D_O_B_;
    KEL.typ.nstr Input_Clean_S_S_N_;
    KEL.typ.nstr Archive_Date_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __PostFilter := __GroupedFilter(GROUP(DISTRIBUTE(InData,HASH(UID)),UID,LOCAL,ALL));
  Input_P_I_I_Group := __PostFilter;
  Layout Input_P_I_I__Rollup(InLayout __r, DATASET(InLayout) __recs) := TRANSFORM
    SELF.Subject_ := KEL.Intake.SingleValue(__recs,Subject_);
    SELF.Account_ := KEL.Intake.SingleValue(__recs,Account_);
    SELF.Appended_Lex_I_D_ := KEL.Intake.SingleValue(__recs,Appended_Lex_I_D_);
    SELF.Appended_Lex_I_D_Score_ := KEL.Intake.SingleValue(__recs,Appended_Lex_I_D_Score_);
    SELF.Input_First_Name_ := KEL.Intake.SingleValue(__recs,Input_First_Name_);
    SELF.Input_Middle_Name_ := KEL.Intake.SingleValue(__recs,Input_Middle_Name_);
    SELF.Input_Last_Name_ := KEL.Intake.SingleValue(__recs,Input_Last_Name_);
    SELF.Input_Address_ := KEL.Intake.SingleValue(__recs,Input_Address_);
    SELF.Input_City_ := KEL.Intake.SingleValue(__recs,Input_City_);
    SELF.Input_State_ := KEL.Intake.SingleValue(__recs,Input_State_);
    SELF.Input_Zip_ := KEL.Intake.SingleValue(__recs,Input_Zip_);
    SELF.Input_Home_Phone_ := KEL.Intake.SingleValue(__recs,Input_Home_Phone_);
    SELF.Input_S_S_N_ := KEL.Intake.SingleValue(__recs,Input_S_S_N_);
    SELF.Input_D_O_B_ := KEL.Intake.SingleValue(__recs,Input_D_O_B_);
    SELF.Input_Work_Phone_ := KEL.Intake.SingleValue(__recs,Input_Work_Phone_);
    SELF.Input_Income_ := KEL.Intake.SingleValue(__recs,Input_Income_);
    SELF.Input_D_L_Number_ := KEL.Intake.SingleValue(__recs,Input_D_L_Number_);
    SELF.Input_D_L_State_ := KEL.Intake.SingleValue(__recs,Input_D_L_State_);
    SELF.Input_Balance_ := KEL.Intake.SingleValue(__recs,Input_Balance_);
    SELF.Input_Charge_Offd_ := KEL.Intake.SingleValue(__recs,Input_Charge_Offd_);
    SELF.Input_Former_Name_ := KEL.Intake.SingleValue(__recs,Input_Former_Name_);
    SELF.Input_Email_ := KEL.Intake.SingleValue(__recs,Input_Email_);
    SELF.Input_Employment_ := KEL.Intake.SingleValue(__recs,Input_Employment_);
    SELF.Input_Archive_Date_ := KEL.Intake.SingleValue(__recs,Input_Archive_Date_);
    SELF.Input_Lex_I_D_ := KEL.Intake.SingleValue(__recs,Input_Lex_I_D_);
    SELF.Input_Clean_Prefix_ := KEL.Intake.SingleValue(__recs,Input_Clean_Prefix_);
    SELF.Input_Clean_First_Name_ := KEL.Intake.SingleValue(__recs,Input_Clean_First_Name_);
    SELF.Input_Clean_Suffix_ := KEL.Intake.SingleValue(__recs,Input_Clean_Suffix_);
    SELF.Input_Clean_Primary_Range_ := KEL.Intake.SingleValue(__recs,Input_Clean_Primary_Range_);
    SELF.Input_Clean_Pre_Direction_ := KEL.Intake.SingleValue(__recs,Input_Clean_Pre_Direction_);
    SELF.Input_Clean_Primary_Name_ := KEL.Intake.SingleValue(__recs,Input_Clean_Primary_Name_);
    SELF.Input_Clean_Address_Suffix_ := KEL.Intake.SingleValue(__recs,Input_Clean_Address_Suffix_);
    SELF.Input_Clean_Post_Direction_ := KEL.Intake.SingleValue(__recs,Input_Clean_Post_Direction_);
    SELF.Input_Clean_Unit_Desig_ := KEL.Intake.SingleValue(__recs,Input_Clean_Unit_Desig_);
    SELF.Input_Clean_Secondary_Range_ := KEL.Intake.SingleValue(__recs,Input_Clean_Secondary_Range_);
    SELF.Input_Clean_City_Name_ := KEL.Intake.SingleValue(__recs,Input_Clean_City_Name_);
    SELF.Input_Clean_State_ := KEL.Intake.SingleValue(__recs,Input_Clean_State_);
    SELF.Input_Clean_Zip5_ := KEL.Intake.SingleValue(__recs,Input_Clean_Zip5_);
    SELF.Input_Clean_Zip4_ := KEL.Intake.SingleValue(__recs,Input_Clean_Zip4_);
    SELF.Input_Clean_Latitude_ := KEL.Intake.SingleValue(__recs,Input_Clean_Latitude_);
    SELF.Input_Clean_Longitude_ := KEL.Intake.SingleValue(__recs,Input_Clean_Longitude_);
    SELF.Input_Clean_County_ := KEL.Intake.SingleValue(__recs,Input_Clean_County_);
    SELF.Input_Clean_Geoblock_ := KEL.Intake.SingleValue(__recs,Input_Clean_Geoblock_);
    SELF.Input_Clean_Address_Type_ := KEL.Intake.SingleValue(__recs,Input_Clean_Address_Type_);
    SELF.Input_Clean_Address_Status_ := KEL.Intake.SingleValue(__recs,Input_Clean_Address_Status_);
    SELF.Input_Clean_Country_ := KEL.Intake.SingleValue(__recs,Input_Clean_Country_);
    SELF.Input_Clean_E_Mail_ := KEL.Intake.SingleValue(__recs,Input_Clean_E_Mail_);
    SELF.Input_Clean_Home_Phone_ := KEL.Intake.SingleValue(__recs,Input_Clean_Home_Phone_);
    SELF.Input_Clean_Work_Phone_ := KEL.Intake.SingleValue(__recs,Input_Clean_Work_Phone_);
    SELF.Input_Clean_D_L_Number_ := KEL.Intake.SingleValue(__recs,Input_Clean_D_L_Number_);
    SELF.Input_Clean_D_L_State_ := KEL.Intake.SingleValue(__recs,Input_Clean_D_L_State_);
    SELF.Input_Clean_D_O_B_ := KEL.Intake.SingleValue(__recs,Input_Clean_D_O_B_);
    SELF.Input_Clean_S_S_N_ := KEL.Intake.SingleValue(__recs,Input_Clean_S_S_N_);
    SELF.Archive_Date_ := KEL.Intake.SingleValue(__recs,Archive_Date_);
    SELF.__RecordCount := COUNT(__recs);
    SELF.Date_First_Seen_ := KEL.era.SimpleRoll(__recs,Date_First_Seen_,MIN,TRUE);
    SELF.Date_Last_Seen_ := KEL.era.SimpleRoll(__recs,Date_Last_Seen_,MAX,FALSE);
    SELF := __r;
  END;
  Layout Input_P_I_I__Single_Rollup(InLayout __r) := TRANSFORM
    SELF.__RecordCount := 1;
    SELF := __r;
  END;
  EXPORT __PreResult := ROLLUP(HAVING(Input_P_I_I_Group,COUNT(ROWS(LEFT))=1),GROUP,Input_P_I_I__Single_Rollup(LEFT)) + ROLLUP(HAVING(Input_P_I_I_Group,COUNT(ROWS(LEFT))>1),GROUP,Input_P_I_I__Rollup(LEFT, ROWS(LEFT)));
  EXPORT __Result := __CLEARFLAGS(__PreResult);
  EXPORT Result := __UNWRAP(__Result);
  EXPORT Subject__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Subject_);
  EXPORT Account__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Account_);
  EXPORT Appended_Lex_I_D__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Appended_Lex_I_D_);
  EXPORT Appended_Lex_I_D_Score__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Appended_Lex_I_D_Score_);
  EXPORT Input_First_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_First_Name_);
  EXPORT Input_Middle_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Middle_Name_);
  EXPORT Input_Last_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Last_Name_);
  EXPORT Input_Address__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Address_);
  EXPORT Input_City__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_City_);
  EXPORT Input_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_State_);
  EXPORT Input_Zip__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Zip_);
  EXPORT Input_Home_Phone__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Home_Phone_);
  EXPORT Input_S_S_N__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_S_S_N_);
  EXPORT Input_D_O_B__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_D_O_B_);
  EXPORT Input_Work_Phone__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Work_Phone_);
  EXPORT Input_Income__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Income_);
  EXPORT Input_D_L_Number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_D_L_Number_);
  EXPORT Input_D_L_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_D_L_State_);
  EXPORT Input_Balance__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Balance_);
  EXPORT Input_Charge_Offd__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Charge_Offd_);
  EXPORT Input_Former_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Former_Name_);
  EXPORT Input_Email__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Email_);
  EXPORT Input_Employment__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Employment_);
  EXPORT Input_Archive_Date__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Archive_Date_);
  EXPORT Input_Lex_I_D__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Lex_I_D_);
  EXPORT Input_Clean_Prefix__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Prefix_);
  EXPORT Input_Clean_First_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_First_Name_);
  EXPORT Input_Clean_Suffix__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Suffix_);
  EXPORT Input_Clean_Primary_Range__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Primary_Range_);
  EXPORT Input_Clean_Pre_Direction__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Pre_Direction_);
  EXPORT Input_Clean_Primary_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Primary_Name_);
  EXPORT Input_Clean_Address_Suffix__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Address_Suffix_);
  EXPORT Input_Clean_Post_Direction__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Post_Direction_);
  EXPORT Input_Clean_Unit_Desig__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Unit_Desig_);
  EXPORT Input_Clean_Secondary_Range__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Secondary_Range_);
  EXPORT Input_Clean_City_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_City_Name_);
  EXPORT Input_Clean_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_State_);
  EXPORT Input_Clean_Zip5__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Zip5_);
  EXPORT Input_Clean_Zip4__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Zip4_);
  EXPORT Input_Clean_Latitude__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Latitude_);
  EXPORT Input_Clean_Longitude__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Longitude_);
  EXPORT Input_Clean_County__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_County_);
  EXPORT Input_Clean_Geoblock__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Geoblock_);
  EXPORT Input_Clean_Address_Type__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Address_Type_);
  EXPORT Input_Clean_Address_Status__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Address_Status_);
  EXPORT Input_Clean_Country__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Country_);
  EXPORT Input_Clean_E_Mail__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_E_Mail_);
  EXPORT Input_Clean_Home_Phone__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Home_Phone_);
  EXPORT Input_Clean_Work_Phone__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_Work_Phone_);
  EXPORT Input_Clean_D_L_Number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_D_L_Number_);
  EXPORT Input_Clean_D_L_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_D_L_State_);
  EXPORT Input_Clean_D_O_B__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_D_O_B_);
  EXPORT Input_Clean_S_S_N__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Clean_S_S_N_);
  EXPORT Archive_Date__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Archive_Date_);
  EXPORT Subject__Orphan := JOIN(InData(__NN(Subject_)),E_Person(__in,__cfg).__Result,__EEQP(LEFT.Subject_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT SanityCheck := DATASET([{COUNT(Subject__Orphan),COUNT(Subject__SingleValue_Invalid),COUNT(Account__SingleValue_Invalid),COUNT(Appended_Lex_I_D__SingleValue_Invalid),COUNT(Appended_Lex_I_D_Score__SingleValue_Invalid),COUNT(Input_First_Name__SingleValue_Invalid),COUNT(Input_Middle_Name__SingleValue_Invalid),COUNT(Input_Last_Name__SingleValue_Invalid),COUNT(Input_Address__SingleValue_Invalid),COUNT(Input_City__SingleValue_Invalid),COUNT(Input_State__SingleValue_Invalid),COUNT(Input_Zip__SingleValue_Invalid),COUNT(Input_Home_Phone__SingleValue_Invalid),COUNT(Input_S_S_N__SingleValue_Invalid),COUNT(Input_D_O_B__SingleValue_Invalid),COUNT(Input_Work_Phone__SingleValue_Invalid),COUNT(Input_Income__SingleValue_Invalid),COUNT(Input_D_L_Number__SingleValue_Invalid),COUNT(Input_D_L_State__SingleValue_Invalid),COUNT(Input_Balance__SingleValue_Invalid),COUNT(Input_Charge_Offd__SingleValue_Invalid),COUNT(Input_Former_Name__SingleValue_Invalid),COUNT(Input_Email__SingleValue_Invalid),COUNT(Input_Employment__SingleValue_Invalid),COUNT(Input_Archive_Date__SingleValue_Invalid),COUNT(Input_Lex_I_D__SingleValue_Invalid),COUNT(Input_Clean_Prefix__SingleValue_Invalid),COUNT(Input_Clean_First_Name__SingleValue_Invalid),COUNT(Input_Clean_Suffix__SingleValue_Invalid),COUNT(Input_Clean_Primary_Range__SingleValue_Invalid),COUNT(Input_Clean_Pre_Direction__SingleValue_Invalid),COUNT(Input_Clean_Primary_Name__SingleValue_Invalid),COUNT(Input_Clean_Address_Suffix__SingleValue_Invalid),COUNT(Input_Clean_Post_Direction__SingleValue_Invalid),COUNT(Input_Clean_Unit_Desig__SingleValue_Invalid),COUNT(Input_Clean_Secondary_Range__SingleValue_Invalid),COUNT(Input_Clean_City_Name__SingleValue_Invalid),COUNT(Input_Clean_State__SingleValue_Invalid),COUNT(Input_Clean_Zip5__SingleValue_Invalid),COUNT(Input_Clean_Zip4__SingleValue_Invalid),COUNT(Input_Clean_Latitude__SingleValue_Invalid),COUNT(Input_Clean_Longitude__SingleValue_Invalid),COUNT(Input_Clean_County__SingleValue_Invalid),COUNT(Input_Clean_Geoblock__SingleValue_Invalid),COUNT(Input_Clean_Address_Type__SingleValue_Invalid),COUNT(Input_Clean_Address_Status__SingleValue_Invalid),COUNT(Input_Clean_Country__SingleValue_Invalid),COUNT(Input_Clean_E_Mail__SingleValue_Invalid),COUNT(Input_Clean_Home_Phone__SingleValue_Invalid),COUNT(Input_Clean_Work_Phone__SingleValue_Invalid),COUNT(Input_Clean_D_L_Number__SingleValue_Invalid),COUNT(Input_Clean_D_L_State__SingleValue_Invalid),COUNT(Input_Clean_D_O_B__SingleValue_Invalid),COUNT(Input_Clean_S_S_N__SingleValue_Invalid),COUNT(Archive_Date__SingleValue_Invalid)}],{KEL.typ.int Subject__Orphan,KEL.typ.int Subject__SingleValue_Invalid,KEL.typ.int Account__SingleValue_Invalid,KEL.typ.int Appended_Lex_I_D__SingleValue_Invalid,KEL.typ.int Appended_Lex_I_D_Score__SingleValue_Invalid,KEL.typ.int Input_First_Name__SingleValue_Invalid,KEL.typ.int Input_Middle_Name__SingleValue_Invalid,KEL.typ.int Input_Last_Name__SingleValue_Invalid,KEL.typ.int Input_Address__SingleValue_Invalid,KEL.typ.int Input_City__SingleValue_Invalid,KEL.typ.int Input_State__SingleValue_Invalid,KEL.typ.int Input_Zip__SingleValue_Invalid,KEL.typ.int Input_Home_Phone__SingleValue_Invalid,KEL.typ.int Input_S_S_N__SingleValue_Invalid,KEL.typ.int Input_D_O_B__SingleValue_Invalid,KEL.typ.int Input_Work_Phone__SingleValue_Invalid,KEL.typ.int Input_Income__SingleValue_Invalid,KEL.typ.int Input_D_L_Number__SingleValue_Invalid,KEL.typ.int Input_D_L_State__SingleValue_Invalid,KEL.typ.int Input_Balance__SingleValue_Invalid,KEL.typ.int Input_Charge_Offd__SingleValue_Invalid,KEL.typ.int Input_Former_Name__SingleValue_Invalid,KEL.typ.int Input_Email__SingleValue_Invalid,KEL.typ.int Input_Employment__SingleValue_Invalid,KEL.typ.int Input_Archive_Date__SingleValue_Invalid,KEL.typ.int Input_Lex_I_D__SingleValue_Invalid,KEL.typ.int Input_Clean_Prefix__SingleValue_Invalid,KEL.typ.int Input_Clean_First_Name__SingleValue_Invalid,KEL.typ.int Input_Clean_Suffix__SingleValue_Invalid,KEL.typ.int Input_Clean_Primary_Range__SingleValue_Invalid,KEL.typ.int Input_Clean_Pre_Direction__SingleValue_Invalid,KEL.typ.int Input_Clean_Primary_Name__SingleValue_Invalid,KEL.typ.int Input_Clean_Address_Suffix__SingleValue_Invalid,KEL.typ.int Input_Clean_Post_Direction__SingleValue_Invalid,KEL.typ.int Input_Clean_Unit_Desig__SingleValue_Invalid,KEL.typ.int Input_Clean_Secondary_Range__SingleValue_Invalid,KEL.typ.int Input_Clean_City_Name__SingleValue_Invalid,KEL.typ.int Input_Clean_State__SingleValue_Invalid,KEL.typ.int Input_Clean_Zip5__SingleValue_Invalid,KEL.typ.int Input_Clean_Zip4__SingleValue_Invalid,KEL.typ.int Input_Clean_Latitude__SingleValue_Invalid,KEL.typ.int Input_Clean_Longitude__SingleValue_Invalid,KEL.typ.int Input_Clean_County__SingleValue_Invalid,KEL.typ.int Input_Clean_Geoblock__SingleValue_Invalid,KEL.typ.int Input_Clean_Address_Type__SingleValue_Invalid,KEL.typ.int Input_Clean_Address_Status__SingleValue_Invalid,KEL.typ.int Input_Clean_Country__SingleValue_Invalid,KEL.typ.int Input_Clean_E_Mail__SingleValue_Invalid,KEL.typ.int Input_Clean_Home_Phone__SingleValue_Invalid,KEL.typ.int Input_Clean_Work_Phone__SingleValue_Invalid,KEL.typ.int Input_Clean_D_L_Number__SingleValue_Invalid,KEL.typ.int Input_Clean_D_L_State__SingleValue_Invalid,KEL.typ.int Input_Clean_D_O_B__SingleValue_Invalid,KEL.typ.int Input_Clean_S_S_N__SingleValue_Invalid,KEL.typ.int Archive_Date__SingleValue_Invalid});
  EXPORT NullCounts := DATASET([
    ]
  ,{KEL.typ.str entity,KEL.typ.str fileName,KEL.typ.str fieldName,KEL.typ.int nullCount,KEL.typ.int notNullCount});
END;
