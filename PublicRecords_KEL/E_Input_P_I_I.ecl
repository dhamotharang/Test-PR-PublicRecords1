//HPCC Systems KEL Compiler Version 1.1.0beta2
IMPORT KEL11 AS KEL;
IMPORT CFG_Compile,E_Person FROM PublicRecords_KEL;
IMPORT * FROM KEL11.Null;
EXPORT E_Input_P_I_I(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  EXPORT Typ := KEL.typ.uid;
  EXPORT InLayout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    UNSIGNED8 __Permits;
  END;
  SHARED VIRTUAL __SourceFilter(DATASET(InLayout) __ds) := __ds;
  SHARED VIRTUAL __GroupedFilter(GROUPED DATASET(InLayout) __ds) := __ds;
  SHARED __Mapping := 'g_procuid(DEFAULT:UID),subject(DEFAULT:Subject_:0),p_inpacct(DEFAULT:P___Inp_Acct_:\'\'),p_inplexid(DEFAULT:P___Inp_Lex_I_D_:0),p_inpnamefirst(DEFAULT:P___Inp_Name_First_:\'\'),p_inpnamemid(DEFAULT:P___Inp_Name_Mid_:\'\'),p_inpnamelast(DEFAULT:P___Inp_Name_Last_:\'\'),p_inpaddrline1(DEFAULT:P___Inp_Addr_Line1_:\'\'),p_inpaddrline2(DEFAULT:P___Inp_Addr_Line2_:\'\'),p_inpaddrcity(DEFAULT:P___Inp_Addr_City_:\'\'),p_inpaddrstate(DEFAULT:P___Inp_Addr_State_:\'\'),p_inpaddrzip(DEFAULT:P___Inp_Addr_Zip_:\'\'),p_inpphonehome(DEFAULT:P___Inp_Phone_Home_:\'\'),p_inpssn(DEFAULT:P___Inp_S_S_N_:\'\'),p_inpdob(DEFAULT:P___Inp_D_O_B_:\'\'),p_inpphonework(DEFAULT:P___Inp_Phone_Work_:\'\'),inputincomeecho(DEFAULT:Input_Income_Echo_:\'\'),p_inpdl(DEFAULT:P___Inp_D_L_:\'\'),p_inpdlstate(DEFAULT:P___Inp_D_L_State_:\'\'),inputbalanceecho(DEFAULT:Input_Balance_Echo_:\'\'),inputchargeoffdecho(DEFAULT:Input_Charge_Offd_Echo_:\'\'),inputformernameecho(DEFAULT:Input_Former_Name_Echo_:\'\'),p_inpemail(DEFAULT:P___Inp_Email_:\'\'),inputemploymentecho(DEFAULT:Input_Employment_Echo_:\'\'),p_inparchdt(DEFAULT:P___Inp_Arch_Dt_:\'\'),p_lexid(DEFAULT:P___Lex_I_D_:0),p_lexidscore(DEFAULT:P___Lex_I_D_Score_:0),p_inpclnnameprfx(DEFAULT:P___Inp_Cln_Name_Prfx_:\'\'),p_inpclnnamefirst(DEFAULT:P___Inp_Cln_Name_First_:\'\'),p_inpclnnamemid(DEFAULT:P___Inp_Cln_Name_Mid_:\'\'),p_inpclnnamelast(DEFAULT:P___Inp_Cln_Name_Last_:\'\'),p_inpclnnamesffx(DEFAULT:P___Inp_Cln_Name_Sffx_:\'\'),p_inpclnaddrprimrng(DEFAULT:P___Inp_Cln_Addr_Prim_Rng_:\'\'),p_inpclnaddrpredir(DEFAULT:P___Inp_Cln_Addr_Pre_Dir_:\'\'),p_inpclnaddrprimname(DEFAULT:P___Inp_Cln_Addr_Prim_Name_:\'\'),p_inpclnaddrsffx(DEFAULT:P___Inp_Cln_Addr_Sffx_:\'\'),p_inpclnaddrpostdir(DEFAULT:P___Inp_Cln_Addr_Post_Dir_:\'\'),p_inpclnaddrunitdesig(DEFAULT:P___Inp_Cln_Addr_Unit_Desig_:\'\'),p_inpclnaddrsecrng(DEFAULT:P___Inp_Cln_Addr_Sec_Rng_:\'\'),p_inpclnaddrcity(DEFAULT:P___Inp_Cln_Addr_City_:\'\'),p_inpclnaddrstate(DEFAULT:P___Inp_Cln_Addr_State_:\'\'),p_inpclnaddrzip5(DEFAULT:P___Inp_Cln_Addr_Zip5_:\'\'),p_inpclnaddrzip4(DEFAULT:P___Inp_Cln_Addr_Zip4_:\'\'),p_inpclnaddrlat(DEFAULT:P___Inp_Cln_Addr_Lat_:\'\'),p_inpclnaddrlng(DEFAULT:P___Inp_Cln_Addr_Lng_:\'\'),p_inpclnaddrcnty(DEFAULT:P___Inp_Cln_Addr_Cnty_:\'\'),p_inpclnaddrgeo(DEFAULT:P___Inp_Cln_Addr_Geo_:\'\'),p_inpclnaddrtype(DEFAULT:P___Inp_Cln_Addr_Type_:\'\'),p_inpclnaddrstatus(DEFAULT:P___Inp_Cln_Addr_Status_:\'\'),p_inpclnemail(DEFAULT:P___Inp_Cln_Email_:\'\'),p_inpclnphonehome(DEFAULT:P___Inp_Cln_Phone_Home_:\'\'),p_inpclnphonework(DEFAULT:P___Inp_Cln_Phone_Work_:\'\'),p_inpclndl(DEFAULT:P___Inp_Cln_D_L_:\'\'),p_inpclndlstate(DEFAULT:P___Inp_Cln_D_L_State_:\'\'),p_inpclndob(DEFAULT:P___Inp_Cln_D_O_B_:DATE),p_inpclnssn(DEFAULT:P___Inp_Cln_S_S_N_:\'\'),p_inpclnarchdt(DEFAULT:P___Inp_Cln_Arch_Dt_:0),g_procbusuid(DEFAULT:G___Proc_Bus_U_I_D_:0),phoneverificationbureau(DEFAULT:Phone_Verification_Bureau_:\'\'),dialindicator(DEFAULT:Dial_Indicator_:\'\'),pointid(DEFAULT:Point_I_D_:\'\'),nxxtype(DEFAULT:N_X_X_Type_:\'\'),zipmatch(DEFAULT:Z_I_P_Match_),coctype(DEFAULT:C_O_C_Type_:\'\'),ssc(DEFAULT:S_S_C_:\'\'),wirelessindicator(DEFAULT:Wireless_Indicator_:\'\'),repnumber(DEFAULT:Rep_Number_:0),datefirstseen(DEFAULT:Date_First_Seen_:EPOCH),datelastseen(DEFAULT:Date_Last_Seen_:EPOCH)';
  EXPORT VIRTUAL DATASET(InLayout) InData := DATASET([],InLayout);
  EXPORT Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __PostFilter := __GroupedFilter(GROUP(DISTRIBUTE(InData,HASH(UID)),UID,LOCAL,ALL));
  Input_P_I_I_Group := __PostFilter;
  Layout Input_P_I_I__Rollup(InLayout __r, DATASET(InLayout) __recs) := TRANSFORM
    SELF.Subject_ := KEL.Intake.SingleValue(__recs,Subject_);
    SELF.P___Inp_Acct_ := KEL.Intake.SingleValue(__recs,P___Inp_Acct_);
    SELF.P___Inp_Lex_I_D_ := KEL.Intake.SingleValue(__recs,P___Inp_Lex_I_D_);
    SELF.P___Inp_Name_First_ := KEL.Intake.SingleValue(__recs,P___Inp_Name_First_);
    SELF.P___Inp_Name_Mid_ := KEL.Intake.SingleValue(__recs,P___Inp_Name_Mid_);
    SELF.P___Inp_Name_Last_ := KEL.Intake.SingleValue(__recs,P___Inp_Name_Last_);
    SELF.P___Inp_Addr_Line1_ := KEL.Intake.SingleValue(__recs,P___Inp_Addr_Line1_);
    SELF.P___Inp_Addr_Line2_ := KEL.Intake.SingleValue(__recs,P___Inp_Addr_Line2_);
    SELF.P___Inp_Addr_City_ := KEL.Intake.SingleValue(__recs,P___Inp_Addr_City_);
    SELF.P___Inp_Addr_State_ := KEL.Intake.SingleValue(__recs,P___Inp_Addr_State_);
    SELF.P___Inp_Addr_Zip_ := KEL.Intake.SingleValue(__recs,P___Inp_Addr_Zip_);
    SELF.P___Inp_Phone_Home_ := KEL.Intake.SingleValue(__recs,P___Inp_Phone_Home_);
    SELF.P___Inp_S_S_N_ := KEL.Intake.SingleValue(__recs,P___Inp_S_S_N_);
    SELF.P___Inp_D_O_B_ := KEL.Intake.SingleValue(__recs,P___Inp_D_O_B_);
    SELF.P___Inp_Phone_Work_ := KEL.Intake.SingleValue(__recs,P___Inp_Phone_Work_);
    SELF.Input_Income_Echo_ := KEL.Intake.SingleValue(__recs,Input_Income_Echo_);
    SELF.P___Inp_D_L_ := KEL.Intake.SingleValue(__recs,P___Inp_D_L_);
    SELF.P___Inp_D_L_State_ := KEL.Intake.SingleValue(__recs,P___Inp_D_L_State_);
    SELF.Input_Balance_Echo_ := KEL.Intake.SingleValue(__recs,Input_Balance_Echo_);
    SELF.Input_Charge_Offd_Echo_ := KEL.Intake.SingleValue(__recs,Input_Charge_Offd_Echo_);
    SELF.Input_Former_Name_Echo_ := KEL.Intake.SingleValue(__recs,Input_Former_Name_Echo_);
    SELF.P___Inp_Email_ := KEL.Intake.SingleValue(__recs,P___Inp_Email_);
    SELF.Input_Employment_Echo_ := KEL.Intake.SingleValue(__recs,Input_Employment_Echo_);
    SELF.P___Inp_Arch_Dt_ := KEL.Intake.SingleValue(__recs,P___Inp_Arch_Dt_);
    SELF.P___Lex_I_D_ := KEL.Intake.SingleValue(__recs,P___Lex_I_D_);
    SELF.P___Lex_I_D_Score_ := KEL.Intake.SingleValue(__recs,P___Lex_I_D_Score_);
    SELF.P___Inp_Cln_Name_Prfx_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Name_Prfx_);
    SELF.P___Inp_Cln_Name_First_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Name_First_);
    SELF.P___Inp_Cln_Name_Mid_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Name_Mid_);
    SELF.P___Inp_Cln_Name_Last_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Name_Last_);
    SELF.P___Inp_Cln_Name_Sffx_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Name_Sffx_);
    SELF.P___Inp_Cln_Addr_Prim_Rng_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Prim_Rng_);
    SELF.P___Inp_Cln_Addr_Pre_Dir_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Pre_Dir_);
    SELF.P___Inp_Cln_Addr_Prim_Name_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Prim_Name_);
    SELF.P___Inp_Cln_Addr_Sffx_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Sffx_);
    SELF.P___Inp_Cln_Addr_Post_Dir_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Post_Dir_);
    SELF.P___Inp_Cln_Addr_Unit_Desig_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Unit_Desig_);
    SELF.P___Inp_Cln_Addr_Sec_Rng_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Sec_Rng_);
    SELF.P___Inp_Cln_Addr_City_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_City_);
    SELF.P___Inp_Cln_Addr_State_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_State_);
    SELF.P___Inp_Cln_Addr_Zip5_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Zip5_);
    SELF.P___Inp_Cln_Addr_Zip4_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Zip4_);
    SELF.P___Inp_Cln_Addr_Lat_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Lat_);
    SELF.P___Inp_Cln_Addr_Lng_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Lng_);
    SELF.P___Inp_Cln_Addr_Cnty_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Cnty_);
    SELF.P___Inp_Cln_Addr_Geo_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Geo_);
    SELF.P___Inp_Cln_Addr_Type_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Type_);
    SELF.P___Inp_Cln_Addr_Status_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Addr_Status_);
    SELF.P___Inp_Cln_Email_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Email_);
    SELF.P___Inp_Cln_Phone_Home_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Phone_Home_);
    SELF.P___Inp_Cln_Phone_Work_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Phone_Work_);
    SELF.P___Inp_Cln_D_L_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_D_L_);
    SELF.P___Inp_Cln_D_L_State_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_D_L_State_);
    SELF.P___Inp_Cln_D_O_B_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_D_O_B_);
    SELF.P___Inp_Cln_S_S_N_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_S_S_N_);
    SELF.P___Inp_Cln_Arch_Dt_ := KEL.Intake.SingleValue(__recs,P___Inp_Cln_Arch_Dt_);
    SELF.G___Proc_Bus_U_I_D_ := KEL.Intake.SingleValue(__recs,G___Proc_Bus_U_I_D_);
    SELF.Phone_Verification_Bureau_ := KEL.Intake.SingleValue(__recs,Phone_Verification_Bureau_);
    SELF.Dial_Indicator_ := KEL.Intake.SingleValue(__recs,Dial_Indicator_);
    SELF.Point_I_D_ := KEL.Intake.SingleValue(__recs,Point_I_D_);
    SELF.N_X_X_Type_ := KEL.Intake.SingleValue(__recs,N_X_X_Type_);
    SELF.Z_I_P_Match_ := KEL.Intake.SingleValue(__recs,Z_I_P_Match_);
    SELF.C_O_C_Type_ := KEL.Intake.SingleValue(__recs,C_O_C_Type_);
    SELF.S_S_C_ := KEL.Intake.SingleValue(__recs,S_S_C_);
    SELF.Wireless_Indicator_ := KEL.Intake.SingleValue(__recs,Wireless_Indicator_);
    SELF.Rep_Number_ := KEL.Intake.SingleValue(__recs,Rep_Number_);
    SELF.__RecordCount := COUNT(__recs);
    SELF.Date_First_Seen_ := KEL.era.SimpleRoll(__recs,Date_First_Seen_,MIN,FALSE);
    SELF.Date_Last_Seen_ := KEL.era.SimpleRoll(__recs,Date_Last_Seen_,MAX,FALSE);
    SELF := __r;
  END;
  Layout Input_P_I_I__Single_Rollup(InLayout __r) := TRANSFORM
    SELF.__RecordCount := 1;
    SELF.Date_First_Seen_ := KEL.era.SimpleRollSingleRow(__r,Date_First_Seen_,FALSE);
    SELF.Date_Last_Seen_ := KEL.era.SimpleRollSingleRow(__r,Date_Last_Seen_,FALSE);
    SELF := __r;
  END;
  EXPORT __PreResult := ROLLUP(HAVING(Input_P_I_I_Group,COUNT(ROWS(LEFT))=1),GROUP,Input_P_I_I__Single_Rollup(LEFT)) + ROLLUP(HAVING(Input_P_I_I_Group,COUNT(ROWS(LEFT))>1),GROUP,Input_P_I_I__Rollup(LEFT, ROWS(LEFT)));
  EXPORT __Result := __CLEARFLAGS(__PreResult);
  EXPORT Result := __UNWRAP(__Result);
  EXPORT Subject__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Subject_);
  EXPORT P___Inp_Acct__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Acct_);
  EXPORT P___Inp_Lex_I_D__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Lex_I_D_);
  EXPORT P___Inp_Name_First__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Name_First_);
  EXPORT P___Inp_Name_Mid__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Name_Mid_);
  EXPORT P___Inp_Name_Last__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Name_Last_);
  EXPORT P___Inp_Addr_Line1__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Addr_Line1_);
  EXPORT P___Inp_Addr_Line2__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Addr_Line2_);
  EXPORT P___Inp_Addr_City__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Addr_City_);
  EXPORT P___Inp_Addr_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Addr_State_);
  EXPORT P___Inp_Addr_Zip__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Addr_Zip_);
  EXPORT P___Inp_Phone_Home__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Phone_Home_);
  EXPORT P___Inp_S_S_N__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_S_S_N_);
  EXPORT P___Inp_D_O_B__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_D_O_B_);
  EXPORT P___Inp_Phone_Work__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Phone_Work_);
  EXPORT Input_Income_Echo__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Income_Echo_);
  EXPORT P___Inp_D_L__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_D_L_);
  EXPORT P___Inp_D_L_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_D_L_State_);
  EXPORT Input_Balance_Echo__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Balance_Echo_);
  EXPORT Input_Charge_Offd_Echo__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Charge_Offd_Echo_);
  EXPORT Input_Former_Name_Echo__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Former_Name_Echo_);
  EXPORT P___Inp_Email__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Email_);
  EXPORT Input_Employment_Echo__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Input_Employment_Echo_);
  EXPORT P___Inp_Arch_Dt__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Arch_Dt_);
  EXPORT P___Lex_I_D__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Lex_I_D_);
  EXPORT P___Lex_I_D_Score__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Lex_I_D_Score_);
  EXPORT P___Inp_Cln_Name_Prfx__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Name_Prfx_);
  EXPORT P___Inp_Cln_Name_First__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Name_First_);
  EXPORT P___Inp_Cln_Name_Mid__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Name_Mid_);
  EXPORT P___Inp_Cln_Name_Last__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Name_Last_);
  EXPORT P___Inp_Cln_Name_Sffx__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Name_Sffx_);
  EXPORT P___Inp_Cln_Addr_Prim_Rng__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Prim_Rng_);
  EXPORT P___Inp_Cln_Addr_Pre_Dir__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Pre_Dir_);
  EXPORT P___Inp_Cln_Addr_Prim_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Prim_Name_);
  EXPORT P___Inp_Cln_Addr_Sffx__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Sffx_);
  EXPORT P___Inp_Cln_Addr_Post_Dir__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Post_Dir_);
  EXPORT P___Inp_Cln_Addr_Unit_Desig__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Unit_Desig_);
  EXPORT P___Inp_Cln_Addr_Sec_Rng__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Sec_Rng_);
  EXPORT P___Inp_Cln_Addr_City__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_City_);
  EXPORT P___Inp_Cln_Addr_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_State_);
  EXPORT P___Inp_Cln_Addr_Zip5__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Zip5_);
  EXPORT P___Inp_Cln_Addr_Zip4__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Zip4_);
  EXPORT P___Inp_Cln_Addr_Lat__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Lat_);
  EXPORT P___Inp_Cln_Addr_Lng__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Lng_);
  EXPORT P___Inp_Cln_Addr_Cnty__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Cnty_);
  EXPORT P___Inp_Cln_Addr_Geo__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Geo_);
  EXPORT P___Inp_Cln_Addr_Type__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Type_);
  EXPORT P___Inp_Cln_Addr_Status__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Addr_Status_);
  EXPORT P___Inp_Cln_Email__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Email_);
  EXPORT P___Inp_Cln_Phone_Home__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Phone_Home_);
  EXPORT P___Inp_Cln_Phone_Work__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Phone_Work_);
  EXPORT P___Inp_Cln_D_L__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_D_L_);
  EXPORT P___Inp_Cln_D_L_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_D_L_State_);
  EXPORT P___Inp_Cln_D_O_B__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_D_O_B_);
  EXPORT P___Inp_Cln_S_S_N__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_S_S_N_);
  EXPORT P___Inp_Cln_Arch_Dt__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,P___Inp_Cln_Arch_Dt_);
  EXPORT G___Proc_Bus_U_I_D__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,G___Proc_Bus_U_I_D_);
  EXPORT Phone_Verification_Bureau__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Phone_Verification_Bureau_);
  EXPORT Dial_Indicator__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Dial_Indicator_);
  EXPORT Point_I_D__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Point_I_D_);
  EXPORT N_X_X_Type__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,N_X_X_Type_);
  EXPORT Z_I_P_Match__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Z_I_P_Match_);
  EXPORT C_O_C_Type__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,C_O_C_Type_);
  EXPORT S_S_C__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,S_S_C_);
  EXPORT Wireless_Indicator__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Wireless_Indicator_);
  EXPORT Rep_Number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Rep_Number_);
  EXPORT Subject__Orphan := JOIN(InData(__NN(Subject_)),E_Person(__in,__cfg).__Result,__EEQP(LEFT.Subject_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT SanityCheck := DATASET([{COUNT(Subject__Orphan),COUNT(Subject__SingleValue_Invalid),COUNT(P___Inp_Acct__SingleValue_Invalid),COUNT(P___Inp_Lex_I_D__SingleValue_Invalid),COUNT(P___Inp_Name_First__SingleValue_Invalid),COUNT(P___Inp_Name_Mid__SingleValue_Invalid),COUNT(P___Inp_Name_Last__SingleValue_Invalid),COUNT(P___Inp_Addr_Line1__SingleValue_Invalid),COUNT(P___Inp_Addr_Line2__SingleValue_Invalid),COUNT(P___Inp_Addr_City__SingleValue_Invalid),COUNT(P___Inp_Addr_State__SingleValue_Invalid),COUNT(P___Inp_Addr_Zip__SingleValue_Invalid),COUNT(P___Inp_Phone_Home__SingleValue_Invalid),COUNT(P___Inp_S_S_N__SingleValue_Invalid),COUNT(P___Inp_D_O_B__SingleValue_Invalid),COUNT(P___Inp_Phone_Work__SingleValue_Invalid),COUNT(Input_Income_Echo__SingleValue_Invalid),COUNT(P___Inp_D_L__SingleValue_Invalid),COUNT(P___Inp_D_L_State__SingleValue_Invalid),COUNT(Input_Balance_Echo__SingleValue_Invalid),COUNT(Input_Charge_Offd_Echo__SingleValue_Invalid),COUNT(Input_Former_Name_Echo__SingleValue_Invalid),COUNT(P___Inp_Email__SingleValue_Invalid),COUNT(Input_Employment_Echo__SingleValue_Invalid),COUNT(P___Inp_Arch_Dt__SingleValue_Invalid),COUNT(P___Lex_I_D__SingleValue_Invalid),COUNT(P___Lex_I_D_Score__SingleValue_Invalid),COUNT(P___Inp_Cln_Name_Prfx__SingleValue_Invalid),COUNT(P___Inp_Cln_Name_First__SingleValue_Invalid),COUNT(P___Inp_Cln_Name_Mid__SingleValue_Invalid),COUNT(P___Inp_Cln_Name_Last__SingleValue_Invalid),COUNT(P___Inp_Cln_Name_Sffx__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Prim_Rng__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Pre_Dir__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Prim_Name__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Sffx__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Post_Dir__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Unit_Desig__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Sec_Rng__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_City__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_State__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Zip5__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Zip4__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Lat__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Lng__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Cnty__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Geo__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Type__SingleValue_Invalid),COUNT(P___Inp_Cln_Addr_Status__SingleValue_Invalid),COUNT(P___Inp_Cln_Email__SingleValue_Invalid),COUNT(P___Inp_Cln_Phone_Home__SingleValue_Invalid),COUNT(P___Inp_Cln_Phone_Work__SingleValue_Invalid),COUNT(P___Inp_Cln_D_L__SingleValue_Invalid),COUNT(P___Inp_Cln_D_L_State__SingleValue_Invalid),COUNT(P___Inp_Cln_D_O_B__SingleValue_Invalid),COUNT(P___Inp_Cln_S_S_N__SingleValue_Invalid),COUNT(P___Inp_Cln_Arch_Dt__SingleValue_Invalid),COUNT(G___Proc_Bus_U_I_D__SingleValue_Invalid),COUNT(Phone_Verification_Bureau__SingleValue_Invalid),COUNT(Dial_Indicator__SingleValue_Invalid),COUNT(Point_I_D__SingleValue_Invalid),COUNT(N_X_X_Type__SingleValue_Invalid),COUNT(Z_I_P_Match__SingleValue_Invalid),COUNT(C_O_C_Type__SingleValue_Invalid),COUNT(S_S_C__SingleValue_Invalid),COUNT(Wireless_Indicator__SingleValue_Invalid),COUNT(Rep_Number__SingleValue_Invalid)}],{KEL.typ.int Subject__Orphan,KEL.typ.int Subject__SingleValue_Invalid,KEL.typ.int P___Inp_Acct__SingleValue_Invalid,KEL.typ.int P___Inp_Lex_I_D__SingleValue_Invalid,KEL.typ.int P___Inp_Name_First__SingleValue_Invalid,KEL.typ.int P___Inp_Name_Mid__SingleValue_Invalid,KEL.typ.int P___Inp_Name_Last__SingleValue_Invalid,KEL.typ.int P___Inp_Addr_Line1__SingleValue_Invalid,KEL.typ.int P___Inp_Addr_Line2__SingleValue_Invalid,KEL.typ.int P___Inp_Addr_City__SingleValue_Invalid,KEL.typ.int P___Inp_Addr_State__SingleValue_Invalid,KEL.typ.int P___Inp_Addr_Zip__SingleValue_Invalid,KEL.typ.int P___Inp_Phone_Home__SingleValue_Invalid,KEL.typ.int P___Inp_S_S_N__SingleValue_Invalid,KEL.typ.int P___Inp_D_O_B__SingleValue_Invalid,KEL.typ.int P___Inp_Phone_Work__SingleValue_Invalid,KEL.typ.int Input_Income_Echo__SingleValue_Invalid,KEL.typ.int P___Inp_D_L__SingleValue_Invalid,KEL.typ.int P___Inp_D_L_State__SingleValue_Invalid,KEL.typ.int Input_Balance_Echo__SingleValue_Invalid,KEL.typ.int Input_Charge_Offd_Echo__SingleValue_Invalid,KEL.typ.int Input_Former_Name_Echo__SingleValue_Invalid,KEL.typ.int P___Inp_Email__SingleValue_Invalid,KEL.typ.int Input_Employment_Echo__SingleValue_Invalid,KEL.typ.int P___Inp_Arch_Dt__SingleValue_Invalid,KEL.typ.int P___Lex_I_D__SingleValue_Invalid,KEL.typ.int P___Lex_I_D_Score__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Name_Prfx__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Name_First__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Name_Mid__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Name_Last__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Name_Sffx__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Prim_Rng__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Pre_Dir__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Prim_Name__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Sffx__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Post_Dir__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Unit_Desig__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Sec_Rng__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_City__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_State__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Zip5__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Zip4__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Lat__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Lng__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Cnty__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Geo__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Type__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Addr_Status__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Email__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Phone_Home__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Phone_Work__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_D_L__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_D_L_State__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_D_O_B__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_S_S_N__SingleValue_Invalid,KEL.typ.int P___Inp_Cln_Arch_Dt__SingleValue_Invalid,KEL.typ.int G___Proc_Bus_U_I_D__SingleValue_Invalid,KEL.typ.int Phone_Verification_Bureau__SingleValue_Invalid,KEL.typ.int Dial_Indicator__SingleValue_Invalid,KEL.typ.int Point_I_D__SingleValue_Invalid,KEL.typ.int N_X_X_Type__SingleValue_Invalid,KEL.typ.int Z_I_P_Match__SingleValue_Invalid,KEL.typ.int C_O_C_Type__SingleValue_Invalid,KEL.typ.int S_S_C__SingleValue_Invalid,KEL.typ.int Wireless_Indicator__SingleValue_Invalid,KEL.typ.int Rep_Number__SingleValue_Invalid});
  EXPORT NullCounts := DATASET([
    ]
  ,{KEL.typ.str entity,KEL.typ.str fileName,KEL.typ.str fieldName,KEL.typ.int nullCount,KEL.typ.int notNullCount});
END;
