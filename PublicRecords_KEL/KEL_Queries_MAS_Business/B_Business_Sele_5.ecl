//HPCC Systems KEL Compiler Version 1.6.0
IMPORT KEL16 AS KEL;
IMPORT B_Address_6,B_Business_Sele_6,B_Business_Sele_9,B_Sele_Address_6,B_Sele_Phone_Number_6,B_Sele_T_I_N_6,B_Sele_U_C_C_6,B_Sele_U_C_C_9,B_U_C_C_10,B_U_C_C_11,B_U_C_C_6,CFG_Compile,E_Address,E_Business_Org,E_Business_Sele,E_Business_Sele_Overflow,E_Business_Ult,E_Geo_Link,E_Input_B_I_I,E_Phone,E_Sele_Address,E_Sele_Phone_Number,E_Sele_U_C_C,E_T_I_N,E_U_C_C,E_Zip_Code,FN_Compile FROM PublicRecords_KEL.KEL_Queries_MAS_Business;
IMPORT * FROM KEL16.Null;
EXPORT B_Business_Sele_5(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Address_6(__in,__cfg).__ENH_Address_6) __ENH_Address_6 := B_Address_6(__in,__cfg).__ENH_Address_6;
  SHARED VIRTUAL TYPEOF(B_Business_Sele_6(__in,__cfg).__ENH_Business_Sele_6) __ENH_Business_Sele_6 := B_Business_Sele_6(__in,__cfg).__ENH_Business_Sele_6;
  SHARED VIRTUAL TYPEOF(B_Sele_Address_6(__in,__cfg).__ENH_Sele_Address_6) __ENH_Sele_Address_6 := B_Sele_Address_6(__in,__cfg).__ENH_Sele_Address_6;
  SHARED VIRTUAL TYPEOF(B_Sele_Phone_Number_6(__in,__cfg).__ENH_Sele_Phone_Number_6) __ENH_Sele_Phone_Number_6 := B_Sele_Phone_Number_6(__in,__cfg).__ENH_Sele_Phone_Number_6;
  SHARED VIRTUAL TYPEOF(B_Sele_T_I_N_6(__in,__cfg).__ENH_Sele_T_I_N_6) __ENH_Sele_T_I_N_6 := B_Sele_T_I_N_6(__in,__cfg).__ENH_Sele_T_I_N_6;
  SHARED VIRTUAL TYPEOF(B_Sele_U_C_C_6(__in,__cfg).__ENH_Sele_U_C_C_6) __ENH_Sele_U_C_C_6 := B_Sele_U_C_C_6(__in,__cfg).__ENH_Sele_U_C_C_6;
  SHARED VIRTUAL TYPEOF(B_U_C_C_6(__in,__cfg).__ENH_U_C_C_6) __ENH_U_C_C_6 := B_U_C_C_6(__in,__cfg).__ENH_U_C_C_6;
  SHARED __EE1944355 := __ENH_Business_Sele_6;
  SHARED __EE1944358 := __ENH_Sele_U_C_C_6;
  SHARED __EE1961722 := __EE1944358(__EE1944358.Is_Filing_ AND __NN(__EE1944358.Legal_) AND __NN(__EE1944358.Filing_));
  SHARED __EE1944374 := __ENH_U_C_C_6;
  SHARED __EE1944382 := __EE1944374.Best_U_C_C_Child_Record_;
  SHARED __CC13339 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('ucc_build_version'))),__CN(__cfg.CurrentDate));
  __JC1944389(B_U_C_C_10(__in,__cfg).__ST104776_Layout __EE1944382) := __T(__OP2(__EE1944382.Max_Filing_Date_,<,__CC13339));
  SHARED __EE1944390 := __EE1944374(EXISTS(__CHILDJOINFILTER(__EE1944382,__JC1944389)));
  __JC1961801(B_Sele_U_C_C_6(__in,__cfg).__ST215721_Layout __EE1961722, B_U_C_C_6(__in,__cfg).__ST216033_Layout __EE1944390) := __EEQP(__EE1961722.Filing_,__EE1944390.UID);
  SHARED __EE1961802 := JOIN(__EE1961722,__EE1944390,__JC1961801(LEFT,RIGHT),TRANSFORM(B_Sele_U_C_C_6(__in,__cfg).__ST215721_Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST386003_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.ntyp(E_U_C_C().Typ) Filing_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ndataset(B_Sele_U_C_C_6(__in,__cfg).__ST215729_Layout) Sub_Filing_;
    KEL.typ.ndataset(E_Sele_U_C_C(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Sele_U_C_C_9(__in,__cfg).__ST220324_Layout) Best_Party_Types_;
    KEL.typ.nstr Filtered_Party_Type_;
    KEL.typ.bool Is_Filing_ := FALSE;
    KEL.typ.ntyp(E_U_C_C().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST386003_Layout __ND1961829__Project(B_Sele_U_C_C_6(__in,__cfg).__ST215721_Layout __PP1961803) := TRANSFORM
    SELF.UID := __PP1961803.Legal_;
    SELF.U_I_D__1_ := __PP1961803.Filing_;
    SELF := __PP1961803;
  END;
  SHARED __EE1961902 := PROJECT(__EE1961802,__ND1961829__Project(LEFT));
  SHARED __ST386067_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE1961915 := PROJECT(__CLEANANDDO(__EE1961902,TABLE(__EE1961902,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST386067_Layout);
  SHARED __ST388610_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213864_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213895_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213906_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213917_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213936_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST214015_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST330860_Layout) All_Lien_Data_;
    KEL.typ.int B_E___B2_B_Carr_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Flt_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Mat_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Ops_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Oth_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr B___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89973_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1961921(B_Business_Sele_6(__in,__cfg).__ST213826_Layout __EE1944355, __ST386067_Layout __EE1961915) := __EEQP(__EE1944355.UID,__EE1961915.UID);
  __ST388610_Layout __JT1961921(B_Business_Sele_6(__in,__cfg).__ST213826_Layout __l, __ST386067_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1961922 := JOIN(__EE1944355,__EE1961915,__JC1961921(LEFT,RIGHT),__JT1961921(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE1944936 := __ENH_Sele_Address_6;
  SHARED __EE1974339 := __EE1944936(__T(__AND(__EE1944936.Matches_Is_Best_Helper_Attr_,__CN(__NN(__EE1944936.Legal_) AND __NN(__EE1944936.Location_)))));
  SHARED __EE1944952 := __ENH_Address_6;
  SHARED __EE1944960 := __EE1944952.Data_Sources_;
  __JC1974344(E_Address(__in,__cfg).Data_Sources_Layout __EE1944960) := __T(__OP2(__EE1944960.Source_,=,__CN('VL')));
  SHARED __EE1974345 := __EE1944952(EXISTS(__CHILDJOINFILTER(__EE1944960,__JC1974344)));
  __JC1974482(B_Sele_Address_6(__in,__cfg).__ST215421_Layout __EE1974339, B_Address_6(__in,__cfg).__ST212861_Layout __EE1974345) := __EEQP(__EE1974339.Location_,__EE1974345.UID);
  SHARED __EE1974543 := JOIN(__EE1974339,__EE1974345,__JC1974482(LEFT,RIGHT),TRANSFORM(B_Sele_Address_6(__in,__cfg).__ST215421_Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST384167_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_6(__in,__cfg).__ST215477_Layout) Data_Sources_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE1974707 := PROJECT(__EE1974543,TRANSFORM(__ST384167_Layout,SELF.UID := LEFT.Legal_,SELF := LEFT));
  SHARED __ST384308_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE1974721 := PROJECT(__EE1974707,__ST384308_Layout);
  SHARED __ST384337_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.ntyp(E_Address().Typ) O_N_L_Y___Location_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE1974735 := PROJECT(__EE1974721,TRANSFORM(__ST384337_Layout,SELF.O_N_L_Y___Location_ := LEFT.Location_,SELF := LEFT));
  SHARED __ST390719_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213864_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213895_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213906_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213917_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213936_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST214015_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST330860_Layout) All_Lien_Data_;
    KEL.typ.int B_E___B2_B_Carr_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Flt_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Mat_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Ops_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Oth_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr B___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89973_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Address().Typ) O_N_L_Y___Location_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1974741(__ST388610_Layout __EE1961922, __ST384337_Layout __EE1974735) := __EEQP(__EE1961922.UID,__EE1974735.UID);
  __ST390719_Layout __JT1974741(__ST388610_Layout __l, __ST384337_Layout __r) := TRANSFORM
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1975102 := JOIN(__EE1961922,__EE1974735,__JC1974741(LEFT,RIGHT),__JT1974741(LEFT,RIGHT),LEFT OUTER,HASH,KEEP(1));
  SHARED __EE1967399 := __EE1944936;
  SHARED __EE1975107 := __EE1967399(__T(__AND(__EE1967399.Input_Address_Match_,__CN(__NN(__EE1967399.Legal_)))));
  SHARED __ST386923_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_6(__in,__cfg).__ST215477_Layout) Data_Sources_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nkdate Date_First_Seen_Company_Address_;
    KEL.typ.nkdate Date_Last_Seen_Company_Address_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1975124(B_Sele_Address_6(__in,__cfg).__ST215421_Layout __EE1975107, B_Sele_Address_6(__in,__cfg).__ST215477_Layout __EE1975110) := __T(__EE1975110.Header_Hit_Flag_);
  __ST386923_Layout __JT1975124(B_Sele_Address_6(__in,__cfg).__ST215421_Layout __l, B_Sele_Address_6(__in,__cfg).__ST215477_Layout __r) := TRANSFORM, SKIP(NOT(__JC1975124(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1975125 := NORMALIZE(__EE1975107,__T(LEFT.Data_Sources_),__JT1975124(LEFT,RIGHT));
  SHARED __ST380609_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Record_Type_Layout) Address_Record_Type_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Other_Location_Details_Layout) Other_Location_Details_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Address_Types_Layout) Address_Types_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(B_Sele_Address_6(__in,__cfg).__ST215477_Layout) Data_Sources_;
    KEL.typ.nbool Input_Address_Match_;
    KEL.typ.nbool Matches_Is_Best_Helper_Attr_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nkdate Date_First_Seen_Company_Address_;
    KEL.typ.nkdate Date_Last_Seen_Company_Address_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1975384 := PROJECT(__EE1975125,TRANSFORM(__ST380609_Layout,SELF.UID := LEFT.Legal_,SELF := LEFT));
  SHARED __ST382090_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1975406 := PROJECT(__EE1975384,__ST382090_Layout);
  SHARED __ST382114_Layout := RECORD
    KEL.typ.nkdate M_I_N___My_Date_First_Seen_;
    KEL.typ.nkdate M_A_X___My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1975431 := PROJECT(__CLEANANDDO(__EE1975406,TABLE(__EE1975406,{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.Aggregates.MinNG(__EE1975406.My_Date_First_Seen_) M_I_N___My_Date_First_Seen_,KEL.Aggregates.MaxNG(__EE1975406.My_Date_Last_Seen_) M_A_X___My_Date_Last_Seen_,Translated_Source_,UID},Translated_Source_,UID,MERGE)),__ST382114_Layout);
  SHARED __ST406751_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213864_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213895_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213906_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213917_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213936_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST214015_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST330860_Layout) All_Lien_Data_;
    KEL.typ.int B_E___B2_B_Carr_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Flt_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Mat_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Ops_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Oth_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr B___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89973_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Address().Typ) O_N_L_Y___Location_;
    KEL.typ.ndataset(__ST382114_Layout) Exp1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1975439(__ST390719_Layout __EE1975102, __ST382114_Layout __EE1975431) := __EEQP(__EE1975102.UID,__EE1975431.UID);
  __ST406751_Layout __Join__ST406751_Layout(__ST390719_Layout __r, DATASET(__ST382114_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Exp1_ := __CN(__recs);
  END;
  SHARED __EE1975804 := DENORMALIZE(DISTRIBUTE(__EE1975102,HASH(UID)),DISTRIBUTE(__EE1975431,HASH(UID)),__JC1975439(LEFT,RIGHT),GROUP,__Join__ST406751_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE1946444 := __ENH_Sele_Phone_Number_6;
  SHARED __EE1975809 := __EE1946444(__T(__AND(__EE1946444.Input_Phone_Match_,__CN(__NN(__EE1946444.Legal_)))));
  SHARED __ST387271_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Phone().Typ) Phone_Number_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).Best_Phone_Details_Layout) Best_Phone_Details_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).Phone_Details_Layout) Phone_Details_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).Marketability_Layout) Marketability_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Sele_Phone_Number_6(__in,__cfg).__ST215614_Layout) Data_Sources_;
    KEL.typ.nbool Input_Phone_Match_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1975826(B_Sele_Phone_Number_6(__in,__cfg).__ST215576_Layout __EE1975809, B_Sele_Phone_Number_6(__in,__cfg).__ST215614_Layout __EE1975812) := __T(__EE1975812.Header_Hit_Flag_);
  __ST387271_Layout __JT1975826(B_Sele_Phone_Number_6(__in,__cfg).__ST215576_Layout __l, B_Sele_Phone_Number_6(__in,__cfg).__ST215614_Layout __r) := TRANSFORM, SKIP(NOT(__JC1975826(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1975827 := NORMALIZE(__EE1975809,__T(LEFT.Data_Sources_),__JT1975826(LEFT,RIGHT));
  SHARED __ST380851_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_Phone().Typ) Phone_Number_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).Best_Phone_Details_Layout) Best_Phone_Details_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).Phone_Details_Layout) Phone_Details_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).Marketability_Layout) Marketability_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).S_I_C_Codes_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(E_Sele_Phone_Number(__in,__cfg).N_A_I_C_S_Codes_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Sele_Phone_Number_6(__in,__cfg).__ST215614_Layout) Data_Sources_;
    KEL.typ.nbool Input_Phone_Match_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1975998 := PROJECT(__EE1975827,TRANSFORM(__ST380851_Layout,SELF.UID := LEFT.Legal_,SELF := LEFT));
  SHARED __ST382719_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1976020 := PROJECT(__EE1975998,__ST382719_Layout);
  SHARED __ST382743_Layout := RECORD
    KEL.typ.nkdate M_I_N___My_Date_First_Seen_;
    KEL.typ.nkdate M_A_X___My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1976045 := PROJECT(__CLEANANDDO(__EE1976020,TABLE(__EE1976020,{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.Aggregates.MinNG(__EE1976020.My_Date_First_Seen_) M_I_N___My_Date_First_Seen_,KEL.Aggregates.MaxNG(__EE1976020.My_Date_Last_Seen_) M_A_X___My_Date_Last_Seen_,Translated_Source_,UID},Translated_Source_,UID,MERGE)),__ST382743_Layout);
  SHARED __ST409351_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213864_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213895_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213906_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213917_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213936_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST214015_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST330860_Layout) All_Lien_Data_;
    KEL.typ.int B_E___B2_B_Carr_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Flt_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Mat_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Ops_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Oth_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr B___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89973_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Address().Typ) O_N_L_Y___Location_;
    KEL.typ.ndataset(__ST382114_Layout) Exp1_;
    KEL.typ.ndataset(__ST382743_Layout) Exp2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1976053(__ST406751_Layout __EE1975804, __ST382743_Layout __EE1976045) := __EEQP(__EE1975804.UID,__EE1976045.UID);
  __ST409351_Layout __Join__ST409351_Layout(__ST406751_Layout __r, DATASET(__ST382743_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Exp2_ := __CN(__recs);
  END;
  SHARED __EE1976424 := DENORMALIZE(DISTRIBUTE(__EE1975804,HASH(UID)),DISTRIBUTE(__EE1976045,HASH(UID)),__JC1976053(LEFT,RIGHT),GROUP,__Join__ST409351_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE1947075 := __ENH_Sele_T_I_N_6;
  SHARED __EE1976429 := __EE1947075(__T(__AND(__EE1947075.Input_T_I_N_Match_,__CN(__NN(__EE1947075.Legal_)))));
  SHARED __ST387507_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_T_I_N().Typ) Tax_I_D_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.nint Best_T_I_N_;
    KEL.typ.nint Best_T_I_N_Rank_;
    KEL.typ.ndataset(B_Sele_T_I_N_6(__in,__cfg).__ST215658_Layout) Data_Sources_;
    KEL.typ.nbool Input_T_I_N_Match_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1976446(B_Sele_T_I_N_6(__in,__cfg).__ST215649_Layout __EE1976429, B_Sele_T_I_N_6(__in,__cfg).__ST215658_Layout __EE1976432) := __T(__EE1976432.Header_Hit_Flag_);
  __ST387507_Layout __JT1976446(B_Sele_T_I_N_6(__in,__cfg).__ST215649_Layout __l, B_Sele_T_I_N_6(__in,__cfg).__ST215658_Layout __r) := TRANSFORM, SKIP(NOT(__JC1976446(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1976447 := NORMALIZE(__EE1976429,__T(LEFT.Data_Sources_),__JT1976446(LEFT,RIGHT));
  SHARED __ST381047_Layout := RECORD
    KEL.typ.ntyp(E_Business_Sele().Typ) Legal_;
    KEL.typ.ntyp(E_T_I_N().Typ) Tax_I_D_;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.nint Best_T_I_N_;
    KEL.typ.nint Best_T_I_N_Rank_;
    KEL.typ.ndataset(B_Sele_T_I_N_6(__in,__cfg).__ST215658_Layout) Data_Sources_;
    KEL.typ.nbool Input_T_I_N_Match_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1976546 := PROJECT(__EE1976447,TRANSFORM(__ST381047_Layout,SELF.UID := LEFT.Legal_,SELF := LEFT));
  SHARED __ST383227_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1976568 := PROJECT(__EE1976546,__ST383227_Layout);
  SHARED __ST383251_Layout := RECORD
    KEL.typ.nkdate M_I_N___My_Date_First_Seen_;
    KEL.typ.nkdate M_A_X___My_Date_Last_Seen_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.ntyp(E_Business_Sele().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE1976593 := PROJECT(__CLEANANDDO(__EE1976568,TABLE(__EE1976568,{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.Aggregates.MinNG(__EE1976568.My_Date_First_Seen_) M_I_N___My_Date_First_Seen_,KEL.Aggregates.MaxNG(__EE1976568.My_Date_Last_Seen_) M_A_X___My_Date_Last_Seen_,Translated_Source_,UID},Translated_Source_,UID,MERGE)),__ST383251_Layout);
  SHARED __ST411981_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213864_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213895_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213906_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213917_Layout) Employee_Counts_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST213936_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST214015_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST330860_Layout) All_Lien_Data_;
    KEL.typ.int B_E___B2_B_Carr_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Flt_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Mat_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Ops_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Oth_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr B___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89973_Layout) Translated_Sources_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__1_;
    KEL.typ.ntyp(E_Business_Sele().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Address().Typ) O_N_L_Y___Location_;
    KEL.typ.ndataset(__ST382114_Layout) Exp1_;
    KEL.typ.ndataset(__ST382743_Layout) Exp2_;
    KEL.typ.ndataset(__ST383251_Layout) Exp3_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1976601(__ST409351_Layout __EE1976424, __ST383251_Layout __EE1976593) := __EEQP(__EE1976424.UID,__EE1976593.UID);
  __ST411981_Layout __Join__ST411981_Layout(__ST409351_Layout __r, DATASET(__ST383251_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Exp3_ := __CN(__recs);
  END;
  SHARED __EE1976978 := DENORMALIZE(DISTRIBUTE(__EE1976424,HASH(UID)),DISTRIBUTE(__EE1976593,HASH(UID)),__JC1976601(LEFT,RIGHT),GROUP,__Join__ST411981_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  EXPORT __ST222856_Layout := RECORD
    KEL.typ.nstr Name_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Name_Status_;
    KEL.typ.nstr Corporation_Legal_Name_;
    KEL.typ.nstr Doing_Business_As_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Business_Name_Is_Similar_;
    KEL.typ.nbool Business_Name_Match_;
    KEL.typ.nbool Business_Name_Match_Record_;
    KEL.typ.nbool Corporation_Legal_Name_Match_;
    KEL.typ.nfloat Corporation_Legal_Name_Similarity_;
    KEL.typ.nbool Doing_Business_As_Match_;
    KEL.typ.nfloat Doing_Business_As_Similarity_;
    KEL.typ.nbool Name_Match_;
    KEL.typ.nfloat Name_Similarity_;
    KEL.typ.nstr Translated_Source_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST222885_Layout := RECORD
    KEL.typ.nint S_I_C_Code_;
    KEL.typ.nint S_I_C_Code_Order_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nint Days_Since_Code_;
    KEL.typ.nbool Is_Sic_Code_;
    KEL.typ.int Source_Priority_ := 0;
    KEL.typ.nbool Within_Last24_Months_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST222896_Layout := RECORD
    KEL.typ.nint N_A_I_C_S_Code_;
    KEL.typ.nint N_A_I_C_S_Code_Order_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nint Days_Since_Code_;
    KEL.typ.nbool Is_N_A_I_C_S_Code_;
    KEL.typ.int Source_Priority_ := 0;
    KEL.typ.nbool Within_Last24_Months_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST222907_Layout := RECORD
    KEL.typ.nint Total_Employees_;
    KEL.typ.nint Employee_Count_;
    KEL.typ.nstr N_A_R_B_Employee_Code_;
    KEL.typ.nstr E_B_R_Employee_Size_Code_;
    KEL.typ.nint Estimated_Number_Of_Employees_;
    KEL.typ.nint D_C_A_Enterprise_Number_;
    KEL.typ.nint Cortera_Ultimate_Link_I_D_;
    KEL.typ.nint Equifax_I_D_;
    KEL.typ.nstr N_A_R_B_Record_I_D_;
    KEL.typ.nstr E_B_R_Number_;
    KEL.typ.nint Experian_Business_I_D_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nkdate Date_Last_Seen_Capped_;
    KEL.typ.nbool Is_Cortera_Employee_Record_;
    KEL.typ.nbool Is_D_C_A_Employee_Record_;
    KEL.typ.nbool Is_E_B_R_Employee_Record_;
    KEL.typ.nbool Is_Equifax_Employee_Record_;
    KEL.typ.nbool Is_Infutor_Employee_Record_;
    KEL.typ.nbool Is_Seen_In_Two_Years_;
    KEL.typ.nint N_A_R_B_Employee_Estimate_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST222931_Layout := RECORD
    KEL.typ.nint Total_Sales_;
    KEL.typ.nint Financial_Amount_Figure_;
    KEL.typ.nstr N_A_R_B_Sales_Code_;
    KEL.typ.nstr Total_Sales_Precision_;
    KEL.typ.nint Reported_Sales_;
    KEL.typ.nint Estimated_Annual_Sales_Amount_;
    KEL.typ.nint D_C_A_Enterprise_Number_;
    KEL.typ.nint Cortera_Ultimate_Link_I_D_;
    KEL.typ.nint Equifax_I_D_;
    KEL.typ.nstr N_A_R_B_Record_I_D_;
    KEL.typ.nstr E_B_R_Number_;
    KEL.typ.nint Experian_Business_I_D_;
    KEL.typ.nstr Source_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nkdate Date_Last_Seen_Capped_;
    KEL.typ.nbool Is_Cortera_Sale_Record_;
    KEL.typ.nbool Is_D_C_A_Sale_Record_;
    KEL.typ.nbool Is_E_B_R_Sale_Record_;
    KEL.typ.nbool Is_Equifax_Sale_Record_;
    KEL.typ.nbool Is_Infutor_Sale_Record_;
    KEL.typ.nbool Is_Seen_In_Two_Years_;
    KEL.typ.nint N_A_R_B_Sales_Estimate_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST223015_Layout := RECORD
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST90022_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST91124_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST91948_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST91526_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.nkdate My_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST222818_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Ult_I_D_;
    KEL.typ.nint Org_I_D_;
    KEL.typ.nint Sele_I_D_;
    KEL.typ.ntyp(E_Business_Org().Typ) Sele_Org_;
    KEL.typ.ntyp(E_Business_Sele_Overflow().Typ) Sele_Overflow_;
    KEL.typ.nbool Sele_Gold_;
    KEL.typ.nbool Is_Sele_Level_;
    KEL.typ.nbool Is_Org_Level_;
    KEL.typ.nbool Is_Ult_Level_;
    KEL.typ.nstr Sele_Segment_;
    KEL.typ.nbool Is_Corporation_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Structure_Layout) Business_Structure_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Ownership_Layout) Ownership_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Industry_Layout) Industry_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Company_Statuses_Layout) Company_Statuses_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Age_Layout) Age_;
    KEL.typ.ndataset(__ST222856_Layout) Reported_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Stock_Tickers_Layout) Stock_Tickers_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).U_R_Ls_Layout) U_R_Ls_;
    KEL.typ.ndataset(__ST222885_Layout) S_I_C_Codes_;
    KEL.typ.ndataset(__ST222896_Layout) N_A_I_C_S_Codes_;
    KEL.typ.ndataset(__ST222907_Layout) Employee_Counts_;
    KEL.typ.ndataset(__ST222931_Layout) Sale_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Earning_Amounts_Layout) Earning_Amounts_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Asset_Amounts_Layout) Asset_Amounts_;
    KEL.typ.nkdate B_B_B_Member_Since_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).B_B_B_Categories_Layout) B_B_B_Categories_;
    KEL.typ.nstr For_Profit_Indicator_;
    KEL.typ.nstr Public_Or_Private_Indicator_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Non_Profit_Layout) Non_Profit_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_Company_Names_Layout) Best_Company_Names_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_S_I_C_Codes_Layout) Best_S_I_C_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Best_N_A_I_C_S_Codes_Layout) Best_N_A_I_C_S_Codes_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Business_Sele(__in,__cfg).Experian_C_R_D_B_Tradelines_Layout) Experian_C_R_D_B_Tradelines_;
    KEL.typ.ndataset(__ST223015_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST330860_Layout) All_Lien_Data_;
    KEL.typ.int B_E___B2_B_Carr_Cnt24_Mc_ := 0;
    KEL.typ.int B_E___B2_B_Carr_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Cnt24_Mc_ := 0;
    KEL.typ.int B_E___B2_B_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Flt_Cnt24_Mc_ := 0;
    KEL.typ.int B_E___B2_B_Flt_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Mat_Cnt24_Mc_ := 0;
    KEL.typ.int B_E___B2_B_Mat_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Ops_Cnt24_Mc_ := 0;
    KEL.typ.int B_E___B2_B_Ops_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___B2_B_Oth_Cnt24_Mc_ := 0;
    KEL.typ.int B_E___B2_B_Oth_Cnt24_Mc_No_Cap_ := 0;
    KEL.typ.int B_E___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.int B_E___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.ntyp(E_Input_B_I_I().Typ) B_I_I_;
    KEL.typ.nstr B___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr B___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr B___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr B___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr B___Inp_Cln_Phone_;
    KEL.typ.nstr B___Inp_Cln_T_I_N_;
    KEL.typ.str B___Lex_I_D_Legal_Seen_Flag_ := '';
    KEL.typ.ntyp(E_Address().Typ) Best_Address_Helper_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Addresses_;
    KEL.typ.ndataset(E_Sele_Address(__in,__cfg).Best_Addresses_Layout) Best_Business_Address_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219937_Layout) Best_N_A_I_C_S_Code4_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code1_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code2_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code3_Set_;
    KEL.typ.ndataset(B_Business_Sele_9(__in,__cfg).__ST219926_Layout) Best_Sic_Code4_Set_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code1_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code2_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code3_Final_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Desc_;
    KEL.typ.nstr Bus_N_A_I_C_S_Code4_Final_;
    KEL.typ.nstr Bus_S_I_C_Code1_;
    KEL.typ.nstr Bus_S_I_C_Code1_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code1_Final_;
    KEL.typ.nstr Bus_S_I_C_Code2_;
    KEL.typ.nstr Bus_S_I_C_Code2_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code2_Final_;
    KEL.typ.nstr Bus_S_I_C_Code3_;
    KEL.typ.nstr Bus_S_I_C_Code3_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code3_Final_;
    KEL.typ.nstr Bus_S_I_C_Code4_;
    KEL.typ.nstr Bus_S_I_C_Code4_Desc_;
    KEL.typ.nstr Bus_S_I_C_Code4_Final_;
    KEL.typ.ndataset(__ST90022_Layout) Business_Ver_Source_List_;
    KEL.typ.int Initial_Filing_Count_ := 0;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Address_;
    E_Sele_Address(__in,__cfg).Best_Addresses_Layout Only_Best_Business_Address_;
    KEL.typ.ndataset(__ST91124_Layout) Sele_Address_Match_Sources_Pre_;
    KEL.typ.ndataset(__ST91948_Layout) Sele_Phone_Match_Sources_Pre_;
    KEL.typ.ndataset(__ST91526_Layout) Sele_T_I_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Business_Sele_6(__in,__cfg).__ST89973_Layout) Translated_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST222818_Layout __ND1977023__Project(__ST411981_Layout __PP1977019) := TRANSFORM
    __EE1976981 := __PP1977019.Reported_Names_;
    __ST222856_Layout __ND1977362__Project(B_Business_Sele_6(__in,__cfg).__ST213864_Layout __PP1977358) := TRANSFORM
      SELF.Business_Name_Match_Record_ := __OR(__AND(__PP1977358.Business_Name_Match_,__PP1977358.Header_Hit_Flag_),__AND(__PP1977358.Business_Name_Is_Similar_,__PP1977358.Header_Hit_Flag_));
      SELF.Translated_Source_ := FN_Compile(__cfg).FN_Source_Group(__ECAST(KEL.typ.nstr,__PP1977358.Source_));
      SELF := __PP1977358;
    END;
    SELF.Reported_Names_ := __PROJECT(__EE1976981,__ND1977362__Project(LEFT));
    __EE1976985 := __PP1977019.S_I_C_Codes_;
    SELF.S_I_C_Codes_ := __BN(PROJECT(__T(__EE1976985),__ST222885_Layout),__NL(__EE1976985));
    __EE1976989 := __PP1977019.N_A_I_C_S_Codes_;
    SELF.N_A_I_C_S_Codes_ := __BN(PROJECT(__T(__EE1976989),__ST222896_Layout),__NL(__EE1976989));
    __EE1976993 := __PP1977019.Employee_Counts_;
    __ST222907_Layout __ND1977529__Project(B_Business_Sele_6(__in,__cfg).__ST213917_Layout __PP1977525) := TRANSFORM
      SELF.Is_Cortera_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP1977525.Source_,=,__CN('RR')),__PP1977525.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977525.Total_Employees_))),__NOT(__NT(__PP1977525.Cortera_Ultimate_Link_I_D_)));
      SELF.Is_D_C_A_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP1977525.Source_,=,__CN('DF')),__PP1977525.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977525.Total_Employees_))),__NOT(__NT(__PP1977525.D_C_A_Enterprise_Number_)));
      SELF.Is_E_B_R_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP1977525.Source_,=,__CN('ER')),__PP1977525.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977525.Total_Employees_))),__NOT(__NT(__PP1977525.E_B_R_Number_)));
      SELF.Is_Equifax_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP1977525.Source_,=,__CN('Z1')),__PP1977525.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977525.Employee_Count_))),__NOT(__NT(__PP1977525.Equifax_I_D_)));
      SELF.Is_Infutor_Employee_Record_ := __AND(__AND(__AND(__OP2(__PP1977525.Source_,=,__CN('Z2')),__PP1977525.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977525.N_A_R_B_Employee_Estimate_))),__NOT(__NT(__PP1977525.N_A_R_B_Record_I_D_)));
      SELF := __PP1977525;
    END;
    SELF.Employee_Counts_ := __PROJECT(__EE1976993,__ND1977529__Project(LEFT));
    __EE1976997 := __PP1977019.Sale_Amounts_;
    __ST222931_Layout __ND1977695__Project(B_Business_Sele_6(__in,__cfg).__ST213936_Layout __PP1977691) := TRANSFORM
      SELF.Is_Cortera_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP1977691.Source_,=,__CN('RR')),__PP1977691.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977691.Total_Sales_))),__NOT(__NT(__PP1977691.Cortera_Ultimate_Link_I_D_)));
      SELF.Is_D_C_A_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP1977691.Source_,=,__CN('DF')),__PP1977691.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977691.Total_Sales_))),__NOT(__NT(__PP1977691.D_C_A_Enterprise_Number_)));
      SELF.Is_E_B_R_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP1977691.Source_,=,__CN('ER')),__PP1977691.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977691.Reported_Sales_))),__NOT(__NT(__PP1977691.E_B_R_Number_)));
      SELF.Is_Equifax_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP1977691.Source_,=,__CN('Z1')),__PP1977691.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977691.Financial_Amount_Figure_))),__NOT(__NT(__PP1977691.Equifax_I_D_)));
      SELF.Is_Infutor_Sale_Record_ := __AND(__AND(__AND(__OP2(__PP1977691.Source_,=,__CN('Z2')),__PP1977691.Is_Seen_In_Two_Years_),__NOT(__NT(__PP1977691.N_A_R_B_Sales_Estimate_))),__NOT(__NT(__PP1977691.N_A_R_B_Record_I_D_)));
      SELF := __PP1977691;
    END;
    SELF.Sale_Amounts_ := __PROJECT(__EE1976997,__ND1977695__Project(LEFT));
    __EE1977001 := __PP1977019.Data_Sources_;
    SELF.Data_Sources_ := __BN(PROJECT(__T(__EE1977001),__ST223015_Layout),__NL(__EE1977001));
    SELF.B_E___B2_B_Carr_Cnt24_Mc_ := KEL.Routines.BoundsFold(__PP1977019.B_E___B2_B_Carr_Cnt24_Mc_No_Cap_,0,999);
    SELF.B_E___B2_B_Cnt24_Mc_ := KEL.Routines.BoundsFold(__PP1977019.B_E___B2_B_Cnt24_Mc_No_Cap_,0,999);
    SELF.B_E___B2_B_Flt_Cnt24_Mc_ := KEL.Routines.BoundsFold(__PP1977019.B_E___B2_B_Flt_Cnt24_Mc_No_Cap_,0,999);
    SELF.B_E___B2_B_Mat_Cnt24_Mc_ := KEL.Routines.BoundsFold(__PP1977019.B_E___B2_B_Mat_Cnt24_Mc_No_Cap_,0,999);
    SELF.B_E___B2_B_Ops_Cnt24_Mc_ := KEL.Routines.BoundsFold(__PP1977019.B_E___B2_B_Ops_Cnt24_Mc_No_Cap_,0,999);
    SELF.B_E___B2_B_Oth_Cnt24_Mc_ := KEL.Routines.BoundsFold(__PP1977019.B_E___B2_B_Oth_Cnt24_Mc_No_Cap_,0,999);
    __CC13973 := '-99999';
    __CC13976 := -99999;
    __BS1977945 := __T(__PP1977019.All_Lien_Data_);
    SELF.B_E___Drg_L_T_D_Cnt7_Y_ := IF(__T(__OR(__CN(__PP1977019.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1977019.Sele_I_D_),=,__CN(__CC13973)))),__CC13976,KEL.Routines.BoundsFold(COUNT(__BS1977945(__T(__AND(__T(__PP1977019.All_Lien_Data_).Seen___In___Seven___Years_,__OP2(__T(__PP1977019.All_Lien_Data_).Is_Landlord_Tenant_Dispute_,=,__CN(TRUE)))))),0,99999));
    __BS1977970 := __T(__PP1977019.All_Lien_Data_);
    SELF.B_E___Drg_Ln_J_Cnt7_Y_ := IF(__T(__OR(__CN(__PP1977019.B___Lex_I_D_Legal_Seen_Flag_ = '0'),__OP2(__CAST(KEL.typ.str,__PP1977019.Sele_I_D_),=,__CN(__CC13973)))),__CC13976,KEL.Routines.BoundsFold(COUNT(__BS1977970(__T(__AND(__T(__PP1977019.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP1977019.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))),0,99999));
    SELF.Best_Address_Helper_ := __PP1977019.O_N_L_Y___Location_;
    __CC13772 := '-99998';
    SELF.Bus_N_A_I_C_S_Code1_Final_ := IF(__T(__AND(__OP2(__PP1977019.Bus_N_A_I_C_S_Code1_,<>,__CN(__CC13772)),__OP2(__PP1977019.Bus_N_A_I_C_S_Code1_Desc_,=,__CN(__CC13772)))),__ECAST(KEL.typ.nstr,__CN(__CC13772)),__ECAST(KEL.typ.nstr,__PP1977019.Bus_N_A_I_C_S_Code1_));
    SELF.Bus_N_A_I_C_S_Code2_Final_ := IF(__T(__AND(__OP2(__PP1977019.Bus_N_A_I_C_S_Code2_,<>,__CN(__CC13772)),__OP2(__PP1977019.Bus_N_A_I_C_S_Code2_Desc_,=,__CN(__CC13772)))),__ECAST(KEL.typ.nstr,__CN(__CC13772)),__ECAST(KEL.typ.nstr,__PP1977019.Bus_N_A_I_C_S_Code2_));
    SELF.Bus_N_A_I_C_S_Code3_Final_ := IF(__T(__AND(__OP2(__PP1977019.Bus_N_A_I_C_S_Code3_,<>,__CN(__CC13772)),__OP2(__PP1977019.Bus_N_A_I_C_S_Code3_Desc_,=,__CN(__CC13772)))),__ECAST(KEL.typ.nstr,__CN(__CC13772)),__ECAST(KEL.typ.nstr,__PP1977019.Bus_N_A_I_C_S_Code3_));
    SELF.Bus_N_A_I_C_S_Code4_Final_ := IF(__T(__AND(__OP2(__PP1977019.Bus_N_A_I_C_S_Code4_,<>,__CN(__CC13772)),__OP2(__PP1977019.Bus_N_A_I_C_S_Code4_Desc_,=,__CN(__CC13772)))),__ECAST(KEL.typ.nstr,__CN(__CC13772)),__ECAST(KEL.typ.nstr,__PP1977019.Bus_N_A_I_C_S_Code4_));
    SELF.Bus_S_I_C_Code1_Final_ := IF(__T(__AND(__OP2(__PP1977019.Bus_S_I_C_Code1_,<>,__CN(__CC13772)),__OP2(__PP1977019.Bus_S_I_C_Code1_Desc_,=,__CN(__CC13772)))),__ECAST(KEL.typ.nstr,__CN(__CC13772)),__ECAST(KEL.typ.nstr,__PP1977019.Bus_S_I_C_Code1_));
    SELF.Bus_S_I_C_Code2_Final_ := IF(__T(__AND(__OP2(__PP1977019.Bus_S_I_C_Code2_,<>,__CN(__CC13772)),__OP2(__PP1977019.Bus_S_I_C_Code2_Desc_,=,__CN(__CC13772)))),__ECAST(KEL.typ.nstr,__CN(__CC13772)),__ECAST(KEL.typ.nstr,__PP1977019.Bus_S_I_C_Code2_));
    SELF.Bus_S_I_C_Code3_Final_ := IF(__T(__AND(__OP2(__PP1977019.Bus_S_I_C_Code3_,<>,__CN(__CC13772)),__OP2(__PP1977019.Bus_S_I_C_Code3_Desc_,=,__CN(__CC13772)))),__ECAST(KEL.typ.nstr,__CN(__CC13772)),__ECAST(KEL.typ.nstr,__PP1977019.Bus_S_I_C_Code3_));
    SELF.Bus_S_I_C_Code4_Final_ := IF(__T(__AND(__OP2(__PP1977019.Bus_S_I_C_Code4_,<>,__CN(__CC13772)),__OP2(__PP1977019.Bus_S_I_C_Code4_Desc_,=,__CN(__CC13772)))),__ECAST(KEL.typ.nstr,__CN(__CC13772)),__ECAST(KEL.typ.nstr,__PP1977019.Bus_S_I_C_Code4_));
    __EE1977005 := __PP1977019.Translated_Sources_;
    __ST90022_Layout __ND1978168__Project(B_Business_Sele_6(__in,__cfg).__ST89973_Layout __PP1978164) := TRANSFORM
      __CC13780 := '-99997';
      SELF.Source_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP1978164.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.era.ToDate(__PP1978164.Date_First_Seen_),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13780)));
      __CC13139 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('bip_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Source_Date_Last_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP1978164.Date_Last_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP1978164.Date_Last_Seen_),__CC13139),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13780)));
      SELF := __PP1978164;
    END;
    SELF.Business_Ver_Source_List_ := __PROJECT(__EE1977005,__ND1978168__Project(LEFT));
    SELF.Initial_Filing_Count_ := __PP1977019.C_O_U_N_T___Exp1_;
    __EE1978205 := __PP1977019.Best_Business_Address_;
    SELF.Only_Best_Business_Address_ := (__T(__EE1978205))[1];
    __EE1977009 := __PP1977019.Exp1_;
    __ST91124_Layout __ND1978213__Project(__ST382114_Layout __PP1978209) := TRANSFORM
      SELF.My_Date_First_Seen_ := __PP1978209.M_I_N___My_Date_First_Seen_;
      SELF.My_Date_Last_Seen_ := __PP1978209.M_A_X___My_Date_Last_Seen_;
      SELF := __PP1978209;
    END;
    SELF.Sele_Address_Match_Sources_Pre_ := __PROJECT(__EE1977009,__ND1978213__Project(LEFT));
    __EE1977013 := __PP1977019.Exp2_;
    __ST91948_Layout __ND1978232__Project(__ST382743_Layout __PP1978228) := TRANSFORM
      SELF.My_Date_First_Seen_ := __PP1978228.M_I_N___My_Date_First_Seen_;
      SELF.My_Date_Last_Seen_ := __PP1978228.M_A_X___My_Date_Last_Seen_;
      SELF := __PP1978228;
    END;
    SELF.Sele_Phone_Match_Sources_Pre_ := __PROJECT(__EE1977013,__ND1978232__Project(LEFT));
    __EE1977017 := __PP1977019.Exp3_;
    __ST91526_Layout __ND1978251__Project(__ST383251_Layout __PP1978247) := TRANSFORM
      SELF.My_Date_First_Seen_ := __PP1978247.M_I_N___My_Date_First_Seen_;
      SELF.My_Date_Last_Seen_ := __PP1978247.M_A_X___My_Date_Last_Seen_;
      SELF := __PP1978247;
    END;
    SELF.Sele_T_I_N_Match_Sources_Pre_ := __PROJECT(__EE1977017,__ND1978251__Project(LEFT));
    SELF := __PP1977019;
  END;
  EXPORT __ENH_Business_Sele_5 := PROJECT(__EE1976978,__ND1977023__Project(LEFT));
END;
