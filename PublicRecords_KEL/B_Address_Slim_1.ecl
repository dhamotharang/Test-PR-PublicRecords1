//HPCC Systems KEL Compiler Version 1.5.0rc1
IMPORT KEL15 AS KEL;
IMPORT B_Address_Slim_2,B_Address_Slim_3,B_Address_Slim_4,B_Input_P_I_I_2,B_Input_P_I_I_3,B_Inquiry_4,B_Property_4,CFG_Compile,E_Address,E_Address_Slim,E_Address_Summary,E_Email,E_Geo_Link,E_Input_P_I_I,E_Inquiry,E_Name_Summary,E_Person,E_Phone,E_Phone_Summary,E_Property,E_S_S_N_Summary,E_Social_Security_Number,E_Surname,E_Zip_Code FROM PublicRecords_KEL;
IMPORT * FROM KEL15.Null;
EXPORT B_Address_Slim_1(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Address_Slim_2(__in,__cfg).__ENH_Address_Slim_2) __ENH_Address_Slim_2 := B_Address_Slim_2(__in,__cfg).__ENH_Address_Slim_2;
  SHARED VIRTUAL TYPEOF(B_Input_P_I_I_2(__in,__cfg).__ENH_Input_P_I_I_2) __ENH_Input_P_I_I_2 := B_Input_P_I_I_2(__in,__cfg).__ENH_Input_P_I_I_2;
  SHARED __EE8040138 := __ENH_Address_Slim_2;
  SHARED __EE8040140 := __ENH_Input_P_I_I_2;
  SHARED __ST2106555_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ndataset(E_Address_Slim(__in,__cfg).High_Risk_Address_Layout) High_Risk_Address_;
    KEL.typ.ndataset(E_Address_Slim(__in,__cfg).Address_Type_Layout) Address_Type_;
    KEL.typ.nstr Source_;
    KEL.typ.ndataset(B_Address_Slim_3(__in,__cfg).__ST77060_Layout) Address_N_A_I_C_S_List_;
    KEL.typ.ndataset(B_Address_Slim_3(__in,__cfg).__ST77060_Layout) Address_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Address_Slim_3(__in,__cfg).__ST76967_Layout) Address_S_I_C_List_;
    KEL.typ.ndataset(B_Address_Slim_3(__in,__cfg).__ST76967_Layout) Address_S_I_C_Sorted_List_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Cleaned_Zip_;
    KEL.typ.nint D_P_P_A_Purpose_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.nint G_L_B_Purpose_;
    KEL.typ.nbool Gateway_Is_F_C_R_A_;
    KEL.typ.nfloat Global_Watchlist_Threshold_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST79305_Layout) Good_Inquiries_Last_Year_For_Address_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST79469_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST79569_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST79014_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nbool Include_Additional_Watchlists_;
    KEL.typ.nbool Include_O_F_A_C_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST78222_Layout) Input_Address_Property_Set_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST78273_Layout) Input_Address_Property_Set1_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST78338_Layout) Input_Address_Property_Set5_Y_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nstr Watchlists_Requested_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC8040149(B_Address_Slim_2(__in,__cfg).__ST204661_Layout __EE8040138, B_Input_P_I_I_2(__in,__cfg).__ST304717_Layout __EE8040140) := __EEQP(__EE8040138.P_I_I_,__EE8040140.UID);
  __ST2106555_Layout __JT8040149(B_Address_Slim_2(__in,__cfg).__ST204661_Layout __l, B_Input_P_I_I_2(__in,__cfg).__ST304717_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF.Z_I_P5__1_ := __r.Z_I_P5_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE8040405 := JOIN(__EE8040138,__EE8040140,__JC8040149(LEFT,RIGHT),__JT8040149(LEFT,RIGHT),LEFT OUTER,SMART);
  EXPORT __ST177217_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ndataset(E_Address_Slim(__in,__cfg).High_Risk_Address_Layout) High_Risk_Address_;
    KEL.typ.ndataset(E_Address_Slim(__in,__cfg).Address_Type_Layout) Address_Type_;
    KEL.typ.nstr Source_;
    KEL.typ.nbool Address_N_A_I_C_S_Not_Contains_;
    KEL.typ.ndataset(B_Address_Slim_3(__in,__cfg).__ST77060_Layout) Address_N_A_I_C_S_Sorted_List_;
    KEL.typ.nbool Address_S_I_C_Not_Contains_;
    KEL.typ.ndataset(B_Address_Slim_3(__in,__cfg).__ST76967_Layout) Address_S_I_C_Sorted_List_;
    KEL.typ.nbool N_A_I_C_S_List_Not_Foind_;
    KEL.typ.nstr P___Cln_Addr_Full_Flag_;
    KEL.typ.nbool S_I_C_List_Not_Found_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST177217_Layout __ND8040023__Project(__ST2106555_Layout __PP8038702) := TRANSFORM
    __EE8040013 := __PP8038702.Address_N_A_I_C_S_Sorted_List_;
    SELF.Address_N_A_I_C_S_Not_Contains_ := __NOT(__FN2(KEL.Routines.Contains,KEL.Aggregates.ConcatNN(__EE8040013,LEFT.High_Risk_N_A_I_C_S_,__CN('|')),__CN('922140')));
    __EE8040035 := __PP8038702.Address_S_I_C_Sorted_List_;
    SELF.Address_S_I_C_Not_Contains_ := __NOT(__FN2(KEL.Routines.Contains,KEL.Aggregates.ConcatNN(__EE8040035,LEFT.High_Risk_S_I_C_,__CN('|')),__CN('9223')));
    __BS8040055 := __T(__PP8038702.Address_N_A_I_C_S_Sorted_List_);
    SELF.N_A_I_C_S_List_Not_Foind_ := __OR(__NOT(__CN(EXISTS(__T(__PP8038702.Address_N_A_I_C_S_Sorted_List_)))),__CN(NOT EXISTS(__BS8040055(__T(__NOT(__OR(__OP2(__CAST(KEL.typ.str,__T(__PP8038702.Address_N_A_I_C_S_Sorted_List_).High_Risk_N_A_I_C_S_),=,__CN('')),__NT(__T(__PP8038702.Address_N_A_I_C_S_Sorted_List_).High_Risk_N_A_I_C_S_))))))));
    SELF.P___Cln_Addr_Full_Flag_ := __PP8038702.P___Inp_Cln_Addr_Full_Flag_Value_;
    __BS8040084 := __T(__PP8038702.Address_S_I_C_Sorted_List_);
    SELF.S_I_C_List_Not_Found_ := __OR(__NOT(__CN(EXISTS(__T(__PP8038702.Address_S_I_C_Sorted_List_)))),__CN(NOT EXISTS(__BS8040084(__T(__NOT(__OR(__OP2(__CAST(KEL.typ.str,__T(__PP8038702.Address_S_I_C_Sorted_List_).High_Risk_S_I_C_),=,__CN('')),__NT(__T(__PP8038702.Address_S_I_C_Sorted_List_).High_Risk_S_I_C_))))))));
    SELF := __PP8038702;
  END;
  EXPORT __ENH_Address_Slim_1 := PROJECT(__EE8040405,__ND8040023__Project(LEFT));
END;
