//HPCC Systems KEL Compiler Version 1.5.0rc1
IMPORT KEL15 AS KEL;
IMPORT B_Bankruptcy_4,B_Criminal_Offense_4,B_Input_P_I_I_4,B_Inquiry_4,B_Person_10,B_Person_4,B_Person_5,B_Person_6,B_Person_Accident_8,B_Person_Inquiry_4,B_Person_Inquiry_5,B_Person_Property_4,B_Person_Property_7,B_Professional_License_4,CFG_Compile,E_Accident,E_Address,E_Bankruptcy,E_Criminal_Offense,E_Email,E_Geo_Link,E_Household,E_Household_Member,E_Input_P_I_I,E_Inquiry,E_Person,E_Person_Accident,E_Person_Bankruptcy,E_Person_Inquiry,E_Person_Offenses,E_Person_Property,E_Person_Property_Event,E_Phone,E_Professional_License,E_Professional_License_Person,E_Property,E_Property_Event,E_Social_Security_Number,E_Surname,E_Utility,E_Zip_Code,FN_Compile FROM PublicRecords_KEL;
IMPORT * FROM KEL15.Null;
EXPORT B_Person_3(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Bankruptcy_4(__in,__cfg).__ENH_Bankruptcy_4) __ENH_Bankruptcy_4 := B_Bankruptcy_4(__in,__cfg).__ENH_Bankruptcy_4;
  SHARED VIRTUAL TYPEOF(B_Criminal_Offense_4(__in,__cfg).__ENH_Criminal_Offense_4) __ENH_Criminal_Offense_4 := B_Criminal_Offense_4(__in,__cfg).__ENH_Criminal_Offense_4;
  SHARED VIRTUAL TYPEOF(E_Household_Member(__in,__cfg).__Result) __E_Household_Member := E_Household_Member(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(B_Input_P_I_I_4(__in,__cfg).__ENH_Input_P_I_I_4) __ENH_Input_P_I_I_4 := B_Input_P_I_I_4(__in,__cfg).__ENH_Input_P_I_I_4;
  SHARED VIRTUAL TYPEOF(B_Inquiry_4(__in,__cfg).__ENH_Inquiry_4) __ENH_Inquiry_4 := B_Inquiry_4(__in,__cfg).__ENH_Inquiry_4;
  SHARED VIRTUAL TYPEOF(B_Person_4(__in,__cfg).__ENH_Person_4) __ENH_Person_4 := B_Person_4(__in,__cfg).__ENH_Person_4;
  SHARED VIRTUAL TYPEOF(E_Person_Bankruptcy(__in,__cfg).__Result) __E_Person_Bankruptcy := E_Person_Bankruptcy(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(B_Person_Inquiry_4(__in,__cfg).__ENH_Person_Inquiry_4) __ENH_Person_Inquiry_4 := B_Person_Inquiry_4(__in,__cfg).__ENH_Person_Inquiry_4;
  SHARED VIRTUAL TYPEOF(E_Person_Offenses(__in,__cfg).__Result) __E_Person_Offenses := E_Person_Offenses(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(B_Person_Property_4(__in,__cfg).__ENH_Person_Property_4) __ENH_Person_Property_4 := B_Person_Property_4(__in,__cfg).__ENH_Person_Property_4;
  SHARED VIRTUAL TYPEOF(B_Professional_License_4(__in,__cfg).__ENH_Professional_License_4) __ENH_Professional_License_4 := B_Professional_License_4(__in,__cfg).__ENH_Professional_License_4;
  SHARED VIRTUAL TYPEOF(E_Professional_License_Person(__in,__cfg).__Result) __E_Professional_License_Person := E_Professional_License_Person(__in,__cfg).__Result;
  SHARED __EE6122961 := __ENH_Person_4;
  SHARED __EE6124494 := __ENH_Criminal_Offense_4;
  SHARED __EE6414905 := __EE6124494;
  SHARED __EE6124492 := __E_Person_Offenses;
  SHARED __EE6293425 := __EE6124492(__NN(__EE6124492.Subject_) AND __NN(__EE6124492.Offense_));
  SHARED __EE6414938 := __EE6293425;
  SHARED __ST1106861_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Offender_Key_;
    KEL.typ.nstr Offense_Type_;
    KEL.typ.nkdate Date_Of_Offence_;
    KEL.typ.nint Offense_Category_;
    KEL.typ.nstr County_Of_Source_;
    KEL.typ.nstr State_Of_Source_;
    KEL.typ.nstr Department_Of_Law_Enforcement_Number_;
    KEL.typ.nstr Federal_Bureau_Of_Investigations_Number_;
    KEL.typ.nstr Inmate_Number_;
    KEL.typ.nstr State_Identification_Number_Assigned_;
    KEL.typ.nkdate Date_Of_Arrest_;
    KEL.typ.nstr Agency_Name_;
    KEL.typ.nstr Agency_Case_Number_;
    KEL.typ.nstr Traffic_Ticket_Number_;
    KEL.typ.nstr Arrest_Offense_Code_;
    KEL.typ.nstr Arrest_Initial_Charge_Description_;
    KEL.typ.nstr Arrest_Amended_Charge_Description_;
    KEL.typ.nstr Arrest_Offense_Level_;
    KEL.typ.nkdate Date_Of_Disposition_For_Initial_Charge_;
    KEL.typ.nstr Arrest_Offence_Type_Description_;
    KEL.typ.nstr Initial_Charge_Disposition_Description_;
    KEL.typ.nstr Additional_Disposition_Description_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Court_Description_;
    KEL.typ.nstr Court_Final_Plea_;
    KEL.typ.nstr Court_Offense_Code_;
    KEL.typ.nstr Court_Offense_Description_;
    KEL.typ.nstr Court_Offense_Additional_Description_;
    KEL.typ.nstr Court_Statute_;
    KEL.typ.nkdate Court_Disposition_Date_;
    KEL.typ.nint Court_Fine_;
    KEL.typ.nstr Suspended_Court_Fine_;
    KEL.typ.nint Court_Cost_;
    KEL.typ.nstr Court_Disposition_Code_;
    KEL.typ.nstr Court_Disposition_Description_;
    KEL.typ.nstr Court_Additional_Disposition_Description_;
    KEL.typ.nkdate Date_Of_Appeal_;
    KEL.typ.nkdate Dateof_Verdict_;
    KEL.typ.nstr Offense_Town_;
    KEL.typ.nstr Persistent_Offense_Key_;
    KEL.typ.nkdate Court_Date_;
    KEL.typ.nstr Court_County_;
    KEL.typ.nstr Arrest_Offense_Level_Mapped_;
    KEL.typ.nstr Court_Offense_Level_Mapped_;
    KEL.typ.ndataset(B_Criminal_Offense_4(__in,__cfg).__ST239141_Layout) Offense_Charges_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Criminal_Data_Sources_Layout) Criminal_Data_Sources_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Court_Offense_Level_Layout) Court_Offense_Level_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Fcra_Data_Layout) Fcra_Data_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Conviction_Overrides_Layout) Conviction_Overrides_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Criminal_Offense().Typ) Offense_;
    KEL.typ.ndataset(E_Person_Offenses(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6414973(B_Criminal_Offense_4(__in,__cfg).__ST239094_Layout __EE6414905, E_Person_Offenses(__in,__cfg).Layout __EE6414938) := __EEQP(__EE6414938.Offense_,__EE6414905.UID);
  __ST1106861_Layout __JT6414973(B_Criminal_Offense_4(__in,__cfg).__ST239094_Layout __l, E_Person_Offenses(__in,__cfg).Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6414974 := JOIN(__EE6414938,__EE6414905,__JC6414973(RIGHT,LEFT),__JT6414973(RIGHT,LEFT),INNER,HASH);
  SHARED __ST1107331_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Offender_Key_;
    KEL.typ.nstr Offense_Type_;
    KEL.typ.nkdate Date_Of_Offence_;
    KEL.typ.nint Offense_Category_;
    KEL.typ.nstr County_Of_Source_;
    KEL.typ.nstr State_Of_Source_;
    KEL.typ.nstr Department_Of_Law_Enforcement_Number_;
    KEL.typ.nstr Federal_Bureau_Of_Investigations_Number_;
    KEL.typ.nstr Inmate_Number_;
    KEL.typ.nstr State_Identification_Number_Assigned_;
    KEL.typ.nkdate Date_Of_Arrest_;
    KEL.typ.nstr Agency_Name_;
    KEL.typ.nstr Agency_Case_Number_;
    KEL.typ.nstr Traffic_Ticket_Number_;
    KEL.typ.nstr Arrest_Offense_Code_;
    KEL.typ.nstr Arrest_Initial_Charge_Description_;
    KEL.typ.nstr Arrest_Amended_Charge_Description_;
    KEL.typ.nstr Arrest_Offense_Level_;
    KEL.typ.nkdate Date_Of_Disposition_For_Initial_Charge_;
    KEL.typ.nstr Arrest_Offence_Type_Description_;
    KEL.typ.nstr Initial_Charge_Disposition_Description_;
    KEL.typ.nstr Additional_Disposition_Description_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Court_Description_;
    KEL.typ.nstr Court_Final_Plea_;
    KEL.typ.nstr Court_Offense_Code_;
    KEL.typ.nstr Court_Offense_Description_;
    KEL.typ.nstr Court_Offense_Additional_Description_;
    KEL.typ.nstr Court_Statute_;
    KEL.typ.nkdate Court_Disposition_Date_;
    KEL.typ.nint Court_Fine_;
    KEL.typ.nstr Suspended_Court_Fine_;
    KEL.typ.nint Court_Cost_;
    KEL.typ.nstr Court_Disposition_Code_;
    KEL.typ.nstr Court_Disposition_Description_;
    KEL.typ.nstr Court_Additional_Disposition_Description_;
    KEL.typ.nkdate Date_Of_Appeal_;
    KEL.typ.nkdate Dateof_Verdict_;
    KEL.typ.nstr Offense_Town_;
    KEL.typ.nstr Persistent_Offense_Key_;
    KEL.typ.nkdate Court_Date_;
    KEL.typ.nstr Court_County_;
    KEL.typ.nstr Arrest_Offense_Level_Mapped_;
    KEL.typ.nstr Court_Offense_Level_Mapped_;
    KEL.typ.ndataset(B_Criminal_Offense_4(__in,__cfg).__ST239141_Layout) Offense_Charges_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Criminal_Data_Sources_Layout) Criminal_Data_Sources_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Court_Offense_Level_Layout) Court_Offense_Level_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Fcra_Data_Layout) Fcra_Data_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Conviction_Overrides_Layout) Conviction_Overrides_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Criminal_Offense().Typ) Offense_;
    KEL.typ.ndataset(E_Person_Offenses(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nkdate Case_Date_;
    KEL.typ.nstr Case_Type_Description_;
    KEL.typ.nkdate Offense_Date_;
    KEL.typ.nstr Offense_Score_;
    KEL.typ.nstr Offender_Level_;
    KEL.typ.nstr Data_Type_;
    KEL.typ.nstr Traffic_Flag_;
    KEL.typ.nstr Conviction_Flag_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nkdate Criminal_Date_;
    KEL.typ.nbool Dismissed_Charges_;
    KEL.typ.nbool Is_Criminal_Count_;
    KEL.typ.nbool Is_Felony_Non_F_C_R_A_;
    KEL.typ.nbool Is_Non_Felony_Records_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __CC25348 := 2556;
  __JC6498495(__ST1106861_Layout __EE6414974, B_Criminal_Offense_4(__in,__cfg).__ST239141_Layout __EE6415066) := __T(__AND(__AND(__NOT(__NT(__EE6415066.Age_In_Days_)),__OP2(__EE6415066.Age_In_Days_,<=,__CN(__CC25348))),__OP2(__EE6415066.Is_Criminal_Count_,=,__CN(TRUE))));
  __ST1107331_Layout __JT6498495(__ST1106861_Layout __l, B_Criminal_Offense_4(__in,__cfg).__ST239141_Layout __r) := TRANSFORM, SKIP(NOT(__JC6498495(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6498597 := NORMALIZE(__EE6414974,__T(LEFT.Offense_Charges_),__JT6498495(LEFT,RIGHT));
  SHARED __ST1074752_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Criminal_Offense().Typ) Offense_;
    KEL.typ.ndataset(E_Person_Offenses(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Offender_Key_;
    KEL.typ.nstr Offense_Type_;
    KEL.typ.nkdate Date_Of_Offence_;
    KEL.typ.nint Offense_Category_;
    KEL.typ.nstr County_Of_Source_;
    KEL.typ.nstr State_Of_Source_;
    KEL.typ.nstr Department_Of_Law_Enforcement_Number_;
    KEL.typ.nstr Federal_Bureau_Of_Investigations_Number_;
    KEL.typ.nstr Inmate_Number_;
    KEL.typ.nstr State_Identification_Number_Assigned_;
    KEL.typ.nkdate Date_Of_Arrest_;
    KEL.typ.nstr Agency_Name_;
    KEL.typ.nstr Agency_Case_Number_;
    KEL.typ.nstr Traffic_Ticket_Number_;
    KEL.typ.nstr Arrest_Offense_Code_;
    KEL.typ.nstr Arrest_Initial_Charge_Description_;
    KEL.typ.nstr Arrest_Amended_Charge_Description_;
    KEL.typ.nstr Arrest_Offense_Level_;
    KEL.typ.nkdate Date_Of_Disposition_For_Initial_Charge_;
    KEL.typ.nstr Arrest_Offence_Type_Description_;
    KEL.typ.nstr Initial_Charge_Disposition_Description_;
    KEL.typ.nstr Additional_Disposition_Description_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Court_Description_;
    KEL.typ.nstr Court_Final_Plea_;
    KEL.typ.nstr Court_Offense_Code_;
    KEL.typ.nstr Court_Offense_Description_;
    KEL.typ.nstr Court_Offense_Additional_Description_;
    KEL.typ.nstr Court_Statute_;
    KEL.typ.nkdate Court_Disposition_Date_;
    KEL.typ.nint Court_Fine_;
    KEL.typ.nstr Suspended_Court_Fine_;
    KEL.typ.nint Court_Cost_;
    KEL.typ.nstr Court_Disposition_Code_;
    KEL.typ.nstr Court_Disposition_Description_;
    KEL.typ.nstr Court_Additional_Disposition_Description_;
    KEL.typ.nkdate Date_Of_Appeal_;
    KEL.typ.nkdate Dateof_Verdict_;
    KEL.typ.nstr Offense_Town_;
    KEL.typ.nstr Persistent_Offense_Key_;
    KEL.typ.nkdate Court_Date_;
    KEL.typ.nstr Court_County_;
    KEL.typ.nstr Arrest_Offense_Level_Mapped_;
    KEL.typ.nstr Court_Offense_Level_Mapped_;
    KEL.typ.ndataset(B_Criminal_Offense_4(__in,__cfg).__ST239141_Layout) Offense_Charges_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Criminal_Data_Sources_Layout) Criminal_Data_Sources_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Court_Offense_Level_Layout) Court_Offense_Level_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Fcra_Data_Layout) Fcra_Data_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Conviction_Overrides_Layout) Conviction_Overrides_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nkdate Case_Date_;
    KEL.typ.nstr Case_Type_Description_;
    KEL.typ.nkdate Offense_Date_;
    KEL.typ.nstr Offense_Score_;
    KEL.typ.nstr Offender_Level_;
    KEL.typ.nstr Data_Type_;
    KEL.typ.nstr Traffic_Flag_;
    KEL.typ.nstr Conviction_Flag_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nkdate Criminal_Date_;
    KEL.typ.nbool Dismissed_Charges_;
    KEL.typ.nbool Is_Criminal_Count_;
    KEL.typ.nbool Is_Felony_Non_F_C_R_A_;
    KEL.typ.nbool Is_Non_Felony_Records_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1074752_Layout __ND6475827__Project(__ST1107331_Layout __PP6475722) := TRANSFORM
    SELF.UID := __PP6475722.Subject_;
    SELF.Data_Sources_ := __PP6475722.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP6475722.UID;
    SELF.Data_Sources__1_ := __PP6475722.Data_Sources_;
    SELF := __PP6475722;
  END;
  SHARED __EE6476170 := PROJECT(__EE6498597,__ND6475827__Project(LEFT));
  SHARED __ST1074979_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.nkdate Criminal_Date_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6476184 := PROJECT(__EE6476170,__ST1074979_Layout);
  SHARED __ST1074997_Layout := RECORD
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6498614 := PROJECT(__CLEANANDDO(__EE6476184,TABLE(__EE6476184,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.Aggregates.MaxNG(__EE6476184.Criminal_Date_) M_A_X___Criminal_Date_,KEL.Aggregates.MinNG(__EE6476184.Criminal_Date_) M_I_N___Criminal_Date_,UID},UID,MERGE)),__ST1074997_Layout);
  SHARED __ST1107910_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6498620(B_Person_4(__in,__cfg).__ST300973_Layout __EE6122961, __ST1074997_Layout __EE6498614) := __EEQP(__EE6122961.UID,__EE6498614.UID);
  __ST1107910_Layout __JT6498620(B_Person_4(__in,__cfg).__ST300973_Layout __l, __ST1074997_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6499075 := JOIN(__EE6122961,__EE6498614,__JC6498620(LEFT,RIGHT),__JT6498620(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE6499088 := __EE6124494.Offense_Charges_;
  __JC6499091(B_Criminal_Offense_4(__in,__cfg).__ST239141_Layout __EE6499088) := __T(__AND(__OP2(__EE6499088.Age_In_Days_,<=,__CN(__CC25348)),__NOT(__NT(__EE6499088.Age_In_Days_))));
  SHARED __EE6499173 := __EE6124494(EXISTS(__CHILDJOINFILTER(__EE6499088,__JC6499091)));
  SHARED __ST1106665_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Offender_Key_;
    KEL.typ.nstr Offense_Type_;
    KEL.typ.nkdate Date_Of_Offence_;
    KEL.typ.nint Offense_Category_;
    KEL.typ.nstr County_Of_Source_;
    KEL.typ.nstr State_Of_Source_;
    KEL.typ.nstr Department_Of_Law_Enforcement_Number_;
    KEL.typ.nstr Federal_Bureau_Of_Investigations_Number_;
    KEL.typ.nstr Inmate_Number_;
    KEL.typ.nstr State_Identification_Number_Assigned_;
    KEL.typ.nkdate Date_Of_Arrest_;
    KEL.typ.nstr Agency_Name_;
    KEL.typ.nstr Agency_Case_Number_;
    KEL.typ.nstr Traffic_Ticket_Number_;
    KEL.typ.nstr Arrest_Offense_Code_;
    KEL.typ.nstr Arrest_Initial_Charge_Description_;
    KEL.typ.nstr Arrest_Amended_Charge_Description_;
    KEL.typ.nstr Arrest_Offense_Level_;
    KEL.typ.nkdate Date_Of_Disposition_For_Initial_Charge_;
    KEL.typ.nstr Arrest_Offence_Type_Description_;
    KEL.typ.nstr Initial_Charge_Disposition_Description_;
    KEL.typ.nstr Additional_Disposition_Description_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Court_Description_;
    KEL.typ.nstr Court_Final_Plea_;
    KEL.typ.nstr Court_Offense_Code_;
    KEL.typ.nstr Court_Offense_Description_;
    KEL.typ.nstr Court_Offense_Additional_Description_;
    KEL.typ.nstr Court_Statute_;
    KEL.typ.nkdate Court_Disposition_Date_;
    KEL.typ.nint Court_Fine_;
    KEL.typ.nstr Suspended_Court_Fine_;
    KEL.typ.nint Court_Cost_;
    KEL.typ.nstr Court_Disposition_Code_;
    KEL.typ.nstr Court_Disposition_Description_;
    KEL.typ.nstr Court_Additional_Disposition_Description_;
    KEL.typ.nkdate Date_Of_Appeal_;
    KEL.typ.nkdate Dateof_Verdict_;
    KEL.typ.nstr Offense_Town_;
    KEL.typ.nstr Persistent_Offense_Key_;
    KEL.typ.nkdate Court_Date_;
    KEL.typ.nstr Court_County_;
    KEL.typ.nstr Arrest_Offense_Level_Mapped_;
    KEL.typ.nstr Court_Offense_Level_Mapped_;
    KEL.typ.ndataset(B_Criminal_Offense_4(__in,__cfg).__ST239141_Layout) Offense_Charges_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Criminal_Data_Sources_Layout) Criminal_Data_Sources_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Court_Offense_Level_Layout) Court_Offense_Level_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Fcra_Data_Layout) Fcra_Data_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Conviction_Overrides_Layout) Conviction_Overrides_;
    KEL.typ.ndataset(E_Criminal_Offense(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Criminal_Offense().Typ) Offense_;
    KEL.typ.ndataset(E_Person_Offenses(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6499179(B_Criminal_Offense_4(__in,__cfg).__ST239094_Layout __EE6499173, E_Person_Offenses(__in,__cfg).Layout __EE6293425) := __EEQP(__EE6293425.Offense_,__EE6499173.UID);
  __ST1106665_Layout __JT6499179(B_Criminal_Offense_4(__in,__cfg).__ST239094_Layout __l, E_Person_Offenses(__in,__cfg).Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6499268 := JOIN(__EE6293425,__EE6499173,__JC6499179(RIGHT,LEFT),__JT6499179(RIGHT,LEFT),INNER,HASH);
  SHARED __ST1072505_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Criminal_Offense().Typ) Offense_;
    KEL.typ.ndataset(E_Person_Offenses(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.ndataset(B_Criminal_Offense_4(__in,__cfg).__ST239141_Layout) Offense_Charges_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1072505_Layout __ND6476853__Project(__ST1106665_Layout __PP6476849) := TRANSFORM
    SELF.UID := __PP6476849.Subject_;
    SELF.Data_Sources_ := __PP6476849.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP6476849.UID;
    SELF := __PP6476849;
  END;
  SHARED __EE6476914 := PROJECT(__EE6499268,__ND6476853__Project(LEFT));
  SHARED __ST1072604_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.bool Exp1_ := FALSE;
    KEL.typ.bool Exp2_ := FALSE;
    KEL.typ.bool Exp3_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1072604_Layout __ND6499288__Project(__ST1072505_Layout __PP6476915) := TRANSFORM
    __CC25348 := 2556;
    __BS6476926 := __T(__PP6476915.Offense_Charges_);
    SELF.Exp1_ := EXISTS(__BS6476926(__T(__AND(__OP2(__T(__PP6476915.Offense_Charges_).Is_Criminal_Count_,=,__CN(TRUE)),__AND(__OP2(__T(__PP6476915.Offense_Charges_).Age_In_Days_,<=,__CN(__CC25348)),__NOT(__NT(__T(__PP6476915.Offense_Charges_).Age_In_Days_)))))));
    __BS6499290 := __T(__PP6476915.Offense_Charges_);
    SELF.Exp2_ := EXISTS(__BS6499290(__T(__AND(__OP2(__T(__PP6476915.Offense_Charges_).Is_Felony_Non_F_C_R_A_,=,__CN(TRUE)),__AND(__OP2(__T(__PP6476915.Offense_Charges_).Age_In_Days_,<=,__CN(__CC25348)),__NOT(__NT(__T(__PP6476915.Offense_Charges_).Age_In_Days_)))))));
    __BS6499315 := __T(__PP6476915.Offense_Charges_);
    SELF.Exp3_ := EXISTS(__BS6499315(__T(__AND(__OP2(__T(__PP6476915.Offense_Charges_).Is_Non_Felony_Records_,=,__CN(TRUE)),__AND(__OP2(__T(__PP6476915.Offense_Charges_).Age_In_Days_,<=,__CN(__CC25348)),__NOT(__NT(__T(__PP6476915.Offense_Charges_).Age_In_Days_)))))));
    SELF := __PP6476915;
  END;
  SHARED __EE6499344 := PROJECT(__EE6476914,__ND6499288__Project(LEFT));
  SHARED __ST1072629_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6499366 := PROJECT(__CLEANANDDO(__EE6499344,TABLE(__EE6499344,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP,__EE6499344.Exp1_),KEL.typ.int C_O_U_N_T___Exp1__1_ := COUNT(GROUP,__EE6499344.Exp2_),KEL.typ.int C_O_U_N_T___Exp1__2_ := COUNT(GROUP,__EE6499344.Exp3_),UID},UID,MERGE)),__ST1072629_Layout);
  SHARED __ST1110553_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6477033(__ST1107910_Layout __EE6499075, __ST1072629_Layout __EE6499366) := __EEQP(__EE6499075.UID,__EE6499366.UID);
  __ST1110553_Layout __JT6477033(__ST1107910_Layout __l, __ST1072629_Layout __r) := TRANSFORM
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6477492 := JOIN(__EE6499075,__EE6499366,__JC6477033(LEFT,RIGHT),__JT6477033(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE6123708 := __ENH_Bankruptcy_4;
  SHARED __EE6123706 := __E_Person_Bankruptcy;
  SHARED __EE6295437 := __EE6123706(__NN(__EE6123706.Subject_) AND __NN(__EE6123706.Bankrupt_));
  SHARED __ST1105255_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST234192_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6412845(B_Bankruptcy_4(__in,__cfg).__ST234185_Layout __EE6123708, E_Person_Bankruptcy(__in,__cfg).Layout __EE6295437) := __EEQP(__EE6295437.Bankrupt_,__EE6123708.UID);
  __ST1105255_Layout __JT6412845(B_Bankruptcy_4(__in,__cfg).__ST234185_Layout __l, E_Person_Bankruptcy(__in,__cfg).Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6412920 := JOIN(__EE6295437,__EE6123708,__JC6412845(RIGHT,LEFT),__JT6412845(RIGHT,LEFT),INNER,HASH);
  SHARED __EE6414944 := __EE6412920;
  SHARED __ST1070430_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST234192_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1070430_Layout __ND6416503__Project(__ST1105255_Layout __PP6416499) := TRANSFORM
    SELF.UID := __PP6416499.Subject_;
    SELF.Data_Sources_ := __PP6416499.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP6416499.UID;
    SELF.Data_Sources__1_ := __PP6416499.Data_Sources_;
    SELF := __PP6416499;
  END;
  SHARED __EE6416676 := PROJECT(__EE6414944,__ND6416503__Project(LEFT));
  SHARED __ST1070589_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.nkdate C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1070589_Layout __ND6416681__Project(__ST1070430_Layout __PP6416677) := TRANSFORM
    __CC12990 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('bankruptcy_daily'))),__CN(__cfg.CurrentDate));
    SELF.C_U_R_R_E_N_T___D_A_T_E_ := __CC12990;
    SELF := __PP6416677;
  END;
  SHARED __EE6416688 := PROJECT(__EE6416676,__ND6416681__Project(LEFT));
  SHARED __ST1070626_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1070626_Layout __ND6416693__Project(__ST1070589_Layout __PP6416689) := TRANSFORM
    SELF.O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_ := __PP6416689.C_U_R_R_E_N_T___D_A_T_E_;
    SELF.O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_ := __PP6416689.C_U_R_R_E_N_T___D_A_T_E_;
    SELF := __PP6416689;
  END;
  SHARED __EE6416706 := PROJECT(__EE6416688,__ND6416693__Project(LEFT));
  SHARED __ST1113204_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6499370(__ST1110553_Layout __EE6477492, __ST1070626_Layout __EE6416706) := __EEQP(__EE6477492.UID,__EE6416706.UID);
  __ST1113204_Layout __JT6499370(__ST1110553_Layout __l, __ST1070626_Layout __r) := TRANSFORM
    SELF.U_I_D__3_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6499832 := JOIN(__EE6477492,__EE6416706,__JC6499370(LEFT,RIGHT),__JT6499370(LEFT,RIGHT),LEFT OUTER,HASH,KEEP(1));
  SHARED __ST1105646_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST234192_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.int Child_Sort_List_ := 0;
    KEL.typ.nbool Banko10_Year_;
    KEL.typ.nbool Banko1_Year_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nstr Case_Number__1_;
    KEL.typ.nstr Court_Code__1_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.str Modified_Disposition_ := '';
    KEL.typ.nint Status_Update_Age_In_Days_;
    KEL.typ.nstr T_M_S_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST1105646_Layout __JT6295544(__ST1105255_Layout __l, B_Bankruptcy_4(__in,__cfg).__ST586316_Layout __r) := TRANSFORM
    SELF.Case_Number__1_ := __r.Case_Number_;
    SELF.Court_Code__1_ := __r.Court_Code_;
    SELF.T_M_S_I_D__1_ := __r.T_M_S_I_D_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6295545 := NORMALIZE(__EE6412920,__T(LEFT.Best_Child_Record_),__JT6295544(LEFT,RIGHT));
  SHARED __ST1068421_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST234192_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.int Child_Sort_List_ := 0;
    KEL.typ.nbool Banko10_Year_;
    KEL.typ.nbool Banko1_Year_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nstr Case_Number__1_;
    KEL.typ.nstr Court_Code__1_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.str Modified_Disposition_ := '';
    KEL.typ.nint Status_Update_Age_In_Days_;
    KEL.typ.nstr T_M_S_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1068421_Layout __ND6295658__Project(__ST1105646_Layout __PP6295546) := TRANSFORM
    SELF.UID := __PP6295546.Subject_;
    SELF.Data_Sources_ := __PP6295546.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP6295546.UID;
    SELF.Data_Sources__1_ := __PP6295546.Data_Sources_;
    SELF := __PP6295546;
  END;
  SHARED __EE6295951 := PROJECT(__EE6295545,__ND6295658__Project(LEFT));
  SHARED __ST1068648_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.nbool Banko10_Year_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6295969 := PROJECT(__EE6295951,__ST1068648_Layout);
  SHARED __ST1068668_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6499857 := PROJECT(__CLEANANDDO(__EE6295969,TABLE(__EE6295969,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP,__T(__EE6295969.Banko10_Year_)),KEL.typ.int C_O_U_N_T___Exp1__1_ := COUNT(GROUP,__T(__EE6295969.Banko7_Year_)),UID},UID,MERGE)),__ST1068668_Layout);
  SHARED __ST1115857_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6477980(__ST1113204_Layout __EE6499832, __ST1068668_Layout __EE6499857) := __EEQP(__EE6499832.UID,__EE6499857.UID);
  __ST1115857_Layout __JT6477980(__ST1113204_Layout __l, __ST1068668_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Exp1__3_ := __r.C_O_U_N_T___Exp1_;
    SELF.C_O_U_N_T___Exp1__4_ := __r.C_O_U_N_T___Exp1__1_;
    SELF.U_I_D__4_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6478449 := JOIN(__EE6499832,__EE6499857,__JC6477980(LEFT,RIGHT),__JT6477980(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE6123016 := __ENH_Person_Property_4;
  SHARED __EE6123023 := __EE6123016(__NN(__EE6123016.Subject_));
  SHARED __ST1065748_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.bool Is_Ever_Owned_ := FALSE;
    KEL.typ.bool Is_Currently_Owned_ := FALSE;
    KEL.typ.bool Property_Is_Sold_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6122985 := PROJECT(__EE6123023,TRANSFORM(__ST1065748_Layout,SELF.UID := LEFT.Subject_,SELF := LEFT));
  SHARED __ST1065773_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6123014 := PROJECT(__CLEANANDDO(__EE6122985,TABLE(__EE6122985,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Person_Property_ := COUNT(GROUP,__EE6122985.Is_Ever_Owned_),KEL.typ.int C_O_U_N_T___Person_Property__1_ := COUNT(GROUP,__EE6122985.Is_Currently_Owned_),KEL.typ.int C_O_U_N_T___Person_Property__2_ := COUNT(GROUP,__EE6122985.Property_Is_Sold_),UID},UID,MERGE)),__ST1065773_Layout);
  SHARED __ST1118518_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6499861(__ST1115857_Layout __EE6478449, __ST1065773_Layout __EE6123014) := __EEQP(__EE6478449.UID,__EE6123014.UID);
  __ST1118518_Layout __JT6499861(__ST1115857_Layout __l, __ST1065773_Layout __r) := TRANSFORM
    SELF.U_I_D__5_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6500330 := JOIN(__EE6478449,__EE6123014,__JC6499861(LEFT,RIGHT),__JT6499861(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE6122963 := __ENH_Input_P_I_I_4;
  SHARED __ST1121180_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6500334(__ST1118518_Layout __EE6500330, B_Input_P_I_I_4(__in,__cfg).__ST274391_Layout __EE6122963) := __EEQP(__EE6500330.P_I_I_,__EE6122963.UID);
  __ST1121180_Layout __JT6500334(__ST1118518_Layout __l, B_Input_P_I_I_4(__in,__cfg).__ST274391_Layout __r) := TRANSFORM
    SELF.U_I_D__6_ := __r.UID;
    SELF.P___Inp_Cln_S_S_N__1_ := __r.P___Inp_Cln_S_S_N_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6500914 := JOIN(__EE6500330,__EE6122963,__JC6500334(LEFT,RIGHT),__JT6500334(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __EE6126287 := __E_Professional_License_Person;
  SHARED __EE6297689 := __EE6126287(__NN(__EE6126287.Prof_Lic_) AND __NN(__EE6126287.Subject_));
  SHARED __EE6126289 := __ENH_Professional_License_4;
  SHARED __EE6126298 := __EE6126289(__T(__AND(__EE6126289.Valid_Professional_License_,__EE6126289.Is_Active_)));
  SHARED __ST1077827_Layout := RECORD
    KEL.typ.ntyp(E_Professional_License().Typ) Prof_Lic_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ndataset(E_Professional_License_Person(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid UID;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr License_State_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nkdate Date_Created_;
    KEL.typ.nstr Legacy_Result_Code_;
    KEL.typ.ndataset(E_Professional_License(__in,__cfg).Source_Details_Layout) Source_Details_;
    KEL.typ.ndataset(E_Professional_License(__in,__cfg).License_Dates_Layout) License_Dates_;
    KEL.typ.ndataset(E_Professional_License(__in,__cfg).Status_Layout) Status_;
    KEL.typ.ndataset(E_Professional_License(__in,__cfg).License_Description_Layout) License_Description_;
    KEL.typ.ndataset(E_Professional_License(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.nbool Is_Active_;
    KEL.typ.nkdate Max_Expire_Date_;
    KEL.typ.nkdate Max_Issue_Date_;
    KEL.typ.nbool Valid_Professional_License_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6413998(E_Professional_License_Person(__in,__cfg).Layout __EE6297689, B_Professional_License_4(__in,__cfg).__ST243045_Layout __EE6126298) := __EEQP(__EE6297689.Prof_Lic_,__EE6126298.UID);
  __ST1077827_Layout __JT6413998(E_Professional_License_Person(__in,__cfg).Layout __l, B_Professional_License_4(__in,__cfg).__ST243045_Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6414050 := JOIN(__EE6297689,__EE6126298,__JC6413998(LEFT,RIGHT),__JT6413998(LEFT,RIGHT),INNER,HASH);
  SHARED __ST1148404_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6500918(__ST1121180_Layout __EE6500914, __ST1077827_Layout __EE6414050) := __EEQP(__EE6500914.UID,__EE6414050.Subject_);
  __ST1148404_Layout __Join__ST1148404_Layout(__ST1121180_Layout __r, DATASET(__ST1077827_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Professional_License_Person_ := __CN(__recs);
  END;
  SHARED __EE6501544 := DENORMALIZE(DISTRIBUTE(__EE6500914,HASH(UID)),DISTRIBUTE(__EE6414050,HASH(Subject_)),__JC6500918(LEFT,RIGHT),GROUP,__Join__ST1148404_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE6123230 := __ENH_Person_Inquiry_4;
  SHARED __EE6414908 := __EE6123230;
  SHARED __EE6419352 := __EE6414908(__NN(__EE6414908.Subject_));
  SHARED __ST1077928_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.str Method_ := '';
    KEL.typ.nint Product_Code_;
    KEL.typ.str Function_Description_ := '';
    KEL.typ.str Sub_Market_ := '';
    KEL.typ.str Vertical_ := '';
    KEL.typ.str Industry_ := '';
    KEL.typ.nkdate Inq_Date_;
    KEL.typ.nbool Is_Non_Fcra_Ok_;
    KEL.typ.nbool Is_Fcra_Ok_;
    KEL.typ.bool Is_Collection_ := FALSE;
    KEL.typ.bool Is_Batch_Monitoring_Method_ := FALSE;
    KEL.typ.nint Agein_Days_;
    KEL.typ.bool Exclude_Function_Description_ := FALSE;
    KEL.typ.bool Is_Auto_Srch_ := FALSE;
    KEL.typ.bool Is_Banking_ := FALSE;
    KEL.typ.bool Is_Communications_ := FALSE;
    KEL.typ.bool Is_High_Risk_ := FALSE;
    KEL.typ.bool Is_Mortgage_ := FALSE;
    KEL.typ.bool Is_Other_ := FALSE;
    KEL.typ.bool Is_Prepaid_Card_ := FALSE;
    KEL.typ.bool Is_Quiz_Provider_ := FALSE;
    KEL.typ.bool Is_Retail_ := FALSE;
    KEL.typ.bool Is_Retail_Payment_ := FALSE;
    KEL.typ.bool Is_Student_Loan_ := FALSE;
    KEL.typ.bool Is_Utility_ := FALSE;
    KEL.typ.nbool Seen___In___Five___Years_;
    KEL.typ.nbool Valid_Banking_;
    KEL.typ.nbool Valid_Communications_;
    KEL.typ.nbool Valid_Inquiries_;
    KEL.typ.nbool Valid_Retail_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6419369(B_Person_Inquiry_4(__in,__cfg).__ST242545_Layout __EE6419352, B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout __EE6419356) := __T(__AND(__EE6419356.Valid_Inquiries_,__EE6419356.Seen___In___Five___Years_));
  __ST1077928_Layout __JT6419369(B_Person_Inquiry_4(__in,__cfg).__ST242545_Layout __l, B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout __r) := TRANSFORM, SKIP(NOT(__JC6419369(__l,__r)))
    SELF.Transaction_I_D__1_ := __r.Transaction_I_D_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6419370 := NORMALIZE(__EE6419352,__T(LEFT.Gather_Inquiries_),__JT6419369(LEFT,RIGHT));
  SHARED __ST1152346_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6501548(__ST1148404_Layout __EE6501544, __ST1077928_Layout __EE6419370) := __EEQP(__EE6501544.UID,__EE6419370.Subject_);
  __ST1152346_Layout __Join__ST1152346_Layout(__ST1148404_Layout __r, DATASET(__ST1077928_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Inquiry_ := __CN(__recs);
  END;
  SHARED __EE6502247 := DENORMALIZE(DISTRIBUTE(__EE6501544,HASH(UID)),DISTRIBUTE(__EE6419370,HASH(Subject_)),__JC6501548(LEFT,RIGHT),GROUP,__Join__ST1152346_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE6126455 := __E_Household_Member;
  SHARED __EE6301660 := __EE6126455(__NN(__EE6126455.Subject_) AND __NN(__EE6126455.Household_));
  SHARED __EE6414911 := __EE6122961;
  SHARED __CC23158 := 'CORENOVSSN';
  SHARED __CC23160 := 'CORE';
  SHARED __EE6480855 := __EE6414911(__T(__OR(__OP2(__EE6414911.Lex_I_D_Segment_,=,__CN(__CC23158)),__OP2(__EE6414911.Lex_I_D_Segment_,=,__CN(__CC23160)))));
  SHARED __ST6441019_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources__1_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6481917 := PROJECT(__EE6480855,TRANSFORM(__ST6441019_Layout,SELF.Data_Sources__1_ := LEFT.Data_Sources_,SELF := LEFT));
  SHARED __ST6442011_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Household().Typ) Household_;
    KEL.typ.nint Version_;
    KEL.typ.ndataset(E_Household_Member(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources__1_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6481923(E_Household_Member(__in,__cfg).Layout __EE6301660, __ST6441019_Layout __EE6481917) := __EEQP(__EE6301660.Subject_,__EE6481917.UID);
  __ST6442011_Layout __JT6481923(E_Household_Member(__in,__cfg).Layout __l, __ST6441019_Layout __r) := TRANSFORM
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6482379 := JOIN(__EE6301660,__EE6481917,__JC6481923(LEFT,RIGHT),__JT6481923(LEFT,RIGHT),INNER,HASH);
  SHARED __EE6487317 := __EE6502247;
  SHARED __ST1156170_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST1156170_Layout __JT6487331(__ST1152346_Layout __l, E_Household(__in,__cfg).Layout __r) := TRANSFORM
    SELF.U_I_D__7_ := __r.UID;
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6487332 := NORMALIZE(__EE6487317,__T(LEFT.Verson_One_House_Holds_),__JT6487331(LEFT,RIGHT));
  SHARED __ST1156945_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Household().Typ) Household_;
    KEL.typ.nint Version_;
    KEL.typ.ndataset(E_Household_Member(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources__1_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Gender__1_;
    KEL.typ.nstr Lex_I_D_Segment__1_;
    KEL.typ.nstr Lex_I_D_Segment2__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth__1_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death__1_;
    KEL.typ.nstr Race__1_;
    KEL.typ.nstr Race_Description__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources__2_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data__1_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry__1_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish__1_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags__1_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive__1_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs__1_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted__1_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup__1_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted__1_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set__1_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data__1_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E__1_;
    KEL.typ.nkdate Best_D_O_B__1_;
    KEL.typ.nint Best_D_O_B_Age__1_;
    KEL.typ.nstr Curr_Addr_Full__1_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set__1_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current__1_;
    KEL.typ.nstr Current_Addr_Pre_Dir__1_;
    KEL.typ.nstr Current_Addr_Prim_Name__1_;
    KEL.typ.nstr Current_Addr_Prim_Rng__1_;
    KEL.typ.nstr Current_Addr_Sec_Rng__1_;
    KEL.typ.nstr Current_Addr_Sffx__1_;
    KEL.typ.nstr Current_Addr_Zip5__1_;
    KEL.typ.nstr Current_Postdirectional__1_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List__1_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre__1_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted__1_;
    KEL.typ.nstr L_T_D7_Y_New_Date__1_;
    KEL.typ.nstr L_T_D7_Y_Old_Date__1_;
    KEL.typ.nstr Ln_J7_Y_New_Date__1_;
    KEL.typ.nstr Ln_J7_Y_Old_Date__1_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date__1_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I__1_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y__1_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y__1_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y__1_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y__1_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y__1_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y__1_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y__1_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y__1_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y__1_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw__1_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw__1_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.str P___Lex_I_D_Seen_Flag__1_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources__1_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre__1_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set__1_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous__1_;
    KEL.typ.nstr Previous_Addr_Pre_Dir__1_;
    KEL.typ.nstr Previous_Addr_Prim_Name__1_;
    KEL.typ.nstr Previous_Addr_Prim_Rng__1_;
    KEL.typ.nstr Previous_Addr_Sec_Rng__1_;
    KEL.typ.nstr Previous_Addr_Sffx__1_;
    KEL.typ.nstr Previous_Addr_Zip5__1_;
    KEL.typ.nstr Previous_Postdirectional__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set__1_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set__1_;
    KEL.typ.nkdate Select_Age__1_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List__1_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates__1_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources__1_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates__1_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds__1_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__6_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.ntyp(E_Person().Typ) Subject__1_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__2_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Data_Sources_Layout) Data_Sources__3_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6488052(__ST6442011_Layout __EE6482379, __ST1156170_Layout __EE6487332) := __EEQP(__EE6487332.U_I_D__7_,__EE6482379.Household_) AND __T(__AND(__EEQ(__EE6487332.U_I_D__7_,__EE6482379.Household_),__OP2(__EE6482379.UID,<>,__EE6487332.UID)));
  __ST1156945_Layout __JT6488052(__ST6442011_Layout __l, __ST1156170_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF.Gender__1_ := __r.Gender_;
    SELF.Lex_I_D_Segment__1_ := __r.Lex_I_D_Segment_;
    SELF.Lex_I_D_Segment2__1_ := __r.Lex_I_D_Segment2_;
    SELF.Full_Name__1_ := __r.Full_Name_;
    SELF.Reported_Dates_Of_Birth__1_ := __r.Reported_Dates_Of_Birth_;
    SELF.Reported_Dates_Of_Death__1_ := __r.Reported_Dates_Of_Death_;
    SELF.Race__1_ := __r.Race_;
    SELF.Race_Description__1_ := __r.Race_Description_;
    SELF.Data_Sources__2_ := __r.Data_Sources_;
    SELF.Dunn_Data__1_ := __r.Dunn_Data_;
    SELF.Conceal_Carry__1_ := __r.Conceal_Carry_;
    SELF.Hunt_Fish__1_ := __r.Hunt_Fish_;
    SELF.Consumer_Statement_Flags__1_ := __r.Consumer_Statement_Flags_;
    SELF.Thrive__1_ := __r.Thrive_;
    SELF.Accident_Recs__1_ := __r.Accident_Recs_;
    SELF.Accident_Recs_Formatted__1_ := __r.Accident_Recs_Formatted_;
    SELF.Accident_Recs_Formatted_Dedup__1_ := __r.Accident_Recs_Formatted_Dedup_;
    SELF.Accident_Recs_Sorted__1_ := __r.Accident_Recs_Sorted_;
    SELF.Address_Hierarchy_Set__1_ := __r.Address_Hierarchy_Set_;
    SELF.All_Lien_Data__1_ := __r.All_Lien_Data_;
    SELF.B_U_I_L_D___D_A_T_E__1_ := __r.B_U_I_L_D___D_A_T_E_;
    SELF.Best_D_O_B__1_ := __r.Best_D_O_B_;
    SELF.Best_D_O_B_Age__1_ := __r.Best_D_O_B_Age_;
    SELF.Curr_Addr_Full__1_ := __r.Curr_Addr_Full_;
    SELF.Curr_Addr_Full_Set__1_ := __r.Curr_Addr_Full_Set_;
    SELF.Current__1_ := __r.Current_;
    SELF.Current_Addr_Pre_Dir__1_ := __r.Current_Addr_Pre_Dir_;
    SELF.Current_Addr_Prim_Name__1_ := __r.Current_Addr_Prim_Name_;
    SELF.Current_Addr_Prim_Rng__1_ := __r.Current_Addr_Prim_Rng_;
    SELF.Current_Addr_Sec_Rng__1_ := __r.Current_Addr_Sec_Rng_;
    SELF.Current_Addr_Sffx__1_ := __r.Current_Addr_Sffx_;
    SELF.Current_Addr_Zip5__1_ := __r.Current_Addr_Zip5_;
    SELF.Current_Postdirectional__1_ := __r.Current_Postdirectional_;
    SELF.Edu_Rec_Ver_Source_List__1_ := __r.Edu_Rec_Ver_Source_List_;
    SELF.Edu_Rec_Ver_Source_List_Pre__1_ := __r.Edu_Rec_Ver_Source_List_Pre_;
    SELF.Edu_Rec_Ver_Source_List_Sorted__1_ := __r.Edu_Rec_Ver_Source_List_Sorted_;
    SELF.Inquiries_Banking5_Y_Sorted__1_ := __r.Inquiries_Banking5_Y_Sorted_;
    SELF.Inquiries_Comm5_Y_Sorted__1_ := __r.Inquiries_Comm5_Y_Sorted_;
    SELF.L_T_D7_Y_New_Date__1_ := __r.L_T_D7_Y_New_Date_;
    SELF.L_T_D7_Y_Old_Date__1_ := __r.L_T_D7_Y_Old_Date_;
    SELF.Ln_J7_Y_New_Date__1_ := __r.Ln_J7_Y_New_Date_;
    SELF.Ln_J7_Y_Old_Date__1_ := __r.Ln_J7_Y_Old_Date_;
    SELF.Ln_J_L_T_D_Min_Old_Date__1_ := __r.Ln_J_L_T_D_Min_Old_Date_;
    SELF.P_I_I__1_ := __r.P_I_I_;
    SELF.P_L___Drg_Bk_New_Dt7_Y__1_ := __r.P_L___Drg_Bk_New_Dt7_Y_;
    SELF.P_L___Drg_Bk_Old_Dt7_Y__1_ := __r.P_L___Drg_Bk_Old_Dt7_Y_;
    SELF.P_L___Drg_L_T_D_Cnt7_Y__1_ := __r.P_L___Drg_L_T_D_Cnt7_Y_;
    SELF.P_L___Drg_L_T_D_New_Msnc7_Y__1_ := __r.P_L___Drg_L_T_D_New_Msnc7_Y_;
    SELF.P_L___Drg_L_T_D_Old_Msnc7_Y__1_ := __r.P_L___Drg_L_T_D_Old_Msnc7_Y_;
    SELF.P_L___Drg_Ln_J_Cnt7_Y__1_ := __r.P_L___Drg_Ln_J_Cnt7_Y_;
    SELF.P_L___Drg_Ln_J_New_Msnc7_Y__1_ := __r.P_L___Drg_Ln_J_New_Msnc7_Y_;
    SELF.P_L___Drg_Ln_J_Old_Dt7_Y__1_ := __r.P_L___Drg_Ln_J_Old_Dt7_Y_;
    SELF.P_L___Drg_Ln_J_Old_Msnc7_Y__1_ := __r.P_L___Drg_Ln_J_Old_Msnc7_Y_;
    SELF.P___Inp_Cln_Name_First_Raw__1_ := __r.P___Inp_Cln_Name_First_Raw_;
    SELF.P___Inp_Cln_Name_Last_Raw__1_ := __r.P___Inp_Cln_Name_Last_Raw_;
    SELF.P___Inp_Cln_S_S_N__1_ := __r.P___Inp_Cln_S_S_N_;
    SELF.P___Lex_I_D_Seen_Flag__1_ := __r.P___Lex_I_D_Seen_Flag_;
    SELF.Person_S_S_N_Match_Sources__1_ := __r.Person_S_S_N_Match_Sources_;
    SELF.Person_S_S_N_Match_Sources_Pre__1_ := __r.Person_S_S_N_Match_Sources_Pre_;
    SELF.Prev_Addr_Full_Set__1_ := __r.Prev_Addr_Full_Set_;
    SELF.Previous__1_ := __r.Previous_;
    SELF.Previous_Addr_Pre_Dir__1_ := __r.Previous_Addr_Pre_Dir_;
    SELF.Previous_Addr_Prim_Name__1_ := __r.Previous_Addr_Prim_Name_;
    SELF.Previous_Addr_Prim_Rng__1_ := __r.Previous_Addr_Prim_Rng_;
    SELF.Previous_Addr_Sec_Rng__1_ := __r.Previous_Addr_Sec_Rng_;
    SELF.Previous_Addr_Sffx__1_ := __r.Previous_Addr_Sffx_;
    SELF.Previous_Addr_Zip5__1_ := __r.Previous_Addr_Zip5_;
    SELF.Previous_Postdirectional__1_ := __r.Previous_Postdirectional_;
    SELF.Property_Data_Set__1_ := __r.Property_Data_Set_;
    SELF.Recent_Addr_Full_Set__1_ := __r.Recent_Addr_Full_Set_;
    SELF.Select_Age__1_ := __r.Select_Age_;
    SELF.Translated_Sources__1_ := __r.Translated_Sources_;
    SELF.Util_List_Pre__1_ := __r.Util_List_Pre_;
    SELF.Ver_Source_List__1_ := __r.Ver_Source_List_;
    SELF.Verified_First_Name_Sources__1_ := __r.Verified_First_Name_Sources_;
    SELF.Verified_First_Name_Sources_With_Dates__1_ := __r.Verified_First_Name_Sources_With_Dates_;
    SELF.Verified_Last_Name_Sources__1_ := __r.Verified_Last_Name_Sources_;
    SELF.Verified_Last_Name_Sources_With_Dates__1_ := __r.Verified_Last_Name_Sources_With_Dates_;
    SELF.Verson_One_House_Holds__1_ := __r.Verson_One_House_Holds_;
    SELF.U_I_D__2_ := __r.U_I_D__1_;
    SELF.U_I_D__3_ := __r.U_I_D__2_;
    SELF.U_I_D__4_ := __r.U_I_D__3_;
    SELF.U_I_D__5_ := __r.U_I_D__4_;
    SELF.U_I_D__6_ := __r.U_I_D__5_;
    SELF.U_I_D__7_ := __r.U_I_D__6_;
    SELF.Subject__1_ := __r.Subject_;
    SELF.P___Inp_Cln_S_S_N__2_ := __r.P___Inp_Cln_S_S_N__1_;
    SELF.U_I_D__8_ := __r.U_I_D__7_;
    SELF.Data_Sources__3_ := __r.Data_Sources__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6489389 := JOIN(__EE6487332,__EE6482379,__JC6488052(RIGHT,LEFT),__JT6488052(RIGHT,LEFT),INNER,HASH);
  SHARED __ST6447315_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE6489407 := PROJECT(TABLE(PROJECT(__EE6489389,__ST6447315_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Best_D_O_B_Age_,U_I_D__1_},UID,Best_D_O_B_Age_,U_I_D__1_,MERGE),__ST6447315_Layout);
  SHARED __ST6447336_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.ndataset(__ST6447315_Layout) Household_Member_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6489415(__ST1152346_Layout __EE6502247, __ST6447315_Layout __EE6489407) := __EEQP(__EE6502247.UID,__EE6489407.U_I_D__1_);
  __ST6447336_Layout __Join__ST6447336_Layout(__ST1152346_Layout __r, DATASET(__ST6447315_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Household_Member_ := __CN(__recs);
  END;
  SHARED __EE6490119 := DENORMALIZE(DISTRIBUTE(__EE6502247,HASH(UID)),DISTRIBUTE(__EE6489407,HASH(U_I_D__1_)),__JC6489415(LEFT,RIGHT),GROUP,__Join__ST6447336_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE6414947 := __EE6295437;
  SHARED __EE6414917 := __EE6123708;
  SHARED __ST1078565_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST234192_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6424573(E_Person_Bankruptcy(__in,__cfg).Layout __EE6414947, B_Bankruptcy_4(__in,__cfg).__ST234185_Layout __EE6414917) := __EEQP(__EE6414947.Bankrupt_,__EE6414917.UID);
  __ST1078565_Layout __JT6424573(E_Person_Bankruptcy(__in,__cfg).Layout __l, B_Bankruptcy_4(__in,__cfg).__ST234185_Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6424574 := JOIN(__EE6414947,__EE6414917,__JC6424573(LEFT,RIGHT),__JT6424573(LEFT,RIGHT),INNER,HASH);
  SHARED __ST1078704_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST234192_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.int Child_Sort_List_ := 0;
    KEL.typ.nbool Banko10_Year_;
    KEL.typ.nbool Banko1_Year_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nstr Case_Number__1_;
    KEL.typ.nstr Court_Code__1_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.str Modified_Disposition_ := '';
    KEL.typ.nint Status_Update_Age_In_Days_;
    KEL.typ.nstr T_M_S_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6424662(__ST1078565_Layout __EE6424574, B_Bankruptcy_4(__in,__cfg).__ST586316_Layout __EE6424652) := __T(__EE6424652.Banko10_Year_);
  __ST1078704_Layout __JT6424662(__ST1078565_Layout __l, B_Bankruptcy_4(__in,__cfg).__ST586316_Layout __r) := TRANSFORM, SKIP(NOT(__JC6424662(__l,__r)))
    SELF.Case_Number__1_ := __r.Case_Number_;
    SELF.Court_Code__1_ := __r.Court_Code_;
    SELF.T_M_S_I_D__1_ := __r.T_M_S_I_D_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6424663 := NORMALIZE(__EE6424574,__T(LEFT.Best_Child_Record_),__JT6424662(LEFT,RIGHT));
  SHARED __ST1167529_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.ndataset(__ST6447315_Layout) Household_Member_;
    KEL.typ.ndataset(__ST1078704_Layout) Person_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6490125(__ST6447336_Layout __EE6490119, __ST1078704_Layout __EE6424663) := __EEQP(__EE6490119.UID,__EE6424663.Subject_);
  __ST1167529_Layout __Join__ST1167529_Layout(__ST6447336_Layout __r, DATASET(__ST1078704_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Bankruptcy_ := __CN(__recs);
  END;
  SHARED __EE6490932 := DENORMALIZE(DISTRIBUTE(__EE6490119,HASH(UID)),DISTRIBUTE(__EE6424663,HASH(Subject_)),__JC6490125(LEFT,RIGHT),GROUP,__Join__ST1167529_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE6414959 := __EE6295437;
  SHARED __EE6414923 := __EE6123708;
  SHARED __EE6426753 := __EE6414923.Best_Child_Record_;
  __JC6426756(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout __EE6426753) := __T(__EE6426753.Banko10_Year_);
  SHARED __EE6426757 := __EE6414923(EXISTS(__CHILDJOINFILTER(__EE6426753,__JC6426756)));
  SHARED __EE6426827 := __EE6426757;
  SHARED __ST1079497_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST234192_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6426835(E_Person_Bankruptcy(__in,__cfg).Layout __EE6414959, B_Bankruptcy_4(__in,__cfg).__ST234185_Layout __EE6426827) := __EEQP(__EE6414959.Bankrupt_,__EE6426827.UID);
  __ST1079497_Layout __JT6426835(E_Person_Bankruptcy(__in,__cfg).Layout __l, B_Bankruptcy_4(__in,__cfg).__ST234185_Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6426836 := JOIN(__EE6414959,__EE6426827,__JC6426835(LEFT,RIGHT),__JT6426835(LEFT,RIGHT),INNER,HASH);
  SHARED __EE6426913 := __EE6426836;
  SHARED __ST1079112_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST234192_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_4(__in,__cfg).__ST586316_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.int Child_Sort_List_ := 0;
    KEL.typ.nbool Banko10_Year_;
    KEL.typ.nbool Banko1_Year_;
    KEL.typ.nbool Banko7_Year_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nstr Case_Number__1_;
    KEL.typ.nstr Court_Code__1_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.str Modified_Disposition_ := '';
    KEL.typ.nint Status_Update_Age_In_Days_;
    KEL.typ.nstr T_M_S_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST1079112_Layout __JT6426924(__ST1079497_Layout __l, B_Bankruptcy_4(__in,__cfg).__ST586316_Layout __r) := TRANSFORM
    SELF.Case_Number__1_ := __r.Case_Number_;
    SELF.Court_Code__1_ := __r.Court_Code_;
    SELF.T_M_S_I_D__1_ := __r.T_M_S_I_D_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6426925 := NORMALIZE(__EE6426913,__T(LEFT.Best_Child_Record_),__JT6426924(LEFT,RIGHT));
  SHARED __ST1174418_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.ndataset(__ST6447315_Layout) Household_Member_;
    KEL.typ.ndataset(__ST1078704_Layout) Person_Bankruptcy_;
    KEL.typ.ndataset(__ST1079112_Layout) Person_Bankruptcy__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6490938(__ST1167529_Layout __EE6490932, __ST1079112_Layout __EE6426925) := __EEQP(__EE6490932.UID,__EE6426925.Subject_);
  __ST1174418_Layout __Join__ST1174418_Layout(__ST1167529_Layout __r, DATASET(__ST1079112_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Bankruptcy__1_ := __CN(__recs);
  END;
  SHARED __EE6491848 := DENORMALIZE(DISTRIBUTE(__EE6490932,HASH(UID)),DISTRIBUTE(__EE6426925,HASH(Subject_)),__JC6490938(LEFT,RIGHT),GROUP,__Join__ST1174418_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE6429107 := __EE6419352;
  SHARED __ST1079266_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.str Method_ := '';
    KEL.typ.nint Product_Code_;
    KEL.typ.str Function_Description_ := '';
    KEL.typ.str Sub_Market_ := '';
    KEL.typ.str Vertical_ := '';
    KEL.typ.str Industry_ := '';
    KEL.typ.nkdate Inq_Date_;
    KEL.typ.nbool Is_Non_Fcra_Ok_;
    KEL.typ.nbool Is_Fcra_Ok_;
    KEL.typ.bool Is_Collection_ := FALSE;
    KEL.typ.bool Is_Batch_Monitoring_Method_ := FALSE;
    KEL.typ.nint Agein_Days_;
    KEL.typ.bool Exclude_Function_Description_ := FALSE;
    KEL.typ.bool Is_Auto_Srch_ := FALSE;
    KEL.typ.bool Is_Banking_ := FALSE;
    KEL.typ.bool Is_Communications_ := FALSE;
    KEL.typ.bool Is_High_Risk_ := FALSE;
    KEL.typ.bool Is_Mortgage_ := FALSE;
    KEL.typ.bool Is_Other_ := FALSE;
    KEL.typ.bool Is_Prepaid_Card_ := FALSE;
    KEL.typ.bool Is_Quiz_Provider_ := FALSE;
    KEL.typ.bool Is_Retail_ := FALSE;
    KEL.typ.bool Is_Retail_Payment_ := FALSE;
    KEL.typ.bool Is_Student_Loan_ := FALSE;
    KEL.typ.bool Is_Utility_ := FALSE;
    KEL.typ.nbool Seen___In___Five___Years_;
    KEL.typ.nbool Valid_Banking_;
    KEL.typ.nbool Valid_Communications_;
    KEL.typ.nbool Valid_Inquiries_;
    KEL.typ.nbool Valid_Retail_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6429124(B_Person_Inquiry_4(__in,__cfg).__ST242545_Layout __EE6429107, B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout __EE6429111) := __T(__AND(__EE6429111.Valid_Retail_,__EE6429111.Seen___In___Five___Years_));
  __ST1079266_Layout __JT6429124(B_Person_Inquiry_4(__in,__cfg).__ST242545_Layout __l, B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout __r) := TRANSFORM, SKIP(NOT(__JC6429124(__l,__r)))
    SELF.Transaction_I_D__1_ := __r.Transaction_I_D_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6429125 := NORMALIZE(__EE6429107,__T(LEFT.Gather_Inquiries_),__JT6429124(LEFT,RIGHT));
  SHARED __ST1181516_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.ndataset(__ST6447315_Layout) Household_Member_;
    KEL.typ.ndataset(__ST1078704_Layout) Person_Bankruptcy_;
    KEL.typ.ndataset(__ST1079112_Layout) Person_Bankruptcy__1_;
    KEL.typ.ndataset(__ST1079266_Layout) Person_Inquiry__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6491854(__ST1174418_Layout __EE6491848, __ST1079266_Layout __EE6429125) := __EEQP(__EE6491848.UID,__EE6429125.Subject_);
  __ST1181516_Layout __Join__ST1181516_Layout(__ST1174418_Layout __r, DATASET(__ST1079266_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Inquiry__1_ := __CN(__recs);
  END;
  SHARED __EE6492837 := DENORMALIZE(DISTRIBUTE(__EE6491848,HASH(UID)),DISTRIBUTE(__EE6429125,HASH(Subject_)),__JC6491854(LEFT,RIGHT),GROUP,__Join__ST1181516_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE6431346 := __EE6426925;
  SHARED __ST1188811_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.ndataset(__ST6447315_Layout) Household_Member_;
    KEL.typ.ndataset(__ST1078704_Layout) Person_Bankruptcy_;
    KEL.typ.ndataset(__ST1079112_Layout) Person_Bankruptcy__1_;
    KEL.typ.ndataset(__ST1079266_Layout) Person_Inquiry__1_;
    KEL.typ.ndataset(__ST1079112_Layout) Person_Bankruptcy__2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6492843(__ST1181516_Layout __EE6492837, __ST1079112_Layout __EE6431346) := __EEQP(__EE6492837.UID,__EE6431346.Subject_);
  __ST1188811_Layout __Join__ST1188811_Layout(__ST1181516_Layout __r, DATASET(__ST1079112_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Bankruptcy__2_ := __CN(__recs);
  END;
  SHARED __EE6493929 := DENORMALIZE(DISTRIBUTE(__EE6492837,HASH(UID)),DISTRIBUTE(__EE6431346,HASH(Subject_)),__JC6492843(LEFT,RIGHT),GROUP,__Join__ST1188811_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __EE6123232 := __ENH_Inquiry_4;
  SHARED __EE6327494 := __EE6123230(__NN(__EE6123230.Subject_) AND __NN(__EE6123230.Transaction_));
  SHARED __ST1104527_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Search_Info_Layout) Search_Info_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Permissions_Layout) Permissions_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Bus_Intel_Layout) Bus_Intel_;
    KEL.typ.ndataset(B_Inquiry_4(__in,__cfg).__ST240607_Layout) Person_Info_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Business_Info_Layout) Business_Info_;
    KEL.typ.nint Fraudpoint_Score_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nint Agein_Days_;
    KEL.typ.str Inquiry_Function_Description_ := '';
    KEL.typ.str Inquiry_Industry_ := '';
    KEL.typ.str Inquiry_Method_ := '';
    KEL.typ.nint Inquiry_Product_Code_;
    KEL.typ.str Inquiry_Sub_Market_ := '';
    KEL.typ.str Inquiry_Vertical_ := '';
    KEL.typ.bool Is_Batch_Monitoring_Method_ := FALSE;
    KEL.typ.bool Is_Collection_ := FALSE;
    KEL.typ.nbool Is_Fcra_Ok_;
    KEL.typ.bool Is_Length_Sub_Market_ := FALSE;
    KEL.typ.nbool Is_Non_Fcra_Ok_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nstr Sequence_Number__1_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6414054(B_Inquiry_4(__in,__cfg).__ST240580_Layout __EE6123232, B_Person_Inquiry_4(__in,__cfg).__ST242545_Layout __EE6327494) := __EEQP(__EE6327494.Transaction_,__EE6123232.UID);
  __ST1104527_Layout __JT6414054(B_Inquiry_4(__in,__cfg).__ST240580_Layout __l, B_Person_Inquiry_4(__in,__cfg).__ST242545_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__1_ := __r.Transaction_I_D_;
    SELF.Sequence_Number__1_ := __r.Sequence_Number_;
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6414176 := JOIN(__EE6327494,__EE6123232,__JC6414054(RIGHT,LEFT),__JT6414054(RIGHT,LEFT),INNER,HASH);
  SHARED __ST1104859_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Search_Info_Layout) Search_Info_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Permissions_Layout) Permissions_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Bus_Intel_Layout) Bus_Intel_;
    KEL.typ.ndataset(B_Inquiry_4(__in,__cfg).__ST240607_Layout) Person_Info_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Business_Info_Layout) Business_Info_;
    KEL.typ.nint Fraudpoint_Score_;
    KEL.typ.ndataset(E_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nint Agein_Days_;
    KEL.typ.str Inquiry_Function_Description_ := '';
    KEL.typ.str Inquiry_Industry_ := '';
    KEL.typ.str Inquiry_Method_ := '';
    KEL.typ.nint Inquiry_Product_Code_;
    KEL.typ.str Inquiry_Sub_Market_ := '';
    KEL.typ.str Inquiry_Vertical_ := '';
    KEL.typ.bool Is_Batch_Monitoring_Method_ := FALSE;
    KEL.typ.bool Is_Collection_ := FALSE;
    KEL.typ.nbool Is_Fcra_Ok_;
    KEL.typ.bool Is_Length_Sub_Market_ := FALSE;
    KEL.typ.nbool Is_Non_Fcra_Ok_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nstr Sequence_Number__1_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6327654(__ST1104527_Layout __EE6414176, B_Inquiry_4(__in,__cfg).__ST240607_Layout __EE6327637) := __T(__OP2(__EE6327637.Lex_I_D_,=,__EE6414176.Subject_));
  __ST1104859_Layout __JT6327654(__ST1104527_Layout __l, B_Inquiry_4(__in,__cfg).__ST240607_Layout __r) := TRANSFORM, SKIP(NOT(__JC6327654(__l,__r)))
    SELF.Transaction_I_D__2_ := __r.Transaction_I_D_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6327655 := NORMALIZE(__EE6414176,__T(LEFT.Person_Info_),__JT6327654(LEFT,RIGHT));
  SHARED __ST1033906_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1033906_Layout __ND6327794__Project(__ST1104859_Layout __PP6327656) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6327656.Transaction_I_D__1_;
    SELF.Sequence_Number_ := __PP6327656.Sequence_Number__1_;
    SELF.Data_Sources_ := __PP6327656.Data_Sources__1_;
    SELF.Transaction_I_D__1_ := __PP6327656.Transaction_I_D__2_;
    SELF.U_I_D__1_ := __PP6327656.Subject_;
    SELF := __PP6327656;
  END;
  SHARED __EE6327971 := PROJECT(__EE6327655,__ND6327794__Project(LEFT));
  SHARED __EE6327977 := __EE6327971(__T(__EE6327971.Is_Valid_Velocity_Inquiry_F_C_R_A_));
  SHARED __EE6329083 := __EE6327971;
  SHARED __EE6329094 := __EE6329083(__T(__AND(__EE6329083.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6329083.Secondary_Range_)))));
  SHARED __EE6329864 := __EE6327977;
  __JC6329878(__ST1033906_Layout __EE6329094, __ST1033906_Layout __EE6329864) := __EEQP(__EE6329864.Transaction_I_D_,__EE6329094.Transaction_I_D_) AND __EEQP(__EE6329864.U_I_D__1_,__EE6329094.U_I_D__1_);
  SHARED __EE6329879 := JOIN(__EE6329094,__EE6329864,__JC6329878(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1048764_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1048764_Layout __ND6456420__Project(__ST1033906_Layout __PP6329880) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6329880.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6329880.U_I_D__1_;
    SELF := __PP6329880;
  END;
  SHARED __EE6456421 := PROJECT(__EE6329879,__ND6456420__Project(LEFT));
  SHARED __EE6456495 := GROUP(KEL.Routines.SortChildren(__EE6456421,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6456505 := UNGROUP(TOPN(__EE6456495(__NN(__EE6456495.Secondary_Range_)),1, -__T(__EE6456495.Secondary_Range_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6330922 := __EE6327977;
  __JC6456515(__ST1048764_Layout __EE6456505, __ST1033906_Layout __EE6330922) := __EEQP(__EE6330922.U_I_D__1_,__EE6456505.____grp___U_I_D__1_) AND __EEQP(__EE6330922.Transaction_I_D_,__EE6456505.____grp___Transaction_I_D_);
  SHARED __EE6456579 := JOIN(__EE6456505,__EE6330922,__JC6456515(LEFT,RIGHT),TRANSFORM(__ST1048764_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1048385_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1048385_Layout __ND6456647__Project(__ST1048764_Layout __PP6456580) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6456580.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6456580.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6456580.Transaction_I_D_;
    SELF := __PP6456580;
  END;
  SHARED __EE6456724 := PROJECT(TABLE(PROJECT(__EE6456579,__ND6456647__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1048385_Layout);
  SHARED __ST1048439_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6456742 := PROJECT(__EE6456724,__ST1048439_Layout);
  SHARED __ST1048476_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6456760 := PROJECT(__EE6456742,TRANSFORM(__ST1048476_Layout,SELF.O_N_L_Y___Secondary_Range_ := LEFT.Secondary_Range_,SELF := LEFT));
  SHARED __ST1088823_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6456770(__ST1033906_Layout __EE6327977, __ST1048476_Layout __EE6456760) := __EEQP(__EE6327977.U_I_D__1_,__EE6456760.U_I_D__1_) AND __EEQP(__EE6327977.Transaction_I_D_,__EE6456760.Transaction_I_D_);
  __ST1088823_Layout __JT6456770(__ST1033906_Layout __l, __ST1048476_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__2_ := __r.Transaction_I_D_;
    SELF.U_I_D__2_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6456840 := JOIN(__EE6327977,__EE6456760,__JC6456770(LEFT,RIGHT),__JT6456770(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6332308 := __EE6327971;
  SHARED __EE6332319 := __EE6332308(__T(__AND(__EE6332308.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6332308.Suffix_)))));
  SHARED __EE6333089 := __EE6327977;
  __JC6333103(__ST1033906_Layout __EE6332319, __ST1033906_Layout __EE6333089) := __EEQP(__EE6333089.Transaction_I_D_,__EE6332319.Transaction_I_D_) AND __EEQP(__EE6333089.U_I_D__1_,__EE6332319.U_I_D__1_);
  SHARED __EE6333104 := JOIN(__EE6332319,__EE6333089,__JC6333103(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1047608_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1047608_Layout __ND6456911__Project(__ST1033906_Layout __PP6333105) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6333105.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6333105.U_I_D__1_;
    SELF := __PP6333105;
  END;
  SHARED __EE6456912 := PROJECT(__EE6333104,__ND6456911__Project(LEFT));
  SHARED __EE6456986 := GROUP(KEL.Routines.SortChildren(__EE6456912,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6456996 := UNGROUP(TOPN(__EE6456986(__NN(__EE6456986.Suffix_)),1, -__T(__EE6456986.Suffix_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6334147 := __EE6327977;
  __JC6457006(__ST1047608_Layout __EE6456996, __ST1033906_Layout __EE6334147) := __EEQP(__EE6334147.U_I_D__1_,__EE6456996.____grp___U_I_D__1_) AND __EEQP(__EE6334147.Transaction_I_D_,__EE6456996.____grp___Transaction_I_D_);
  SHARED __EE6457070 := JOIN(__EE6456996,__EE6334147,__JC6457006(LEFT,RIGHT),TRANSFORM(__ST1047608_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1047231_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1047231_Layout __ND6457138__Project(__ST1047608_Layout __PP6457071) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6457071.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6457071.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6457071.Transaction_I_D_;
    SELF := __PP6457071;
  END;
  SHARED __EE6457215 := PROJECT(TABLE(PROJECT(__EE6457070,__ND6457138__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1047231_Layout);
  SHARED __ST1047285_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Suffix_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6457233 := PROJECT(__EE6457215,__ST1047285_Layout);
  SHARED __ST1047322_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6457251 := PROJECT(__EE6457233,TRANSFORM(__ST1047322_Layout,SELF.O_N_L_Y___Suffix_ := LEFT.Suffix_,SELF := LEFT));
  SHARED __ST1089028_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6457265(__ST1088823_Layout __EE6456840, __ST1047322_Layout __EE6457251) := __EEQP(__EE6456840.Transaction_I_D_,__EE6457251.Transaction_I_D_) AND __EEQP(__EE6456840.U_I_D__1_,__EE6457251.U_I_D__1_);
  __ST1089028_Layout __JT6457265(__ST1088823_Layout __l, __ST1047322_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__3_ := __r.Transaction_I_D_;
    SELF.U_I_D__3_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6457338 := JOIN(__EE6456840,__EE6457251,__JC6457265(LEFT,RIGHT),__JT6457265(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6335536 := __EE6327971;
  SHARED __EE6335547 := __EE6335536(__T(__AND(__EE6335536.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6335536.Primary_Name_)))));
  SHARED __EE6336317 := __EE6327977;
  __JC6336331(__ST1033906_Layout __EE6335547, __ST1033906_Layout __EE6336317) := __EEQP(__EE6336317.Transaction_I_D_,__EE6335547.Transaction_I_D_) AND __EEQP(__EE6336317.U_I_D__1_,__EE6335547.U_I_D__1_);
  SHARED __EE6336332 := JOIN(__EE6335547,__EE6336317,__JC6336331(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1046461_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1046461_Layout __ND6457412__Project(__ST1033906_Layout __PP6336333) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6336333.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6336333.Transaction_I_D_;
    SELF := __PP6336333;
  END;
  SHARED __EE6457413 := PROJECT(__EE6336332,__ND6457412__Project(LEFT));
  SHARED __EE6457487 := GROUP(KEL.Routines.SortChildren(__EE6457413,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6457497 := UNGROUP(TOPN(__EE6457487(__NN(__EE6457487.Primary_Name_)),1, -__T(__EE6457487.Primary_Name_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6337375 := __EE6327977;
  __JC6457507(__ST1046461_Layout __EE6457497, __ST1033906_Layout __EE6337375) := __EEQP(__EE6337375.U_I_D__1_,__EE6457497.____grp___U_I_D__1_) AND __EEQP(__EE6337375.Transaction_I_D_,__EE6457497.____grp___Transaction_I_D_);
  SHARED __EE6457571 := JOIN(__EE6457497,__EE6337375,__JC6457507(LEFT,RIGHT),TRANSFORM(__ST1046461_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1046086_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1046086_Layout __ND6457639__Project(__ST1046461_Layout __PP6457572) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6457572.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6457572.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6457572.Transaction_I_D_;
    SELF := __PP6457572;
  END;
  SHARED __EE6457716 := PROJECT(TABLE(PROJECT(__EE6457571,__ND6457639__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1046086_Layout);
  SHARED __ST1046140_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6457734 := PROJECT(__EE6457716,__ST1046140_Layout);
  SHARED __ST1046177_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6457752 := PROJECT(__EE6457734,TRANSFORM(__ST1046177_Layout,SELF.O_N_L_Y___Primary_Name_ := LEFT.Primary_Name_,SELF := LEFT));
  SHARED __ST1089229_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6457766(__ST1089028_Layout __EE6457338, __ST1046177_Layout __EE6457752) := __EEQP(__EE6457338.Transaction_I_D_,__EE6457752.Transaction_I_D_) AND __EEQP(__EE6457338.U_I_D__1_,__EE6457752.U_I_D__1_);
  __ST1089229_Layout __JT6457766(__ST1089028_Layout __l, __ST1046177_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__4_ := __r.Transaction_I_D_;
    SELF.U_I_D__4_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6457842 := JOIN(__EE6457338,__EE6457752,__JC6457766(LEFT,RIGHT),__JT6457766(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6338767 := __EE6327971;
  SHARED __EE6338778 := __EE6338767(__T(__AND(__EE6338767.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6338767.Predirectional_)))));
  SHARED __EE6339548 := __EE6327977;
  __JC6339562(__ST1033906_Layout __EE6338778, __ST1033906_Layout __EE6339548) := __EEQP(__EE6339548.Transaction_I_D_,__EE6338778.Transaction_I_D_) AND __EEQP(__EE6339548.U_I_D__1_,__EE6338778.U_I_D__1_);
  SHARED __EE6339563 := JOIN(__EE6338778,__EE6339548,__JC6339562(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1045323_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1045323_Layout __ND6457919__Project(__ST1033906_Layout __PP6339564) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6339564.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6339564.Transaction_I_D_;
    SELF := __PP6339564;
  END;
  SHARED __EE6457920 := PROJECT(__EE6339563,__ND6457919__Project(LEFT));
  SHARED __EE6457994 := GROUP(KEL.Routines.SortChildren(__EE6457920,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6458004 := UNGROUP(TOPN(__EE6457994(__NN(__EE6457994.Predirectional_)),1, -__T(__EE6457994.Predirectional_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6340606 := __EE6327977;
  __JC6458014(__ST1045323_Layout __EE6458004, __ST1033906_Layout __EE6340606) := __EEQP(__EE6340606.U_I_D__1_,__EE6458004.____grp___U_I_D__1_) AND __EEQP(__EE6340606.Transaction_I_D_,__EE6458004.____grp___Transaction_I_D_);
  SHARED __EE6458078 := JOIN(__EE6458004,__EE6340606,__JC6458014(LEFT,RIGHT),TRANSFORM(__ST1045323_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1044950_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1044950_Layout __ND6458146__Project(__ST1045323_Layout __PP6458079) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6458079.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6458079.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6458079.Transaction_I_D_;
    SELF := __PP6458079;
  END;
  SHARED __EE6458223 := PROJECT(TABLE(PROJECT(__EE6458078,__ND6458146__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1044950_Layout);
  SHARED __ST1045004_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6458241 := PROJECT(__EE6458223,__ST1045004_Layout);
  SHARED __ST1045041_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6458259 := PROJECT(__EE6458241,TRANSFORM(__ST1045041_Layout,SELF.O_N_L_Y___Predirectional_ := LEFT.Predirectional_,SELF := LEFT));
  SHARED __ST1089426_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6458273(__ST1089229_Layout __EE6457842, __ST1045041_Layout __EE6458259) := __EEQP(__EE6457842.Transaction_I_D_,__EE6458259.Transaction_I_D_) AND __EEQP(__EE6457842.U_I_D__1_,__EE6458259.U_I_D__1_);
  __ST1089426_Layout __JT6458273(__ST1089229_Layout __l, __ST1045041_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__5_ := __r.Transaction_I_D_;
    SELF.U_I_D__5_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6458352 := JOIN(__EE6457842,__EE6458259,__JC6458273(LEFT,RIGHT),__JT6458273(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6342001 := __EE6327971;
  SHARED __EE6342012 := __EE6342001(__T(__AND(__EE6342001.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6342001.Primary_Range_)))));
  SHARED __EE6342782 := __EE6327977;
  __JC6342796(__ST1033906_Layout __EE6342012, __ST1033906_Layout __EE6342782) := __EEQP(__EE6342782.Transaction_I_D_,__EE6342012.Transaction_I_D_) AND __EEQP(__EE6342782.U_I_D__1_,__EE6342012.U_I_D__1_);
  SHARED __EE6342797 := JOIN(__EE6342012,__EE6342782,__JC6342796(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1044194_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1044194_Layout __ND6458432__Project(__ST1033906_Layout __PP6342798) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6342798.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6342798.Transaction_I_D_;
    SELF := __PP6342798;
  END;
  SHARED __EE6458433 := PROJECT(__EE6342797,__ND6458432__Project(LEFT));
  SHARED __EE6458507 := GROUP(KEL.Routines.SortChildren(__EE6458433,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6458517 := UNGROUP(TOPN(__EE6458507(__NN(__EE6458507.Primary_Range_)),1, -__T(__EE6458507.Primary_Range_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6343840 := __EE6327977;
  __JC6458527(__ST1044194_Layout __EE6458517, __ST1033906_Layout __EE6343840) := __EEQP(__EE6343840.U_I_D__1_,__EE6458517.____grp___U_I_D__1_) AND __EEQP(__EE6343840.Transaction_I_D_,__EE6458517.____grp___Transaction_I_D_);
  SHARED __EE6458591 := JOIN(__EE6458517,__EE6343840,__JC6458527(LEFT,RIGHT),TRANSFORM(__ST1044194_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1043823_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1043823_Layout __ND6458659__Project(__ST1044194_Layout __PP6458592) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6458592.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6458592.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6458592.Transaction_I_D_;
    SELF := __PP6458592;
  END;
  SHARED __EE6458736 := PROJECT(TABLE(PROJECT(__EE6458591,__ND6458659__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1043823_Layout);
  SHARED __ST1043877_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6458754 := PROJECT(__EE6458736,__ST1043877_Layout);
  SHARED __ST1043914_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6458772 := PROJECT(__EE6458754,TRANSFORM(__ST1043914_Layout,SELF.O_N_L_Y___Primary_Range_ := LEFT.Primary_Range_,SELF := LEFT));
  SHARED __ST1089619_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6458786(__ST1089426_Layout __EE6458352, __ST1043914_Layout __EE6458772) := __EEQP(__EE6458352.Transaction_I_D_,__EE6458772.Transaction_I_D_) AND __EEQP(__EE6458352.U_I_D__1_,__EE6458772.U_I_D__1_);
  __ST1089619_Layout __JT6458786(__ST1089426_Layout __l, __ST1043914_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__6_ := __r.Transaction_I_D_;
    SELF.U_I_D__6_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6458868 := JOIN(__EE6458352,__EE6458772,__JC6458786(LEFT,RIGHT),__JT6458786(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6345238 := __EE6327971;
  SHARED __EE6345249 := __EE6345238(__T(__AND(__EE6345238.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6345238.Date_Of_Birth_)))));
  SHARED __EE6346019 := __EE6327977;
  __JC6346033(__ST1033906_Layout __EE6345249, __ST1033906_Layout __EE6346019) := __EEQP(__EE6346019.Transaction_I_D_,__EE6345249.Transaction_I_D_) AND __EEQP(__EE6346019.U_I_D__1_,__EE6345249.U_I_D__1_);
  SHARED __EE6346034 := JOIN(__EE6345249,__EE6346019,__JC6346033(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1043074_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1043074_Layout __ND6458951__Project(__ST1033906_Layout __PP6346035) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6346035.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6346035.U_I_D__1_;
    SELF := __PP6346035;
  END;
  SHARED __EE6458952 := PROJECT(__EE6346034,__ND6458951__Project(LEFT));
  SHARED __EE6459026 := GROUP(KEL.Routines.SortChildren(__EE6458952,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6459036 := UNGROUP(TOPN(__EE6459026(__NN(__EE6459026.Date_Of_Birth_)),1, -__T(__EE6459026.Date_Of_Birth_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6347077 := __EE6327977;
  __JC6459046(__ST1043074_Layout __EE6459036, __ST1033906_Layout __EE6347077) := __EEQP(__EE6347077.U_I_D__1_,__EE6459036.____grp___U_I_D__1_) AND __EEQP(__EE6347077.Transaction_I_D_,__EE6459036.____grp___Transaction_I_D_);
  SHARED __EE6459110 := JOIN(__EE6459036,__EE6347077,__JC6459046(LEFT,RIGHT),TRANSFORM(__ST1043074_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1042705_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1042705_Layout __ND6459178__Project(__ST1043074_Layout __PP6459111) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6459111.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6459111.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6459111.Transaction_I_D_;
    SELF := __PP6459111;
  END;
  SHARED __EE6459255 := PROJECT(TABLE(PROJECT(__EE6459110,__ND6459178__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1042705_Layout);
  SHARED __ST1042759_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6459273 := PROJECT(__EE6459255,__ST1042759_Layout);
  SHARED __ST1042796_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6459291 := PROJECT(__EE6459273,TRANSFORM(__ST1042796_Layout,SELF.O_N_L_Y___Date_Of_Birth_ := LEFT.Date_Of_Birth_,SELF := LEFT));
  SHARED __ST1089808_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6459305(__ST1089619_Layout __EE6458868, __ST1042796_Layout __EE6459291) := __EEQP(__EE6458868.Transaction_I_D_,__EE6459291.Transaction_I_D_) AND __EEQP(__EE6458868.U_I_D__1_,__EE6459291.U_I_D__1_);
  __ST1089808_Layout __JT6459305(__ST1089619_Layout __l, __ST1042796_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__7_ := __r.Transaction_I_D_;
    SELF.U_I_D__7_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6459390 := JOIN(__EE6458868,__EE6459291,__JC6459305(LEFT,RIGHT),__JT6459305(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6348478 := __EE6327971;
  SHARED __EE6348489 := __EE6348478(__T(__AND(__EE6348478.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6348478.Personal_Phone_Number_)))));
  SHARED __EE6349259 := __EE6327977;
  __JC6349273(__ST1033906_Layout __EE6348489, __ST1033906_Layout __EE6349259) := __EEQP(__EE6349259.Transaction_I_D_,__EE6348489.Transaction_I_D_) AND __EEQP(__EE6349259.U_I_D__1_,__EE6348489.U_I_D__1_);
  SHARED __EE6349274 := JOIN(__EE6348489,__EE6349259,__JC6349273(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1041963_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1041963_Layout __ND6459476__Project(__ST1033906_Layout __PP6349275) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6349275.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6349275.Transaction_I_D_;
    SELF := __PP6349275;
  END;
  SHARED __EE6459477 := PROJECT(__EE6349274,__ND6459476__Project(LEFT));
  SHARED __EE6459551 := GROUP(KEL.Routines.SortChildren(__EE6459477,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6459561 := UNGROUP(TOPN(__EE6459551(__NN(__EE6459551.Personal_Phone_Number_)),1, -__T(__EE6459551.Personal_Phone_Number_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6350317 := __EE6327977;
  __JC6459571(__ST1041963_Layout __EE6459561, __ST1033906_Layout __EE6350317) := __EEQP(__EE6350317.U_I_D__1_,__EE6459561.____grp___U_I_D__1_) AND __EEQP(__EE6350317.Transaction_I_D_,__EE6459561.____grp___Transaction_I_D_);
  SHARED __EE6459635 := JOIN(__EE6459561,__EE6350317,__JC6459571(LEFT,RIGHT),TRANSFORM(__ST1041963_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1041596_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1041596_Layout __ND6459703__Project(__ST1041963_Layout __PP6459636) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6459636.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6459636.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6459636.Transaction_I_D_;
    SELF := __PP6459636;
  END;
  SHARED __EE6459780 := PROJECT(TABLE(PROJECT(__EE6459635,__ND6459703__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1041596_Layout);
  SHARED __ST1041650_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6459798 := PROJECT(__EE6459780,__ST1041650_Layout);
  SHARED __ST1041687_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6459816 := PROJECT(__EE6459798,TRANSFORM(__ST1041687_Layout,SELF.O_N_L_Y___Personal_Phone_Number_ := LEFT.Personal_Phone_Number_,SELF := LEFT));
  SHARED __ST1089993_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6459830(__ST1089808_Layout __EE6459390, __ST1041687_Layout __EE6459816) := __EEQP(__EE6459390.Transaction_I_D_,__EE6459816.Transaction_I_D_) AND __EEQP(__EE6459390.U_I_D__1_,__EE6459816.U_I_D__1_);
  __ST1089993_Layout __JT6459830(__ST1089808_Layout __l, __ST1041687_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__8_ := __r.Transaction_I_D_;
    SELF.U_I_D__8_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6459918 := JOIN(__EE6459390,__EE6459816,__JC6459830(LEFT,RIGHT),__JT6459830(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6351721 := __EE6327971;
  SHARED __EE6351732 := __EE6351721(__T(__AND(__EE6351721.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6351721.First_Name_)))));
  SHARED __EE6352502 := __EE6327977;
  __JC6352516(__ST1033906_Layout __EE6351732, __ST1033906_Layout __EE6352502) := __EEQP(__EE6352502.Transaction_I_D_,__EE6351732.Transaction_I_D_) AND __EEQP(__EE6352502.U_I_D__1_,__EE6351732.U_I_D__1_);
  SHARED __EE6352517 := JOIN(__EE6351732,__EE6352502,__JC6352516(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1040861_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1040861_Layout __ND6460007__Project(__ST1033906_Layout __PP6352518) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6352518.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6352518.Transaction_I_D_;
    SELF := __PP6352518;
  END;
  SHARED __EE6460008 := PROJECT(__EE6352517,__ND6460007__Project(LEFT));
  SHARED __EE6460082 := GROUP(KEL.Routines.SortChildren(__EE6460008,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6460092 := UNGROUP(TOPN(__EE6460082(__NN(__EE6460082.First_Name_)),1, -__T(__EE6460082.First_Name_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6353560 := __EE6327977;
  __JC6460102(__ST1040861_Layout __EE6460092, __ST1033906_Layout __EE6353560) := __EEQP(__EE6353560.U_I_D__1_,__EE6460092.____grp___U_I_D__1_) AND __EEQP(__EE6353560.Transaction_I_D_,__EE6460092.____grp___Transaction_I_D_);
  SHARED __EE6460166 := JOIN(__EE6460092,__EE6353560,__JC6460102(LEFT,RIGHT),TRANSFORM(__ST1040861_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1040496_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1040496_Layout __ND6460234__Project(__ST1040861_Layout __PP6460167) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6460167.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6460167.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6460167.Transaction_I_D_;
    SELF := __PP6460167;
  END;
  SHARED __EE6460311 := PROJECT(TABLE(PROJECT(__EE6460166,__ND6460234__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1040496_Layout);
  SHARED __ST1040550_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr First_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6460329 := PROJECT(__EE6460311,__ST1040550_Layout);
  SHARED __ST1040587_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6460347 := PROJECT(__EE6460329,TRANSFORM(__ST1040587_Layout,SELF.O_N_L_Y___First_Name_ := LEFT.First_Name_,SELF := LEFT));
  SHARED __ST1090174_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6460361(__ST1089993_Layout __EE6459918, __ST1040587_Layout __EE6460347) := __EEQP(__EE6459918.Transaction_I_D_,__EE6460347.Transaction_I_D_) AND __EEQP(__EE6459918.U_I_D__1_,__EE6460347.U_I_D__1_);
  __ST1090174_Layout __JT6460361(__ST1089993_Layout __l, __ST1040587_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__9_ := __r.Transaction_I_D_;
    SELF.U_I_D__9_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6460452 := JOIN(__EE6459918,__EE6460347,__JC6460361(LEFT,RIGHT),__JT6460361(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6354967 := __EE6327971;
  SHARED __EE6354978 := __EE6354967(__T(__AND(__EE6354967.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6354967.Last_Name_)))));
  SHARED __EE6355748 := __EE6327977;
  __JC6355762(__ST1033906_Layout __EE6354978, __ST1033906_Layout __EE6355748) := __EEQP(__EE6355748.Transaction_I_D_,__EE6354978.Transaction_I_D_) AND __EEQP(__EE6355748.U_I_D__1_,__EE6354978.U_I_D__1_);
  SHARED __EE6355763 := JOIN(__EE6354978,__EE6355748,__JC6355762(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1039768_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1039768_Layout __ND6460544__Project(__ST1033906_Layout __PP6355764) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6355764.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6355764.U_I_D__1_;
    SELF := __PP6355764;
  END;
  SHARED __EE6460545 := PROJECT(__EE6355763,__ND6460544__Project(LEFT));
  SHARED __EE6460619 := GROUP(KEL.Routines.SortChildren(__EE6460545,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6460629 := UNGROUP(TOPN(__EE6460619(__NN(__EE6460619.Last_Name_)),1, -__T(__EE6460619.Last_Name_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6356806 := __EE6327977;
  __JC6460639(__ST1039768_Layout __EE6460629, __ST1033906_Layout __EE6356806) := __EEQP(__EE6356806.U_I_D__1_,__EE6460629.____grp___U_I_D__1_) AND __EEQP(__EE6356806.Transaction_I_D_,__EE6460629.____grp___Transaction_I_D_);
  SHARED __EE6460703 := JOIN(__EE6460629,__EE6356806,__JC6460639(LEFT,RIGHT),TRANSFORM(__ST1039768_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1039405_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1039405_Layout __ND6460771__Project(__ST1039768_Layout __PP6460704) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6460704.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6460704.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6460704.Transaction_I_D_;
    SELF := __PP6460704;
  END;
  SHARED __EE6460848 := PROJECT(TABLE(PROJECT(__EE6460703,__ND6460771__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1039405_Layout);
  SHARED __ST1039459_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6460866 := PROJECT(__EE6460848,__ST1039459_Layout);
  SHARED __ST1039496_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6460884 := PROJECT(__EE6460866,TRANSFORM(__ST1039496_Layout,SELF.O_N_L_Y___Last_Name_ := LEFT.Last_Name_,SELF := LEFT));
  SHARED __ST1090351_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.nstr Transaction_I_D__10_;
    KEL.typ.nuid U_I_D__10_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6460898(__ST1090174_Layout __EE6460452, __ST1039496_Layout __EE6460884) := __EEQP(__EE6460452.Transaction_I_D_,__EE6460884.Transaction_I_D_) AND __EEQP(__EE6460452.U_I_D__1_,__EE6460884.U_I_D__1_);
  __ST1090351_Layout __JT6460898(__ST1090174_Layout __l, __ST1039496_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__10_ := __r.Transaction_I_D_;
    SELF.U_I_D__10_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6460992 := JOIN(__EE6460452,__EE6460884,__JC6460898(LEFT,RIGHT),__JT6460898(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6358216 := __EE6327971;
  SHARED __EE6358227 := __EE6358216(__T(__AND(__EE6358216.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6358216.Z_I_P5_)))));
  SHARED __EE6358997 := __EE6327977;
  __JC6359011(__ST1033906_Layout __EE6358227, __ST1033906_Layout __EE6358997) := __EEQP(__EE6358997.Transaction_I_D_,__EE6358227.Transaction_I_D_) AND __EEQP(__EE6358997.U_I_D__1_,__EE6358227.U_I_D__1_);
  SHARED __EE6359012 := JOIN(__EE6358227,__EE6358997,__JC6359011(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1038684_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1038684_Layout __ND6461087__Project(__ST1033906_Layout __PP6359013) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6359013.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6359013.Transaction_I_D_;
    SELF := __PP6359013;
  END;
  SHARED __EE6461088 := PROJECT(__EE6359012,__ND6461087__Project(LEFT));
  SHARED __EE6461162 := GROUP(KEL.Routines.SortChildren(__EE6461088,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6461172 := UNGROUP(TOPN(__EE6461162(__NN(__EE6461162.Z_I_P5_)),1, -__T(__EE6461162.Z_I_P5_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6360055 := __EE6327977;
  __JC6461182(__ST1038684_Layout __EE6461172, __ST1033906_Layout __EE6360055) := __EEQP(__EE6360055.U_I_D__1_,__EE6461172.____grp___U_I_D__1_) AND __EEQP(__EE6360055.Transaction_I_D_,__EE6461172.____grp___Transaction_I_D_);
  SHARED __EE6461246 := JOIN(__EE6461172,__EE6360055,__JC6461182(LEFT,RIGHT),TRANSFORM(__ST1038684_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1038323_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1038323_Layout __ND6461314__Project(__ST1038684_Layout __PP6461247) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6461247.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6461247.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6461247.Transaction_I_D_;
    SELF := __PP6461247;
  END;
  SHARED __EE6461391 := PROJECT(TABLE(PROJECT(__EE6461246,__ND6461314__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1038323_Layout);
  SHARED __ST1038377_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6461409 := PROJECT(__EE6461391,__ST1038377_Layout);
  SHARED __ST1038414_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6461427 := PROJECT(__EE6461409,TRANSFORM(__ST1038414_Layout,SELF.O_N_L_Y___Z_I_P5_ := LEFT.Z_I_P5_,SELF := LEFT));
  SHARED __ST1090524_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.nstr Transaction_I_D__10_;
    KEL.typ.nuid U_I_D__10_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.nstr Transaction_I_D__11_;
    KEL.typ.nuid U_I_D__11_;
    KEL.typ.nstr O_N_L_Y___Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6461441(__ST1090351_Layout __EE6460992, __ST1038414_Layout __EE6461427) := __EEQP(__EE6460992.Transaction_I_D_,__EE6461427.Transaction_I_D_) AND __EEQP(__EE6460992.U_I_D__1_,__EE6461427.U_I_D__1_);
  __ST1090524_Layout __JT6461441(__ST1090351_Layout __l, __ST1038414_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__11_ := __r.Transaction_I_D_;
    SELF.U_I_D__11_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6461538 := JOIN(__EE6460992,__EE6461427,__JC6461441(LEFT,RIGHT),__JT6461441(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6361468 := __EE6327971;
  SHARED __EE6361479 := __EE6361468(__T(__AND(__EE6361468.Is_Valid_Velocity_Inquiry_F_C_R_A_,__NOT(__NT(__EE6361468.S_S_N_)))));
  SHARED __EE6362249 := __EE6327977;
  __JC6362263(__ST1033906_Layout __EE6361479, __ST1033906_Layout __EE6362249) := __EEQP(__EE6362249.Transaction_I_D_,__EE6361479.Transaction_I_D_) AND __EEQP(__EE6362249.U_I_D__1_,__EE6361479.U_I_D__1_);
  SHARED __EE6362264 := JOIN(__EE6361479,__EE6362249,__JC6362263(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1037610_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1037610_Layout __ND6461636__Project(__ST1033906_Layout __PP6362265) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6362265.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6362265.Transaction_I_D_;
    SELF := __PP6362265;
  END;
  SHARED __EE6461637 := PROJECT(__EE6362264,__ND6461636__Project(LEFT));
  SHARED __EE6461711 := GROUP(KEL.Routines.SortChildren(__EE6461637,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6461721 := UNGROUP(TOPN(__EE6461711(__NN(__EE6461711.S_S_N_)),1, -__T(__EE6461711.S_S_N_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6363307 := __EE6327977;
  __JC6461731(__ST1037610_Layout __EE6461721, __ST1033906_Layout __EE6363307) := __EEQP(__EE6363307.U_I_D__1_,__EE6461721.____grp___U_I_D__1_) AND __EEQP(__EE6363307.Transaction_I_D_,__EE6461721.____grp___Transaction_I_D_);
  SHARED __EE6461795 := JOIN(__EE6461721,__EE6363307,__JC6461731(LEFT,RIGHT),TRANSFORM(__ST1037610_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1037237_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1037237_Layout __ND6461863__Project(__ST1037610_Layout __PP6461796) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6461796.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6461796.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6461796.Transaction_I_D_;
    SELF := __PP6461796;
  END;
  SHARED __EE6461940 := PROJECT(TABLE(PROJECT(__EE6461795,__ND6461863__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1037237_Layout);
  SHARED __ST1037291_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6461958 := PROJECT(__EE6461940,__ST1037291_Layout);
  SHARED __ST1037328_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___S_S_N_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6461976 := PROJECT(__EE6461958,TRANSFORM(__ST1037328_Layout,SELF.O_N_L_Y___S_S_N_ := LEFT.S_S_N_,SELF := LEFT));
  SHARED __ST1090693_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.nstr Transaction_I_D__10_;
    KEL.typ.nuid U_I_D__10_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.nstr Transaction_I_D__11_;
    KEL.typ.nuid U_I_D__11_;
    KEL.typ.nstr O_N_L_Y___Z_I_P5_;
    KEL.typ.nstr Transaction_I_D__12_;
    KEL.typ.nuid U_I_D__12_;
    KEL.typ.nstr O_N_L_Y___S_S_N_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6461990(__ST1090524_Layout __EE6461538, __ST1037328_Layout __EE6461976) := __EEQP(__EE6461538.Transaction_I_D_,__EE6461976.Transaction_I_D_) AND __EEQP(__EE6461538.U_I_D__1_,__EE6461976.U_I_D__1_);
  __ST1090693_Layout __JT6461990(__ST1090524_Layout __l, __ST1037328_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__12_ := __r.Transaction_I_D_;
    SELF.U_I_D__12_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6462090 := JOIN(__EE6461538,__EE6461976,__JC6461990(LEFT,RIGHT),__JT6461990(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __ST6463407_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.nstr O_N_L_Y___Z_I_P5_;
    KEL.typ.nstr O_N_L_Y___S_S_N_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE6463422 := PROJECT(TABLE(PROJECT(__EE6462090,__ST6463407_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,O_N_L_Y___Secondary_Range_,O_N_L_Y___Suffix_,O_N_L_Y___Primary_Name_,O_N_L_Y___Predirectional_,O_N_L_Y___Primary_Range_,O_N_L_Y___Date_Of_Birth_,O_N_L_Y___Personal_Phone_Number_,O_N_L_Y___First_Name_,O_N_L_Y___Last_Name_,O_N_L_Y___Z_I_P5_,O_N_L_Y___S_S_N_},Transaction_I_D_,U_I_D__1_,O_N_L_Y___Secondary_Range_,O_N_L_Y___Suffix_,O_N_L_Y___Primary_Name_,O_N_L_Y___Predirectional_,O_N_L_Y___Primary_Range_,O_N_L_Y___Date_Of_Birth_,O_N_L_Y___Personal_Phone_Number_,O_N_L_Y___First_Name_,O_N_L_Y___Last_Name_,O_N_L_Y___Z_I_P5_,O_N_L_Y___S_S_N_,MERGE),__ST6463407_Layout);
  SHARED __ST6463458_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.ndataset(__ST6447315_Layout) Household_Member_;
    KEL.typ.ndataset(__ST1078704_Layout) Person_Bankruptcy_;
    KEL.typ.ndataset(__ST1079112_Layout) Person_Bankruptcy__1_;
    KEL.typ.ndataset(__ST1079266_Layout) Person_Inquiry__1_;
    KEL.typ.ndataset(__ST1079112_Layout) Person_Bankruptcy__2_;
    KEL.typ.ndataset(__ST6463407_Layout) Exp1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6493935(__ST1188811_Layout __EE6493929, __ST6463407_Layout __EE6463422) := __EEQP(__EE6493929.UID,__EE6463422.U_I_D__1_);
  __ST6463458_Layout __Join__ST6463458_Layout(__ST1188811_Layout __r, DATASET(__ST6463407_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Exp1_ := __CN(__recs);
  END;
  SHARED __EE6495036 := DENORMALIZE(DISTRIBUTE(__EE6493929,HASH(UID)),DISTRIBUTE(__EE6463422,HASH(U_I_D__1_)),__JC6493935(LEFT,RIGHT),GROUP,__Join__ST6463458_Layout(LEFT,ROWS(RIGHT)),LOCAL,SMART);
  SHARED __EE6368156 := __EE6327971;
  SHARED __EE6368162 := __EE6368156(__T(__EE6368156.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_));
  SHARED __EE6369268 := __EE6327971;
  SHARED __EE6369279 := __EE6369268(__T(__AND(__EE6369268.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6369268.Email_Address_)))));
  SHARED __EE6370051 := __EE6368162;
  __JC6370065(__ST1033906_Layout __EE6369279, __ST1033906_Layout __EE6370051) := __EEQP(__EE6370051.Transaction_I_D_,__EE6369279.Transaction_I_D_) AND __EEQP(__EE6370051.U_I_D__1_,__EE6369279.U_I_D__1_);
  SHARED __EE6370066 := JOIN(__EE6369279,__EE6370051,__JC6370065(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1062923_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1062923_Layout __ND6464630__Project(__ST1033906_Layout __PP6370067) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6370067.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6370067.U_I_D__1_;
    SELF := __PP6370067;
  END;
  SHARED __EE6464631 := PROJECT(__EE6370066,__ND6464630__Project(LEFT));
  SHARED __EE6464705 := GROUP(KEL.Routines.SortChildren(__EE6464631,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6464715 := UNGROUP(TOPN(__EE6464705(__NN(__EE6464705.Email_Address_)),1, -__T(__EE6464705.Email_Address_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_)));
  SHARED __EE6371111 := __EE6368162;
  __JC6464725(__ST1062923_Layout __EE6464715, __ST1033906_Layout __EE6371111) := __EEQP(__EE6371111.U_I_D__1_,__EE6464715.____grp___U_I_D__1_) AND __EEQP(__EE6371111.Transaction_I_D_,__EE6464715.____grp___Transaction_I_D_);
  SHARED __EE6464789 := JOIN(__EE6464715,__EE6371111,__JC6464725(LEFT,RIGHT),TRANSFORM(__ST1062923_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1062541_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1062541_Layout __ND6464857__Project(__ST1062923_Layout __PP6464790) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6464790.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6464790.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6464790.Transaction_I_D_;
    SELF := __PP6464790;
  END;
  SHARED __EE6464934 := PROJECT(TABLE(PROJECT(__EE6464789,__ND6464857__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1062541_Layout);
  SHARED __ST1062595_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6464952 := PROJECT(__EE6464934,__ST1062595_Layout);
  SHARED __ST1062632_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6464970 := PROJECT(__EE6464952,TRANSFORM(__ST1062632_Layout,SELF.O_N_L_Y___Email_Address_ := LEFT.Email_Address_,SELF := LEFT));
  SHARED __ST1101178_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6464980(__ST1033906_Layout __EE6368162, __ST1062632_Layout __EE6464970) := __EEQP(__EE6368162.U_I_D__1_,__EE6464970.U_I_D__1_) AND __EEQP(__EE6368162.Transaction_I_D_,__EE6464970.Transaction_I_D_);
  __ST1101178_Layout __JT6464980(__ST1033906_Layout __l, __ST1062632_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__2_ := __r.Transaction_I_D_;
    SELF.U_I_D__2_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6465050 := JOIN(__EE6368162,__EE6464970,__JC6464980(LEFT,RIGHT),__JT6464980(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6372497 := __EE6327971;
  SHARED __EE6372508 := __EE6372497(__T(__AND(__EE6372497.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6372497.Secondary_Range_)))));
  SHARED __EE6373280 := __EE6368162;
  __JC6373294(__ST1033906_Layout __EE6372508, __ST1033906_Layout __EE6373280) := __EEQP(__EE6373280.Transaction_I_D_,__EE6372508.Transaction_I_D_) AND __EEQP(__EE6373280.U_I_D__1_,__EE6372508.U_I_D__1_);
  SHARED __EE6373295 := JOIN(__EE6372508,__EE6373280,__JC6373294(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1061756_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1061756_Layout __ND6465121__Project(__ST1033906_Layout __PP6373296) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6373296.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6373296.Transaction_I_D_;
    SELF := __PP6373296;
  END;
  SHARED __EE6465122 := PROJECT(__EE6373295,__ND6465121__Project(LEFT));
  SHARED __EE6465196 := GROUP(KEL.Routines.SortChildren(__EE6465122,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6465206 := UNGROUP(TOPN(__EE6465196(__NN(__EE6465196.Secondary_Range_)),1, -__T(__EE6465196.Secondary_Range_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6374340 := __EE6368162;
  __JC6465216(__ST1061756_Layout __EE6465206, __ST1033906_Layout __EE6374340) := __EEQP(__EE6374340.U_I_D__1_,__EE6465206.____grp___U_I_D__1_) AND __EEQP(__EE6374340.Transaction_I_D_,__EE6465206.____grp___Transaction_I_D_);
  SHARED __EE6465280 := JOIN(__EE6465206,__EE6374340,__JC6465216(LEFT,RIGHT),TRANSFORM(__ST1061756_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1061376_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1061376_Layout __ND6465348__Project(__ST1061756_Layout __PP6465281) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6465281.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6465281.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6465281.Transaction_I_D_;
    SELF := __PP6465281;
  END;
  SHARED __EE6465425 := PROJECT(TABLE(PROJECT(__EE6465280,__ND6465348__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1061376_Layout);
  SHARED __ST1061430_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6465443 := PROJECT(__EE6465425,__ST1061430_Layout);
  SHARED __ST1061467_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6465461 := PROJECT(__EE6465443,TRANSFORM(__ST1061467_Layout,SELF.O_N_L_Y___Secondary_Range_ := LEFT.Secondary_Range_,SELF := LEFT));
  SHARED __ST1101394_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6465475(__ST1101178_Layout __EE6465050, __ST1061467_Layout __EE6465461) := __EEQP(__EE6465050.Transaction_I_D_,__EE6465461.Transaction_I_D_) AND __EEQP(__EE6465050.U_I_D__1_,__EE6465461.U_I_D__1_);
  __ST1101394_Layout __JT6465475(__ST1101178_Layout __l, __ST1061467_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__3_ := __r.Transaction_I_D_;
    SELF.U_I_D__3_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6465548 := JOIN(__EE6465050,__EE6465461,__JC6465475(LEFT,RIGHT),__JT6465475(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6375729 := __EE6327971;
  SHARED __EE6375740 := __EE6375729(__T(__AND(__EE6375729.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6375729.Suffix_)))));
  SHARED __EE6376512 := __EE6368162;
  __JC6376526(__ST1033906_Layout __EE6375740, __ST1033906_Layout __EE6376512) := __EEQP(__EE6376512.Transaction_I_D_,__EE6375740.Transaction_I_D_) AND __EEQP(__EE6376512.U_I_D__1_,__EE6375740.U_I_D__1_);
  SHARED __EE6376527 := JOIN(__EE6375740,__EE6376512,__JC6376526(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1060598_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1060598_Layout __ND6465622__Project(__ST1033906_Layout __PP6376528) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6376528.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6376528.U_I_D__1_;
    SELF := __PP6376528;
  END;
  SHARED __EE6465623 := PROJECT(__EE6376527,__ND6465622__Project(LEFT));
  SHARED __EE6465697 := GROUP(KEL.Routines.SortChildren(__EE6465623,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6465707 := UNGROUP(TOPN(__EE6465697(__NN(__EE6465697.Suffix_)),1, -__T(__EE6465697.Suffix_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6377572 := __EE6368162;
  __JC6465717(__ST1060598_Layout __EE6465707, __ST1033906_Layout __EE6377572) := __EEQP(__EE6377572.U_I_D__1_,__EE6465707.____grp___U_I_D__1_) AND __EEQP(__EE6377572.Transaction_I_D_,__EE6465707.____grp___Transaction_I_D_);
  SHARED __EE6465781 := JOIN(__EE6465707,__EE6377572,__JC6465717(LEFT,RIGHT),TRANSFORM(__ST1060598_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1060220_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1060220_Layout __ND6465849__Project(__ST1060598_Layout __PP6465782) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6465782.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6465782.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6465782.Transaction_I_D_;
    SELF := __PP6465782;
  END;
  SHARED __EE6465926 := PROJECT(TABLE(PROJECT(__EE6465781,__ND6465849__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1060220_Layout);
  SHARED __ST1060274_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Suffix_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6465944 := PROJECT(__EE6465926,__ST1060274_Layout);
  SHARED __ST1060311_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6465962 := PROJECT(__EE6465944,TRANSFORM(__ST1060311_Layout,SELF.O_N_L_Y___Suffix_ := LEFT.Suffix_,SELF := LEFT));
  SHARED __ST1101606_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6465976(__ST1101394_Layout __EE6465548, __ST1060311_Layout __EE6465962) := __EEQP(__EE6465548.Transaction_I_D_,__EE6465962.Transaction_I_D_) AND __EEQP(__EE6465548.U_I_D__1_,__EE6465962.U_I_D__1_);
  __ST1101606_Layout __JT6465976(__ST1101394_Layout __l, __ST1060311_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__4_ := __r.Transaction_I_D_;
    SELF.U_I_D__4_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6466052 := JOIN(__EE6465548,__EE6465962,__JC6465976(LEFT,RIGHT),__JT6465976(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6378964 := __EE6327971;
  SHARED __EE6378975 := __EE6378964(__T(__AND(__EE6378964.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6378964.Primary_Name_)))));
  SHARED __EE6379747 := __EE6368162;
  __JC6379761(__ST1033906_Layout __EE6378975, __ST1033906_Layout __EE6379747) := __EEQP(__EE6379747.Transaction_I_D_,__EE6378975.Transaction_I_D_) AND __EEQP(__EE6379747.U_I_D__1_,__EE6378975.U_I_D__1_);
  SHARED __EE6379762 := JOIN(__EE6378975,__EE6379747,__JC6379761(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1059449_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1059449_Layout __ND6466129__Project(__ST1033906_Layout __PP6379763) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6379763.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6379763.U_I_D__1_;
    SELF := __PP6379763;
  END;
  SHARED __EE6466130 := PROJECT(__EE6379762,__ND6466129__Project(LEFT));
  SHARED __EE6466204 := GROUP(KEL.Routines.SortChildren(__EE6466130,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6466214 := UNGROUP(TOPN(__EE6466204(__NN(__EE6466204.Primary_Name_)),1, -__T(__EE6466204.Primary_Name_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6380807 := __EE6368162;
  __JC6466224(__ST1059449_Layout __EE6466214, __ST1033906_Layout __EE6380807) := __EEQP(__EE6380807.U_I_D__1_,__EE6466214.____grp___U_I_D__1_) AND __EEQP(__EE6380807.Transaction_I_D_,__EE6466214.____grp___Transaction_I_D_);
  SHARED __EE6466288 := JOIN(__EE6466214,__EE6380807,__JC6466224(LEFT,RIGHT),TRANSFORM(__ST1059449_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1059073_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1059073_Layout __ND6466356__Project(__ST1059449_Layout __PP6466289) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6466289.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6466289.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6466289.Transaction_I_D_;
    SELF := __PP6466289;
  END;
  SHARED __EE6466433 := PROJECT(TABLE(PROJECT(__EE6466288,__ND6466356__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1059073_Layout);
  SHARED __ST1059127_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6466451 := PROJECT(__EE6466433,__ST1059127_Layout);
  SHARED __ST1059164_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6466469 := PROJECT(__EE6466451,TRANSFORM(__ST1059164_Layout,SELF.O_N_L_Y___Primary_Name_ := LEFT.Primary_Name_,SELF := LEFT));
  SHARED __ST1101814_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6466483(__ST1101606_Layout __EE6466052, __ST1059164_Layout __EE6466469) := __EEQP(__EE6466052.Transaction_I_D_,__EE6466469.Transaction_I_D_) AND __EEQP(__EE6466052.U_I_D__1_,__EE6466469.U_I_D__1_);
  __ST1101814_Layout __JT6466483(__ST1101606_Layout __l, __ST1059164_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__5_ := __r.Transaction_I_D_;
    SELF.U_I_D__5_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6466562 := JOIN(__EE6466052,__EE6466469,__JC6466483(LEFT,RIGHT),__JT6466483(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6382202 := __EE6327971;
  SHARED __EE6382213 := __EE6382202(__T(__AND(__EE6382202.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6382202.Predirectional_)))));
  SHARED __EE6382985 := __EE6368162;
  __JC6382999(__ST1033906_Layout __EE6382213, __ST1033906_Layout __EE6382985) := __EEQP(__EE6382985.Transaction_I_D_,__EE6382213.Transaction_I_D_) AND __EEQP(__EE6382985.U_I_D__1_,__EE6382213.U_I_D__1_);
  SHARED __EE6383000 := JOIN(__EE6382213,__EE6382985,__JC6382999(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1058309_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1058309_Layout __ND6466642__Project(__ST1033906_Layout __PP6383001) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6383001.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6383001.Transaction_I_D_;
    SELF := __PP6383001;
  END;
  SHARED __EE6466643 := PROJECT(__EE6383000,__ND6466642__Project(LEFT));
  SHARED __EE6466717 := GROUP(KEL.Routines.SortChildren(__EE6466643,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6466727 := UNGROUP(TOPN(__EE6466717(__NN(__EE6466717.Predirectional_)),1, -__T(__EE6466717.Predirectional_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6384045 := __EE6368162;
  __JC6466737(__ST1058309_Layout __EE6466727, __ST1033906_Layout __EE6384045) := __EEQP(__EE6384045.U_I_D__1_,__EE6466727.____grp___U_I_D__1_) AND __EEQP(__EE6384045.Transaction_I_D_,__EE6466727.____grp___Transaction_I_D_);
  SHARED __EE6466801 := JOIN(__EE6466727,__EE6384045,__JC6466737(LEFT,RIGHT),TRANSFORM(__ST1058309_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1057935_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1057935_Layout __ND6466869__Project(__ST1058309_Layout __PP6466802) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6466802.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6466802.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6466802.Transaction_I_D_;
    SELF := __PP6466802;
  END;
  SHARED __EE6466946 := PROJECT(TABLE(PROJECT(__EE6466801,__ND6466869__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1057935_Layout);
  SHARED __ST1057989_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6466964 := PROJECT(__EE6466946,__ST1057989_Layout);
  SHARED __ST1058026_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6466982 := PROJECT(__EE6466964,TRANSFORM(__ST1058026_Layout,SELF.O_N_L_Y___Predirectional_ := LEFT.Predirectional_,SELF := LEFT));
  SHARED __ST1102018_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6466996(__ST1101814_Layout __EE6466562, __ST1058026_Layout __EE6466982) := __EEQP(__EE6466562.Transaction_I_D_,__EE6466982.Transaction_I_D_) AND __EEQP(__EE6466562.U_I_D__1_,__EE6466982.U_I_D__1_);
  __ST1102018_Layout __JT6466996(__ST1101814_Layout __l, __ST1058026_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__6_ := __r.Transaction_I_D_;
    SELF.U_I_D__6_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6467078 := JOIN(__EE6466562,__EE6466982,__JC6466996(LEFT,RIGHT),__JT6466996(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6385443 := __EE6327971;
  SHARED __EE6385454 := __EE6385443(__T(__AND(__EE6385443.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6385443.Primary_Range_)))));
  SHARED __EE6386226 := __EE6368162;
  __JC6386240(__ST1033906_Layout __EE6385454, __ST1033906_Layout __EE6386226) := __EEQP(__EE6386226.Transaction_I_D_,__EE6385454.Transaction_I_D_) AND __EEQP(__EE6386226.U_I_D__1_,__EE6385454.U_I_D__1_);
  SHARED __EE6386241 := JOIN(__EE6385454,__EE6386226,__JC6386240(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1057178_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1057178_Layout __ND6467161__Project(__ST1033906_Layout __PP6386242) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6386242.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6386242.U_I_D__1_;
    SELF := __PP6386242;
  END;
  SHARED __EE6467162 := PROJECT(__EE6386241,__ND6467161__Project(LEFT));
  SHARED __EE6467236 := GROUP(KEL.Routines.SortChildren(__EE6467162,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6467246 := UNGROUP(TOPN(__EE6467236(__NN(__EE6467236.Primary_Range_)),1, -__T(__EE6467236.Primary_Range_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6387286 := __EE6368162;
  __JC6467256(__ST1057178_Layout __EE6467246, __ST1033906_Layout __EE6387286) := __EEQP(__EE6387286.U_I_D__1_,__EE6467246.____grp___U_I_D__1_) AND __EEQP(__EE6387286.Transaction_I_D_,__EE6467246.____grp___Transaction_I_D_);
  SHARED __EE6467320 := JOIN(__EE6467246,__EE6387286,__JC6467256(LEFT,RIGHT),TRANSFORM(__ST1057178_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1056806_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1056806_Layout __ND6467388__Project(__ST1057178_Layout __PP6467321) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6467321.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6467321.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6467321.Transaction_I_D_;
    SELF := __PP6467321;
  END;
  SHARED __EE6467465 := PROJECT(TABLE(PROJECT(__EE6467320,__ND6467388__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1056806_Layout);
  SHARED __ST1056860_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6467483 := PROJECT(__EE6467465,__ST1056860_Layout);
  SHARED __ST1056897_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6467501 := PROJECT(__EE6467483,TRANSFORM(__ST1056897_Layout,SELF.O_N_L_Y___Primary_Range_ := LEFT.Primary_Range_,SELF := LEFT));
  SHARED __ST1102218_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6467515(__ST1102018_Layout __EE6467078, __ST1056897_Layout __EE6467501) := __EEQP(__EE6467078.Transaction_I_D_,__EE6467501.Transaction_I_D_) AND __EEQP(__EE6467078.U_I_D__1_,__EE6467501.U_I_D__1_);
  __ST1102218_Layout __JT6467515(__ST1102018_Layout __l, __ST1056897_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__7_ := __r.Transaction_I_D_;
    SELF.U_I_D__7_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6467600 := JOIN(__EE6467078,__EE6467501,__JC6467515(LEFT,RIGHT),__JT6467515(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6388687 := __EE6327971;
  SHARED __EE6388698 := __EE6388687(__T(__AND(__EE6388687.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6388687.Date_Of_Birth_)))));
  SHARED __EE6389470 := __EE6368162;
  __JC6389484(__ST1033906_Layout __EE6388698, __ST1033906_Layout __EE6389470) := __EEQP(__EE6389470.Transaction_I_D_,__EE6388698.Transaction_I_D_) AND __EEQP(__EE6389470.U_I_D__1_,__EE6388698.U_I_D__1_);
  SHARED __EE6389485 := JOIN(__EE6388698,__EE6389470,__JC6389484(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1056056_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1056056_Layout __ND6467686__Project(__ST1033906_Layout __PP6389486) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6389486.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6389486.U_I_D__1_;
    SELF := __PP6389486;
  END;
  SHARED __EE6467687 := PROJECT(__EE6389485,__ND6467686__Project(LEFT));
  SHARED __EE6467761 := GROUP(KEL.Routines.SortChildren(__EE6467687,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6467771 := UNGROUP(TOPN(__EE6467761(__NN(__EE6467761.Date_Of_Birth_)),1, -__T(__EE6467761.Date_Of_Birth_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6390530 := __EE6368162;
  __JC6467781(__ST1056056_Layout __EE6467771, __ST1033906_Layout __EE6390530) := __EEQP(__EE6390530.U_I_D__1_,__EE6467771.____grp___U_I_D__1_) AND __EEQP(__EE6390530.Transaction_I_D_,__EE6467771.____grp___Transaction_I_D_);
  SHARED __EE6467845 := JOIN(__EE6467771,__EE6390530,__JC6467781(LEFT,RIGHT),TRANSFORM(__ST1056056_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1055686_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1055686_Layout __ND6467913__Project(__ST1056056_Layout __PP6467846) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6467846.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6467846.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6467846.Transaction_I_D_;
    SELF := __PP6467846;
  END;
  SHARED __EE6467990 := PROJECT(TABLE(PROJECT(__EE6467845,__ND6467913__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1055686_Layout);
  SHARED __ST1055740_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6468008 := PROJECT(__EE6467990,__ST1055740_Layout);
  SHARED __ST1055777_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6468026 := PROJECT(__EE6468008,TRANSFORM(__ST1055777_Layout,SELF.O_N_L_Y___Date_Of_Birth_ := LEFT.Date_Of_Birth_,SELF := LEFT));
  SHARED __ST1102414_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6468040(__ST1102218_Layout __EE6467600, __ST1055777_Layout __EE6468026) := __EEQP(__EE6467600.Transaction_I_D_,__EE6468026.Transaction_I_D_) AND __EEQP(__EE6467600.U_I_D__1_,__EE6468026.U_I_D__1_);
  __ST1102414_Layout __JT6468040(__ST1102218_Layout __l, __ST1055777_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__8_ := __r.Transaction_I_D_;
    SELF.U_I_D__8_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6468128 := JOIN(__EE6467600,__EE6468026,__JC6468040(LEFT,RIGHT),__JT6468040(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6391934 := __EE6327971;
  SHARED __EE6391945 := __EE6391934(__T(__AND(__EE6391934.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6391934.Personal_Phone_Number_)))));
  SHARED __EE6392717 := __EE6368162;
  __JC6392731(__ST1033906_Layout __EE6391945, __ST1033906_Layout __EE6392717) := __EEQP(__EE6392717.Transaction_I_D_,__EE6391945.Transaction_I_D_) AND __EEQP(__EE6392717.U_I_D__1_,__EE6391945.U_I_D__1_);
  SHARED __EE6392732 := JOIN(__EE6391945,__EE6392717,__JC6392731(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1054943_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1054943_Layout __ND6468217__Project(__ST1033906_Layout __PP6392733) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6392733.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6392733.Transaction_I_D_;
    SELF := __PP6392733;
  END;
  SHARED __EE6468218 := PROJECT(__EE6392732,__ND6468217__Project(LEFT));
  SHARED __EE6468292 := GROUP(KEL.Routines.SortChildren(__EE6468218,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6468302 := UNGROUP(TOPN(__EE6468292(__NN(__EE6468292.Personal_Phone_Number_)),1, -__T(__EE6468292.Personal_Phone_Number_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6393777 := __EE6368162;
  __JC6468312(__ST1054943_Layout __EE6468302, __ST1033906_Layout __EE6393777) := __EEQP(__EE6393777.U_I_D__1_,__EE6468302.____grp___U_I_D__1_) AND __EEQP(__EE6393777.Transaction_I_D_,__EE6468302.____grp___Transaction_I_D_);
  SHARED __EE6468376 := JOIN(__EE6468302,__EE6393777,__JC6468312(LEFT,RIGHT),TRANSFORM(__ST1054943_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1054575_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1054575_Layout __ND6468444__Project(__ST1054943_Layout __PP6468377) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6468377.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6468377.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6468377.Transaction_I_D_;
    SELF := __PP6468377;
  END;
  SHARED __EE6468521 := PROJECT(TABLE(PROJECT(__EE6468376,__ND6468444__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1054575_Layout);
  SHARED __ST1054629_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6468539 := PROJECT(__EE6468521,__ST1054629_Layout);
  SHARED __ST1054666_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6468557 := PROJECT(__EE6468539,TRANSFORM(__ST1054666_Layout,SELF.O_N_L_Y___Personal_Phone_Number_ := LEFT.Personal_Phone_Number_,SELF := LEFT));
  SHARED __ST1102606_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6468571(__ST1102414_Layout __EE6468128, __ST1054666_Layout __EE6468557) := __EEQP(__EE6468128.Transaction_I_D_,__EE6468557.Transaction_I_D_) AND __EEQP(__EE6468128.U_I_D__1_,__EE6468557.U_I_D__1_);
  __ST1102606_Layout __JT6468571(__ST1102414_Layout __l, __ST1054666_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__9_ := __r.Transaction_I_D_;
    SELF.U_I_D__9_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6468662 := JOIN(__EE6468128,__EE6468557,__JC6468571(LEFT,RIGHT),__JT6468571(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6395184 := __EE6327971;
  SHARED __EE6395195 := __EE6395184(__T(__AND(__EE6395184.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6395184.First_Name_)))));
  SHARED __EE6395967 := __EE6368162;
  __JC6395981(__ST1033906_Layout __EE6395195, __ST1033906_Layout __EE6395967) := __EEQP(__EE6395967.Transaction_I_D_,__EE6395195.Transaction_I_D_) AND __EEQP(__EE6395967.U_I_D__1_,__EE6395195.U_I_D__1_);
  SHARED __EE6395982 := JOIN(__EE6395195,__EE6395967,__JC6395981(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1053839_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1053839_Layout __ND6468754__Project(__ST1033906_Layout __PP6395983) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6395983.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6395983.Transaction_I_D_;
    SELF := __PP6395983;
  END;
  SHARED __EE6468755 := PROJECT(__EE6395982,__ND6468754__Project(LEFT));
  SHARED __EE6468829 := GROUP(KEL.Routines.SortChildren(__EE6468755,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6468839 := UNGROUP(TOPN(__EE6468829(__NN(__EE6468829.First_Name_)),1, -__T(__EE6468829.First_Name_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6397027 := __EE6368162;
  __JC6468849(__ST1053839_Layout __EE6468839, __ST1033906_Layout __EE6397027) := __EEQP(__EE6397027.U_I_D__1_,__EE6468839.____grp___U_I_D__1_) AND __EEQP(__EE6397027.Transaction_I_D_,__EE6468839.____grp___Transaction_I_D_);
  SHARED __EE6468913 := JOIN(__EE6468839,__EE6397027,__JC6468849(LEFT,RIGHT),TRANSFORM(__ST1053839_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1053473_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1053473_Layout __ND6468981__Project(__ST1053839_Layout __PP6468914) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6468914.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6468914.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6468914.Transaction_I_D_;
    SELF := __PP6468914;
  END;
  SHARED __EE6469058 := PROJECT(TABLE(PROJECT(__EE6468913,__ND6468981__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1053473_Layout);
  SHARED __ST1053527_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr First_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6469076 := PROJECT(__EE6469058,__ST1053527_Layout);
  SHARED __ST1053564_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6469094 := PROJECT(__EE6469076,TRANSFORM(__ST1053564_Layout,SELF.O_N_L_Y___First_Name_ := LEFT.First_Name_,SELF := LEFT));
  SHARED __ST1102794_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr Transaction_I_D__10_;
    KEL.typ.nuid U_I_D__10_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6469108(__ST1102606_Layout __EE6468662, __ST1053564_Layout __EE6469094) := __EEQP(__EE6468662.Transaction_I_D_,__EE6469094.Transaction_I_D_) AND __EEQP(__EE6468662.U_I_D__1_,__EE6469094.U_I_D__1_);
  __ST1102794_Layout __JT6469108(__ST1102606_Layout __l, __ST1053564_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__10_ := __r.Transaction_I_D_;
    SELF.U_I_D__10_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6469202 := JOIN(__EE6468662,__EE6469094,__JC6469108(LEFT,RIGHT),__JT6469108(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6398437 := __EE6327971;
  SHARED __EE6398448 := __EE6398437(__T(__AND(__EE6398437.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6398437.Last_Name_)))));
  SHARED __EE6399220 := __EE6368162;
  __JC6399234(__ST1033906_Layout __EE6398448, __ST1033906_Layout __EE6399220) := __EEQP(__EE6399220.Transaction_I_D_,__EE6398448.Transaction_I_D_) AND __EEQP(__EE6399220.U_I_D__1_,__EE6398448.U_I_D__1_);
  SHARED __EE6399235 := JOIN(__EE6398448,__EE6399220,__JC6399234(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1052744_Layout := RECORD
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1052744_Layout __ND6469297__Project(__ST1033906_Layout __PP6399236) := TRANSFORM
    SELF.____grp___Transaction_I_D_ := __PP6399236.Transaction_I_D_;
    SELF.____grp___U_I_D__1_ := __PP6399236.U_I_D__1_;
    SELF := __PP6399236;
  END;
  SHARED __EE6469298 := PROJECT(__EE6399235,__ND6469297__Project(LEFT));
  SHARED __EE6469372 := GROUP(KEL.Routines.SortChildren(__EE6469298,'Data_Sources_,Gather_Inquiries_'),____grp___Transaction_I_D_,____grp___U_I_D__1_,ALL);
  SHARED __EE6469382 := UNGROUP(TOPN(__EE6469372(__NN(__EE6469372.Last_Name_)),1, -__T(__EE6469372.Last_Name_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6400280 := __EE6368162;
  __JC6469392(__ST1052744_Layout __EE6469382, __ST1033906_Layout __EE6400280) := __EEQP(__EE6400280.U_I_D__1_,__EE6469382.____grp___U_I_D__1_) AND __EEQP(__EE6400280.Transaction_I_D_,__EE6469382.____grp___Transaction_I_D_);
  SHARED __EE6469456 := JOIN(__EE6469382,__EE6400280,__JC6469392(LEFT,RIGHT),TRANSFORM(__ST1052744_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1052380_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1052380_Layout __ND6469524__Project(__ST1052744_Layout __PP6469457) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6469457.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6469457.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6469457.Transaction_I_D_;
    SELF := __PP6469457;
  END;
  SHARED __EE6469601 := PROJECT(TABLE(PROJECT(__EE6469456,__ND6469524__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1052380_Layout);
  SHARED __ST1052434_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6469619 := PROJECT(__EE6469601,__ST1052434_Layout);
  SHARED __ST1052471_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6469637 := PROJECT(__EE6469619,TRANSFORM(__ST1052471_Layout,SELF.O_N_L_Y___Last_Name_ := LEFT.Last_Name_,SELF := LEFT));
  SHARED __ST1102978_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr Transaction_I_D__10_;
    KEL.typ.nuid U_I_D__10_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.nstr Transaction_I_D__11_;
    KEL.typ.nuid U_I_D__11_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6469651(__ST1102794_Layout __EE6469202, __ST1052471_Layout __EE6469637) := __EEQP(__EE6469202.Transaction_I_D_,__EE6469637.Transaction_I_D_) AND __EEQP(__EE6469202.U_I_D__1_,__EE6469637.U_I_D__1_);
  __ST1102978_Layout __JT6469651(__ST1102794_Layout __l, __ST1052471_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__11_ := __r.Transaction_I_D_;
    SELF.U_I_D__11_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6469748 := JOIN(__EE6469202,__EE6469637,__JC6469651(LEFT,RIGHT),__JT6469651(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6401693 := __EE6327971;
  SHARED __EE6401704 := __EE6401693(__T(__AND(__EE6401693.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6401693.Z_I_P5_)))));
  SHARED __EE6402476 := __EE6368162;
  __JC6402490(__ST1033906_Layout __EE6401704, __ST1033906_Layout __EE6402476) := __EEQP(__EE6402476.Transaction_I_D_,__EE6401704.Transaction_I_D_) AND __EEQP(__EE6402476.U_I_D__1_,__EE6401704.U_I_D__1_);
  SHARED __EE6402491 := JOIN(__EE6401704,__EE6402476,__JC6402490(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1051658_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1051658_Layout __ND6469846__Project(__ST1033906_Layout __PP6402492) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6402492.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6402492.Transaction_I_D_;
    SELF := __PP6402492;
  END;
  SHARED __EE6469847 := PROJECT(__EE6402491,__ND6469846__Project(LEFT));
  SHARED __EE6469921 := GROUP(KEL.Routines.SortChildren(__EE6469847,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6469931 := UNGROUP(TOPN(__EE6469921(__NN(__EE6469921.Z_I_P5_)),1, -__T(__EE6469921.Z_I_P5_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Secondary_Range_),__T(S_S_N_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6403536 := __EE6368162;
  __JC6469941(__ST1051658_Layout __EE6469931, __ST1033906_Layout __EE6403536) := __EEQP(__EE6403536.U_I_D__1_,__EE6469931.____grp___U_I_D__1_) AND __EEQP(__EE6403536.Transaction_I_D_,__EE6469931.____grp___Transaction_I_D_);
  SHARED __EE6470005 := JOIN(__EE6469931,__EE6403536,__JC6469941(LEFT,RIGHT),TRANSFORM(__ST1051658_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1051296_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1051296_Layout __ND6470073__Project(__ST1051658_Layout __PP6470006) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6470006.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6470006.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6470006.Transaction_I_D_;
    SELF := __PP6470006;
  END;
  SHARED __EE6470150 := PROJECT(TABLE(PROJECT(__EE6470005,__ND6470073__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1051296_Layout);
  SHARED __ST1051350_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6470168 := PROJECT(__EE6470150,__ST1051350_Layout);
  SHARED __ST1051387_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6470186 := PROJECT(__EE6470168,TRANSFORM(__ST1051387_Layout,SELF.O_N_L_Y___Z_I_P5_ := LEFT.Z_I_P5_,SELF := LEFT));
  SHARED __ST1103158_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr Transaction_I_D__10_;
    KEL.typ.nuid U_I_D__10_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.nstr Transaction_I_D__11_;
    KEL.typ.nuid U_I_D__11_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.nstr Transaction_I_D__12_;
    KEL.typ.nuid U_I_D__12_;
    KEL.typ.nstr O_N_L_Y___Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6470200(__ST1102978_Layout __EE6469748, __ST1051387_Layout __EE6470186) := __EEQP(__EE6469748.Transaction_I_D_,__EE6470186.Transaction_I_D_) AND __EEQP(__EE6469748.U_I_D__1_,__EE6470186.U_I_D__1_);
  __ST1103158_Layout __JT6470200(__ST1102978_Layout __l, __ST1051387_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__12_ := __r.Transaction_I_D_;
    SELF.U_I_D__12_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6470300 := JOIN(__EE6469748,__EE6470186,__JC6470200(LEFT,RIGHT),__JT6470200(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE6404952 := __EE6327971;
  SHARED __EE6404963 := __EE6404952(__T(__AND(__EE6404952.Is_Valid_Velocity_Inquiry_Non_F_C_R_A_,__NOT(__NT(__EE6404952.S_S_N_)))));
  SHARED __EE6405735 := __EE6368162;
  __JC6405749(__ST1033906_Layout __EE6404963, __ST1033906_Layout __EE6405735) := __EEQP(__EE6405735.Transaction_I_D_,__EE6404963.Transaction_I_D_) AND __EEQP(__EE6405735.U_I_D__1_,__EE6404963.U_I_D__1_);
  SHARED __EE6405750 := JOIN(__EE6404963,__EE6405735,__JC6405749(LEFT,RIGHT),TRANSFORM(__ST1033906_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1050582_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) ____grp___U_I_D__1_;
    KEL.typ.nstr ____grp___Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST1050582_Layout __ND6470401__Project(__ST1033906_Layout __PP6405751) := TRANSFORM
    SELF.____grp___U_I_D__1_ := __PP6405751.U_I_D__1_;
    SELF.____grp___Transaction_I_D_ := __PP6405751.Transaction_I_D_;
    SELF := __PP6405751;
  END;
  SHARED __EE6470402 := PROJECT(__EE6405750,__ND6470401__Project(LEFT));
  SHARED __EE6470476 := GROUP(KEL.Routines.SortChildren(__EE6470402,'Data_Sources_,Gather_Inquiries_'),____grp___U_I_D__1_,____grp___Transaction_I_D_,ALL);
  SHARED __EE6470486 := UNGROUP(TOPN(__EE6470476(__NN(__EE6470476.S_S_N_)),1, -__T(__EE6470476.S_S_N_),__T(UID),__T(Subject_),__T(____grp___Transaction_I_D_),__T(Sequence_Number_),__T(First_Name_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Z_I_P5_),__T(Secondary_Range_),__T(Appended_S_S_N_),__T(Personal_Phone_Number_),__T(Work_Phone_Number_),__T(Email_Address_)));
  SHARED __EE6406795 := __EE6368162;
  __JC6470496(__ST1050582_Layout __EE6470486, __ST1033906_Layout __EE6406795) := __EEQP(__EE6406795.U_I_D__1_,__EE6470486.____grp___U_I_D__1_) AND __EEQP(__EE6406795.Transaction_I_D_,__EE6470486.____grp___Transaction_I_D_);
  SHARED __EE6470560 := JOIN(__EE6470486,__EE6406795,__JC6470496(LEFT,RIGHT),TRANSFORM(__ST1050582_Layout,SELF:=LEFT),SMART,KEEP(1));
  SHARED __ST1050207_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST1050207_Layout __ND6470628__Project(__ST1050582_Layout __PP6470561) := TRANSFORM
    SELF.Transaction_I_D_ := __PP6470561.____grp___Transaction_I_D_;
    SELF.U_I_D__1_ := __PP6470561.____grp___U_I_D__1_;
    SELF.Transaction_I_D__1_ := __PP6470561.Transaction_I_D_;
    SELF := __PP6470561;
  END;
  SHARED __EE6470705 := PROJECT(TABLE(PROJECT(__EE6470560,__ND6470628__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_},Transaction_I_D_,U_I_D__1_,Lex_I_D_,First_Name_,Last_Name_,Date_Of_Birth_,Primary_Range_,Predirectional_,Primary_Name_,Suffix_,Postdirectional_,Z_I_P5_,Secondary_Range_,S_S_N_,Appended_S_S_N_,Personal_Phone_Number_,Work_Phone_Number_,Email_Address_,Transaction_I_D__1_,MERGE),__ST1050207_Layout);
  SHARED __ST1050261_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6470723 := PROJECT(__EE6470705,__ST1050261_Layout);
  SHARED __ST1050298_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___S_S_N_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6470741 := PROJECT(__EE6470723,TRANSFORM(__ST1050298_Layout,SELF.O_N_L_Y___S_S_N_ := LEFT.S_S_N_,SELF := LEFT));
  SHARED __ST1103334_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Inquiry().Typ) Transaction_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr Sequence_Number_;
    KEL.typ.ndataset(E_Person_Inquiry(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Person_Inquiry_4(__in,__cfg).__ST755601_Layout) Gather_Inquiries_;
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Appended_S_S_N_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nint Work_Phone_Number_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Transaction_I_D__1_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_F_C_R_A_;
    KEL.typ.nbool Is_Valid_Velocity_Inquiry_Non_F_C_R_A_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr Transaction_I_D__2_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr Transaction_I_D__3_;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr Transaction_I_D__4_;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr Transaction_I_D__5_;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr Transaction_I_D__6_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr Transaction_I_D__7_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nstr Transaction_I_D__8_;
    KEL.typ.nuid U_I_D__8_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nstr Transaction_I_D__9_;
    KEL.typ.nuid U_I_D__9_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr Transaction_I_D__10_;
    KEL.typ.nuid U_I_D__10_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.nstr Transaction_I_D__11_;
    KEL.typ.nuid U_I_D__11_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.nstr Transaction_I_D__12_;
    KEL.typ.nuid U_I_D__12_;
    KEL.typ.nstr O_N_L_Y___Z_I_P5_;
    KEL.typ.nstr Transaction_I_D__13_;
    KEL.typ.nuid U_I_D__13_;
    KEL.typ.nstr O_N_L_Y___S_S_N_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6470755(__ST1103158_Layout __EE6470300, __ST1050298_Layout __EE6470741) := __EEQP(__EE6470300.Transaction_I_D_,__EE6470741.Transaction_I_D_) AND __EEQP(__EE6470300.U_I_D__1_,__EE6470741.U_I_D__1_);
  __ST1103334_Layout __JT6470755(__ST1103158_Layout __l, __ST1050298_Layout __r) := TRANSFORM
    SELF.Transaction_I_D__13_ := __r.Transaction_I_D_;
    SELF.U_I_D__13_ := __r.U_I_D__1_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6470858 := JOIN(__EE6470300,__EE6470741,__JC6470755(LEFT,RIGHT),__JT6470755(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __ST6472198_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nstr O_N_L_Y___Email_Address_;
    KEL.typ.nstr O_N_L_Y___Secondary_Range_;
    KEL.typ.nstr O_N_L_Y___Suffix_;
    KEL.typ.nstr O_N_L_Y___Primary_Name_;
    KEL.typ.nstr O_N_L_Y___Predirectional_;
    KEL.typ.nstr O_N_L_Y___Primary_Range_;
    KEL.typ.nkdate O_N_L_Y___Date_Of_Birth_;
    KEL.typ.nint O_N_L_Y___Personal_Phone_Number_;
    KEL.typ.nstr O_N_L_Y___First_Name_;
    KEL.typ.nstr O_N_L_Y___Last_Name_;
    KEL.typ.nstr O_N_L_Y___Z_I_P5_;
    KEL.typ.nstr O_N_L_Y___S_S_N_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE6472214 := PROJECT(TABLE(PROJECT(__EE6470858,__ST6472198_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,U_I_D__1_,O_N_L_Y___Email_Address_,O_N_L_Y___Secondary_Range_,O_N_L_Y___Suffix_,O_N_L_Y___Primary_Name_,O_N_L_Y___Predirectional_,O_N_L_Y___Primary_Range_,O_N_L_Y___Date_Of_Birth_,O_N_L_Y___Personal_Phone_Number_,O_N_L_Y___First_Name_,O_N_L_Y___Last_Name_,O_N_L_Y___Z_I_P5_,O_N_L_Y___S_S_N_},Transaction_I_D_,U_I_D__1_,O_N_L_Y___Email_Address_,O_N_L_Y___Secondary_Range_,O_N_L_Y___Suffix_,O_N_L_Y___Primary_Name_,O_N_L_Y___Predirectional_,O_N_L_Y___Primary_Range_,O_N_L_Y___Date_Of_Birth_,O_N_L_Y___Personal_Phone_Number_,O_N_L_Y___First_Name_,O_N_L_Y___Last_Name_,O_N_L_Y___Z_I_P5_,O_N_L_Y___S_S_N_,MERGE),__ST6472198_Layout);
  SHARED __ST6472252_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300979_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST300994_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST301009_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST466469_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST99458_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.nkdate M_A_X___Criminal_Date_;
    KEL.typ.nkdate M_I_N___Criminal_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__3_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_;
    KEL.typ.nkdate O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.int C_O_U_N_T___Exp1__4_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Person_Property_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__1_ := 0;
    KEL.typ.int C_O_U_N_T___Person_Property__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__5_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nint At_Position_;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.ndataset(__ST1077827_Layout) Professional_License_Person_;
    KEL.typ.ndataset(__ST1077928_Layout) Person_Inquiry_;
    KEL.typ.ndataset(__ST6447315_Layout) Household_Member_;
    KEL.typ.ndataset(__ST1078704_Layout) Person_Bankruptcy_;
    KEL.typ.ndataset(__ST1079112_Layout) Person_Bankruptcy__1_;
    KEL.typ.ndataset(__ST1079266_Layout) Person_Inquiry__1_;
    KEL.typ.ndataset(__ST1079112_Layout) Person_Bankruptcy__2_;
    KEL.typ.ndataset(__ST6463407_Layout) Exp1_;
    KEL.typ.ndataset(__ST6472198_Layout) Exp2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6495042(__ST6463458_Layout __EE6495036, __ST6472198_Layout __EE6472214) := __EEQP(__EE6495036.UID,__EE6472214.U_I_D__1_);
  __ST6472252_Layout __Join__ST6472252_Layout(__ST6463458_Layout __r, DATASET(__ST6472198_Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Exp2_ := __CN(__recs);
  END;
  SHARED __EE6496159 := DENORMALIZE(DISTRIBUTE(__EE6495036,HASH(UID)),DISTRIBUTE(__EE6472214,HASH(U_I_D__1_)),__JC6495042(LEFT,RIGHT),GROUP,__Join__ST6472252_Layout(LEFT,ROWS(RIGHT)),LOCAL,SMART);
  EXPORT __ST303407_Layout := RECORD
    KEL.typ.nstr Title_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Middle_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr Name_Suffix_;
    KEL.typ.nstr Name_Score_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nstr Source_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.bool Verified_First_Name_ := FALSE;
    KEL.typ.bool Verified_Last_Name_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST303422_Layout := RECORD
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nbool Best_D_O_B_Rec_;
    KEL.typ.nbool D_O_B_Best_Not_Null_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST303437_Layout := RECORD
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool F_D_N_Indicator_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST88264_Layout := RECORD
    KEL.typ.nuid Prof_Lic_U_I_D_;
    KEL.typ.nstr Max_Issue_Date_;
    KEL.typ.nstr Max_Expire_Date_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST93970_Layout := RECORD
    KEL.typ.nstr Inq_Date_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST1014452_Layout := RECORD
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Filing_Type_Description_;
    KEL.typ.nint Amount_;
    KEL.typ.bool Landlord_Tenant_Dispute_Flag_ := FALSE;
    KEL.typ.nkdate Original_Filing_Date_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.nbool Is_Civil_Court_Judgment_;
    KEL.typ.nbool Is_Federal_Tax_Lien_;
    KEL.typ.nbool Is_Foreclosure_Judgment_;
    KEL.typ.nbool Is_Landlord_Tenant_Dispute_;
    KEL.typ.nbool Is_Other_Lien_;
    KEL.typ.nbool Is_Other_Tax_Lien_;
    KEL.typ.nbool Is_Over_All_Judgment_;
    KEL.typ.nbool Is_Over_All_Lien_;
    KEL.typ.nbool Is_Over_All_Lien_Judgment_;
    KEL.typ.nbool Is_Small_Cliams_Judgment_;
    KEL.typ.nbool Is_State_Tax_Lien_;
    KEL.typ.nbool Is_Suits_;
    KEL.typ.nbool Is_Total_Tax_Lien_;
    KEL.typ.nbool Seen___In___Seven___Years_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST97988_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST86639_Layout := RECORD
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST87392_Layout := RECORD
    KEL.typ.str Mod_Disposition_ := '';
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST1014621_Layout := RECORD
    KEL.typ.nstr Translated_Source_;
    KEL.typ.nstr Date_First_Seen_Clean_;
    KEL.typ.nstr First_Seen_Date_;
    KEL.typ.nstr Date_Last_Seen_Clean_;
    KEL.typ.nint Bankruptcy_Age_In_Days_;
    KEL.typ.nint Liens_Age_In_Days_;
    KEL.typ.nbool Other_Sources_;
    KEL.typ.nbool Valid_Bankruptcy_Sources_;
    KEL.typ.nbool Valid_Liens_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST95803_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nkdate My_Date_First_Seen_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST98827_Layout := RECORD
    KEL.typ.nstr Loan_Date_First_Seen_;
    KEL.typ.nint Loan_Age_In_Days_;
    KEL.typ.nstr Source_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST86587_Layout := RECORD
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST92502_Layout := RECORD
    KEL.typ.ntyp(E_Utility().Typ) Util_;
    KEL.typ.nstr Util_Date_First_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST101019_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST96650_Layout := RECORD
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nint Personal_Phone_Number_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST98151_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr First_Seen_Date_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST303401_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(__ST303407_Layout) Full_Name_;
    KEL.typ.ndataset(__ST303422_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(__ST303437_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST260762_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST98487_Layout) Accident_Recs_Sorted_;
    KEL.typ.nint Accidents_Count_Total_;
    KEL.typ.ndataset(__ST88264_Layout) Active_Professional_License_Issue_Exp_Date_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Address_Hierarchy_Set_;
    KEL.typ.nint Age_;
    KEL.typ.ndataset(__ST93970_Layout) All_Inquiries_Past5_Y_;
    KEL.typ.ndataset(__ST1014452_Layout) All_Lien_Data_;
    KEL.typ.int Asset_Property_Count_Ever_ := 0;
    KEL.typ.int Asset_Property_Current_Count_ := 0;
    KEL.typ.int Asset_Property_Sale_Count_ := 0;
    KEL.typ.nstr B_K_Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nint Best_D_O_B_Age_;
    KEL.typ.nstr Curr_Addr_Full_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Curr_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Current_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Unit_Designation_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Postdirectional_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Coll_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST91464_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST91517_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.nint Inquiries_Banking5_Y_Count_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST94019_Layout) Inquiries_Banking5_Y_Sorted_;
    KEL.typ.nint Inquiries_Comm5_Y_Count_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST95015_Layout) Inquiries_Comm5_Y_Sorted_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date_;
    KEL.typ.nint Ln_J_L_T_D_New_Date_Min_Msnc_;
    KEL.typ.nint Ln_J_L_T_D_Old_Date_Max_Msnc_;
    KEL.typ.ndataset(__ST97988_Layout) Members_Not_Subject_;
    KEL.typ.ndataset(__ST86639_Layout) Most_Recent_Chapter10_Y_List_;
    KEL.typ.ndataset(__ST87392_Layout) Most_Recent_Dispo_List10_Y_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_Bk_Cnt10_Y_ := 0;
    KEL.typ.int P_L___Drg_Bk_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Bk_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Bk_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Crim_Cnt7_Y_ := 0;
    KEL.typ.int P_L___Drg_Crim_Fel_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Crim_New_Dt7_Y_;
    KEL.typ.int P_L___Drg_Crim_Nfel_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Crim_Old_Dt7_Y_;
    KEL.typ.int P_L___Drg_Judg_Cnt7_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_L_T_D_New_Msnc7_Y_;
    KEL.typ.nint P_L___Drg_L_T_D_Old_Msnc7_Y_;
    KEL.typ.int P_L___Drg_Lien_Cnt7_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nint P_L___Drg_Ln_J_New_Msnc7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nint P_L___Drg_Ln_J_Old_Msnc7_Y_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Raw_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Raw_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Raw_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Raw_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Raw_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Raw_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Raw_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.nint Person_Address_Hierarchy_Valid_Cnt_;
    KEL.typ.ndataset(__ST1014621_Layout) Person_S_S_N_Match_Sources_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST99410_Layout) Person_S_S_N_Match_Sources_Pre_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Prev_Addr_Full_Set_;
    B_Person_10(__in,__cfg).__ST88871_Layout Previous_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Postdirectional_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Data_Set_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92816_Layout) Property_Date_First_Seen_Sorted_;
    KEL.typ.ndataset(B_Person_10(__in,__cfg).__ST88871_Layout) Recent_Addr_Full_Set_;
    KEL.typ.ndataset(__ST95803_Layout) Retail_Inquiries5_Yrs_;
    KEL.typ.nkdate Select_Age_;
    KEL.typ.ndataset(__ST98827_Layout) Thrive_Data_;
    KEL.typ.ndataset(__ST86587_Layout) Top1_Chapter10_Y_List_With_Null_;
    KEL.typ.ndataset(B_Person_5(__in,__cfg).__ST552034_Layout) Translated_Sources_;
    KEL.typ.ndataset(__ST92502_Layout) Util_List_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST92484_Layout) Util_List_Pre_;
    KEL.typ.ndataset(__ST101019_Layout) Velocity_Inquiries_Per_Lex_I_D_F_C_R_A_;
    KEL.typ.ndataset(__ST96650_Layout) Velocity_Inquiries_Per_Lex_I_D_Non_F_C_R_A_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST98131_Layout) Ver_Source_List_;
    KEL.typ.ndataset(__ST98151_Layout) Ver_Source_List_Sorted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99065_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_F_C_R_A_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711859_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99227_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_F_C_R_A_;
    KEL.typ.ndataset(B_Person_4(__in,__cfg).__ST711874_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.ndataset(E_Household(__in,__cfg).Layout) Verson_One_House_Holds_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST303401_Layout __ND6496232__Project(__ST6472252_Layout __PP6496228) := TRANSFORM
    __EE6496162 := __PP6496228.Full_Name_;
    SELF.Full_Name_ := __BN(PROJECT(__T(__EE6496162),__ST303407_Layout),__NL(__EE6496162));
    __EE6496166 := __PP6496228.Reported_Dates_Of_Birth_;
    SELF.Reported_Dates_Of_Birth_ := __BN(PROJECT(__T(__EE6496166),__ST303422_Layout),__NL(__EE6496166));
    __EE6496170 := __PP6496228.Data_Sources_;
    SELF.Data_Sources_ := __BN(PROJECT(__T(__EE6496170),__ST303437_Layout),__NL(__EE6496170));
    SELF.Accidents_Count_Total_ := KEL.Aggregates.CountN(__PP6496228.Accident_Recs_Sorted_);
    __EE6496194 := __PP6496228.Professional_License_Person_;
    __ST88264_Layout __ND6496888__Project(__ST1077827_Layout __PP6496884) := TRANSFORM
      SELF.Prof_Lic_U_I_D_ := __PP6496884.UID;
      __CC13634 := '-99997';
      SELF.Max_Issue_Date_ := IF(__T(__NT(__PP6496884.Max_Issue_Date_)),__ECAST(KEL.typ.nstr,__CN(__CC13634)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP6496884.Max_Issue_Date_,__CN('%Y%m%d'))));
      SELF.Max_Expire_Date_ := IF(__T(__NT(__PP6496884.Max_Expire_Date_)),__ECAST(KEL.typ.nstr,__CN(__CC13634)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP6496884.Max_Expire_Date_,__CN('%Y%m%d'))));
      SELF := __PP6496884;
    END;
    __EE6496915 := PROJECT(TABLE(PROJECT(__T(__EE6496194),__ND6496888__Project(LEFT)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Prof_Lic_U_I_D_,Max_Issue_Date_,Max_Expire_Date_},Prof_Lic_U_I_D_,Max_Issue_Date_,Max_Expire_Date_,MERGE),__ST88264_Layout);
    __EE6496928 := TOPN(__EE6496915(__NN(__EE6496915.Max_Issue_Date_) AND __NN(__EE6496915.Max_Expire_Date_)),1, -__T(__EE6496915.Max_Issue_Date_), -__T(__EE6496915.Max_Expire_Date_),__T(Prof_Lic_U_I_D_));
    SELF.Active_Professional_License_Issue_Exp_Date_ := __CN(__EE6496928(__NN(Prof_Lic_U_I_D_) OR __NN(Max_Issue_Date_) OR __NN(Max_Expire_Date_)));
    __CC13054 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
    SELF.Age_ := __FN2(KEL.Routines.YearsBetween,__PP6496228.Select_Age_,__CC13054);
    __EE6496198 := __PP6496228.Person_Inquiry_;
    __ST93970_Layout __ND6496949__Project(__ST1077928_Layout __PP6496938) := TRANSFORM
      __CC13763 := '-99997';
      SELF.Inq_Date_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP6496938.Inq_Date_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP6496938.Inq_Date_,__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13763)));
      SELF.Transaction_I_D_ := __PP6496938.Transaction_I_D__1_;
      SELF := __PP6496938;
    END;
    __EE6496958 := PROJECT(TABLE(PROJECT(__T(__EE6496198),__ND6496949__Project(LEFT)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Inq_Date_,Transaction_I_D_},Inq_Date_,Transaction_I_D_,MERGE),__ST93970_Layout);
    __EE6496967 := TOPN(__EE6496958(__NN(__EE6496958.Inq_Date_)),999,__T(__EE6496958.Inq_Date_),__T(Transaction_I_D_));
    SELF.All_Inquiries_Past5_Y_ := __CN(__EE6496967(__NN(Inq_Date_) OR __NN(Transaction_I_D_)));
    __EE6496972 := __PP6496228.All_Lien_Data_;
    __ST1014452_Layout __ND6496980__Project(B_Person_6(__in,__cfg).__ST466469_Layout __PP6496976) := TRANSFORM
      __CC30346 := ['CIVIL NEW FILING','CIVIL SUIT','CIVIL SUMMONS','COURT ORDER','FEDERAL COURT NEW FILING','FORECLOSURE NEW FILING','JUDGMENT - Chapter 7','LANDLORD TENANT SUIT','LIS PENDENS','LIS PENDENS NOTICE','LIS PENDENS RELEASE'];
      SELF.Is_Suits_ := __AND(__CN(__PP6496976.Landlord_Tenant_Dispute_Flag_ = FALSE),__OP2(__PP6496976.Filing_Type_Description_,IN,__CN(__CC30346)));
      SELF := __PP6496976;
    END;
    SELF.All_Lien_Data_ := __PROJECT(__EE6496972,__ND6496980__Project(LEFT));
    SELF.Asset_Property_Count_Ever_ := __PP6496228.C_O_U_N_T___Person_Property_;
    SELF.Asset_Property_Current_Count_ := __PP6496228.C_O_U_N_T___Person_Property__1_;
    SELF.Asset_Property_Sale_Count_ := __PP6496228.C_O_U_N_T___Person_Property__2_;
    __CC13676 := '-99997';
    __CC13674 := '-99998';
    SELF.B_K_Ln_J_L_T_D_Min_Old_Date_ := IF(__T(__OR(__OP2(KEL.Routines.MinN(__PP6496228.Ln_J_L_T_D_Min_Old_Date_,__PP6496228.P_L___Drg_Bk_Old_Dt7_Y_),=,__CN(__CC13676)),__OP2(KEL.Routines.MinN(__PP6496228.Ln_J_L_T_D_Min_Old_Date_,__PP6496228.P_L___Drg_Bk_Old_Dt7_Y_),=,__CN(__CC13674)))),__ECAST(KEL.typ.nstr,KEL.Routines.MaxN(__PP6496228.Ln_J_L_T_D_Min_Old_Date_,__PP6496228.P_L___Drg_Bk_Old_Dt7_Y_)),__ECAST(KEL.typ.nstr,KEL.Routines.MinN(__PP6496228.Ln_J_L_T_D_Min_Old_Date_,__PP6496228.P_L___Drg_Bk_Old_Dt7_Y_)));
    SELF.Current_Addr_Unit_Designation_ := __PP6496228.Current_.Unit_Designation_;
    __EE6496174 := __PP6496228.Edu_Rec_Ver_Source_List_Sorted_;
    __BS6497132 := __T(__EE6496174);
    __EE6497139 := __BS6497132(__T(__OP2(__T(__EE6496174).File_Type_,IN,__CN(['C','H','O']))));
    SELF.Edu_Coll_Rec_Ver_Source_List_ := __CN(__EE6497139);
    SELF.Inquiries_Banking5_Y_Count_ := KEL.Aggregates.CountN(__PP6496228.Inquiries_Banking5_Y_Sorted_);
    SELF.Inquiries_Comm5_Y_Count_ := KEL.Aggregates.CountN(__PP6496228.Inquiries_Comm5_Y_Sorted_);
    __CC13679 := -99997;
    __CC13672 := -99998;
    SELF.Ln_J_L_T_D_New_Date_Min_Msnc_ := IF(__T(__OR(__OP2(KEL.Routines.MinN(__PP6496228.P_L___Drg_Ln_J_New_Msnc7_Y_,__PP6496228.P_L___Drg_L_T_D_New_Msnc7_Y_),=,__CN(__CC13679)),__OP2(KEL.Routines.MinN(__PP6496228.P_L___Drg_Ln_J_New_Msnc7_Y_,__PP6496228.P_L___Drg_L_T_D_New_Msnc7_Y_),=,__CN(__CC13672)))),__ECAST(KEL.typ.nint,KEL.Routines.MaxN(__PP6496228.P_L___Drg_Ln_J_New_Msnc7_Y_,__PP6496228.P_L___Drg_L_T_D_New_Msnc7_Y_)),__ECAST(KEL.typ.nint,KEL.Routines.MinN(__PP6496228.P_L___Drg_Ln_J_New_Msnc7_Y_,__PP6496228.P_L___Drg_L_T_D_New_Msnc7_Y_)));
    SELF.Ln_J_L_T_D_Old_Date_Max_Msnc_ := KEL.Routines.MaxN(__PP6496228.P_L___Drg_Ln_J_Old_Msnc7_Y_,__PP6496228.P_L___Drg_L_T_D_Old_Msnc7_Y_);
    __EE6496202 := __PP6496228.Household_Member_;
    SELF.Members_Not_Subject_ := __PROJECT(__EE6496202,__ST97988_Layout);
    __EE6496206 := __PP6496228.Person_Bankruptcy_;
    __ST86639_Layout __ND6497224__Project(__ST1078704_Layout __PP6497215) := TRANSFORM
      __CC13618 := '-99997';
      SELF.Original_Chapter_ := IF(__T(__NT(__PP6497215.Original_Chapter_)),__ECAST(KEL.typ.nstr,__CN(__CC13618)),__ECAST(KEL.typ.nstr,__PP6497215.Original_Chapter_));
      SELF.T_M_S_I_D_ := __PP6497215.T_M_S_I_D__1_;
      SELF.Case_Number_ := __PP6497215.Case_Number__1_;
      SELF.Court_Code_ := __PP6497215.Court_Code__1_;
      SELF := __PP6497215;
    END;
    __EE6497253 := PROJECT(TABLE(PROJECT(__T(__EE6496206),__ND6497224__Project(LEFT)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Original_Chapter_,T_M_S_I_D_,Case_Number_,Court_Code_,Bankruptcy_Date_,Last_Status_Update_,Date_Filed_},Original_Chapter_,T_M_S_I_D_,Case_Number_,Court_Code_,Bankruptcy_Date_,Last_Status_Update_,Date_Filed_,MERGE),__ST86639_Layout);
    __EE6497269 := TOPN(__EE6497253(__NN(__EE6497253.Bankruptcy_Date_) AND __NN(__EE6497253.Last_Status_Update_) AND __NN(__EE6497253.Date_Filed_)),1, -__T(__EE6497253.Bankruptcy_Date_), -__T(__EE6497253.Last_Status_Update_), -__T(__EE6497253.Date_Filed_),__T(Original_Chapter_),__T(T_M_S_I_D_),__T(Case_Number_),__T(Court_Code_));
    SELF.Most_Recent_Chapter10_Y_List_ := __CN(__EE6497269(__NN(Original_Chapter_) OR __NN(T_M_S_I_D_) OR __NN(Case_Number_) OR __NN(Court_Code_) OR __NN(Bankruptcy_Date_) OR __NN(Last_Status_Update_) OR __NN(Date_Filed_)));
    __EE6496210 := __PP6496228.Person_Bankruptcy__1_;
    __ST87392_Layout __ND6497282__Project(__ST1079112_Layout __PP6497274) := TRANSFORM
      __CC13618 := '-99997';
      SELF.Mod_Disposition_ := IF(__T(__NT(__PP6497274.Disposition_)),__CC13618,__PP6497274.Modified_Disposition_);
      SELF := __PP6497274;
    END;
    __EE6497299 := PROJECT(TABLE(PROJECT(__T(__EE6496210),__ND6497282__Project(LEFT)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Mod_Disposition_,Bankruptcy_Date_,Last_Status_Update_,Date_Filed_},Mod_Disposition_,Bankruptcy_Date_,Last_Status_Update_,Date_Filed_,MERGE),__ST87392_Layout);
    __EE6497315 := TOPN(__EE6497299(__NN(__EE6497299.Bankruptcy_Date_) AND __NN(__EE6497299.Last_Status_Update_) AND __NN(__EE6497299.Date_Filed_)),1, -__T(__EE6497299.Bankruptcy_Date_), -__T(__EE6497299.Last_Status_Update_), -__T(__EE6497299.Date_Filed_),Mod_Disposition_);
    SELF.Most_Recent_Dispo_List10_Y_ := __CN(__EE6497315);
    __CC13608 := -99999;
    SELF.P_L___Drg_Bk_Cnt10_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__CC13608,KEL.Routines.BoundsFold(__PP6496228.C_O_U_N_T___Exp1__3_,0,999));
    SELF.P_L___Drg_Bk_Cnt7_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__CC13608,KEL.Routines.BoundsFold(__PP6496228.C_O_U_N_T___Exp1__4_,0,999));
    __CC13610 := '-99998';
    __CC13613 := -99998;
    SELF.P_L___Drg_Bk_New_Msnc7_Y_ := MAP(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nint,__CN(__CC13608)),__T(__OP2(__PP6496228.P_L___Drg_Bk_New_Dt7_Y_,=,__CN(__CC13610)))=>__ECAST(KEL.typ.nint,__CN(__CC13613)),__ECAST(KEL.typ.nint,__FN3(KEL.Routines.BoundsFold,__FN2(KEL.Routines.MonthsBetween,KEL.Routines.CastStringToDate(__PP6496228.P_L___Drg_Bk_New_Dt7_Y_),__PP6496228.O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E_),__CN(0),__CN(84))));
    SELF.P_L___Drg_Bk_Old_Msnc7_Y_ := MAP(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nint,__CN(__CC13608)),__T(__OP2(__PP6496228.P_L___Drg_Bk_Old_Dt7_Y_,=,__CN(__CC13610)))=>__ECAST(KEL.typ.nint,__CN(__CC13613)),__ECAST(KEL.typ.nint,__FN3(KEL.Routines.BoundsFold,__FN2(KEL.Routines.MonthsBetween,KEL.Routines.CastStringToDate(__PP6496228.P_L___Drg_Bk_Old_Dt7_Y_),__PP6496228.O_N_L_Y___C_U_R_R_E_N_T___D_A_T_E__1_),__CN(0),__CN(84))));
    __CC13598 := -99999;
    SELF.P_L___Drg_Crim_Cnt7_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__CC13598,KEL.Routines.BoundsFold(__PP6496228.C_O_U_N_T___Exp1_,0,999));
    SELF.P_L___Drg_Crim_Fel_Cnt7_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__CC13598,KEL.Routines.BoundsFold(__PP6496228.C_O_U_N_T___Exp1__1_,0,999));
    __CC13595 := '-99999';
    __CC13600 := '-99998';
    SELF.P_L___Drg_Crim_New_Dt7_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__ECAST(KEL.typ.nstr,__CN(__CC13595)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,__PP6496228.M_A_X___Criminal_Date_)),__ECAST(KEL.typ.nstr,__CN(__CC13600)))));
    SELF.P_L___Drg_Crim_Nfel_Cnt7_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__CC13598,KEL.Routines.BoundsFold(__PP6496228.C_O_U_N_T___Exp1__2_,0,999));
    SELF.P_L___Drg_Crim_Old_Dt7_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__ECAST(KEL.typ.nstr,__CN(__CC13595)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,__PP6496228.M_I_N___Criminal_Date_)),__ECAST(KEL.typ.nstr,__CN(__CC13600)))));
    __CC13639 := -99999;
    __BS6497422 := __T(__PP6496228.All_Lien_Data_);
    SELF.P_L___Drg_Judg_Cnt7_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__CC13639,KEL.Routines.BoundsFold(COUNT(__BS6497422(__T(__AND(__T(__PP6496228.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP6496228.All_Lien_Data_).Is_Over_All_Judgment_)))),0,999));
    __BS6497445 := __T(__PP6496228.All_Lien_Data_);
    SELF.P_L___Drg_Lien_Cnt7_Y_ := IF(__PP6496228.P___Lex_I_D_Seen_Flag_ = '0',__CC13639,KEL.Routines.BoundsFold(COUNT(__BS6497445(__T(__AND(__T(__PP6496228.All_Lien_Data_).Seen___In___Seven___Years_,__OP2(__T(__PP6496228.All_Lien_Data_).Is_Over_All_Lien_,=,__CN(TRUE)))))),0,999));
    SELF.P___Inp_Cln_Addr_Pre_Dir_Raw_ := __PP6496228.P___Inp_Cln_Addr_Pre_Dir_;
    SELF.P___Inp_Cln_Addr_Prim_Name_Raw_ := __PP6496228.P___Inp_Cln_Addr_Prim_Name_;
    SELF.P___Inp_Cln_Addr_Prim_Rng_Raw_ := __PP6496228.P___Inp_Cln_Addr_Prim_Rng_;
    SELF.P___Inp_Cln_Addr_Sec_Rng_Raw_ := __PP6496228.P___Inp_Cln_Addr_Sec_Rng_;
    SELF.P___Inp_Cln_Addr_Sffx_Raw_ := __PP6496228.P___Inp_Cln_Addr_Sffx_;
    SELF.P___Inp_Cln_Addr_Zip5_Raw_ := __PP6496228.P___Inp_Cln_Addr_Zip5_;
    SELF.P___Inp_Cln_D_O_B_Raw_ := __PP6496228.P___Inp_Cln_D_O_B_;
    SELF.P___Inp_Cln_Phone_Home_Raw_ := __PP6496228.P___Inp_Cln_Phone_Home_;
    SELF.P___Inp_Cln_S_S_N_Raw_ := __PP6496228.P___Inp_Cln_S_S_N__1_;
    SELF.Person_Address_Hierarchy_Valid_Cnt_ := KEL.Aggregates.CountN(__PP6496228.Recent_Addr_Full_Set_);
    __EE6497498 := __PP6496228.Person_S_S_N_Match_Sources_;
    __ST1014621_Layout __ND6497506__Project(B_Person_4(__in,__cfg).__ST99458_Layout __PP6497502) := TRANSFORM
      SELF.Other_Sources_ := __AND(__OP2(__PP6497502.Translated_Source_,<>,__CN('BA')),__OP2(__PP6497502.Translated_Source_,<>,__CN('L2')));
      __CC65697 := 3652;
      SELF.Valid_Bankruptcy_Sources_ := __AND(__AND(__OP2(__PP6497502.Translated_Source_,=,__CN('BA')),__OP2(__PP6497502.Bankruptcy_Age_In_Days_,<=,__CN(__CC65697))),__NOT(__NT(__PP6497502.Bankruptcy_Age_In_Days_)));
      __CC65695 := 2556;
      SELF.Valid_Liens_Sources_ := __AND(__AND(__OP2(__PP6497502.Translated_Source_,=,__CN('L2')),__OP2(__PP6497502.Liens_Age_In_Days_,<=,__CN(__CC65695))),__NOT(__NT(__PP6497502.Liens_Age_In_Days_)));
      SELF := __PP6497502;
    END;
    SELF.Person_S_S_N_Match_Sources_ := __PROJECT(__EE6497498,__ND6497506__Project(LEFT));
    __EE6497599 := __PP6496228.Property_Data_Set_;
    __BS6497603 := __T(__EE6497599);
    __EE6497614 := __BN(TOPN(__BS6497603(__NN(__OP2(__T(__EE6497599).Date_First_Seen_Clean_,=,__CN(__CC13676))) AND __NN(__T(__EE6497599).Date_First_Seen_Clean_)),100,__T(__OP2(__T(__EE6497599).Date_First_Seen_Clean_,=,__CN(__CC13676))),__T(__T(__EE6497599).Date_First_Seen_Clean_),__T(Prop_),Property_Is_Sold_,__T(Property_Sale_Date_Clean_),__T(Property_Sale_Price_Clean_),__T(Date_Last_Seen_Clean_)),__NL(__EE6497599));
    SELF.Property_Date_First_Seen_Sorted_ := __EE6497614;
    __EE6496214 := __PP6496228.Person_Inquiry__1_;
    __ST95803_Layout __ND6497625__Project(__ST1079266_Layout __PP6497621) := TRANSFORM
      SELF.Transaction_I_D_ := __PP6497621.Transaction_I_D__1_;
      SELF.My_Date_First_Seen_ := __PP6497621.Inq_Date_;
      SELF := __PP6497621;
    END;
    __EE6497634 := PROJECT(TABLE(PROJECT(__T(__EE6496214),__ND6497625__Project(LEFT)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Transaction_I_D_,My_Date_First_Seen_},Transaction_I_D_,My_Date_First_Seen_,MERGE),__ST95803_Layout);
    __EE6497646 := TOPN(__EE6497634(__NN(__FN1(KEL.Routines.IsValidDate,__EE6497634.My_Date_First_Seen_)) AND __NN(__EE6497634.My_Date_First_Seen_)),999,__T(__FN1(KEL.Routines.IsValidDate,__EE6497634.My_Date_First_Seen_)),__T(__EE6497634.My_Date_First_Seen_),__T(Transaction_I_D_));
    SELF.Retail_Inquiries5_Yrs_ := __CN(__EE6497646(__NN(Transaction_I_D_) OR __NN(My_Date_First_Seen_)));
    __EE6496178 := __PP6496228.Thrive_;
    __CC13682 := ['T$'];
    __BS6497653 := __T(__EE6496178);
    __EE6497660 := __BS6497653(__T(__OP2(__T(__EE6496178).Source_,IN,__CN(__CC13682))));
    __ST98827_Layout __ND6497672__Project(E_Person(__in,__cfg).Thrive_Layout __PP6497661) := TRANSFORM
      __CC13676 := '-99997';
      SELF.Loan_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP6497661.Thrive_Date_First_Seen_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP6497661.Thrive_Date_First_Seen_,__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13676)));
      __CC13294 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('thrive_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Loan_Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,__PP6497661.Thrive_Date_First_Seen_),__ECAST(KEL.typ.nkdate,__CC13294));
      SELF := __PP6497661;
    END;
    SELF.Thrive_Data_ := __CN(PROJECT(TABLE(PROJECT(__EE6497660,__ND6497672__Project(LEFT))(__NN(Loan_Date_First_Seen_) OR __NN(Loan_Age_In_Days_) OR __NN(Source_)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Loan_Date_First_Seen_,Loan_Age_In_Days_,Source_},Loan_Date_First_Seen_,Loan_Age_In_Days_,Source_,MERGE),__ST98827_Layout));
    __EE6496218 := __PP6496228.Person_Bankruptcy__2_;
    __ST86587_Layout __ND6497692__Project(__ST1079112_Layout __PP6497688) := TRANSFORM
      SELF.T_M_S_I_D_ := __PP6497688.T_M_S_I_D__1_;
      SELF.Case_Number_ := __PP6497688.Case_Number__1_;
      SELF.Court_Code_ := __PP6497688.Court_Code__1_;
      SELF := __PP6497688;
    END;
    __EE6497721 := PROJECT(TABLE(PROJECT(__T(__EE6496218),__ND6497692__Project(LEFT)),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Original_Chapter_,T_M_S_I_D_,Case_Number_,Court_Code_,Bankruptcy_Date_,Last_Status_Update_,Date_Filed_},Original_Chapter_,T_M_S_I_D_,Case_Number_,Court_Code_,Bankruptcy_Date_,Last_Status_Update_,Date_Filed_,MERGE),__ST86587_Layout);
    __EE6497737 := TOPN(__EE6497721(__NN(__EE6497721.Bankruptcy_Date_) AND __NN(__EE6497721.Last_Status_Update_) AND __NN(__EE6497721.Date_Filed_)),1, -__T(__EE6497721.Bankruptcy_Date_), -__T(__EE6497721.Last_Status_Update_), -__T(__EE6497721.Date_Filed_),__T(Original_Chapter_),__T(T_M_S_I_D_),__T(Case_Number_),__T(Court_Code_));
    SELF.Top1_Chapter10_Y_List_With_Null_ := __CN(__EE6497737(__NN(Original_Chapter_) OR __NN(T_M_S_I_D_) OR __NN(Case_Number_) OR __NN(Court_Code_) OR __NN(Bankruptcy_Date_) OR __NN(Last_Status_Update_) OR __NN(Date_Filed_)));
    __EE6496182 := __PP6496228.Util_List_Pre_;
    __ST92502_Layout __ND6497748__Project(B_Person_4(__in,__cfg).__ST92484_Layout __PP6497744) := TRANSFORM
      __CC13696 := '-99997';
      SELF.Util_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,__PP6497744.Date_First_Seen_Min_)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP6497744.Date_First_Seen_Min_,__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13696)));
      SELF := __PP6497744;
    END;
    SELF.Util_List_ := __PROJECT(__EE6496182,__ND6497748__Project(LEFT));
    __EE6496222 := __PP6496228.Exp1_;
    __ST101019_Layout __ND6497772__Project(__ST6463407_Layout __PP6497768) := TRANSFORM
      SELF.S_S_N_ := __PP6497768.O_N_L_Y___S_S_N_;
      SELF.Z_I_P5_ := __PP6497768.O_N_L_Y___Z_I_P5_;
      SELF.Last_Name_ := __PP6497768.O_N_L_Y___Last_Name_;
      SELF.First_Name_ := __PP6497768.O_N_L_Y___First_Name_;
      SELF.Personal_Phone_Number_ := __PP6497768.O_N_L_Y___Personal_Phone_Number_;
      SELF.Date_Of_Birth_ := __PP6497768.O_N_L_Y___Date_Of_Birth_;
      SELF.Primary_Range_ := __PP6497768.O_N_L_Y___Primary_Range_;
      SELF.Predirectional_ := __PP6497768.O_N_L_Y___Predirectional_;
      SELF.Primary_Name_ := __PP6497768.O_N_L_Y___Primary_Name_;
      SELF.Suffix_ := __PP6497768.O_N_L_Y___Suffix_;
      SELF.Secondary_Range_ := __PP6497768.O_N_L_Y___Secondary_Range_;
      SELF := __PP6497768;
    END;
    SELF.Velocity_Inquiries_Per_Lex_I_D_F_C_R_A_ := __PROJECT(__EE6496222,__ND6497772__Project(LEFT));
    __EE6496226 := __PP6496228.Exp2_;
    __ST96650_Layout __ND6497827__Project(__ST6472198_Layout __PP6497823) := TRANSFORM
      SELF.S_S_N_ := __PP6497823.O_N_L_Y___S_S_N_;
      SELF.Z_I_P5_ := __PP6497823.O_N_L_Y___Z_I_P5_;
      SELF.Last_Name_ := __PP6497823.O_N_L_Y___Last_Name_;
      SELF.First_Name_ := __PP6497823.O_N_L_Y___First_Name_;
      SELF.Personal_Phone_Number_ := __PP6497823.O_N_L_Y___Personal_Phone_Number_;
      SELF.Date_Of_Birth_ := __PP6497823.O_N_L_Y___Date_Of_Birth_;
      SELF.Primary_Range_ := __PP6497823.O_N_L_Y___Primary_Range_;
      SELF.Predirectional_ := __PP6497823.O_N_L_Y___Predirectional_;
      SELF.Primary_Name_ := __PP6497823.O_N_L_Y___Primary_Name_;
      SELF.Suffix_ := __PP6497823.O_N_L_Y___Suffix_;
      SELF.Secondary_Range_ := __PP6497823.O_N_L_Y___Secondary_Range_;
      SELF.Email_Address_ := __PP6497823.O_N_L_Y___Email_Address_;
      SELF := __PP6497823;
    END;
    SELF.Velocity_Inquiries_Per_Lex_I_D_Non_F_C_R_A_ := __PROJECT(__EE6496226,__ND6497827__Project(LEFT));
    __EE6497884 := __PP6496228.Ver_Source_List_;
    __EE6497909 := PROJECT(TABLE(PROJECT(__T(__EE6497884),__ST98151_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Translated_Source_Code_,Source_Date_First_Seen_,First_Seen_Date_,Source_Date_Last_Seen_},Translated_Source_Code_,Source_Date_First_Seen_,First_Seen_Date_,Source_Date_Last_Seen_,MERGE),__ST98151_Layout);
    __EE6497919 := TOPN(__EE6497909(__NN(__EE6497909.First_Seen_Date_) AND __NN(__EE6497909.Translated_Source_Code_)),32,__T(__EE6497909.First_Seen_Date_),__T(__EE6497909.Translated_Source_Code_),__T(Source_Date_First_Seen_),__T(Source_Date_Last_Seen_));
    SELF.Ver_Source_List_Sorted_ := __CN(__EE6497919(__NN(Translated_Source_Code_) OR __NN(Source_Date_First_Seen_) OR __NN(First_Seen_Date_) OR __NN(Source_Date_Last_Seen_)));
    __EE6496186 := __PP6496228.Verified_First_Name_Sources_With_Dates_;
    __BS6497926 := __T(__EE6496186);
    __EE6497937 := __BS6497926(__T(__OR(__OR(__T(__EE6496186).Valid_Bankruptcy_Sources_,__T(__EE6496186).Valid_Liens_Sources_),__T(__EE6496186).Other_Sources_)));
    SELF.Verified_First_Name_Sources_F_C_R_A_ := __CN(__EE6497937);
    __EE6496190 := __PP6496228.Verified_Last_Name_Sources_With_Dates_;
    __BS6497945 := __T(__EE6496190);
    __EE6497956 := __BS6497945(__T(__OR(__OR(__T(__EE6496190).Valid_Bankruptcy_Sources_,__T(__EE6496190).Valid_Liens_Sources_),__T(__EE6496190).Other_Sources_)));
    SELF.Verified_Last_Name_Sources_F_C_R_A_ := __CN(__EE6497956);
    SELF := __PP6496228;
  END;
  EXPORT __ENH_Person_3 := PROJECT(PROJECT(__EE6496159,__ND6496232__Project(LEFT)),__ST303401_Layout);
END;
