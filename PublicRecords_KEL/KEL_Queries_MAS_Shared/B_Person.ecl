//HPCC Systems KEL Compiler Version 1.6.0
IMPORT KEL16 AS KEL;
IMPORT B_Person_1,B_Person_2,B_Person_6,B_Person_S_S_N_1,B_Person_S_S_N_2,CFG_Compile,E_Address,E_Geo_Link,E_Person,E_Person_Address,E_Person_S_S_N,E_Social_Security_Number,E_Zip_Code,FN_Compile FROM PublicRecords_KEL.KEL_Queries_MAS_Shared;
IMPORT * FROM KEL16.Null;
EXPORT B_Person(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Person_1(__in,__cfg).__ENH_Person_1) __ENH_Person_1 := B_Person_1(__in,__cfg).__ENH_Person_1;
  SHARED VIRTUAL TYPEOF(B_Person_S_S_N_1(__in,__cfg).__ENH_Person_S_S_N_1) __ENH_Person_S_S_N_1 := B_Person_S_S_N_1(__in,__cfg).__ENH_Person_S_S_N_1;
  SHARED __EE194991 := __ENH_Person_1;
  SHARED __ST176208_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_2(__in,__cfg).__ST150728_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_2(__in,__cfg).__ST150741_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_1(__in,__cfg).__ST150907_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.nstr Best_First_Name_;
    KEL.typ.nstr Best_Last_Name_;
    KEL.typ.nstr Best_Mid_Name_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Best_S_S_N_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST83777_Layout) Curr_Addr_Full_Set_;
    B_Person_6(__in,__cfg).__ST83777_Layout Current_;
    E_Person_Address(__in,__cfg).Address_Hierarchy_Layout Emerging_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.nstr Prep_Current_Addr_Full_;
    B_Person_6(__in,__cfg).__ST83777_Layout Previous_;
    KEL.typ.bool Person_S_S_N_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE194994 := __ENH_Person_S_S_N_1;
  SHARED __EE197374 := __EE194994(__EE194994.Is_Best_S_S_N_ AND __NN(__EE194994.Subject_));
  __JC197391(B_Person_1(__in,__cfg).__ST150877_Layout __EE194991, B_Person_S_S_N_2(__in,__cfg).__ST148552_Layout __EE197374) := __EEQP(__EE194991.UID,__EE197374.Subject_);
  __JF197391(B_Person_S_S_N_2(__in,__cfg).__ST148552_Layout __EE197374) := __NN(__EE197374.Subject_);
  SHARED __EE197392 := JOIN(__EE194991,__EE197374,__JC197391(LEFT,RIGHT),TRANSFORM(__ST176208_Layout,SELF:=LEFT,SELF.Person_S_S_N_:=__JF197391(RIGHT)),HASH,LEFT OUTER,KEEP(1));
  EXPORT __ST148045_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_2(__in,__cfg).__ST150728_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_2(__in,__cfg).__ST150741_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.ndataset(B_Person_1(__in,__cfg).__ST150907_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.nstr Emerging_Addr_Cnty_;
    KEL.typ.nstr Emerging_Addr_Geo_;
    KEL.typ.nstr Emerging_Addr_Pre_Dir_;
    KEL.typ.nstr Emerging_Addr_Prim_Name_;
    KEL.typ.nstr Emerging_Addr_Prim_Rng_;
    KEL.typ.nstr Emerging_Addr_Sec_Rng_;
    KEL.typ.nstr Emerging_Addr_Sffx_;
    KEL.typ.nstr Emerging_Addr_State_;
    KEL.typ.nstr Emerging_Addr_State_Code_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Emerging_Addr_Zip5_;
    KEL.typ.nstr Emerging_Postdirectional_;
    KEL.typ.nstr P_L___Best_D_O_B_;
    KEL.typ.nstr P_L___Best_Name_First_;
    KEL.typ.nstr P_L___Best_Name_Last_;
    KEL.typ.nstr P_L___Best_Name_Mid_;
    KEL.typ.nstr P_L___Best_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.str P___Lex_I_D_Seen_Flag_F_C_R_A_ := '';
    KEL.typ.nstr Prep_Current_Addr_City_;
    KEL.typ.nstr Prep_Current_Addr_Cnty_;
    KEL.typ.nstr Prep_Current_Addr_Date_First_Seen_;
    KEL.typ.nstr Prep_Current_Addr_Date_Last_Seen_;
    KEL.typ.nstr Prep_Current_Addr_Full_;
    KEL.typ.nstr Prep_Current_Addr_Geo_;
    KEL.typ.nstr Prep_Current_Addr_Lat_;
    KEL.typ.nstr Prep_Current_Addr_Lng_;
    KEL.typ.nstr Prep_Current_Addr_Pre_Dir_;
    KEL.typ.nstr Prep_Current_Addr_Prim_Name_;
    KEL.typ.nstr Prep_Current_Addr_Prim_Rng_;
    KEL.typ.nstr Prep_Current_Addr_Sec_Rng_;
    KEL.typ.nstr Prep_Current_Addr_Sffx_;
    KEL.typ.nstr Prep_Current_Addr_State_;
    KEL.typ.nstr Prep_Current_Addr_State_Code_;
    KEL.typ.nstr Prep_Current_Addr_Status_;
    KEL.typ.nstr Prep_Current_Addr_Type_;
    KEL.typ.nstr Prep_Current_Addr_Unit_Designation_;
    KEL.typ.nstr Prep_Current_Addr_Zip4_;
    KEL.typ.nstr Prep_Current_Addr_Zip5_;
    KEL.typ.nstr Prep_Current_Postdirectional_;
    KEL.typ.nstr Prep_Previous_Addr_City_;
    KEL.typ.nstr Prep_Previous_Addr_Cnty_;
    KEL.typ.nstr Prep_Previous_Addr_Date_First_Seen_;
    KEL.typ.nstr Prep_Previous_Addr_Date_Last_Seen_;
    KEL.typ.nstr Prep_Previous_Addr_Full_;
    KEL.typ.nstr Prep_Previous_Addr_Geo_;
    KEL.typ.nstr Prep_Previous_Addr_Lat_;
    KEL.typ.nstr Prep_Previous_Addr_Lng_;
    KEL.typ.nstr Prep_Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Prep_Previous_Addr_Prim_Name_;
    KEL.typ.nstr Prep_Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Prep_Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Prep_Previous_Addr_Sffx_;
    KEL.typ.nstr Prep_Previous_Addr_State_;
    KEL.typ.nstr Prep_Previous_Addr_State_Code_;
    KEL.typ.nstr Prep_Previous_Addr_Status_;
    KEL.typ.nstr Prep_Previous_Addr_Type_;
    KEL.typ.nstr Prep_Previous_Addr_Unit_Designation_;
    KEL.typ.nstr Prep_Previous_Addr_Zip4_;
    KEL.typ.nstr Prep_Previous_Addr_Zip5_;
    KEL.typ.nstr Prep_Previous_Postdirectional_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST148045_Layout __ND198356__Project(__ST176208_Layout __PP197393) := TRANSFORM
    SELF.Emerging_Addr_Cnty_ := __PP197393.Emerging_.County_Code_;
    SELF.Emerging_Addr_Geo_ := __PP197393.Emerging_.Geo_Blk_;
    SELF.Emerging_Addr_Pre_Dir_ := __PP197393.Emerging_.Predirectional_;
    SELF.Emerging_Addr_Prim_Name_ := __PP197393.Emerging_.Primary_Name_;
    SELF.Emerging_Addr_Prim_Rng_ := __PP197393.Emerging_.Primary_Range_;
    SELF.Emerging_Addr_Sec_Rng_ := __PP197393.Emerging_.Secondary_Range_;
    SELF.Emerging_Addr_Sffx_ := __PP197393.Emerging_.Suffix_;
    SELF.Emerging_Addr_State_ := __PP197393.Emerging_.State_;
    SELF.Emerging_Addr_State_Code_ := __PP197393.Emerging_.State_Code_;
    SELF.Emerging_Addr_Zip5_ := __PP197393.Emerging_.Z_I_P5_;
    SELF.Emerging_Postdirectional_ := __PP197393.Emerging_.Postdirectional_;
    __CC14000 := '-99999';
    __CC14005 := '-99998';
    SELF.P_L___Best_D_O_B_ := MAP(__PP197393.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14000)),__T(__NT(__PP197393.Best_D_O_B_))=>__ECAST(KEL.typ.nstr,__CN(__CC14005)),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP197393.Best_D_O_B_,__CN('%Y%m%d'))));
    SELF.P_L___Best_Name_First_ := MAP(__PP197393.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14000)),__T(__OR(__OP2(__PP197393.Best_First_Name_,=,__CN('')),__NT(__PP197393.Best_First_Name_)))=>__ECAST(KEL.typ.nstr,__CN(__CC14005)),__ECAST(KEL.typ.nstr,__PP197393.Best_First_Name_));
    SELF.P_L___Best_Name_Last_ := MAP(__PP197393.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14000)),__T(__OR(__OP2(__PP197393.Best_Last_Name_,=,__CN('')),__NT(__PP197393.Best_Last_Name_)))=>__ECAST(KEL.typ.nstr,__CN(__CC14005)),__ECAST(KEL.typ.nstr,__PP197393.Best_Last_Name_));
    SELF.P_L___Best_Name_Mid_ := MAP(__PP197393.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14000)),__T(__OR(__OP2(__PP197393.Best_Mid_Name_,=,__CN('')),__NT(__PP197393.Best_Mid_Name_)))=>__ECAST(KEL.typ.nstr,__CN(__CC14005)),__ECAST(KEL.typ.nstr,__PP197393.Best_Mid_Name_));
    SELF.P_L___Best_S_S_N_ := MAP(__PP197393.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC14000)), NOT (__PP197393.Person_S_S_N_)=>__ECAST(KEL.typ.nstr,__CN(__CC14005)),__ECAST(KEL.typ.nstr,__CAST(KEL.typ.str,__PP197393.Best_S_S_N_)));
    __CC74302 := 3652;
    __BS197827 := __T(__PP197393.Data_Sources_);
    __CC46173 := 2556;
    __BS197863 := __T(__PP197393.Data_Sources_);
    __BS197899 := __T(__PP197393.Data_Sources_);
    SELF.P___Lex_I_D_Seen_Flag_F_C_R_A_ := IF(EXISTS(__BS197827(__T(__AND(__NOT(__NT(__T(__PP197393.Data_Sources_).Header_Hit_Flag_)),__AND(__T(__PP197393.Data_Sources_).Header_Hit_Flag_,__AND(__OP2(__T(__PP197393.Data_Sources_).Source_,=,__CN('BA')),__AND(__OP2(__T(__PP197393.Data_Sources_).Age_In_Days_,<=,__CN(__CC74302)),__NOT(__NT(__T(__PP197393.Data_Sources_).Age_In_Days_))))))))) OR EXISTS(__BS197863(__T(__AND(__NOT(__NT(__T(__PP197393.Data_Sources_).Header_Hit_Flag_)),__AND(__T(__PP197393.Data_Sources_).Header_Hit_Flag_,__AND(__OP2(__T(__PP197393.Data_Sources_).Source_,=,__CN('L2')),__AND(__OP2(__T(__PP197393.Data_Sources_).Age_In_Days_,<=,__CN(__CC46173)),__NOT(__NT(__T(__PP197393.Data_Sources_).Age_In_Days_))))))))) OR EXISTS(__BS197899(__T(__AND(__NOT(__NT(__T(__PP197393.Data_Sources_).Header_Hit_Flag_)),__AND(__T(__PP197393.Data_Sources_).Header_Hit_Flag_,__AND(__OP2(__T(__PP197393.Data_Sources_).Source_,<>,__CN('BA')),__OP2(__T(__PP197393.Data_Sources_).Source_,<>,__CN('L2')))))))),'1','0');
    SELF.Prep_Current_Addr_City_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Postal_City_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Cnty_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.County_Code_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Date_First_Seen_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP197393.Current_.Hierarchy_Date_First_Seen_,__CN('%Y%m%d'))),__N(KEL.typ.str));
    __CC13181 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
    SELF.Prep_Current_Addr_Date_Last_Seen_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(__PP197393.Current_.Hierarchy_Date_Last_Seen_,__CC13181),__CN('%Y%m%d'))),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Geo_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Geo_Blk_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Lat_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Latitude_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Lng_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Longitude_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Pre_Dir_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Predirectional_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Prim_Name_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Primary_Name_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Prim_Rng_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Primary_Range_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Sec_Rng_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Secondary_Range_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Sffx_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Suffix_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_State_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.State_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_State_Code_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.State_Code_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Status_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Address_Status_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Type_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Address_Type_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Unit_Designation_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Unit_Designation_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Zip4_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Z_I_P4_),__N(KEL.typ.str));
    SELF.Prep_Current_Addr_Zip5_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Z_I_P5_),__N(KEL.typ.str));
    SELF.Prep_Current_Postdirectional_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Current_.Postdirectional_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_City_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Postal_City_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Cnty_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.County_Code_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Date_First_Seen_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,__PP197393.Previous_.Hierarchy_Date_First_Seen_,__CN('%Y%m%d'))),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Date_Last_Seen_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(__PP197393.Previous_.Hierarchy_Date_Last_Seen_,__CC13181),__CN('%Y%m%d'))),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Full_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Addr_Full_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Geo_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Geo_Blk_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Lat_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Latitude_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Lng_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Longitude_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Pre_Dir_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Predirectional_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Prim_Name_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Primary_Name_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Prim_Rng_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Primary_Range_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Sec_Rng_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Secondary_Range_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Sffx_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Suffix_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_State_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.State_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_State_Code_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.State_Code_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Status_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Address_Status_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Type_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Address_Type_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Unit_Designation_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Unit_Designation_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Zip4_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Z_I_P4_),__N(KEL.typ.str));
    SELF.Prep_Previous_Addr_Zip5_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Z_I_P5_),__N(KEL.typ.str));
    SELF.Prep_Previous_Postdirectional_ := IF(__PP197393.P___Lex_I_D_Seen_Flag_ = '1',__ECAST(KEL.typ.nstr,__PP197393.Previous_.Postdirectional_),__N(KEL.typ.str));
    SELF := __PP197393;
  END;
  EXPORT __ENH_Person := PROJECT(__EE197392,__ND198356__Project(LEFT));
END;
