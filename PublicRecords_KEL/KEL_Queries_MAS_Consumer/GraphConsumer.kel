#OPTION(keyfetchlimit, 10000) // Maximum number of rows to return for any key fetch. HPCC Defaults to 10,000
#OPTION(keyfetchlimitaction, 'atmost') // Instead of using LIMIT(N) for ECL JOIN's, use ATMOST(N). The N is specified by the keyfetchlimit #OPTION above.

// --- ENTITY Definitions Section --- 
IMPORT KnowledgeUniverse.PublicRecords_KEL.Entities;

// --- USE Statements Section ---
IMPORT PublicRecords_KEL.Uses;

// --- Attributes Section --- 
IMPORT KnowledgeUniverse.PublicRecords_KEL.Attributes; 

//Consumer FCRA and nonFCRA only


QUERY: InputAttributesV1Dynamic(DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset, 
					DATE P_InpClnArchDt, 
					PERMITS DPM,BOOLEAN isFCRA) <= InputPII{
		G_ProcUID := UID, 
		P_InpAcct := InputAccountValue,
		P_InpLexID := InputLexIDValue, 
		P_InpNameFirst := InputFirstNameValue, 
		P_InpNameMid := InputMiddleNameValue,
		P_InpNameLast := InputLastNameValue, 
		P_InpAddrLine1 := InputStreetValue,
		P_InpAddrLine2 := P_InpAddrLine2Value,
		P_InpAddrCity := InputCityValue,
		P_InpAddrState := InputStateValue, 
		P_InpAddrZip := InputZipValue, 
		P_InpSSN := InputSSNValue,
		P_InpDOB := InputDOBValue,
		P_InpDL := InputDLValue,
		P_InpDLState := InputDLStateValue,
		P_InpPhoneHome := InputHomePhoneValue, 
		P_InpPhoneWork := InputWorkPhoneValue, 
		P_InpEmail := InputEmailValue,
		P_InpIPAddr := InputIPAddrValue,
		P_InpArchDt := InputArchiveDateValue,
		P_InpAcctFlag := P_InpAcctFlagValue,
		P_InpLexIDFlag := P_InpLexIDFlagValue, 
		P_InpNameFirstFlag := P_InpNameFirstFlagValue,
		P_InpNameMidFlag := P_InpNameMidFlagValue,
		P_InpNameLastFlag := P_InpNameLastFlagValue,   
		P_InpAddrStFlag := P_InpAddrStFlagValue, 
		P_InpAddrCityFlag := P_InpAddrCityFlagValue,
		P_InpAddrStateFlag := P_InpAddrStateFlagValue, 
		P_InpAddrZipFlag := P_InpAddrZipFlagValue,
		P_InpSSNFlag := P_InpSSNFlagValue,   
		P_InpDOBFlag := P_InpDOBFlagValue,  
		P_InpDLFlag := P_InpDLFlagValue,  
		P_InpDLStateFlag := P_InpDLStateFlagValue,  
		P_InpPhoneHomeFlag := P_InpPhoneHomeFlagValue, 
		P_InpPhoneWorkFlag := P_InpPhoneWorkFlagValue,
		P_InpEmailFlag := P_InpEmailFlagValue, 
		P_InpIPAddrFlag := P_InpIPAddrFlagValue,
		P_InpArchDtFlag := P_InpArchDtFlagValue,
		P_LexID,
		P_LexIDScore, 
		P_InpClnNamePrfx := InputPrefixCleanValue,
		P_InpClnNameFirst := InputFirstNameCleanValue,
		P_InpClnNameMid := InputMiddleNameCleanValue,
		P_InpClnNameLast := InputLastNameCleanValue,
		P_InpClnNameSffx := InputSuffixCleanValue, 
		P_InpClnAddrPrimRng := InputPrimaryRangeCleanValue,
		P_InpClnAddrPreDir := InputPreDirectionCleanValue, 
		P_InpClnAddrPrimName := InputPrimaryNameCleanValue,
		P_InpClnAddrSffx := InputAddressSuffixCleanValue, 
		P_InpClnAddrPostDir := InputPostDirectionCleanValue,
		P_InpClnAddrUnitDesig := InputUnitDesigCleanValue, 
		P_InpClnAddrSecRng := InputSecondaryRangeCleanValue,
		P_InpClnAddrCity := InputCityCleanValue, 
		P_InpClnAddrCityPost := InputCityPostCleanValue, 
		P_InpClnAddrState := InputStateCleanValue, 
		P_InpClnAddrZip5 := InputZip5CleanValue,
		P_InpClnAddrZip4 := InputZip4CleanValue, 
		P_InpClnAddrSt := InputStreetCleanValue,
		P_InpClnAddrFull := InputFullAddressCleanValue,
		P_InpClnAddrLat := InputLatitudeCleanValue, 
		P_InpClnAddrLng := InputLongitudeCleanValue, 
		P_InpClnAddrStateCode := InputStateCodeCleanValue, 
		P_InpClnAddrCnty := InputCountyCleanValue, 
		P_InpClnAddrGeo := InputGeoblockCleanValue, 
		P_InpClnAddrType := InputAddressTypeCleanValue, 
		P_InpClnAddrStatus := InputAddressStatusCleanValue,
		P_InpClnAddrLocID,
		P_InpClnSSN := InputSSNCleanValue,
		P_InpClnDOB := InputDOBCleanValue,
		P_InpClnDL := InputDLCleanValue,
		P_InpClnDLState := InputDLStateCleanValue,
		P_InpClnPhoneHome := InputHomePhoneCleanValue, 
		P_InpClnPhoneWork := InputWorkPhoneCleanValue,
		P_InpClnEmail :=InputEmailCleanValue, 
		P_InpClnArchDt := InputArchiveDateCleanValue,
		P_InpClnNamePrfxFlag := P_InpClnNamePrfxFlagValue, 
		P_InpClnNameFirstFlag := P_InpClnNameFirstFlagValue,
		P_InpClnNameMidFlag := P_InpClnNameMidFlagValue,
		P_InpClnNameLastFlag := P_InpClnNameLastFlagValue,
		P_InpClnNameSffxFlag := P_InpClnNameSffxFlagValue,
		P_InpClnAddrPrimRngFlag := P_InpClnAddrPrimRngFlagValue,
		P_InpClnAddrPreDirFlag := P_InpClnAddrPreDirFlagValue,
		P_InpClnAddrPrimNameFlag := P_InpClnAddrPrimNameFlagValue,
		P_InpClnAddrSffxFlag := P_InpClnAddrSffxFlagValue,
		P_InpClnAddrPostDirFlag := P_InpClnAddrPostDirFlagValue,
		P_InpClnAddrUnitDesigFlag := P_InpClnAddrUnitDesigFlagValue,
		P_InpClnAddrSecRngFlag := P_InpClnAddrSecRngFlagValue,
		P_InpClnAddrCityFlag := P_InpClnAddrCityFlagValue,
		P_InpClnAddrCityPostFlag := P_InpClnAddrCityPostFlagValue,
		P_InpClnAddrStateFlag := P_InpClnAddrStateFlagValue,
		P_InpClnAddrZip5Flag := P_InpClnAddrZip5FlagValue,
		P_InpClnAddrZip4Flag := P_InpClnAddrZip4FlagValue,
		P_InpValAddrZipBadLenFlag := P_InpValAddrZipBadLenFlagValue,
		P_InpValAddrZipAllZeroFlag := P_InpValAddrZipAllZeroFlagValue,
		P_InpValAddrStateBadAbbrFlag := P_InpValAddrStateBadAbbrFlagValue,
		P_InpClnAddrStFlag := P_InpClnAddrStFlagValue,
		P_InpClnAddrFullFlag := P_InpClnAddrFullFlagValue,
		P_InpClnAddrLatFlag := P_InpClnAddrLatFlagValue,
		P_InpClnAddrLngFlag := P_InpClnAddrLngFlagValue,
		P_InpClnAddrCntyFlag := P_InpClnAddrCntyFlagValue,
		P_InpClnAddrGeoFlag := P_InpClnAddrGeoFlagValue,
		P_InpClnAddrTypeFlag := P_InpClnAddrTypeFlagValue,
		P_InpClnAddrStatusFlag := P_InpClnAddrStatusFlagValue,
		P_InpClnSSNFlag := P_InpClnSSNFlagValue,
		P_InpValSSNBadCharFlag := P_InpValSSNBadCharFlagValue,
		P_InpValSSNBadLenFlag := P_InpValSSNBadLenFlagValue,
		P_InpValSSNBogusFlag := P_InpValSSNBogusFlagValue,
		P_InpValSSNNonSSAFlag := P_InpValSSNNonSSAFlagValue,
		P_InpValSSNIsITINFlag := P_InpValSSNIsITINFlagValue,
		P_InpSSNIs4Digits,
		P_InpClnDOBFlag := P_InpClnDOBFlagValue,
		P_InpClnDLFlag := P_InpClnDLFlagValue,
		P_InpClnDLStateFlag := P_InpClnDLStateFlagValue,
		P_InpClnPhoneHomeFlag := P_InpClnPhoneHomeFlagValue,
		P_InpClnPhoneWorkFlag := P_InpClnPhoneWorkFlagValue,
		P_InpClnEmailFlag := P_InpClnEmailFlagValue,
		P_InpClnIPAddrFlag := P_InpClnIPAddrFlagValue,
		P_InpValEmailBogusFlag := P_InpValEmailBogusFlagValue,
		P_InpValEmailUserAllZeroFlag := P_InpValEmailUserAllZeroFlagValue,
		P_InpValEmailUserBadCharFlag := P_InpValEmailUserBadCharFlagValue,
		P_InpValEmailDomAllZeroFlag := P_InpValEmailDomAllZeroFlagValue,
		P_InpValEmailDomBadCharFlag := P_InpValEmailDomBadCharFlagValue,
		P_InpClnEmailUser := P_InpClnEmailUser,
		P_InpClnEmailDom := P_InpClnEmailDom,
		P_InpClnEmailExt := P_InpClnEmailExt,
		P_InpClnIPAddr,
		P_InpClnArchDtFlag := P_InpClnArchDtFlagValue,
		P_InpValNameBogusFlag,
		P_InpValPhoneHomeBadCharFlag,
		P_InpValPhoneHomeBadLenFlag,
		P_InpValPhoneHomeBogusFlag,
		P_InpValPhoneWorkBadCharFlag,
		P_InpValPhoneWorkBadLenFlag,
		P_InpValPhoneWorkBogusFlag,
		P_InpValNameInvalidFlag,
		P_InpValAddrStInvalidFlag,
		P_InpValPhoneHomeInvalidFlag,
		P_InpValPhoneWorkInvalidFlag,
		P_InpValSSNInvalidFlag,
		P_InpValDLInvalidFlag,
		P_InpValDLStateInvalidFlag,
		P_InpValDOBInvalidFlag,
		P_InpValEmailInvalidFlag,
		P_InpValArchDtInvalidFlag,
		// InputAddressCharacteristics Attributes
		PI_InpAddrAVMVal,
		PI_InpAddrAVMValA1Y,
		PI_InpAddrAVMRatio1Y,
		PI_InpAddrAVMValA5Y,
		PI_InpAddrAVMRatio5Y,
		PI_InpAddrAVMConfScore,
		PI_InpAddrOnFileFlagEv,
		PI_InpAddrIsVacantFlag,
		PI_InpAddrIsThrowbackFlag,
		PI_InpAddrSeasonalType,
		PI_InpAddrIsDNDFlag,
		PI_InpAddrIsCollegeFlag,
		PI_InpAddrIsCMRAFlag,
		PI_InpAddrIsSimpAddrFlag,
		PI_InpAddrIsDropDeliveryFlag,
		PI_InpAddrIsBusinessFlag,
		PI_InpAddrOWGMFlag,
		PI_InpAddrIsMultiUnitFlag,
		PI_InpAddrIsAptFlag,
		PI_InpDOBAge,
		PI_InpSSNIsDeceasedFlag,
		PI_InpSSNDeceasedDt,
		PI_InpAddrStateDLAvailFlag := PI_InpAddrStateDLAvailFlag_NonFCRA,
		PI_InpAddrStateVoterAvailFlag,
		//InputPhoneCharacteristics Attributes
		PI_InpPhoneSICCodeHRList,
		PI_InpPhoneNAICSCodeHRList,
		PI_InpPhoneIsHRCorrectFacFlag,
		PI_InpPhoneType,
		PI_InpPhoneIsBusPhoneFlag,
		//Input SSN inquiry attributes
		PI_SrchPerInpSSNCnt1Y,
		PI_SrchLexIDPerInpSSNCnt1Y,
		PI_SrchLNamePerInpSSNCnt1Y,
		PI_SrchAddrPerInpSSNCnt1Y,
		PI_SrchDOBPerInpSSNCnt1Y,
		PI_SrchPerInpAddrCnt1Y,
		PI_SrchLexIDPerInpAddrCnt1Y,
		PI_SrchLNamePerInpAddrCnt1Y,
		PI_SrchSSNPerInpAddrCnt1Y,
		//Input Email inquiry attributes
		PI_SrchPerInpEmailCnt1Y,
		PI_SrchLexIDPerInpEmailCnt1Y,
 		//InputPII Characteristics
		// PI_InpAddrIsPOBoxFlag,
		// PI_InpAddrIsMilitaryFlag,
		//Input Phone Inquiry
		PI_SrchPerInpPhoneCnt1Y,
		PI_SrchLexIDPerInpPhoneCnt1Y,
		//Input Address Attributes
/*KS-6100
		PI_InpAddrOldDt,
		PI_InpAddrNewDt, 
		PI_InpAddrSubjFlag := IF(isFCRA AND Subject.P_LexIDSeenFlagFCRA = '0',MISSING_INPUT_DATA_INT,PI_InpAddrSubjFlag),
		PI_InpAddrSubjOldDt := IF(isFCRA AND Subject.P_LexIDSeenFlagFCRA = '0',MISSING_INPUT_DATA,PI_InpAddrSubjOldDt),
		PI_InpAddrSubjNewDt := IF(isFCRA AND Subject.P_LexIDSeenFlagFCRA = '0',MISSING_INPUT_DATA,PI_InpAddrSubjNewDt),
		PI_InpAddrSubjOldMsnc := IF(isFCRA AND Subject.P_LexIDSeenFlagFCRA = '0',MISSING_INPUT_DATA_INT,PI_InpAddrSubjOldMsnc),
		PI_InpAddrSubjNewMsnc := IF(isFCRA AND Subject.P_LexIDSeenFlagFCRA = '0',MISSING_INPUT_DATA_INT,PI_InpAddrSubjNewMsnc),
		PI_InpAddrSubjResSpan := IF(isFCRA AND Subject.P_LexIDSeenFlagFCRA = '0',MISSING_INPUT_DATA_INT,PI_InpAddrSubjResSpan),
*/		
		G_ProcBusUID,
		RepNumber := IRepNumberValue,
		PhoneVerificationBureau,
		DialIndicator,
		PointID,
		NXXType,
		ZIPMatch ,
		COCType,
		SSC,
		WirelessIndicator,
		IPaddr := ipaddr,
		IPresponse := ipresponse,
		NetAcuityRoyalty := netacuityroyalty,
		PI_AlrtInpNameWatchlistRecNum := PI_AlrtInpNameWatchlistRecNum,
		PI_AlrtInpNameOnWatchlistFlag := PI_AlrtInpNameOnWatchlistFlag,
		TargusRoyalty := TargusRoyalty,
		TargusSrc := TargusSrc,
		InsPhoneHit := InsPhoneHit,
		InsPhoneSrc := InsPhoneSrc
		}
	ASOF DynamicArchive(P_InpClnArchDt)
	USING DPM
	USE InputPIIDataset(FLAT, 
			InputPII(UID = G_ProcUID, Subject = P_LexID, InputCleanSSN = P_InpClnSSN, InputCleanEmail = P_InpClnEmail, InputCleanPhone = P_InpClnPhoneHome, SocialSummary = P_InpClnSSN, TelephoneSummary = P_InpClnPhoneHome, ZIP5 = P_InpClnAddrZip5));// We are linking the Input PII to the Person ENTITY via the G_ProcUID


