//HPCC Systems KEL Compiler Version 1.5.0rc1
IMPORT KEL15 AS KEL;
IMPORT B_Address_1,B_Address_2,B_Aircraft_Owner_2,B_Bankruptcy_2,B_Bankruptcy_3,B_Bankruptcy_4,B_Input_P_I_I_1,B_Input_P_I_I_2,B_Input_P_I_I_3,B_Input_P_I_I_4,B_Inquiry_4,B_Person_1,B_Person_10,B_Person_2,B_Person_3,B_Person_4,B_Person_5,B_Person_6,B_Person_Accident_8,B_Person_Inquiry_3,B_Person_Inquiry_4,B_Person_Inquiry_5,B_Person_Property_2,B_Person_Property_3,B_Person_Property_7,B_Property_3,B_Property_4,B_Watercraft_Owner_2,CFG_Compile,E_Accident,E_Address,E_Address_Slim,E_Address_Summary,E_Aircraft,E_Aircraft_Owner,E_Bankruptcy,E_Email,E_Geo_Link,E_Household,E_Input_P_I_I,E_Inquiry,E_Name_Summary,E_Person,E_Person_Accident,E_Person_Address,E_Person_Bankruptcy,E_Person_Inquiry,E_Person_Property,E_Person_Property_Event,E_Phone,E_Phone_Summary,E_Professional_License,E_Professional_License_Person,E_Property,E_Property_Event,E_S_S_N_Summary,E_Social_Security_Number,E_Surname,E_Utility,E_Watercraft,E_Watercraft_Owner,E_Zip_Code,FN_Compile FROM PublicRecords_KEL;
IMPORT * FROM KEL15.Null;
EXPORT B_Input_P_I_I(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Address_1(__in,__cfg).__ENH_Address_1) __ENH_Address_1 := B_Address_1(__in,__cfg).__ENH_Address_1;
  SHARED VIRTUAL TYPEOF(B_Input_P_I_I_1(__in,__cfg).__ENH_Input_P_I_I_1) __ENH_Input_P_I_I_1 := B_Input_P_I_I_1(__in,__cfg).__ENH_Input_P_I_I_1;
  SHARED VIRTUAL TYPEOF(B_Person_1(__in,__cfg).__ENH_Person_1) __ENH_Person_1 := B_Person_1(__in,__cfg).__ENH_Person_1;
  SHARED VIRTUAL TYPEOF(E_Social_Security_Number(__in,__cfg).__Result) __E_Social_Security_Number := E_Social_Security_Number(__in,__cfg).__Result;
  SHARED VIRTUAL TYPEOF(E_Zip_Code(__in,__cfg).__Result) __E_Zip_Code := E_Zip_Code(__in,__cfg).__Result;
  SHARED __EE10304979 := __ENH_Input_P_I_I_1;
  SHARED __EE10308289 := __EE10304979;
  SHARED __EE10308322 := __EE10308289;
  SHARED __ST4241725_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84028_Layout) Person_Info_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST4241725_Layout __JT10308330(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __l, B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout __r) := TRANSFORM
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10308642 := NORMALIZE(__EE10308322,__T(LEFT.Good_Inquiries_Last_Year_For_S_S_N_),__JT10308330(LEFT,RIGHT));
  SHARED __EE10359137 := __EE10308642;
  SHARED __ST4242904_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84028_Layout) Person_Info_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr Last_Name__1_;
    KEL.typ.nstr Combined_Address_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Z_I_P5__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST4242904_Layout __JT10359205(__ST4241725_Layout __l, B_Input_P_I_I_2(__in,__cfg).__ST84028_Layout __r) := TRANSFORM
    SELF.Last_Name__1_ := __r.Last_Name_;
    SELF.Z_I_P5__1_ := __r.Z_I_P5_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10359206 := NORMALIZE(__EE10359137,__T(LEFT.Person_Info_),__JT10359205(LEFT,RIGHT));
  SHARED __EE10359531 := __EE10359206;
  SHARED __ST4236015_Layout := RECORD
    KEL.typ.nuid ____grp___U_I_D_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr Combined_Address_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST4236015_Layout __ND10359536__Project(__ST4242904_Layout __PP10359532) := TRANSFORM
    SELF.____grp___U_I_D_ := __PP10359532.UID;
    SELF.Last_Name_ := __PP10359532.Last_Name__1_;
    SELF.Z_I_P5_ := __PP10359532.Z_I_P5__1_;
    SELF := __PP10359532;
  END;
  SHARED __EE10359569 := PROJECT(TABLE(PROJECT(__EE10359531,__ND10359536__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),____grp___U_I_D_,Lex_I_D_,Last_Name_,Combined_Address_,Date_Of_Birth_,Primary_Name_,Primary_Range_,Z_I_P5_},____grp___U_I_D_,Lex_I_D_,Last_Name_,Combined_Address_,Date_Of_Birth_,Primary_Name_,Primary_Range_,Z_I_P5_,MERGE),__ST4236015_Layout);
  SHARED __EE10359572 := __EE10359569;
  SHARED __EE10359582 := GROUP(__EE10359572,____grp___U_I_D_,ALL);
  SHARED __EE10359585 := __EE10359582;
  SHARED __EE10366051 := UNGROUP(TOPN(__EE10359585(__NN(__EE10359585.Lex_I_D_) AND __NN(KEL.era.EpochToNTimestamp(__EE10359585.Date_First_Seen_))),999, -__T(__EE10359585.Lex_I_D_),__T(KEL.era.EpochToNTimestamp(__EE10359585.Date_First_Seen_)),__T(____grp___U_I_D_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Primary_Name_),__T(Z_I_P5_),__T(Combined_Address_)));
  SHARED __ST4237393_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10359621 := PROJECT(TABLE(PROJECT(__EE10366051,TRANSFORM(__ST4237393_Layout,SELF.UID := LEFT.____grp___U_I_D_,SELF := LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Lex_I_D_},UID,Lex_I_D_,MERGE),__ST4237393_Layout);
  SHARED __ST4237412_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid UID;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10359634 := PROJECT(__CLEANANDDO(__EE10359621,TABLE(__EE10359621,{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST4237412_Layout);
  SHARED __ST4245613_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10359640(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __EE10304979, __ST4237412_Layout __EE10359634) := __EEQP(__EE10304979.UID,__EE10359634.UID);
  __ST4245613_Layout __JT10359640(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __l, __ST4237412_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10359641 := JOIN(__EE10304979,__EE10359634,__JC10359640(LEFT,RIGHT),__JT10359640(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __EE10310533 := __EE10304979;
  SHARED __ST4244117_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84489_Layout) Person_Info_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST4244117_Layout __JT10310547(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __l, B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout __r) := TRANSFORM
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10310853 := NORMALIZE(__EE10310533,__T(LEFT.Good_Inquiries_Last_Year_For_Email_),__JT10310547(LEFT,RIGHT));
  SHARED __ST4244460_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84489_Layout) Person_Info_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __ST4244460_Layout __JT10310861(__ST4244117_Layout __l, B_Input_P_I_I_2(__in,__cfg).__ST84489_Layout __r) := TRANSFORM
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10311168 := NORMALIZE(__EE10310853,__T(LEFT.Person_Info_),__JT10310861(LEFT,RIGHT));
  SHARED __ST4236565_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10311182 := PROJECT(TABLE(PROJECT(__EE10311168,__ST4236565_Layout),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Lex_I_D_},UID,Lex_I_D_,MERGE),__ST4236565_Layout);
  SHARED __ST4236584_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid UID;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10305106 := PROJECT(__CLEANANDDO(__EE10311182,TABLE(__EE10311182,{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Person_Info_ := COUNT(GROUP),UID},UID,MERGE)),__ST4236584_Layout);
  SHARED __ST4248212_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10359952(__ST4245613_Layout __EE10359641, __ST4236584_Layout __EE10305106) := __EEQP(__EE10359641.UID,__EE10305106.UID);
  __ST4248212_Layout __JT10359952(__ST4245613_Layout __l, __ST4236584_Layout __r) := TRANSFORM
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10359953 := JOIN(__EE10359641,__EE10305106,__JC10359952(LEFT,RIGHT),__JT10359952(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __EE10360264 := __EE10359582;
  SHARED __EE10360282 := UNGROUP(TOPN(__EE10360264(__NN(__EE10360264.Last_Name_) AND __NN(KEL.era.EpochToNTimestamp(__EE10360264.Date_First_Seen_))),999, -__T(__EE10360264.Last_Name_),__T(KEL.era.EpochToNTimestamp(__EE10360264.Date_First_Seen_)),__T(____grp___U_I_D_),__T(Lex_I_D_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Primary_Name_),__T(Z_I_P5_),__T(Combined_Address_)));
  SHARED __ST4235601_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Last_Name_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10360296 := PROJECT(TABLE(PROJECT(__EE10360282,TRANSFORM(__ST4235601_Layout,SELF.UID := LEFT.____grp___U_I_D_,SELF := LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Last_Name_},UID,Last_Name_,MERGE),__ST4235601_Layout);
  SHARED __ST4235620_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid UID;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10360309 := PROJECT(__CLEANANDDO(__EE10360296,TABLE(__EE10360296,{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST4235620_Layout);
  SHARED __ST4250811_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10360317(__ST4248212_Layout __EE10359953, __ST4235620_Layout __EE10360309) := __EEQP(__EE10359953.UID,__EE10360309.UID);
  __ST4250811_Layout __JT10360317(__ST4248212_Layout __l, __ST4235620_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Exp1__1_ := __r.C_O_U_N_T___Exp1_;
    SELF.U_I_D__3_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10360318 := JOIN(__EE10359953,__EE10360309,__JC10360317(LEFT,RIGHT),__JT10360317(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __EE10360632 := __EE10359582;
  SHARED __EE10366048 := UNGROUP(TOPN(__EE10360632(__NN(__EE10360632.Date_Of_Birth_) AND __NN(KEL.era.EpochToNTimestamp(__EE10360632.Date_First_Seen_))),999, -__T(__EE10360632.Date_Of_Birth_),__T(KEL.era.EpochToNTimestamp(__EE10360632.Date_First_Seen_)),__T(____grp___U_I_D_),__T(Lex_I_D_),__T(Last_Name_),__T(Primary_Range_),__T(Primary_Name_),__T(Z_I_P5_),__T(Combined_Address_)));
  SHARED __ST4234591_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10360662 := PROJECT(TABLE(PROJECT(__EE10366048,TRANSFORM(__ST4234591_Layout,SELF.UID := LEFT.____grp___U_I_D_,SELF := LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Date_Of_Birth_},UID,Date_Of_Birth_,MERGE),__ST4234591_Layout);
  SHARED __ST4234610_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid UID;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10360675 := PROJECT(__CLEANANDDO(__EE10360662,TABLE(__EE10360662,{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST4234610_Layout);
  SHARED __ST4253412_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10360683(__ST4250811_Layout __EE10360318, __ST4234610_Layout __EE10360675) := __EEQP(__EE10360318.UID,__EE10360675.UID);
  __ST4253412_Layout __JT10360683(__ST4250811_Layout __l, __ST4234610_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Exp1__2_ := __r.C_O_U_N_T___Exp1_;
    SELF.U_I_D__4_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10360684 := JOIN(__EE10360318,__EE10360675,__JC10360683(LEFT,RIGHT),__JT10360683(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __ST4242107_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.nstr Transaction_I_D_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84028_Layout) Person_Info_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr Last_Name__1_;
    KEL.typ.nstr Combined_Address_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Z_I_P5__1_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10366068(__ST4241725_Layout __EE10308642, B_Input_P_I_I_2(__in,__cfg).__ST84028_Layout __EE10308320) := __T(__OR(__NOT(__NT(__EE10308320.Z_I_P5_)),__OP2(__EE10308320.Z_I_P5_,=,__CN(''))));
  __ST4242107_Layout __JT10366068(__ST4241725_Layout __l, B_Input_P_I_I_2(__in,__cfg).__ST84028_Layout __r) := TRANSFORM, SKIP(NOT(__JC10366068(__l,__r)))
    SELF.Last_Name__1_ := __r.Last_Name_;
    SELF.Z_I_P5__1_ := __r.Z_I_P5_;
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10366069 := NORMALIZE(__EE10308642,__T(LEFT.Person_Info_),__JT10366068(LEFT,RIGHT));
  SHARED __ST4233977_Layout := RECORD
    KEL.typ.nuid ____grp___U_I_D_;
    KEL.typ.nint Lex_I_D_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr Combined_Address_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST4233977_Layout __ND10366396__Project(__ST4242107_Layout __PP10366070) := TRANSFORM
    SELF.____grp___U_I_D_ := __PP10366070.UID;
    SELF.Last_Name_ := __PP10366070.Last_Name__1_;
    SELF.Z_I_P5_ := __PP10366070.Z_I_P5__1_;
    SELF := __PP10366070;
  END;
  SHARED __EE10366429 := PROJECT(TABLE(PROJECT(__EE10366069,__ND10366396__Project(LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),____grp___U_I_D_,Lex_I_D_,Last_Name_,Combined_Address_,Date_Of_Birth_,Primary_Name_,Primary_Range_,Z_I_P5_},____grp___U_I_D_,Lex_I_D_,Last_Name_,Combined_Address_,Date_Of_Birth_,Primary_Name_,Primary_Range_,Z_I_P5_,MERGE),__ST4233977_Layout);
  SHARED __EE10366438 := GROUP(__EE10366429,____grp___U_I_D_,ALL);
  SHARED __EE10366451 := UNGROUP(TOPN(__EE10366438(__NN(__EE10366438.Combined_Address_) AND __NN(KEL.era.EpochToNTimestamp(__EE10366438.Date_First_Seen_))),999, -__T(__EE10366438.Combined_Address_),__T(KEL.era.EpochToNTimestamp(__EE10366438.Date_First_Seen_)),__T(____grp___U_I_D_),__T(Lex_I_D_),__T(Last_Name_),__T(Date_Of_Birth_),__T(Primary_Range_),__T(Primary_Name_),__T(Z_I_P5_)));
  SHARED __ST4233555_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Z_I_P5_;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10366473 := PROJECT(TABLE(PROJECT(__EE10366451,TRANSFORM(__ST4233555_Layout,SELF.UID := LEFT.____grp___U_I_D_,SELF := LEFT)),{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),UID,Primary_Range_,Primary_Name_,Z_I_P5_},UID,Primary_Range_,Primary_Name_,Z_I_P5_,MERGE),__ST4233555_Layout);
  SHARED __ST4233578_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid UID;
    KEL.typ.timestamp Archive___Date_ := 0;
    KEL.typ.timestamp Date_First_Seen_ := 0;
    KEL.typ.timestamp Date_Last_Seen_ := 0;
    KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10366486 := PROJECT(__CLEANANDDO(__EE10366473,TABLE(__EE10366473,{KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Exp1_ := COUNT(GROUP),UID},UID,MERGE)),__ST4233578_Layout);
  SHARED __ST4256013_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10366492(__ST4253412_Layout __EE10360684, __ST4233578_Layout __EE10366486) := __EEQP(__EE10360684.UID,__EE10366486.UID);
  __ST4256013_Layout __JT10366492(__ST4253412_Layout __l, __ST4233578_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Exp1__3_ := __r.C_O_U_N_T___Exp1_;
    SELF.U_I_D__5_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10366808 := JOIN(__EE10360684,__EE10366486,__JC10366492(LEFT,RIGHT),__JT10366492(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __EE10307567 := __E_Social_Security_Number;
  SHARED __EE10307542 := __EE10304979;
  SHARED __EE10307572 := __EE10307542;
  SHARED __EE10316197 := __EE10307572(__NN(__EE10307572.Input_Clean_S_S_N_));
  SHARED __ST4240943_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nkdate Official_First_Seen_;
    KEL.typ.nkdate Official_Last_Seen_;
    KEL.typ.nstr Issue_State_;
    KEL.typ.nkdate Header_First_Seen_;
    KEL.typ.ndataset(E_Social_Security_Number(__in,__cfg).Dates_Of_Death_Layout) Dates_Of_Death_;
    KEL.typ.ndataset(E_Social_Security_Number(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10316204(E_Social_Security_Number(__in,__cfg).Layout __EE10307567, B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __EE10316197) := __EEQP(__EE10316197.Input_Clean_S_S_N_,__EE10307567.UID);
  __ST4240943_Layout __JT10316204(E_Social_Security_Number(__in,__cfg).Layout __l, B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10316205 := JOIN(__EE10307567,__EE10316197,__JC10316204(LEFT,RIGHT),__JT10316204(LEFT,RIGHT),INNER,SMART);
  SHARED __ST4241322_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr S_S_N_;
    KEL.typ.nkdate Official_First_Seen_;
    KEL.typ.nkdate Official_Last_Seen_;
    KEL.typ.nstr Issue_State_;
    KEL.typ.nkdate Header_First_Seen_;
    KEL.typ.ndataset(E_Social_Security_Number(__in,__cfg).Dates_Of_Death_Layout) Dates_Of_Death_;
    KEL.typ.ndataset(E_Social_Security_Number(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.nkdate Date_Of_Death_;
    KEL.typ.nbool Death_Master_Flag_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10366814(__ST4240943_Layout __EE10316205, E_Social_Security_Number(__in,__cfg).Dates_Of_Death_Layout __EE10316525) := __T(__AND(__AND(__OP2(__EE10316525.Date_Of_Death_,<,KEL.Routines.FromNStringToNDate(__ECAST(KEL.typ.nstr,__EE10316205.P___Inp_Cln_Arch_Dt_),__CN('%Y%m%d'))),__FN1(KEL.Routines.IsValidDate,__EE10316525.Date_Of_Death_)),__EE10316525.Death_Master_Flag_));
  __ST4241322_Layout __JT10366814(__ST4240943_Layout __l, E_Social_Security_Number(__in,__cfg).Dates_Of_Death_Layout __r) := TRANSFORM, SKIP(NOT(__JC10366814(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10366815 := NORMALIZE(__EE10316205,__T(LEFT.Dates_Of_Death_),__JT10366814(LEFT,RIGHT));
  SHARED __ST4232917_Layout := RECORD
    KEL.typ.ntyp(E_Social_Security_Number().Typ) ____grp___Input_Clean_S_S_N_;
    KEL.typ.nint ____grp___P___Inp_Cln_Arch_Dt_;
    KEL.typ.nkdate Date_Of_Death_;
    KEL.typ.nbool Death_Master_Flag_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST4232917_Layout __ND10367136__Project(__ST4241322_Layout __PP10366816) := TRANSFORM
    SELF.____grp___Input_Clean_S_S_N_ := __PP10366816.Input_Clean_S_S_N_;
    SELF.____grp___P___Inp_Cln_Arch_Dt_ := __PP10366816.P___Inp_Cln_Arch_Dt_;
    SELF := __PP10366816;
  END;
  SHARED __EE10367153 := PROJECT(TABLE(PROJECT(__EE10366815,__ND10367136__Project(LEFT)),{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),____grp___Input_Clean_S_S_N_,____grp___P___Inp_Cln_Arch_Dt_,Date_Of_Death_,Death_Master_Flag_},____grp___Input_Clean_S_S_N_,____grp___P___Inp_Cln_Arch_Dt_,Date_Of_Death_,Death_Master_Flag_,MERGE),__ST4232917_Layout);
  SHARED __EE10367164 := GROUP(__EE10367153,____grp___Input_Clean_S_S_N_,____grp___P___Inp_Cln_Arch_Dt_,ALL);
  SHARED __EE10367174 := UNGROUP(TOPN(__EE10367164(__NN(__EE10367164.Date_Of_Death_)),1, -__T(__EE10367164.Date_Of_Death_),__T(____grp___Input_Clean_S_S_N_),__T(Death_Master_Flag_),__T(____grp___P___Inp_Cln_Arch_Dt_)));
  SHARED __ST4232459_Layout := RECORD
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nkdate Date_Of_Death_;
    KEL.typ.nbool Death_Master_Flag_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST4232459_Layout __ND10367179__Project(__ST4232917_Layout __PP10367175) := TRANSFORM
    SELF.Input_Clean_S_S_N_ := __PP10367175.____grp___Input_Clean_S_S_N_;
    SELF.P___Inp_Cln_Arch_Dt_ := __PP10367175.____grp___P___Inp_Cln_Arch_Dt_;
    SELF := __PP10367175;
  END;
  SHARED __EE10367196 := PROJECT(__EE10367174,__ND10367179__Project(LEFT));
  SHARED __ST4232483_Layout := RECORD
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint Exp1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST4232483_Layout __ND10367201__Project(__ST4232459_Layout __PP10367197) := TRANSFORM
    SELF.Exp1_ := __ECAST(KEL.typ.nint,__FN2(KEL.Routines.DateToString,__PP10367197.Date_Of_Death_,__CN('%Y%m%d')));
    SELF := __PP10367197;
  END;
  SHARED __EE10367217 := PROJECT(__EE10367196,__ND10367201__Project(LEFT));
  SHARED __ST4232520_Layout := RECORD
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint O_N_L_Y___Exp1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10367235 := PROJECT(__EE10367217,TRANSFORM(__ST4232520_Layout,SELF.O_N_L_Y___Exp1_ := LEFT.Exp1_,SELF := LEFT));
  SHARED __ST4258614_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N__1_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt__1_;
    KEL.typ.nint O_N_L_Y___Exp1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10367249(__ST4256013_Layout __EE10366808, __ST4232520_Layout __EE10367235) := __EEQP(__EE10366808.Input_Clean_S_S_N_,__EE10367235.Input_Clean_S_S_N_) AND __EEQP(__EE10366808.P___Inp_Cln_Arch_Dt_,__EE10367235.P___Inp_Cln_Arch_Dt_);
  __ST4258614_Layout __JT10367249(__ST4256013_Layout __l, __ST4232520_Layout __r) := TRANSFORM
    SELF.Input_Clean_S_S_N__1_ := __r.Input_Clean_S_S_N_;
    SELF.P___Inp_Cln_Arch_Dt__1_ := __r.P___Inp_Cln_Arch_Dt_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10367568 := JOIN(__EE10366808,__EE10367235,__JC10367249(LEFT,RIGHT),__JT10367249(LEFT,RIGHT),LEFT OUTER,SMART,KEEP(1));
  SHARED __EE10305464 := __EE10304979;
  SHARED __EE10318851 := __EE10305464(__NN(__EE10305464.Subject_));
  SHARED __EE10305466 := __ENH_Person_1;
  SHARED __EE10305477 := __EE10305466.Data_Sources_;
  __JC10305480(B_Person_1(__in,__cfg).__ST336681_Layout __EE10305477) := __T(__EE10305477.Header_Hit_Flag_);
  SHARED __EE10307216 := __EE10305466(EXISTS(__CHILDJOINFILTER(__EE10305477,__JC10305480)));
  __JC10318858(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __EE10318851, B_Person_1(__in,__cfg).__ST336643_Layout __EE10307216) := __EEQP(__EE10318851.Subject_,__EE10307216.UID);
  SHARED __EE10318859 := JOIN(__EE10318851,__EE10307216,__JC10318858(LEFT,RIGHT),TRANSFORM(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST4231578_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.bool Exp1_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST4231578_Layout __ND10319165__Project(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __PP10318860) := TRANSFORM
    SELF.Exp1_ := TRUE;
    SELF := __PP10318860;
  END;
  SHARED __EE10319172 := PROJECT(TABLE(PROJECT(__EE10318859,__ND10319165__Project(LEFT)),{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Subject_,Exp1_},Subject_,Exp1_,MERGE),__ST4231578_Layout);
  SHARED __ST4231600_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Data_Sources_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__1_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10319189 := PROJECT(__CLEANANDDO(__EE10319172,TABLE(__EE10319172,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Data_Sources_ := COUNT(GROUP),KEL.typ.int C_O_U_N_T___Data_Sources__1_ := COUNT(GROUP),KEL.typ.int C_O_U_N_T___Data_Sources__2_ := COUNT(GROUP),Subject_},Subject_,MERGE)),__ST4231600_Layout);
  SHARED __ST4261211_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N__1_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt__1_;
    KEL.typ.nint O_N_L_Y___Exp1_;
    KEL.typ.int C_O_U_N_T___Data_Sources_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__1_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) Subject__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10367574(__ST4258614_Layout __EE10367568, __ST4231600_Layout __EE10319189) := __EEQP(__EE10367568.Subject_,__EE10319189.Subject_);
  __ST4261211_Layout __JT10367574(__ST4258614_Layout __l, __ST4231600_Layout __r) := TRANSFORM
    SELF.Subject__1_ := __r.Subject_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10367895 := JOIN(__EE10367568,__EE10319189,__JC10367574(LEFT,RIGHT),__JT10367574(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __EE10305123 := __EE10304979;
  SHARED __EE10304983 := __E_Zip_Code;
  SHARED __EE10359189 := __EE10304983;
  SHARED __EE10367902 := __EE10359189(__T(__NOT(__OR(__OP2(__EE10359189.Zip_Class_,=,__CN('')),__NT(__EE10359189.Zip_Class_)))));
  __JC10367908(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __EE10305123, E_Zip_Code(__in,__cfg).Layout __EE10367902) := __EEQP(__EE10305123.Address_Zip_Helper_Input_,__EE10367902.UID);
  SHARED __EE10368210 := JOIN(__EE10305123,__EE10367902,__JC10367908(LEFT,RIGHT),TRANSFORM(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST4230437_Layout := RECORD
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.bool Exp1_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST4230437_Layout __ND10368215__Project(B_Input_P_I_I_1(__in,__cfg).__ST319696_Layout __PP10368211) := TRANSFORM
    SELF.Exp1_ := TRUE;
    SELF := __PP10368211;
  END;
  SHARED __EE10368222 := PROJECT(TABLE(PROJECT(__EE10368210,__ND10368215__Project(LEFT)),{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Address_Zip_Helper_Input_,Exp1_},Address_Zip_Helper_Input_,Exp1_,MERGE),__ST4230437_Layout);
  SHARED __ST4230458_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input_ := 0;
    KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input__1_ := 0;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE10368237 := PROJECT(__CLEANANDDO(__EE10368222,TABLE(__EE10368222,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input_ := COUNT(GROUP),KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input__1_ := COUNT(GROUP),Address_Zip_Helper_Input_},Address_Zip_Helper_Input_,MERGE)),__ST4230458_Layout);
  SHARED __ST4263817_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N__1_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt__1_;
    KEL.typ.nint O_N_L_Y___Exp1_;
    KEL.typ.int C_O_U_N_T___Data_Sources_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__1_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) Subject__1_;
    KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input_ := 0;
    KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input__1_ := 0;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10368245(__ST4261211_Layout __EE10367895, __ST4230458_Layout __EE10368237) := __EEQP(__EE10367895.Address_Zip_Helper_Input_,__EE10368237.Address_Zip_Helper_Input_);
  __ST4263817_Layout __JT10368245(__ST4261211_Layout __l, __ST4230458_Layout __r) := TRANSFORM
    SELF.Address_Zip_Helper_Input__1_ := __r.Address_Zip_Helper_Input_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10368569 := JOIN(__EE10367895,__EE10368237,__JC10368245(LEFT,RIGHT),__JT10368245(LEFT,RIGHT),LEFT OUTER,SMART);
  SHARED __EE10304981 := __ENH_Address_1;
  SHARED __ST4266429_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N__1_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt__1_;
    KEL.typ.nint O_N_L_Y___Exp1_;
    KEL.typ.int C_O_U_N_T___Data_Sources_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__1_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) Subject__1_;
    KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input_ := 0;
    KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input__1_ := 0;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input__1_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Address_Components_Layout) Address_Components_;
    KEL.typ.ndataset(E_Address(__in,__cfg).College_Layout) College_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Date_Summary_Layout) A_D_V_O_Date_Summary_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Address(__in,__cfg).B_I_P_V2_Best_Layout) B_I_P_V2_Best_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Do_Not_Deliver_Layout) Do_Not_Deliver_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Do_Not_Mail_Layout) Do_Not_Mail_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Dead_C_O_Layout) Dead_C_O_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Hot_List_Layout) Hot_List_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Mail_Drop_Layout) Mail_Drop_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Mixed_Usage_Layout) Mixed_Usage_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Only_Way_To_Get_Mail_Layout) Only_Way_To_Get_Mail_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Record_Type_Layout) Record_Type_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Address_Type_Layout) Address_Type_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Residential_Or_Business_Layout) Residential_Or_Business_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Seasonal_Delivery_Layout) Seasonal_Delivery_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Simplify_Layout) Simplify_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Style_Layout) Style_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Throw_Back_Layout) Throw_Back_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Vacancy_Layout) Vacancy_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Summary_Layout) A_D_V_O_Summary_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Vacation_Layout) Vacation_;
    KEL.typ.ndataset(E_Address(__in,__cfg).High_Risk_Address_Layout) High_Risk_Address_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Summary_Layout) Bestchild_Advo_;
    KEL.typ.nstr College_Flag_;
    KEL.typ.nstr Do_Not_Deliver_Flag_;
    KEL.typ.nstr Drop_Indicator_Flag_;
    KEL.typ.nbool Is_P_O_Box_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O__1_ := FALSE;
    KEL.typ.nbool Is_P_O_Box_Zip_;
    KEL.typ.nstr Only_G_M_Flag_;
    KEL.typ.nstr Res_Bus_Flag_;
    KEL.typ.nstr Seasonal_Delivery_Flag_;
    KEL.typ.nstr Style_Flag_;
    KEL.typ.nstr Throw_Back_Flag_;
    KEL.typ.nstr Vacant_Flag_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10368575(__ST4263817_Layout __EE10368569, B_Address_1(__in,__cfg).__ST186147_Layout __EE10304981) := __EEQP(__EE10368569.Location_,__EE10304981.UID);
  __ST4266429_Layout __JT10368575(__ST4263817_Layout __l, B_Address_1(__in,__cfg).__ST186147_Layout __r) := TRANSFORM
    SELF.U_I_D__6_ := __r.UID;
    SELF.Z_I_P5__1_ := __r.Z_I_P5_;
    SELF.Is_P_O_Box_A_D_V_O__1_ := __r.Is_P_O_Box_A_D_V_O_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10369059 := JOIN(__EE10304981,__EE10368569,__JC10368575(RIGHT,LEFT),__JT10368575(RIGHT,LEFT),RIGHT OUTER,HASH);
  SHARED __ST4269350_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint A_V_M_Value1_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value5_Y_Un_Cap_;
    KEL.typ.nint A_V_M_Value_Un_Cap_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84788_Layout) Address_Records_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input_;
    KEL.typ.nint At_Position_;
    KEL.typ.nint At_Position_Clean_;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__1_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ := 0;
    KEL.typ.kdate C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ := 0;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nbool Clean_City_State_Zip_Not_Populated_;
    KEL.typ.nstr Clean_Email_Domain_;
    KEL.typ.nstr Clean_Email_Username_;
    KEL.typ.nstr Clean_S_S_N_;
    KEL.typ.nint Cleaned_Zip_Int_;
    KEL.typ.nstr Email_Domain_;
    KEL.typ.nint Email_Domain_Length_;
    KEL.typ.nint Email_Extension_Spot_;
    KEL.typ.nstr Email_Username_;
    KEL.typ.nint Email_Username_Length_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84492_Layout) Good_Inquiries_Last_Year_For_Email_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84701_Layout) Good_Inquiries_Last_Year_For_Phone_;
    KEL.typ.ndataset(B_Input_P_I_I_2(__in,__cfg).__ST84037_Layout) Good_Inquiries_Last_Year_For_S_S_N_;
    KEL.typ.nstr Inp_Address_Date_First_Seen_;
    KEL.typ.nstr Inp_Address_Date_Last_Seen_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.bool Input_Address_Matches_Address_Hierarchy_Address_ := FALSE;
    KEL.typ.nbool Input_Address_Matches_Current_Address_;
    KEL.typ.bool Input_Address_On_A_V_M_ := FALSE;
    KEL.typ.nint Input_Address_Property_Cnt_;
    KEL.typ.nint Input_Address_Property_Cnt1_Y_;
    KEL.typ.nint Input_Address_Property_Cnt5_Y_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST82994_Layout) Input_Address_Property_Set_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.bool Input_Addronfile_ := FALSE;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Insurance_Phone_Gateway_I_P_;
    SET OF KEL.typ.str Insurance_Phone_Results_ := [];
    KEL.typ.nint Invalid_Email_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O_ := FALSE;
    KEL.typ.bool Is_Postal_Source_ := FALSE;
    KEL.typ.nstr Line_Phone_;
    KEL.typ.nstr N_X_X_Type_Phone_;
    KEL.typ.bool Name_Not_Populated_ := FALSE;
    KEL.typ.nstr Net_Acuity_Gateway_I_P_;
    SET OF KEL.typ.str Net_Acuity_Results_ := [];
    KEL.typ.nint Numeric45_S_S_N_;
    KEL.typ.nstr Numeric_S_S_N_;
    KEL.typ.nstr O_F_A_C_Gateway_I_P_;
    SET OF KEL.typ.str O_F_A_C_Results_ := [];
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.bool Phone_Listing_Type_Is_Business_ := FALSE;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83698_Layout) Phone_N_A_I_C_S_Sorted_List_;
    KEL.typ.ndataset(B_Input_P_I_I_3(__in,__cfg).__ST83605_Layout) Phone_S_I_C_Sorted_List_;
    KEL.typ.nstr Serv_Phone_;
    KEL.typ.int Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.nstr Targus_Gateway_I_P_;
    SET OF KEL.typ.str Targus_Results_ := [];
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nint Zip_Length_Value_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.int C_O_U_N_T___Exp1_ := 0;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person_Info_ := 0;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Exp1__1_ := 0;
    KEL.typ.nuid U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Exp1__2_ := 0;
    KEL.typ.nuid U_I_D__4_;
    KEL.typ.int C_O_U_N_T___Exp1__3_ := 0;
    KEL.typ.nuid U_I_D__5_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N__1_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt__1_;
    KEL.typ.nint O_N_L_Y___Exp1_;
    KEL.typ.int C_O_U_N_T___Data_Sources_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__1_ := 0;
    KEL.typ.int C_O_U_N_T___Data_Sources__2_ := 0;
    KEL.typ.ntyp(E_Person().Typ) Subject__1_;
    KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input_ := 0;
    KEL.typ.int C_O_U_N_T___Address_Zip_Helper_Input__1_ := 0;
    KEL.typ.ntyp(E_Zip_Code().Typ) Address_Zip_Helper_Input__1_;
    KEL.typ.nuid U_I_D__6_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5__1_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Address_Components_Layout) Address_Components_;
    KEL.typ.ndataset(E_Address(__in,__cfg).College_Layout) College_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Date_Summary_Layout) A_D_V_O_Date_Summary_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Business_Characteristics_Layout) Business_Characteristics_;
    KEL.typ.ndataset(E_Address(__in,__cfg).B_I_P_V2_Best_Layout) B_I_P_V2_Best_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Do_Not_Deliver_Layout) Do_Not_Deliver_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Do_Not_Mail_Layout) Do_Not_Mail_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Dead_C_O_Layout) Dead_C_O_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Hot_List_Layout) Hot_List_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Mail_Drop_Layout) Mail_Drop_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Mixed_Usage_Layout) Mixed_Usage_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Only_Way_To_Get_Mail_Layout) Only_Way_To_Get_Mail_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Record_Type_Layout) Record_Type_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Address_Type_Layout) Address_Type_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Residential_Or_Business_Layout) Residential_Or_Business_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Seasonal_Delivery_Layout) Seasonal_Delivery_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Simplify_Layout) Simplify_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Style_Layout) Style_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Throw_Back_Layout) Throw_Back_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Vacancy_Layout) Vacancy_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Summary_Layout) A_D_V_O_Summary_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Vacation_Layout) Vacation_;
    KEL.typ.ndataset(E_Address(__in,__cfg).High_Risk_Address_Layout) High_Risk_Address_;
    KEL.typ.ndataset(E_Address(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Address(__in,__cfg).A_D_V_O_Summary_Layout) Bestchild_Advo_;
    KEL.typ.nstr College_Flag_;
    KEL.typ.nstr Do_Not_Deliver_Flag_;
    KEL.typ.nstr Drop_Indicator_Flag_;
    KEL.typ.nbool Is_P_O_Box_;
    KEL.typ.bool Is_P_O_Box_A_D_V_O__1_ := FALSE;
    KEL.typ.nbool Is_P_O_Box_Zip_;
    KEL.typ.nstr Only_G_M_Flag_;
    KEL.typ.nstr Res_Bus_Flag_;
    KEL.typ.nstr Seasonal_Delivery_Flag_;
    KEL.typ.nstr Style_Flag_;
    KEL.typ.nstr Throw_Back_Flag_;
    KEL.typ.nstr Vacant_Flag_;
    KEL.typ.nuid U_I_D__7_;
    KEL.typ.nstr Zip_Class_;
    KEL.typ.nstr City_;
    KEL.typ.nstr State_;
    KEL.typ.nstr County_;
    KEL.typ.nstr City_Name_;
    KEL.typ.ndataset(E_Zip_Code(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC10369065(__ST4266429_Layout __EE10369059, E_Zip_Code(__in,__cfg).Layout __EE10304983) := __EEQP(__EE10369059.Address_Zip_Helper_Input_,__EE10304983.UID);
  __ST4269350_Layout __JT10369065(__ST4266429_Layout __l, E_Zip_Code(__in,__cfg).Layout __r) := TRANSFORM
    SELF.U_I_D__7_ := __r.UID;
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE10369556 := JOIN(__EE10304983,__EE10369059,__JC10369065(RIGHT,LEFT),__JT10369065(RIGHT,LEFT),RIGHT OUTER,HASH);
  EXPORT __ST167260_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nint I_Rep_Number_Value_;
    KEL.typ.nstr Input_Account_Value_;
    KEL.typ.nstr Input_Address_Status_Clean_Value_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Address_Type_Clean_Value_;
    KEL.typ.nstr Input_Archive_Date_Clean_Value_;
    KEL.typ.nstr Input_Archive_Date_Value_;
    KEL.typ.nstr Input_City_Clean_Value_;
    KEL.typ.nstr Input_City_Post_Clean_Value_;
    KEL.typ.nstr Input_City_Value_;
    KEL.typ.nstr Input_County_Clean_Value_;
    KEL.typ.nstr Input_D_L_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Clean_Value_;
    KEL.typ.nstr Input_D_L_State_Value_;
    KEL.typ.nstr Input_D_L_Value_;
    KEL.typ.nstr Input_D_O_B_Clean_Value_;
    KEL.typ.nstr Input_D_O_B_Value_;
    KEL.typ.nstr Input_Email_Clean_Value_;
    KEL.typ.nstr Input_Email_Value_;
    KEL.typ.nstr Input_First_Name_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Full_Address_Clean_Value_;
    KEL.typ.nstr Input_Geoblock_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Clean_Value_;
    KEL.typ.nstr Input_Home_Phone_Value_;
    KEL.typ.nstr Input_I_P_Addr_Value_;
    KEL.typ.nstr Input_Last_Name_Clean_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Latitude_Clean_Value_;
    KEL.typ.nint Input_Lex_I_D_Value_;
    KEL.typ.nstr Input_Longitude_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Clean_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Prefix_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_State_Clean_Value_;
    KEL.typ.nstr Input_State_Code_Clean_Value_;
    KEL.typ.nstr Input_State_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Street_Value_;
    KEL.typ.nstr Input_Suffix_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Clean_Value_;
    KEL.typ.nstr Input_Work_Phone_Value_;
    KEL.typ.nstr Input_Zip4_Clean_Value_;
    KEL.typ.nstr Input_Zip5_Clean_Value_;
    KEL.typ.nstr Input_Zip_Value_;
    KEL.typ.nstr Ins_Phone_Hit_;
    KEL.typ.nstr Ins_Phone_Src_;
    KEL.typ.nstr P_I___Alrt_Inp_Name_On_Watchlist_Flag_;
    KEL.typ.nstr P_I___Alrt_Inp_Name_Watchlist_Rec_Num_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Conf_Score_;
    KEL.typ.nfloat P_I___Inp_Addr_A_V_M_Ratio1_Y_;
    KEL.typ.nfloat P_I___Inp_Addr_A_V_M_Ratio5_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A1_Y_;
    KEL.typ.nint P_I___Inp_Addr_A_V_M_Val_A5_Y_;
    KEL.typ.int P_I___Inp_Addr_Is_Apt_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Business_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_C_M_R_A_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_College_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_D_N_D_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Drop_Delivery_Flag_ := 0;
    KEL.typ.str P_I___Inp_Addr_Is_Military_Flag_ := '';
    KEL.typ.int P_I___Inp_Addr_Is_Multi_Unit_Flag_ := 0;
    KEL.typ.str P_I___Inp_Addr_Is_P_O_Box_Flag_ := '';
    KEL.typ.int P_I___Inp_Addr_Is_Simp_Addr_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Throwback_Flag_ := 0;
    KEL.typ.int P_I___Inp_Addr_Is_Vacant_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_New_Dt_;
    KEL.typ.int P_I___Inp_Addr_O_W_G_M_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Old_Dt_;
    KEL.typ.int P_I___Inp_Addr_On_File_Flag_Ev_ := 0;
    KEL.typ.int P_I___Inp_Addr_Seasonal_Type_ := 0;
    KEL.typ.int P_I___Inp_Addr_State_D_L_Avail_Flag___Non_F_C_R_A_ := 0;
    KEL.typ.int P_I___Inp_Addr_State_Voter_Avail_Flag___F_C_R_A_ := 0;
    KEL.typ.int P_I___Inp_Addr_State_Voter_Avail_Flag___Non_F_C_R_A_ := 0;
    KEL.typ.int P_I___Inp_Addr_Subj_Flag_ := 0;
    KEL.typ.nstr P_I___Inp_Addr_Subj_New_Dt_;
    KEL.typ.nint P_I___Inp_Addr_Subj_New_Msnc_;
    KEL.typ.nstr P_I___Inp_Addr_Subj_Old_Dt_;
    KEL.typ.nint P_I___Inp_Addr_Subj_Old_Msnc_;
    KEL.typ.nint P_I___Inp_Addr_Subj_Res_Span_;
    KEL.typ.nint P_I___Inp_D_O_B_Age_;
    KEL.typ.str P_I___Inp_Phone_Is_Bus_Phone_Flag_ := '';
    KEL.typ.str P_I___Inp_Phone_Is_H_R_Correct_Fac_Flag_ := '';
    KEL.typ.nstr P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_;
    KEL.typ.nstr P_I___Inp_Phone_S_I_C_Code_H_R_List_;
    KEL.typ.str P_I___Inp_Phone_Type_ := '';
    KEL.typ.nint P_I___Inp_S_S_N_Deceased_Dt_;
    KEL.typ.int P_I___Inp_S_S_N_Is_Deceased_Flag_ := 0;
    KEL.typ.int P_I___Srch_Addr_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_D_O_B_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_L_Name_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Lex_I_D_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Lex_I_D_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Lex_I_D_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Email_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_Phone_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ := 0;
    KEL.typ.int P_I___Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := 0;
    KEL.typ.str P___Inp_Acct_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Addr_Line2_Value_;
    KEL.typ.str P___Inp_Addr_St_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.str P___Inp_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_Addr_City_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Full_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_Flag_Value_;
    KEL.typ.nint P___Inp_Cln_Addr_Loc_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_St_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_Flag_Value_;
    KEL.typ.str P___Inp_Cln_Arch_Dt_F1_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_F2_Y_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_F6_M_ := '';
    KEL.typ.str P___Inp_Cln_Arch_Dt_Flag_Value_ := '';
    KEL.typ.nstr P___Inp_Cln_D_L_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_D_O_B_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_Dom_;
    KEL.typ.nstr P___Inp_Cln_Email_Ext_;
    KEL.typ.nstr P___Inp_Cln_Email_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Email_User_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_;
    KEL.typ.nstr P___Inp_Cln_I_P_Addr_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_Flag_Value_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_Flag_Value_;
    KEL.typ.str P___Inp_D_L_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_L_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_D_O_B_Flag_Value_ := '';
    KEL.typ.str P___Inp_Email_Flag_Value_ := '';
    KEL.typ.str P___Inp_I_P_Addr_Flag_Value_ := '';
    KEL.typ.str P___Inp_Lex_I_D_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_First_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Last_Flag_Value_ := '';
    KEL.typ.str P___Inp_Name_Mid_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Home_Flag_Value_ := '';
    KEL.typ.str P___Inp_Phone_Work_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Flag_Value_ := '';
    KEL.typ.str P___Inp_S_S_N_Is4_Digits_ := '';
    KEL.typ.nstr P___Inp_Val_Addr_St_Invalid_Flag_;
    KEL.typ.nint P___Inp_Val_Addr_State_Bad_Abbr_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Addr_Zip_All_Zero_Flag_Value_;
    KEL.typ.int P___Inp_Val_Addr_Zip_Bad_Len_Flag_Value_ := 0;
    KEL.typ.nstr P___Inp_Val_Arch_Dt_Invalid_Flag_;
    KEL.typ.nstr P___Inp_Val_D_L_Invalid_Flag_;
    KEL.typ.nstr P___Inp_Val_D_L_State_Invalid_Flag_;
    KEL.typ.nstr P___Inp_Val_D_O_B_Invalid_Flag_;
    KEL.typ.nint P___Inp_Val_Email_Bogus_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_Dom_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_Dom_Bad_Char_Flag_Value_;
    KEL.typ.nstr P___Inp_Val_Email_Invalid_Flag_;
    KEL.typ.nint P___Inp_Val_Email_User_All_Zero_Flag_Value_;
    KEL.typ.nint P___Inp_Val_Email_User_Bad_Char_Flag_Value_;
    KEL.typ.str P___Inp_Val_Name_Bogus_Flag_ := '';
    KEL.typ.nstr P___Inp_Val_Name_Invalid_Flag_;
    KEL.typ.int P___Inp_Val_Phone_Home_Bad_Char_Flag_ := 0;
    KEL.typ.nint P___Inp_Val_Phone_Home_Bad_Len_Flag_;
    KEL.typ.int P___Inp_Val_Phone_Home_Bogus_Flag_ := 0;
    KEL.typ.nstr P___Inp_Val_Phone_Home_Invalid_Flag_;
    KEL.typ.int P___Inp_Val_Phone_Work_Bad_Char_Flag_ := 0;
    KEL.typ.nint P___Inp_Val_Phone_Work_Bad_Len_Flag_;
    KEL.typ.int P___Inp_Val_Phone_Work_Bogus_Flag_ := 0;
    KEL.typ.nstr P___Inp_Val_Phone_Work_Invalid_Flag_;
    KEL.typ.int P___Inp_Val_S_S_N_Bad_Char_Flag_Value_ := 0;
    KEL.typ.int P___Inp_Val_S_S_N_Bad_Len_Flag_Value_ := 0;
    KEL.typ.int P___Inp_Val_S_S_N_Bogus_Flag_Value_ := 0;
    KEL.typ.nstr P___Inp_Val_S_S_N_Invalid_Flag_;
    KEL.typ.int P___Inp_Val_S_S_N_Is_I_T_I_N_Flag_Value_ := 0;
    KEL.typ.int P___Inp_Val_S_S_N_Non_S_S_A_Flag_Value_ := 0;
    KEL.typ.nstr Targus_Royalty_;
    KEL.typ.nstr Targus_Src_;
    KEL.typ.nstr _ipaddr_;
    KEL.typ.nstr _ipresponse_;
    KEL.typ.nint _netacuityroyalty_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST167260_Layout __ND10369561__Project(__ST4269350_Layout __PP10369557) := TRANSFORM
    SELF.I_Rep_Number_Value_ := __PP10369557.Rep_Number_;
    __CC13569 := '-99998';
    SELF.Input_Archive_Date_Clean_Value_ := FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Arch_Dt_),__ECAST(KEL.typ.nstr,__CN(__CC13569)));
    __CC13564 := '-99999';
    SELF.Input_Archive_Date_Value_ := FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Arch_Dt_),__ECAST(KEL.typ.nstr,__CN(__CC13564)));
    SELF.Ins_Phone_Hit_ := IF(__T(__OR(__NOT(__NT(__PP10369557.Insurance_Phone_Gateway_I_P_)),__NOT(__OP2(__PP10369557.Insurance_Phone_Gateway_I_P_,=,__CN(''))))),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_G_E_T___V_A_L_U_E(__PP10369557.Insurance_Phone_Results_,__ECAST(KEL.typ.nint,__CN(2)))),__ECAST(KEL.typ.nstr,__N(KEL.typ.str)));
    SELF.Ins_Phone_Src_ := IF(__T(__OR(__NOT(__NT(__PP10369557.Insurance_Phone_Gateway_I_P_)),__NOT(__OP2(__PP10369557.Insurance_Phone_Gateway_I_P_,=,__CN(''))))),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_G_E_T___V_A_L_U_E(__PP10369557.Insurance_Phone_Results_,__ECAST(KEL.typ.nint,__CN(3)))),__ECAST(KEL.typ.nstr,__N(KEL.typ.str)));
    SELF.P_I___Alrt_Inp_Name_On_Watchlist_Flag_ := IF(__T(__OR(__NOT(__NT(__PP10369557.O_F_A_C_Gateway_I_P_)),__NOT(__OP2(__PP10369557.O_F_A_C_Gateway_I_P_,=,__CN(''))))),__ECAST(KEL.typ.nstr,MAP(__T(__OR(__NT(__PP10369557.P___Inp_Name_Last_),__OP2(__PP10369557.P___Inp_Name_Last_,=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_G_E_T___V_A_L_U_E(__PP10369557.O_F_A_C_Results_,__ECAST(KEL.typ.nint,__CN(3)))))),__ECAST(KEL.typ.nstr,__N(KEL.typ.str)));
    SELF.P_I___Alrt_Inp_Name_Watchlist_Rec_Num_ := IF(__T(__OR(__NOT(__NT(__PP10369557.O_F_A_C_Gateway_I_P_)),__NOT(__OP2(__PP10369557.O_F_A_C_Gateway_I_P_,=,__CN(''))))),__ECAST(KEL.typ.nstr,MAP(__T(__OR(__NT(__PP10369557.P___Inp_Name_Last_),__OP2(__PP10369557.P___Inp_Name_Last_,=,__CN(''))))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(FN_Compile(__cfg).FN_G_E_T___V_A_L_U_E(__PP10369557.O_F_A_C_Results_,__ECAST(KEL.typ.nint,__CN(2))),=,__CN('')))=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_G_E_T___V_A_L_U_E(__PP10369557.O_F_A_C_Results_,__ECAST(KEL.typ.nint,__CN(2)))))),__ECAST(KEL.typ.nstr,__N(KEL.typ.str)));
    __CC13567 := -99999;
    __CC13572 := -99998;
    __CC13577 := -99997;
    __EE10370232 := __PP10369557.Input_Address_Property_Set_;
    SELF.P_I___Inp_Addr_A_V_M_Conf_Score_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_Full_Flag_Value_,<>,__CN('1')))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__T(__NOT(__CN(__PP10369557.Input_Address_On_A_V_M_)))=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__T(__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_,=,__CN(__CC13577)))=>__ECAST(KEL.typ.nint,__CN(__CC13577)),__ECAST(KEL.typ.nint,__FN3(KEL.Routines.BoundsFold,(__T(__EE10370232))[1].A_V_M_Confidence_Score_,__CN(0),__CN(100))));
    SELF.P_I___Inp_Addr_A_V_M_Ratio1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_Full_Flag_Value_,<>,__CN('1')))=>__ECAST(KEL.typ.nfloat,__CAST(KEL.typ.float,__CN(__CC13567))),__T(__NOT(__CN(__PP10369557.Input_Address_On_A_V_M_)))=>__ECAST(KEL.typ.nfloat,__CAST(KEL.typ.float,__CN(__CC13572))),__T(__OR(__OR(__OR(__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_,=,__CN(__CC13577)),__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_,<=,__CN(0))),__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_A1_Y_,=,__CN(__CC13577))),__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_A1_Y_,<=,__CN(0))))=>__ECAST(KEL.typ.nfloat,__CAST(KEL.typ.float,__CN(__CC13577))),__ECAST(KEL.typ.nfloat,KEL.Routines.MinN(__FN2(ROUND,__OP2(__PP10369557.A_V_M_Value_Un_Cap_,/,__PP10369557.A_V_M_Value1_Y_Un_Cap_),__CN(2)),__CN(99.99))));
    SELF.P_I___Inp_Addr_A_V_M_Ratio5_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_Full_Flag_Value_,<>,__CN('1')))=>__ECAST(KEL.typ.nfloat,__CAST(KEL.typ.float,__CN(__CC13567))),__T(__NOT(__CN(__PP10369557.Input_Address_On_A_V_M_)))=>__ECAST(KEL.typ.nfloat,__CAST(KEL.typ.float,__CN(__CC13572))),__T(__OR(__OR(__OR(__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_,=,__CN(__CC13577)),__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_,<=,__CN(0))),__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_A5_Y_,=,__CN(__CC13577))),__OP2(__PP10369557.P_I___Inp_Addr_A_V_M_Val_A5_Y_,<=,__CN(0))))=>__ECAST(KEL.typ.nfloat,__CAST(KEL.typ.float,__CN(__CC13577))),__ECAST(KEL.typ.nfloat,KEL.Routines.MinN(__FN2(ROUND,__OP2(__PP10369557.A_V_M_Value_Un_Cap_,/,__PP10369557.A_V_M_Value5_Y_Un_Cap_),__CN(2)),__CN(99.99))));
    SELF.P_I___Inp_Addr_Is_Apt_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__PP10369557.P_I___Inp_Addr_Is_Business_Flag_ = 0 AND __PP10369557.P_I___Inp_Addr_Is_Multi_Unit_Flag_ = 1=>1,0);
    SELF.P_I___Inp_Addr_Is_C_M_R_A_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__T(__OR(__OP2(__PP10369557.Drop_Indicator_Flag_,=,__CN('')),__NT(__PP10369557.Drop_Indicator_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.Drop_Indicator_Flag_,=,__CN('C')))=>1,__T(__OR(__OP2(__PP10369557.Drop_Indicator_Flag_,=,__CN('Y')),__OP2(__PP10369557.Drop_Indicator_Flag_,=,__CN('N'))))=>0,__CC13577);
    SELF.P_I___Inp_Addr_Is_College_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__T(__OR(__OP2(__PP10369557.College_Flag_,=,__CN('')),__NT(__PP10369557.College_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.College_Flag_,=,__CN('Y')))=>1,__T(__OP2(__PP10369557.College_Flag_,=,__CN('N')))=>0,__CC13577);
    SELF.P_I___Inp_Addr_Is_D_N_D_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__T(__OR(__OP2(__PP10369557.Do_Not_Deliver_Flag_,=,__CN('')),__NT(__PP10369557.Do_Not_Deliver_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.Do_Not_Deliver_Flag_,=,__CN('Y')))=>1,__T(__OP2(__PP10369557.Do_Not_Deliver_Flag_,=,__CN('N')))=>0,__CC13577);
    SELF.P_I___Inp_Addr_Is_Drop_Delivery_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__T(__OR(__OP2(__PP10369557.Drop_Indicator_Flag_,=,__CN('')),__NT(__PP10369557.Drop_Indicator_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.Drop_Indicator_Flag_,=,__CN('Y')))=>1,__T(__OR(__OP2(__PP10369557.Drop_Indicator_Flag_,=,__CN('C')),__OP2(__PP10369557.Drop_Indicator_Flag_,=,__CN('N'))))=>0,__CC13577);
    SELF.P_I___Inp_Addr_Is_Military_Flag_ := MAP(__T(__AND(__OP2(__PP10369557.P___Inp_Cln_Addr_Full_Flag_Value_,<>,__CN('1')),__OP2(__PP10369557.Input_Zip5_Clean_Value_,=,__CN(__CC13564))))=>__CC13564,__T(__AND(__OP2(__PP10369557.Input_Address_Type_Clean_Value_,IN,__CN([__CC13564,__CC13569])),__OR(__OP2(__PP10369557.Input_Zip5_Clean_Value_,=,__CN(__CC13569)),__CN(NOT (__PP10369557.C_O_U_N_T___Address_Zip_Helper_Input_ <> 0)))))=>__CC13569,__T(__OR(__OP2(__PP10369557.Input_Address_Type_Clean_Value_,=,__CN('M')),__OP2(__PP10369557.Zip_Class_,=,__CN('M'))))=>'1','0');
    SELF.P_I___Inp_Addr_Is_P_O_Box_Flag_ := MAP(__T(__AND(__OP2(__PP10369557.P___Inp_Cln_Addr_Full_Flag_Value_,<>,__CN('1')),__OP2(__PP10369557.Input_Zip5_Clean_Value_,=,__CN(__CC13564))))=>__CC13564,__T(__AND(__AND(__OP2(__PP10369557.Input_Address_Type_Clean_Value_,IN,__CN([__CC13564,__CC13569])),__OR(__OP2(__PP10369557.Input_Zip5_Clean_Value_,=,__CN(__CC13569)),__CN(NOT (__PP10369557.C_O_U_N_T___Address_Zip_Helper_Input__1_ <> 0)))),__CN(NOT (__PP10369557.Is_Postal_Source_))))=>__CC13569,__T(__OR(__OR(__OP2(__PP10369557.Input_Address_Type_Clean_Value_,=,__CN('P')),__CN(__PP10369557.Is_P_O_Box_A_D_V_O_)),__OP2(__PP10369557.Zip_Class_,=,__CN('P'))))=>'1','0');
    SELF.P_I___Inp_Addr_Is_Simp_Addr_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__T(__OR(__OP2(__PP10369557.Style_Flag_,=,__CN('')),__NT(__PP10369557.Style_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.Style_Flag_,=,__CN('S')))=>1,__T(__NOT(__OP2(__PP10369557.Style_Flag_,=,__CN('S'))))=>0,__CC13577);
    SELF.P_I___Inp_Addr_Is_Throwback_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__T(__OR(__OP2(__PP10369557.Throw_Back_Flag_,=,__CN('')),__NT(__PP10369557.Throw_Back_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.Throw_Back_Flag_,=,__CN('Y')))=>1,__T(__OP2(__PP10369557.Throw_Back_Flag_,=,__CN('N')))=>0,__CC13577);
    SELF.P_I___Inp_Addr_Is_Vacant_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__T(__OR(__OP2(__PP10369557.Vacant_Flag_,=,__CN('')),__NT(__PP10369557.Vacant_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.Vacant_Flag_,=,__CN('Y')))=>1,__T(__OP2(__PP10369557.Vacant_Flag_,=,__CN('N')))=>0,__CC13577);
    SELF.P_I___Inp_Addr_New_Dt_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__T(__NOT(__CN(EXISTS(__T(__PP10369557.Address_Records_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__ECAST(KEL.typ.nstr,__PP10369557.Inp_Address_Date_Last_Seen_));
    SELF.P_I___Inp_Addr_O_W_G_M_Flag_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR __PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__CC13572,__T(__OR(__OP2(__PP10369557.Only_G_M_Flag_,=,__CN('')),__NT(__PP10369557.Only_G_M_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.Only_G_M_Flag_,=,__CN('N')))=>0,__T(__OP2(__PP10369557.Only_G_M_Flag_,=,__CN('Y')))=>1,__CC13577);
    SELF.P_I___Inp_Addr_Old_Dt_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_ = 0=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__T(__NOT(__CN(EXISTS(__T(__PP10369557.Address_Records_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__ECAST(KEL.typ.nstr,__PP10369557.Inp_Address_Date_First_Seen_));
    SELF.P_I___Inp_Addr_Seasonal_Type_ := MAP((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564=>__CC13567, NOT (__PP10369557.Is_Postal_Source_) OR (KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = '0'=>__CC13572,__T(__OR(__OP2(__PP10369557.Seasonal_Delivery_Flag_,=,__CN('')),__NT(__PP10369557.Seasonal_Delivery_Flag_)))=>__CC13577,__T(__OP2(__PP10369557.Seasonal_Delivery_Flag_,=,__CN('N')))=>0,__T(__OP2(__PP10369557.Seasonal_Delivery_Flag_,=,__CN('Y')))=>1,__T(__OP2(__PP10369557.Seasonal_Delivery_Flag_,=,__CN('E')))=>2,__CC13577);
    SELF.P_I___Inp_Addr_State_D_L_Avail_Flag___Non_F_C_R_A_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_State_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__T(FN_Compile(__cfg).FN__fn_In_Drivers_State(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_State_)))=>1,0);
    SELF.P_I___Inp_Addr_State_Voter_Avail_Flag___F_C_R_A_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_State_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__T(FN_Compile(__cfg).FN__fn_In_Voters_State(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_State_),__ECAST(KEL.typ.nbool,__CN(TRUE)),__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Arch_Dt_))))=>1,0);
    SELF.P_I___Inp_Addr_State_Voter_Avail_Flag___Non_F_C_R_A_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_State_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__T(FN_Compile(__cfg).FN__fn_In_Voters_State(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_State_),__ECAST(KEL.typ.nbool,__CN(FALSE)),__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Arch_Dt_))))=>1,0);
    __CC13574 := '-99997';
    __CC13259 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
    SELF.P_I___Inp_Addr_Subj_New_Msnc_ := MAP(__T(__OR(__OR(__OP2(__PP10369557.P___Lex_I_D_,=,__CN(__CC13567)),__CN(NOT (__PP10369557.C_O_U_N_T___Data_Sources_ <> 0))),__CN((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__PP10369557.P_I___Inp_Addr_Subj_Flag_ = 0 OR (KEL.typ.str)(__PP10369557.P_I___Inp_Addr_Subj_Flag_) = __CC13569=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__T(__OP2(__PP10369557.P_I___Inp_Addr_Subj_New_Dt_,=,__CN(__CC13574)))=>__ECAST(KEL.typ.nint,__CN(__CC13577)),__ECAST(KEL.typ.nint,__FN3(KEL.Routines.BoundsFold,__FN2(KEL.Routines.MonthsBetween,KEL.Routines.FromNStringToNDate(__PP10369557.P_I___Inp_Addr_Subj_New_Dt_,__CN('%Y%m%d')),__CC13259),__CN(0),__CN(960))));
    SELF.P_I___Inp_Addr_Subj_Old_Msnc_ := MAP(__T(__OR(__OR(__OP2(__PP10369557.P___Lex_I_D_,=,__CN(__CC13567)),__CN(NOT (__PP10369557.C_O_U_N_T___Data_Sources__1_ <> 0))),__CN((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__PP10369557.P_I___Inp_Addr_Subj_Flag_ = 0 OR (KEL.typ.str)(__PP10369557.P_I___Inp_Addr_Subj_Flag_) = __CC13569=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__T(__OP2(__PP10369557.P_I___Inp_Addr_Subj_Old_Dt_,=,__CN(__CC13574)))=>__ECAST(KEL.typ.nint,__CN(__CC13577)),__ECAST(KEL.typ.nint,__FN3(KEL.Routines.BoundsFold,__FN2(KEL.Routines.MonthsBetween,KEL.Routines.FromNStringToNDate(__PP10369557.P_I___Inp_Addr_Subj_Old_Dt_,__CN('%Y%m%d')),__CC13259),__CN(0),__CN(960))));
    SELF.P_I___Inp_Addr_Subj_Res_Span_ := MAP(__T(__OR(__OR(__OP2(__PP10369557.P___Lex_I_D_,=,__CN(__CC13567)),__CN(NOT (__PP10369557.C_O_U_N_T___Data_Sources__2_ <> 0))),__CN((KEL.typ.str)(__PP10369557.P_I___Inp_Addr_On_File_Flag_Ev_) = __CC13564)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__PP10369557.P_I___Inp_Addr_Subj_Flag_ = 0 OR (KEL.typ.str)(__PP10369557.P_I___Inp_Addr_Subj_Flag_) = __CC13569=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__T(__OR(__OP2(__PP10369557.P_I___Inp_Addr_Subj_Old_Dt_,=,__CN(__CC13574)),__OP2(__PP10369557.P_I___Inp_Addr_Subj_New_Dt_,=,__CN(__CC13574))))=>__ECAST(KEL.typ.nint,__CN(__CC13577)),__ECAST(KEL.typ.nint,__FN3(KEL.Routines.BoundsFold,__FN2(KEL.Routines.MonthsBetween,KEL.Routines.FromNStringToNDate(__PP10369557.P_I___Inp_Addr_Subj_Old_Dt_,__CN('%Y%m%d')),KEL.Routines.FromNStringToNDate(__PP10369557.P_I___Inp_Addr_Subj_New_Dt_,__CN('%Y%m%d'))),__CN(0),__CN(960))));
    SELF.P_I___Inp_D_O_B_Age_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_D_O_B_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__ECAST(KEL.typ.nint,__FN3(KEL.Routines.BoundsFold,__FN2(KEL.Routines.YearsBetween,__PP10369557.P___Inp_Cln_D_O_B_,KEL.Routines.FromNStringToNDate(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Arch_Dt_),__CN('%Y%m%d'))),__CN(0),__CN(120))));
    SELF.P_I___Inp_Phone_Is_Bus_Phone_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Home_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13564, NOT (__PP10369557.Phone_Listing_Type_Is_Business_)=>'0',__PP10369557.Phone_Listing_Type_Is_Business_=>'1',__CC13569);
    SELF.P_I___Inp_Phone_Is_H_R_Correct_Fac_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Home_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13564,__T(__OR(__FN2(KEL.Routines.Contains,__PP10369557.P_I___Inp_Phone_S_I_C_Code_H_R_List_,__CN('9223')),__FN2(KEL.Routines.Contains,__PP10369557.P_I___Inp_Phone_N_A_I_C_S_Code_H_R_List_,__CN('922140'))))=>'1','0');
    SELF.P_I___Inp_Phone_Type_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Home_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13564,__T(__AND(__OP2(__PP10369557.Serv_Phone_,=,__CN('1')),__OP2(__PP10369557.Line_Phone_,=,__CN('1'))))=>'1',__T(__AND(__OP2(__PP10369557.Serv_Phone_,=,__CN('0')),__OP2(__PP10369557.Line_Phone_,=,__CN('0'))))=>'2',__T(__AND(__OP2(__PP10369557.Serv_Phone_,=,__CN('2')),__OP2(__PP10369557.Line_Phone_,=,__CN('2'))))=>'3',__T(__OP2(__PP10369557.N_X_X_Type_Phone_,IN,__CN(['04','55','60','01','57','62'])))=>'1',__T(__OP2(__PP10369557.N_X_X_Type_Phone_,IN,__CN(['00','50','51','54','66','52'])))=>'2',__CC13569);
    SELF.P_I___Inp_S_S_N_Deceased_Dt_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_S_S_N_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__PP10369557.P_I___Inp_S_S_N_Is_Deceased_Flag_ = 0=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__ECAST(KEL.typ.nint,__PP10369557.O_N_L_Y___Exp1_));
    SELF.P_I___Srch_Addr_Per_Inp_S_S_N_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_S_S_N_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ < 1=>__CC13572,KEL.Routines.BoundsFold(__PP10369557.C_O_U_N_T___Exp1__3_,0,999));
    SELF.P_I___Srch_D_O_B_Per_Inp_S_S_N_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_S_S_N_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ < 1=>__CC13572,KEL.Routines.BoundsFold(__PP10369557.C_O_U_N_T___Exp1__2_,0,999));
    SELF.P_I___Srch_L_Name_Per_Inp_Addr_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_Full_Flag_Value_,IN,__CN([__CC13564,'0'])))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_Addr_Cnt1_Y_ < 1=>__CC13572,__PP10369557.Srch_L_Name_Per_Inp_Addr_Cnt1_Y_);
    SELF.P_I___Srch_L_Name_Per_Inp_S_S_N_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_S_S_N_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ < 1=>__CC13572,KEL.Routines.BoundsFold(__PP10369557.C_O_U_N_T___Exp1__1_,0,999));
    SELF.P_I___Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_Full_Flag_Value_,IN,__CN([__CC13564,'0'])))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_Addr_Cnt1_Y_ < 1=>__CC13572,__PP10369557.Srch_Lex_I_D_Per_Inp_Addr_Cnt1_Y_);
    SELF.P_I___Srch_Lex_I_D_Per_Inp_Email_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Email_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_Email_Cnt1_Y_ < 1=>__CC13572,KEL.Routines.BoundsFold(__PP10369557.C_O_U_N_T___Person_Info_,0,999));
    __BS10371060 := __T(__PP10369557.Good_Inquiries_Last_Year_For_Phone_);
    __EE10371068 := __BS10371060(__T(__OP2(__T(__PP10369557.Good_Inquiries_Last_Year_For_Phone_).Lex_I_D_,<>,__CN(0))));
    __ST84729_Layout := RECORD
      KEL.typ.nint Lex_I_D_;
      KEL.typ.timestamp Archive___Date_ := 0;
      KEL.typ.timestamp Date_First_Seen_ := 0;
      KEL.typ.timestamp Date_Last_Seen_ := 0;
      KEL.typ.timestamp Hybrid_Archive_Date_ := 0;
      KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
      KEL.typ.int __RecordCount := 0;
    END;
    SELF.P_I___Srch_Lex_I_D_Per_Inp_Phone_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Home_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_Phone_Cnt1_Y_ < 1=>__CC13572,KEL.Routines.BoundsFold(COUNT(PROJECT(TABLE(PROJECT(__EE10371068,__ST84729_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.timestamp Archive___Date_ := KEL.era.SimpleRollTimestamp(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.timestamp Date_First_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.timestamp Date_Last_Seen_ := KEL.era.SimpleRollTimestamp(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.timestamp Hybrid_Archive_Date_ := KEL.era.SimpleRollTimestamp(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),Lex_I_D_},Lex_I_D_,MERGE),__ST84729_Layout)),0,999));
    SELF.P_I___Srch_Lex_I_D_Per_Inp_S_S_N_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_S_S_N_Flag_Value_,<>,__CAST(KEL.typ.str,__CN(1))))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_S_S_N_Cnt1_Y_ < 1=>__CC13572,KEL.Routines.BoundsFold(__PP10369557.C_O_U_N_T___Exp1_,0,999));
    SELF.P_I___Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_Full_Flag_Value_,IN,__CN([__CC13564,'0'])))=>__CC13567,__PP10369557.P_I___Srch_Per_Inp_Addr_Cnt1_Y_ < 1=>__CC13572,__PP10369557.Srch_S_S_N_Per_Inp_Addr_Cnt1_Y_);
    SELF.P___Inp_Acct_Flag_Value_ := FN_Compile(__cfg).FN_Is_Echo_Populated(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Acct_));
    SELF.P___Inp_Arch_Dt_Flag_Value_ := FN_Compile(__cfg).FN_Is_Echo_Populated(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Arch_Dt_));
    SELF.P___Inp_Cln_Addr_Loc_I_D_ := IF(__T(__OR(__CN(__PP10369557.Addr_Not_Populated_),__PP10369557.City_State_Zip_Not_Populated_)),__ECAST(KEL.typ.nint,__CN(__CC13567)),__ECAST(KEL.typ.nint,FN_Compile(__cfg).FN_Is_Zero(__ECAST(KEL.typ.nint,FN_Compile(__cfg).FN_Append_Location_I_D(__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_Primary_Range_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_Prim_Rng_))),__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_Pre_Direction_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_Pre_Dir_))),__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_Primary_Name_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_Prim_Name_))),__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_Address_Suffix_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_Sffx_))),__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_Post_Direction_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_Post_Dir_))),__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_Secondary_Range_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_Sec_Rng_))),__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_City_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_City_))),__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_State_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_State_))),__ECAST(KEL.typ.nstr,IF(__T(__OP2(__PP10369557.Input_Zip5_Clean_Value_,=,__CN(__CC13569))),__ECAST(KEL.typ.nstr,__CN('')),__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Cln_Addr_Zip5_))))),__ECAST(KEL.typ.nint,__CN(__CC13572)))));
    SELF.P___Inp_Cln_Arch_Dt_F2_Y_ := MAP(__PP10369557.P___Inp_Cln_Arch_Dt_Flag_Value_ <> '1'=>__CC13564,__PP10369557.C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_ > KEL.Routines.Today()=>__CC13569,KEL.Routines.DateToString(__PP10369557.C_U_R_R_E_N_T___D_A_T_E__2_Y_E_A_R_S_,'%Y%m%d'));
    SELF.P___Inp_Cln_Arch_Dt_F6_M_ := MAP(__PP10369557.P___Inp_Cln_Arch_Dt_Flag_Value_ <> '1'=>__CC13564,__PP10369557.C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_ > KEL.Routines.Today()=>__CC13569,KEL.Routines.DateToString(__PP10369557.C_U_R_R_E_N_T___D_A_T_E__6_M_O_N_T_H_S_,'%Y%m%d'));
    SELF.P___Inp_Cln_Email_Dom_ := MAP(__PP10369557.P___Inp_Email_Flag_Value_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OR(__OP2(__PP10369557.At_Position_Clean_,=,__CN(0)),__OP2(__PP10369557.Email_Extension_Spot_,=,__CN(0))))=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__FN1(KEL.Routines.ToUpperCase,__FN3(KEL.Routines.SubStr2,__PP10369557.Input_Email_Clean_Value_,__OP2(__PP10369557.At_Position_Clean_,+,__CN(1)),__OP2(__PP10369557.Email_Extension_Spot_,-,__CN(1))))),__ECAST(KEL.typ.nstr,__CN(__CC13569)))));
    SELF.P___Inp_Cln_Email_Ext_ := MAP(__PP10369557.P___Inp_Email_Flag_Value_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OR(__OP2(__PP10369557.At_Position_Clean_,=,__CN(0)),__OP2(__PP10369557.Email_Extension_Spot_,=,__CN(0))))=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__FN1(KEL.Routines.ToUpperCase,__FN2(KEL.Routines.SubStr1,__PP10369557.Input_Email_Clean_Value_,__PP10369557.Email_Extension_Spot_))),__ECAST(KEL.typ.nstr,__CN(__CC13569)))));
    SELF.P___Inp_Cln_Email_User_ := MAP(__PP10369557.P___Inp_Email_Flag_Value_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OR(__OP2(__PP10369557.At_Position_Clean_,=,__CN(0)),__OP2(__PP10369557.Email_Extension_Spot_,=,__CN(0))))=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__FN1(KEL.Routines.ToUpperCase,__FN3(KEL.Routines.SubStr2,__PP10369557.Input_Email_Clean_Value_,__CN(1),__OP2(__PP10369557.At_Position_Clean_,-,__CN(1))))),__ECAST(KEL.typ.nstr,__CN(__CC13569)))));
    SELF.P___Inp_Cln_I_P_Addr_Flag_Value_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_I_P_Addr_,=,__CN(__CC13569)))=>__ECAST(KEL.typ.nstr,__CAST(KEL.typ.str,__CN(0))),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Clean_Populated(__ECAST(KEL.typ.nstr,__PP10369557.Input_I_P_Addr_Value_),__ECAST(KEL.typ.nstr,__CN(__CC13564)),__ECAST(KEL.typ.nstr,__CN(__CC13569)))));
    SELF.P___Inp_I_P_Addr_Flag_Value_ := FN_Compile(__cfg).FN_Is_Echo_Populated(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_I_P_Addr_));
    SELF.P___Inp_Phone_Work_Flag_Value_ := FN_Compile(__cfg).FN_Is_Echo_Populated(__ECAST(KEL.typ.nstr,__PP10369557.P___Inp_Phone_Work_));
    SELF.P___Inp_S_S_N_Is4_Digits_ := MAP(__T(__OP2(__PP10369557.Input_S_S_N_Value_,=,__CN(__CC13564)))=>__CC13564,__T(__OP2(__FN1(LENGTH,__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nint,__PP10369557.P___Inp_Cln_S_S_N_))),=,__CN(4)))=>(KEL.typ.str)1,(KEL.typ.str)0);
    SELF.P___Inp_Val_Addr_St_Invalid_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Addr_St_Flag_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(__PP10369557.P___Inp_Cln_Addr_St_Flag_Value_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OP2(__PP10369557.P___Inp_Cln_Addr_St_Flag_Value_,=,__CN('0')))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    __CC15691 := ['AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA','GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT','VT','VI','VA','WA','WV','WI','WY','AE','AP','AA'];
    SELF.P___Inp_Val_Addr_State_Bad_Abbr_Flag_Value_ := MAP(__T(__OR(__OR(__NT(__PP10369557.P___Inp_Addr_State_),__OP2(__FN1(TRIM,__PP10369557.P___Inp_Addr_State_),=,__CN(''))),__OP2(__FN1(TRIM,__PP10369557.P___Inp_Addr_State_),=,__CN(__CC13564))))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__T(__OP2(__FN1(LENGTH,__FN1(TRIM,__PP10369557.P___Inp_Addr_State_)),<>,__CN(2)))=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__T(__NOT(__OP2(__FN1(TRIM,__PP10369557.P___Inp_Addr_State_),IN,__CN(__CC15691))))=>__ECAST(KEL.typ.nint,__CN(1)),__T(__OP2(__FN1(TRIM,__PP10369557.P___Inp_Addr_State_),IN,__CN(__CC15691)))=>__ECAST(KEL.typ.nint,__CN(0)),__N(KEL.typ.int));
    SELF.P___Inp_Val_Addr_Zip_All_Zero_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Zip_Length_Value_,=,__CN(0)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__T(__OP2(__PP10369557.Cleaned_Zip_Int_,=,__CN(0)))=>__ECAST(KEL.typ.nint,__CN(1)),__T(__OP2(__PP10369557.Cleaned_Zip_Int_,>,__CN(0)))=>__ECAST(KEL.typ.nint,__CN(0)),__N(KEL.typ.int));
    SELF.P___Inp_Val_Addr_Zip_Bad_Len_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Zip_Length_Value_,=,__CN(0)))=>__CC13567,__T(__OR(__OP2(__PP10369557.Zip_Length_Value_,=,__CN(5)),__OP2(__PP10369557.Zip_Length_Value_,=,__CN(9))))=>0,1);
    SELF.P___Inp_Val_Arch_Dt_Invalid_Flag_ := MAP(__PP10369557.P___Inp_Cln_Arch_Dt_Flag_Value_ = __CC13564=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__PP10369557.P___Inp_Cln_Arch_Dt_Flag_Value_ = '1'=>__ECAST(KEL.typ.nstr,__CN('0')),__PP10369557.P___Inp_Cln_Arch_Dt_Flag_Value_ = '0'=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    SELF.P___Inp_Val_D_L_Invalid_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_D_L_Flag_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(__PP10369557.P___Inp_Cln_D_L_Flag_Value_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OP2(__PP10369557.P___Inp_Cln_D_L_Flag_Value_,=,__CN('0')))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    SELF.P___Inp_Val_D_L_State_Invalid_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_D_L_State_Flag_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(__FN1(LENGTH,__FN1(TRIM,__PP10369557.P___Inp_D_L_State_)),<>,__CN(2)))=>__ECAST(KEL.typ.nstr,__CN(__CC13569)),__T(__OP2(__PP10369557.P___Inp_Cln_D_L_State_Flag_Value_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OP2(__PP10369557.P___Inp_Cln_D_L_State_Flag_Value_,=,__CN('0')))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    SELF.P___Inp_Val_D_O_B_Invalid_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_D_O_B_Flag_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(__PP10369557.P___Inp_Cln_D_O_B_Flag_Value_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OP2(__PP10369557.P___Inp_Cln_D_O_B_Flag_Value_,=,__CN('0')))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    SELF.P___Inp_Val_Email_Bogus_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Input_Email_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__T(__OR(__OP2(__PP10369557.At_Position_,<=,__CN(1)),__OP2(__PP10369557.Input_Email_Value_,=,__CN(__CC13569))))=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__T(__OP2(__PP10369557.Invalid_Email_,=,__CN(0)))=>__ECAST(KEL.typ.nint,__CN(0)),__T(__OP2(__PP10369557.Invalid_Email_,=,__CN(1)))=>__ECAST(KEL.typ.nint,__CN(1)),__N(KEL.typ.int));
    SELF.P___Inp_Val_Email_Dom_Bad_Char_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Input_Email_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__T(__OR(__OP2(__PP10369557.At_Position_,<=,__CN(1)),__OP2(__PP10369557.Input_Email_Value_,=,__CN(__CC13569))))=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__T(__AND(__OP2(__PP10369557.Clean_Email_Domain_,<>,__PP10369557.Email_Domain_),__OP2(__PP10369557.P___Inp_Val_Email_Dom_All_Zero_Flag_Value_,=,__CN(0))))=>__ECAST(KEL.typ.nint,__CN(1)),__T(__OP2(__PP10369557.Clean_Email_Domain_,=,__PP10369557.Email_Domain_))=>__ECAST(KEL.typ.nint,__CN(0)),__N(KEL.typ.int));
    SELF.P___Inp_Val_Email_Invalid_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Email_Flag_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(__PP10369557.P___Inp_Cln_Email_Flag_Value_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OP2(__PP10369557.P___Inp_Cln_Email_Flag_Value_,=,__CN('0')))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    SELF.P___Inp_Val_Email_User_Bad_Char_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Input_Email_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__T(__OR(__OP2(__PP10369557.At_Position_,<=,__CN(1)),__OP2(__PP10369557.Input_Email_Value_,=,__CN(__CC13569))))=>__ECAST(KEL.typ.nint,__CN(__CC13572)),__T(__AND(__OP2(__PP10369557.Clean_Email_Username_,<>,__PP10369557.Email_Username_),__OP2(__PP10369557.P___Inp_Val_Email_User_All_Zero_Flag_Value_,=,__CN(0))))=>__ECAST(KEL.typ.nint,__CN(1)),__T(__OP2(__PP10369557.Clean_Email_Username_,=,__PP10369557.Email_Username_))=>__ECAST(KEL.typ.nint,__CN(0)),__N(KEL.typ.int));
    SELF.P___Inp_Val_Name_Invalid_Flag_ := MAP(__T(__OR(__OP2(__PP10369557.P___Inp_Cln_Name_First_Flag_Value_,=,__CN(__CC13564)),__OP2(__PP10369557.P___Inp_Cln_Name_Last_Flag_Value_,=,__CN(__CC13564))))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__AND(__OP2(__PP10369557.P___Inp_Cln_Name_First_Flag_Value_,=,__CN('1')),__OP2(__PP10369557.P___Inp_Cln_Name_Last_Flag_Value_,=,__CN('1'))))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OR(__OP2(__PP10369557.P___Inp_Cln_Name_First_Flag_Value_,=,__CN('0')),__OP2(__PP10369557.P___Inp_Cln_Name_Last_Flag_Value_,=,__CN('0'))))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    SELF.P___Inp_Val_Phone_Home_Bad_Char_Flag_ := MAP(__T(__OP2(__PP10369557.Input_Home_Phone_Value_,=,__CN(__CC13564)))=>__CC13567,__T(__OP2(FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__FN1(TRIM,__PP10369557.P___Inp_Phone_Home_)),__ECAST(KEL.typ.nstr,__CN('0123456789()-.+'))),=,__FN1(TRIM,__PP10369557.P___Inp_Phone_Home_)))=>0,1);
    SELF.P___Inp_Val_Phone_Home_Bad_Len_Flag_ := MAP(__T(__OP2(__PP10369557.Input_Home_Phone_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__T(__OR(__OP2(__FN1(LENGTH,__FN1(TRIM,FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__PP10369557.Input_Home_Phone_Value_),__ECAST(KEL.typ.nstr,__CN('1234567890'))))),=,__CN(7)),__OP2(__FN1(LENGTH,__FN1(TRIM,FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__PP10369557.Input_Home_Phone_Value_),__ECAST(KEL.typ.nstr,__CN('1234567890'))))),=,__CN(10))))=>__ECAST(KEL.typ.nint,__CN(0)),__T(__AND(__OP2(__FN1(LENGTH,__FN1(TRIM,FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__PP10369557.Input_Home_Phone_Value_),__ECAST(KEL.typ.nstr,__CN('1234567890'))))),<>,__CN(7)),__OP2(__FN1(LENGTH,__FN1(TRIM,FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__PP10369557.Input_Home_Phone_Value_),__ECAST(KEL.typ.nstr,__CN('1234567890'))))),<>,__CN(10))))=>__ECAST(KEL.typ.nint,__CN(1)),__N(KEL.typ.int));
    SELF.P___Inp_Val_Phone_Home_Bogus_Flag_ := MAP(__T(__OP2(__PP10369557.Input_Home_Phone_Value_,=,__CN(__CC13564)))=>__CC13567,__T(FN_Compile(__cfg).FN_Is_Bad_Phone(__ECAST(KEL.typ.nstr,__FN1(TRIM,__PP10369557.P___Inp_Phone_Home_))))=>1,0);
    SELF.P___Inp_Val_Phone_Home_Invalid_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Home_Flag_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Home_Flag_Value_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Home_Flag_Value_,=,__CN('0')))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    SELF.P___Inp_Val_Phone_Work_Bad_Char_Flag_ := MAP(__T(__OP2(__PP10369557.Input_Work_Phone_Value_,=,__CN(__CC13564)))=>__CC13567,__T(__OP2(FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__FN1(TRIM,__PP10369557.P___Inp_Phone_Work_)),__ECAST(KEL.typ.nstr,__CN('0123456789()-.+'))),=,__FN1(TRIM,__PP10369557.P___Inp_Phone_Work_)))=>0,1);
    SELF.P___Inp_Val_Phone_Work_Bad_Len_Flag_ := MAP(__T(__OP2(__PP10369557.Input_Work_Phone_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nint,__CN(__CC13567)),__T(__OR(__OP2(__FN1(LENGTH,__FN1(TRIM,FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__PP10369557.Input_Work_Phone_Value_),__ECAST(KEL.typ.nstr,__CN('1234567890'))))),=,__CN(7)),__OP2(__FN1(LENGTH,__FN1(TRIM,FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__PP10369557.Input_Work_Phone_Value_),__ECAST(KEL.typ.nstr,__CN('1234567890'))))),=,__CN(10))))=>__ECAST(KEL.typ.nint,__CN(0)),__T(__AND(__OP2(__FN1(LENGTH,__FN1(TRIM,FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__PP10369557.Input_Work_Phone_Value_),__ECAST(KEL.typ.nstr,__CN('1234567890'))))),<>,__CN(7)),__OP2(__FN1(LENGTH,__FN1(TRIM,FN_Compile(__cfg).FN_Filter(__ECAST(KEL.typ.nstr,__PP10369557.Input_Work_Phone_Value_),__ECAST(KEL.typ.nstr,__CN('1234567890'))))),<>,__CN(10))))=>__ECAST(KEL.typ.nint,__CN(1)),__N(KEL.typ.int));
    SELF.P___Inp_Val_Phone_Work_Bogus_Flag_ := MAP(__T(__OP2(__PP10369557.Input_Work_Phone_Value_,=,__CN(__CC13564)))=>__CC13567,__T(FN_Compile(__cfg).FN_Is_Bad_Phone(__ECAST(KEL.typ.nstr,__FN1(TRIM,__PP10369557.P___Inp_Phone_Work_))))=>1,0);
    SELF.P___Inp_Val_Phone_Work_Invalid_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Work_Flag_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Work_Flag_Value_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OP2(__PP10369557.P___Inp_Cln_Phone_Work_Flag_Value_,=,__CN('0')))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    SELF.P___Inp_Val_S_S_N_Bad_Char_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Input_S_S_N_Value_,=,__CN(__CC13564)))=>__CC13567,__T(__OP2(__PP10369557.P___Inp_S_S_N_,=,__PP10369557.Clean_S_S_N_))=>0,1);
    SELF.P___Inp_Val_S_S_N_Bad_Len_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Input_S_S_N_Value_,=,__CN(__CC13564)))=>__CC13567,__T(__OP2(__FN1(LENGTH,__PP10369557.Numeric_S_S_N_),=,__CN(9)))=>0,1);
    SELF.P___Inp_Val_S_S_N_Bogus_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Input_S_S_N_Value_,=,__CN(__CC13564)))=>__CC13567,__T(FN_Compile(__cfg).FN_Is_Bad_S_S_N(__ECAST(KEL.typ.nstr,__PP10369557.Numeric_S_S_N_)))=>1,0);
    SELF.P___Inp_Val_S_S_N_Invalid_Flag_ := MAP(__T(__OP2(__PP10369557.P___Inp_Cln_S_S_N_Flag_Value_,=,__CN(__CC13564)))=>__ECAST(KEL.typ.nstr,__CN(__CC13564)),__T(__OP2(__PP10369557.P___Inp_Cln_S_S_N_Flag_Value_,=,__CN('1')))=>__ECAST(KEL.typ.nstr,__CN('0')),__T(__OP2(__PP10369557.P___Inp_Cln_S_S_N_Flag_Value_,=,__CN('0')))=>__ECAST(KEL.typ.nstr,__CN('1')),__N(KEL.typ.str));
    __CC15737 := [50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,94,95,96,97,98,99];
    SELF.P___Inp_Val_S_S_N_Is_I_T_I_N_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Input_S_S_N_Value_,=,__CN(__CC13564)))=>__CC13567,__T(__OP2(__FN1(LENGTH,__PP10369557.Numeric_S_S_N_),<>,__CN(9)))=>__CC13572,__T(__AND(__OP2(__FN3(KEL.Routines.SubStr2,__PP10369557.Numeric_S_S_N_,__CN(1),__CN(1)),=,__CN('9')),__OP2(__PP10369557.Numeric45_S_S_N_,IN,__CN(__CC15737))))=>1,0);
    SELF.P___Inp_Val_S_S_N_Non_S_S_A_Flag_Value_ := MAP(__T(__OP2(__PP10369557.Input_S_S_N_Value_,=,__CN(__CC13564)))=>__CC13567,__T(__OP2(__FN1(LENGTH,__PP10369557.Numeric_S_S_N_),<>,__CN(9)))=>__CC13572,__T(__OP2(__FN3(KEL.Routines.SubStr2,__PP10369557.Numeric_S_S_N_,__CN(1),__CN(3)),IN,__CN(['000','666'])))=>1,__T(__AND(__OP2(__ECAST(KEL.typ.nint,__FN3(KEL.Routines.SubStr2,__PP10369557.Numeric_S_S_N_,__CN(1),__CN(3))),>=,__CN(900)),__OP2(__ECAST(KEL.typ.nint,__FN3(KEL.Routines.SubStr2,__PP10369557.Numeric_S_S_N_,__CN(1),__CN(3))),<=,__CN(999))))=>1,__T(__OP2(__FN3(KEL.Routines.SubStr2,__PP10369557.Numeric_S_S_N_,__CN(4),__CN(5)),=,__CN('00')))=>1,__T(__OP2(__FN3(KEL.Routines.SubStr2,__PP10369557.Numeric_S_S_N_,__CN(6),__CN(9)),=,__CN('0000')))=>1,0);
    SELF.Targus_Src_ := IF(__T(__OR(__NOT(__NT(__PP10369557.Targus_Gateway_I_P_)),__NOT(__OP2(__PP10369557.Targus_Gateway_I_P_,=,__CN(''))))),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_G_E_T___V_A_L_U_E(__PP10369557.Targus_Results_,__ECAST(KEL.typ.nint,__CN(3)))),__ECAST(KEL.typ.nstr,__N(KEL.typ.str)));
    SELF._ipresponse_ := IF(__T(__OR(__NOT(__NT(__PP10369557.Net_Acuity_Gateway_I_P_)),__NOT(__OP2(__PP10369557.Net_Acuity_Gateway_I_P_,=,__CN(''))))),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_G_E_T___V_A_L_U_E(__PP10369557.Net_Acuity_Results_,__ECAST(KEL.typ.nint,__CN(3)))),__ECAST(KEL.typ.nstr,__N(KEL.typ.str)));
    SELF._netacuityroyalty_ := IF(__T(__OR(__NOT(__NT(__PP10369557.Net_Acuity_Gateway_I_P_)),__NOT(__OP2(__PP10369557.Net_Acuity_Gateway_I_P_,=,__CN(''))))),__ECAST(KEL.typ.nint,FN_Compile(__cfg).FN_G_E_T___N_E_T_A_C_U_I_T_Y___R_O_Y_A_L_T_I_E_S(__ECAST(KEL.typ.nstr,__PP10369557._ipaddr_),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_G_E_T___V_A_L_U_E(__PP10369557.Net_Acuity_Results_,__ECAST(KEL.typ.nint,__CN(4)))))),__ECAST(KEL.typ.nint,__N(KEL.typ.int)));
    SELF := __PP10369557;
  END;
  EXPORT __ENH_Input_P_I_I := PROJECT(__EE10369556,__ND10369561__Project(LEFT));
END;
