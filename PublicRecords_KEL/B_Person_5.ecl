//HPCC Systems KEL Compiler Version 1.5.0rc1
IMPORT KEL15 AS KEL;
IMPORT B_Bankruptcy_6,B_Input_P_I_I_6,B_Person_6,B_Person_7,B_Person_Accident_8,CFG_Compile,E_Accident,E_Address,E_Address_Slim,E_Address_Summary,E_Bankruptcy,E_Email,E_Geo_Link,E_Input_P_I_I,E_Name_Summary,E_Person,E_Person_Accident,E_Person_Bankruptcy,E_Phone,E_Phone_Summary,E_Property,E_S_S_N_Summary,E_Social_Security_Number,E_Surname,E_Zip_Code,FN_Compile FROM PublicRecords_KEL;
IMPORT * FROM KEL15.Null;
EXPORT B_Person_5(CFG_Compile.FDCDataset __in = CFG_Compile.FDCDefault, CFG_Compile __cfg = CFG_Compile) := MODULE
  SHARED VIRTUAL TYPEOF(B_Bankruptcy_6(__in,__cfg).__ENH_Bankruptcy_6) __ENH_Bankruptcy_6 := B_Bankruptcy_6(__in,__cfg).__ENH_Bankruptcy_6;
  SHARED VIRTUAL TYPEOF(B_Input_P_I_I_6(__in,__cfg).__ENH_Input_P_I_I_6) __ENH_Input_P_I_I_6 := B_Input_P_I_I_6(__in,__cfg).__ENH_Input_P_I_I_6;
  SHARED VIRTUAL TYPEOF(B_Person_6(__in,__cfg).__ENH_Person_6) __ENH_Person_6 := B_Person_6(__in,__cfg).__ENH_Person_6;
  SHARED VIRTUAL TYPEOF(E_Person_Bankruptcy(__in,__cfg).__Result) __E_Person_Bankruptcy := E_Person_Bankruptcy(__in,__cfg).__Result;
  SHARED __EE6676610 := __ENH_Person_6;
  SHARED __EE6676616 := __ENH_Bankruptcy_6;
  SHARED __EE6676614 := __E_Person_Bankruptcy;
  SHARED __EE6679924 := __EE6676614(__NN(__EE6676614.Subject_) AND __NN(__EE6676614.Bankrupt_));
  SHARED __ST618463_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST281378_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST484029_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6679942(B_Bankruptcy_6(__in,__cfg).__ST281371_Layout __EE6676616, E_Person_Bankruptcy(__in,__cfg).Layout __EE6679924) := __EEQP(__EE6679924.Bankrupt_,__EE6676616.UID);
  __ST618463_Layout __JT6679942(B_Bankruptcy_6(__in,__cfg).__ST281371_Layout __l, E_Person_Bankruptcy(__in,__cfg).Layout __r) := TRANSFORM
    SELF.Data_Sources__1_ := __r.Data_Sources_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6679943 := JOIN(__EE6679924,__EE6676616,__JC6679942(RIGHT,LEFT),__JT6679942(RIGHT,LEFT),INNER,HASH);
  SHARED __ST618808_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST281378_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST484029_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.int Child_Sort_List_ := 0;
    KEL.typ.nbool Banko1_Year_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6680027(__ST618463_Layout __EE6679943, B_Bankruptcy_6(__in,__cfg).__ST484029_Layout __EE6680013) := __T(__EE6680013.Banko1_Year_);
  __ST618808_Layout __JT6680027(__ST618463_Layout __l, B_Bankruptcy_6(__in,__cfg).__ST484029_Layout __r) := TRANSFORM, SKIP(NOT(__JC6680027(__l,__r)))
    SELF.Archive___Date_ := __r.Archive___Date_;
    SELF.Date_First_Seen_ := __r.Date_First_Seen_;
    SELF.Date_Last_Seen_ := __r.Date_Last_Seen_;
    SELF.Hybrid_Archive_Date_ := __r.Hybrid_Archive_Date_;
    SELF.Vault_Date_Last_Seen_ := __r.Vault_Date_Last_Seen_;
    SELF.__RecordCount := __r.__RecordCount;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6680028 := NORMALIZE(__EE6679943,__T(LEFT.Best_Child_Record_),__JT6680027(LEFT,RIGHT));
  SHARED __ST617393_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.ntyp(E_Bankruptcy().Typ) Bankrupt_;
    KEL.typ.ndataset(E_Person_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.nstr T_M_S_I_D_;
    KEL.typ.nstr Court_Code_;
    KEL.typ.nstr Case_Number_;
    KEL.typ.nstr Original_Case_Number_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST281378_Layout) Records_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Case_Details_Layout) Case_Details_;
    KEL.typ.ndataset(E_Bankruptcy(__in,__cfg).Data_Sources_Layout) Data_Sources__1_;
    KEL.typ.ndataset(B_Bankruptcy_6(__in,__cfg).__ST484029_Layout) Best_Child_Record_;
    KEL.typ.nbool Has_Case_Number_;
    KEL.typ.nstr Source_Description_;
    KEL.typ.nstr Original_Chapter_;
    KEL.typ.nstr Filing_Type_;
    KEL.typ.nstr Business_Flag_;
    KEL.typ.nstr Corporate_Flag_;
    KEL.typ.nkdate Discharged_Date_;
    KEL.typ.nstr Disposition_;
    KEL.typ.nstr Debtor_Type_;
    KEL.typ.nint Debtor_Sequence_;
    KEL.typ.nint Disposition_Type_;
    KEL.typ.nint Disposition_Reason_;
    KEL.typ.nstr Disposition_Type_Description_;
    KEL.typ.nstr Name_Type_;
    KEL.typ.nstr Screen_Description_;
    KEL.typ.nstr Decoded_Description_;
    KEL.typ.nkdate Date_Filed_;
    KEL.typ.nstr Record_Type_;
    KEL.typ.nkdate Last_Status_Update_;
    KEL.typ.int Child_Sort_List_ := 0;
    KEL.typ.nbool Banko1_Year_;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.nint Filing_Age_In_Days_;
    KEL.typ.nbool Is_Bankruptcy_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __ST617393_Layout __ND6680121__Project(__ST618808_Layout __PP6680029) := TRANSFORM
    SELF.UID := __PP6680029.Subject_;
    SELF.Data_Sources_ := __PP6680029.Data_Sources__1_;
    SELF.U_I_D__1_ := __PP6680029.UID;
    SELF.Data_Sources__1_ := __PP6680029.Data_Sources_;
    SELF := __PP6680029;
  END;
  SHARED __EE6680372 := PROJECT(__EE6680028,__ND6680121__Project(LEFT));
  SHARED __ST617592_Layout := RECORD
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.nkdate Bankruptcy_Date_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6680386 := PROJECT(__EE6680372,__ST617592_Layout);
  SHARED __ST617610_Layout := RECORD
    KEL.typ.nkdate M_A_X___Bankruptcy_Date_;
    KEL.typ.nkdate M_I_N___Bankruptcy_Date_;
    KEL.typ.ntyp(E_Person().Typ) UID;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
  END;
  SHARED __EE6680407 := PROJECT(__CLEANANDDO(__EE6680386,TABLE(__EE6680386,{KEL.typ.epoch Archive___Date_ := KEL.era.SimpleRoll(GROUP,Archive___Date_,MIN,FALSE),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,FALSE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),KEL.typ.epoch Hybrid_Archive_Date_ := KEL.era.SimpleRoll(GROUP,Hybrid_Archive_Date_,MIN,FALSE),KEL.typ.epoch Vault_Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Vault_Date_Last_Seen_,MAX,NMAX),KEL.Aggregates.MaxNG(__EE6680386.Bankruptcy_Date_) M_A_X___Bankruptcy_Date_,KEL.Aggregates.MinNG(__EE6680386.Bankruptcy_Date_) M_I_N___Bankruptcy_Date_,UID},UID,MERGE)),__ST617610_Layout);
  SHARED __ST619259_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST311442_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST311457_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST311472_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST291348_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST108656_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99530_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST463737_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST101559_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST101523_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr L_T_D1_Y_Old_Date_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt1_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt1_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST141238_Layout) Person_S_S_N_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST109561_Layout) S_S_N_Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST513804_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST109225_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST109387_Layout) Verified_Last_Name_Sources_;
    KEL.typ.nkdate M_A_X___Bankruptcy_Date_;
    KEL.typ.nkdate M_I_N___Bankruptcy_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6680413(B_Person_6(__in,__cfg).__ST519042_Layout __EE6676610, __ST617610_Layout __EE6680407) := __EEQP(__EE6676610.UID,__EE6680407.UID);
  __ST619259_Layout __JT6680413(B_Person_6(__in,__cfg).__ST519042_Layout __l, __ST617610_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6680414 := JOIN(__EE6676610,__EE6680407,__JC6680413(LEFT,RIGHT),__JT6680413(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE6676612 := __ENH_Input_P_I_I_6;
  SHARED __ST620966_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST311442_Layout) Full_Name_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST311457_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST311472_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST291348_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST108656_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99530_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST463737_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST101559_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST101523_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr L_T_D1_Y_Old_Date_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt1_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt1_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST141238_Layout) Person_S_S_N_Match_Sources_All_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST109561_Layout) S_S_N_Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST513804_Layout) Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST109225_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST109387_Layout) Verified_Last_Name_Sources_;
    KEL.typ.nkdate M_A_X___Bankruptcy_Date_;
    KEL.typ.nkdate M_I_N___Bankruptcy_Date_;
    KEL.typ.ntyp(E_Person().Typ) U_I_D__1_;
    KEL.typ.nuid U_I_D__2_;
    KEL.typ.ntyp(E_Person().Typ) Subject_;
    KEL.typ.nstr P___Inp_Acct_;
    KEL.typ.nint P___Inp_Lex_I_D_;
    KEL.typ.nstr P___Inp_Name_First_;
    KEL.typ.nstr P___Inp_Name_Mid_;
    KEL.typ.nstr P___Inp_Name_Last_;
    KEL.typ.ntyp(E_Surname().Typ) Last_Name_;
    KEL.typ.nstr P___Inp_Addr_Line1_;
    KEL.typ.nstr P___Inp_Addr_Line2_;
    KEL.typ.nstr P___Inp_Addr_City_;
    KEL.typ.nstr P___Inp_Addr_State_;
    KEL.typ.nstr P___Inp_Addr_Zip_;
    KEL.typ.nstr P___Inp_Phone_Home_;
    KEL.typ.nstr P___Inp_S_S_N_;
    KEL.typ.nstr P___Inp_D_O_B_;
    KEL.typ.nstr P___Inp_Phone_Work_;
    KEL.typ.nstr Input_Income_Echo_;
    KEL.typ.nstr P___Inp_D_L_;
    KEL.typ.nstr P___Inp_D_L_State_;
    KEL.typ.nstr Input_Balance_Echo_;
    KEL.typ.nstr Input_Charge_Offd_Echo_;
    KEL.typ.nstr Input_Former_Name_Echo_;
    KEL.typ.nstr P___Inp_Email_;
    KEL.typ.nstr P___Inp_I_P_Addr_;
    KEL.typ.nstr Input_Employment_Echo_;
    KEL.typ.nstr P___Inp_Arch_Dt_;
    KEL.typ.nint P___Lex_I_D_;
    KEL.typ.nint P___Lex_I_D_Score_;
    KEL.typ.nstr P___Inp_Cln_Name_Prfx_;
    KEL.typ.nstr P___Inp_Cln_Name_First_;
    KEL.typ.nstr P___Inp_Cln_Name_Mid_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_;
    KEL.typ.nstr P___Inp_Cln_Name_Sffx_;
    KEL.typ.ntyp(E_Property().Typ) Prop_;
    KEL.typ.ntyp(E_Address().Typ) Location_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_Pre_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Prim_Name_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sffx_;
    KEL.typ.nstr P___Inp_Cln_Addr_Post_Dir_;
    KEL.typ.nstr P___Inp_Cln_Addr_Unit_Desig_;
    KEL.typ.nstr P___Inp_Cln_Addr_Sec_Rng_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_;
    KEL.typ.nstr P___Inp_Cln_Addr_City_Post_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip5_;
    KEL.typ.nstr P___Inp_Cln_Addr_Zip4_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lat_;
    KEL.typ.nstr P___Inp_Cln_Addr_Lng_;
    KEL.typ.nstr P___Inp_Cln_Addr_State_Code_;
    KEL.typ.nstr P___Inp_Cln_Addr_Cnty_;
    KEL.typ.nstr P___Inp_Cln_Addr_Geo_;
    KEL.typ.ntyp(E_Geo_Link().Typ) Geo_Link_I_D_;
    KEL.typ.nstr P___Inp_Cln_Addr_Type_;
    KEL.typ.nstr P___Inp_Cln_Addr_Status_;
    KEL.typ.nstr P___Inp_Cln_Email_;
    KEL.typ.ntyp(E_Email().Typ) Input_Clean_Email_;
    KEL.typ.nstr P___Inp_Cln_Phone_Home_;
    KEL.typ.ntyp(E_Phone().Typ) Input_Clean_Phone_;
    KEL.typ.nstr P___Inp_Cln_Phone_Work_;
    KEL.typ.nstr P___Inp_Cln_D_L_;
    KEL.typ.nstr P___Inp_Cln_D_L_State_;
    KEL.typ.nkdate P___Inp_Cln_D_O_B_;
    KEL.typ.nstr P___Inp_Cln_S_S_N__1_;
    KEL.typ.ntyp(E_Social_Security_Number().Typ) Input_Clean_S_S_N_;
    KEL.typ.nint P___Inp_Cln_Arch_Dt_;
    KEL.typ.nint G___Proc_Bus_U_I_D_;
    KEL.typ.nstr Phone_Verification_Bureau_;
    KEL.typ.nstr Dial_Indicator_;
    KEL.typ.nstr Point_I_D_;
    KEL.typ.nstr N_X_X_Type_;
    KEL.typ.nbool Z_I_P_Match_;
    KEL.typ.nstr C_O_C_Type_;
    KEL.typ.nstr S_S_C_;
    KEL.typ.nstr Wireless_Indicator_;
    KEL.typ.nint Rep_Number_;
    KEL.typ.ntyp(E_Address_Slim().Typ) Slim_Location_;
    KEL.typ.ntyp(E_Zip_Code().Typ) Z_I_P5_;
    KEL.typ.ntyp(E_S_S_N_Summary().Typ) Social_Summary_;
    KEL.typ.ntyp(E_Name_Summary().Typ) Name_Summ_;
    KEL.typ.ntyp(E_Phone_Summary().Typ) Telephone_Summary_;
    KEL.typ.ntyp(E_Address_Summary().Typ) Location_Summary_;
    KEL.typ.nstr Current_Addr_Prim_Rng_;
    KEL.typ.nstr Current_Addr_Pre_Dir_;
    KEL.typ.nstr Current_Addr_Prim_Name_;
    KEL.typ.nstr Current_Addr_Sffx_;
    KEL.typ.nstr Current_Addr_Sec_Rng_;
    KEL.typ.nstr Current_Addr_State_;
    KEL.typ.nstr Current_Addr_Zip5_;
    KEL.typ.nstr Current_Addr_Zip4_;
    KEL.typ.nstr Current_Addr_State_Code_;
    KEL.typ.nstr Current_Addr_Cnty_;
    KEL.typ.nstr Current_Addr_Geo_;
    KEL.typ.nstr Current_Addr_City_;
    KEL.typ.nstr Current_Addr_Post_Dir_;
    KEL.typ.nstr Current_Addr_Lat_;
    KEL.typ.nstr Current_Addr_Lng_;
    KEL.typ.nstr Current_Addr_Unit_Designation_;
    KEL.typ.nstr Current_Addr_Type_;
    KEL.typ.nstr Current_Addr_Status_;
    KEL.typ.nkdate Current_Addr_Date_First_Seen_;
    KEL.typ.nkdate Current_Addr_Date_Last_Seen_;
    KEL.typ.nstr Current_Addr_Full_;
    KEL.typ.ntyp(E_Address().Typ) Current_Address_;
    KEL.typ.nstr Previous_Addr_Prim_Rng_;
    KEL.typ.nstr Previous_Addr_Pre_Dir_;
    KEL.typ.nstr Previous_Addr_Prim_Name_;
    KEL.typ.nstr Previous_Addr_Sffx_;
    KEL.typ.nstr Previous_Addr_Sec_Rng_;
    KEL.typ.nstr Previous_Addr_State_;
    KEL.typ.nstr Previous_Addr_Zip5_;
    KEL.typ.nstr Previous_Addr_Zip4_;
    KEL.typ.nstr Previous_Addr_State_Code_;
    KEL.typ.nstr Previous_Addr_Cnty_;
    KEL.typ.nstr Previous_Addr_Geo_;
    KEL.typ.nstr Previous_Addr_City_;
    KEL.typ.nstr Previous_Addr_Post_Dir_;
    KEL.typ.nstr Previous_Addr_Lat_;
    KEL.typ.nstr Previous_Addr_Lng_;
    KEL.typ.nstr Previous_Addr_Unit_Designation_;
    KEL.typ.nstr Previous_Addr_Type_;
    KEL.typ.nstr Previous_Addr_Status_;
    KEL.typ.nkdate Previous_Addr_Date_First_Seen_;
    KEL.typ.nkdate Previous_Addr_Date_Last_Seen_;
    KEL.typ.nstr Previous_Addr_Full_;
    KEL.typ.ntyp(E_Address().Typ) Previous_Address_;
    KEL.typ.bool Addr_Not_Populated_ := FALSE;
    KEL.typ.nbool City_State_Zip_Not_Populated_;
    KEL.typ.nstr Input_Address_Suffix_Clean_Value_;
    KEL.typ.nstr Input_First_Name_Value_;
    KEL.typ.nstr Input_Last_Name_Value_;
    KEL.typ.nstr Input_Middle_Name_Value_;
    KEL.typ.nstr Input_Post_Direction_Clean_Value_;
    KEL.typ.nstr Input_Pre_Direction_Clean_Value_;
    KEL.typ.nstr Input_Primary_Name_Clean_Value_;
    KEL.typ.nstr Input_Primary_Range_Clean_Value_;
    KEL.typ.nstr Input_S_S_N_Clean_Value_;
    KEL.typ.nstr Input_Secondary_Range_Clean_Value_;
    KEL.typ.nstr Input_Street_Clean_Value_;
    KEL.typ.nstr Input_Unit_Desig_Clean_Value_;
    KEL.typ.nstr P___Inp_Addr_;
    KEL.typ.str P___Inp_Addr_City_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_State_Flag_Value_ := '';
    KEL.typ.str P___Inp_Addr_Zip_Flag_Value_ := '';
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC6680667(__ST619259_Layout __EE6680414, B_Input_P_I_I_6(__in,__cfg).__ST297387_Layout __EE6676612) := __EEQP(__EE6680414.P_I_I_,__EE6676612.UID);
  __ST620966_Layout __JT6680667(__ST619259_Layout __l, B_Input_P_I_I_6(__in,__cfg).__ST297387_Layout __r) := TRANSFORM
    SELF.U_I_D__2_ := __r.UID;
    SELF.P___Inp_Cln_S_S_N__1_ := __r.P___Inp_Cln_S_S_N_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE6680668 := JOIN(__EE6680414,__EE6676612,__JC6680667(LEFT,RIGHT),__JT6680667(LEFT,RIGHT),LEFT OUTER,SMART);
  EXPORT __ST336786_Layout := RECORD
    KEL.typ.nstr Title_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Middle_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr Name_Suffix_;
    KEL.typ.nstr Name_Score_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nstr Source_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.bool Verified_First_Name_ := FALSE;
    KEL.typ.bool Verified_Last_Name_ := FALSE;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST336801_Layout := RECORD
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nstr Date_Of_Birth_Padded_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool Best_;
    KEL.typ.nbool Best_D_O_B_Rec_;
    KEL.typ.nbool D_O_B_Best_Not_Null_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST336817_Layout := RECORD
    KEL.typ.nstr Source_;
    KEL.typ.nbool Header_Hit_Flag_;
    KEL.typ.nbool F_D_N_Indicator_;
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST141277_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nkdate S_S_N_Source_Date_First_Seen_;
    KEL.typ.nkdate S_S_N_Source_Date_Last_Seen_;
    KEL.typ.nint Bankruptcy_Age_In_Days_;
    KEL.typ.nint Liens_Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST609506_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST108303_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr First_Seen_Date_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.nbool Valid_Bankruptcy_Sources_;
    KEL.typ.nbool Valid_Liens_Sources_;
    KEL.typ.nbool Other_Sources_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST109287_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr First_Seen_Date_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST109449_Layout := RECORD
    KEL.typ.nstr Translated_Source_Code_;
    KEL.typ.nstr Source_Date_First_Seen_;
    KEL.typ.nstr First_Seen_Date_;
    KEL.typ.nstr Source_Date_Last_Seen_;
    KEL.typ.nint Age_In_Days_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  EXPORT __ST336780_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nstr Gender_;
    KEL.typ.nstr Lex_I_D_Segment_;
    KEL.typ.nstr Lex_I_D_Segment2_;
    KEL.typ.ndataset(__ST336786_Layout) Full_Name_;
    KEL.typ.ndataset(__ST336801_Layout) Reported_Dates_Of_Birth_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Reported_Dates_Of_Death_Layout) Reported_Dates_Of_Death_;
    KEL.typ.nstr Race_;
    KEL.typ.nstr Race_Description_;
    KEL.typ.ndataset(__ST336817_Layout) Data_Sources_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Dunn_Data_Layout) Dunn_Data_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Conceal_Carry_Layout) Conceal_Carry_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Hunt_Fish_Layout) Hunt_Fish_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Consumer_Statement_Flags_Layout) Consumer_Statement_Flags_;
    KEL.typ.ndataset(E_Person(__in,__cfg).Thrive_Layout) Thrive_;
    KEL.typ.ndataset(B_Person_Accident_8(__in,__cfg).__ST291348_Layout) Accident_Recs_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST108656_Layout) Accident_Recs_Formatted_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST108656_Layout) Accident_Recs_Formatted_Dedup_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99530_Layout) Address_Hierarchy_Set_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST463737_Layout) All_Lien_Data_;
    KEL.typ.nkdate B_U_I_L_D___D_A_T_E_;
    KEL.typ.nkdate Best_D_O_B_;
    KEL.typ.ntyp(E_Address().Typ) Curr_Addr_Helper_Attribute_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST101559_Layout) Edu_Rec_Ver_Source_List_;
    KEL.typ.ndataset(B_Person_7(__in,__cfg).__ST101523_Layout) Edu_Rec_Ver_Source_List_Pre_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST101559_Layout) Edu_Rec_Ver_Source_List_Sorted_;
    KEL.typ.nstr L_T_D1_Y_New_Date_;
    KEL.typ.nstr L_T_D1_Y_Old_Date_;
    KEL.typ.nstr L_T_D7_Y_New_Date_;
    KEL.typ.nstr L_T_D7_Y_Old_Date_;
    KEL.typ.nstr Ln_J1_Y_New_Date_;
    KEL.typ.nstr Ln_J1_Y_Old_Date_;
    KEL.typ.nstr Ln_J7_Y_New_Date_;
    KEL.typ.nstr Ln_J7_Y_Old_Date_;
    KEL.typ.nstr Ln_J_L_T_D_Max_New_Date1_Y_;
    KEL.typ.nstr Ln_J_L_T_D_Min_Old_Date1_Y_;
    KEL.typ.ntyp(E_Input_P_I_I().Typ) P_I_I_;
    KEL.typ.nstr P_L___Drg_Bk_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Bk_Old_Dt1_Y_;
    KEL.typ.int P_L___Drg_L_T_D_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_L_T_D_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_L_T_D_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_L_T_D_Old_Dt1_Y_;
    KEL.typ.int P_L___Drg_Ln_J_Cnt1_Y_ := 0;
    KEL.typ.int P_L___Drg_Ln_J_Cnt7_Y_ := 0;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_New_Dt7_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt1_Y_;
    KEL.typ.nstr P_L___Drg_Ln_J_Old_Dt7_Y_;
    KEL.typ.nstr P___Inp_Cln_Name_First_Raw_;
    KEL.typ.nstr P___Inp_Cln_Name_Last_Raw_;
    KEL.typ.nstr P___Inp_Cln_S_S_N_;
    KEL.typ.str P___Lex_I_D_Seen_Flag_ := '';
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST141238_Layout) Person_S_S_N_Match_Sources_All_Pre_;
    KEL.typ.ndataset(__ST141277_Layout) Person_S_S_N_Match_Sources_Group_All_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST99530_Layout) Recent_Addr_Full_Set_;
    KEL.typ.ndataset(__ST609506_Layout) S_S_N_Translated_Sources_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST513804_Layout) Translated_Sources_;
    KEL.typ.ndataset(__ST108303_Layout) Ver_Source_List_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST109225_Layout) Verified_First_Name_Sources_;
    KEL.typ.ndataset(__ST109287_Layout) Verified_First_Name_Sources_With_Dates_;
    KEL.typ.ndataset(B_Person_6(__in,__cfg).__ST109387_Layout) Verified_Last_Name_Sources_;
    KEL.typ.ndataset(__ST109449_Layout) Verified_Last_Name_Sources_With_Dates_;
    KEL.typ.epoch Archive___Date_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.epoch Hybrid_Archive_Date_ := 0;
    KEL.typ.epoch Vault_Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST336780_Layout __ND6682532__Project(__ST620966_Layout __PP6681091) := TRANSFORM
    __EE6681065 := __PP6681091.Full_Name_;
    SELF.Full_Name_ := __BN(PROJECT(__T(__EE6681065),__ST336786_Layout),__NL(__EE6681065));
    __EE6681069 := __PP6681091.Reported_Dates_Of_Birth_;
    __ST336801_Layout __ND6682524__Project(B_Person_6(__in,__cfg).__ST311457_Layout __PP6681430) := TRANSFORM
      SELF.D_O_B_Best_Not_Null_ := __AND(__OP2(__PP6681430.Best_,=,__CN(TRUE)),__NOT(__NT(__PP6681430.Date_Of_Birth_)));
      SELF := __PP6681430;
    END;
    SELF.Reported_Dates_Of_Birth_ := __PROJECT(__EE6681069,__ND6682524__Project(LEFT));
    __EE6681073 := __PP6681091.Data_Sources_;
    SELF.Data_Sources_ := __BN(PROJECT(__T(__EE6681073),__ST336817_Layout),__NL(__EE6681073));
    __EE6681510 := __PP6681091.Accident_Recs_Formatted_;
    __EE6681524 := __BN(PROJECT(DEDUP(SORT(__T(__EE6681510),__T(__T(__EE6681510).Date_Of_Accident_), -__T(__T(__EE6681510).Estimated_Vehicle_Damage_),__T(Accident_Age_In_Days_),__T(Formatted_Date_)),__T(__OP2(LEFT.Date_Of_Accident_,=,RIGHT.Date_Of_Accident_))),B_Person_6(__in,__cfg).__ST108656_Layout),__NL(__PP6681091.Accident_Recs_Formatted_));
    SELF.Accident_Recs_Formatted_Dedup_ := __EE6681524;
    __EE6681535 := __PP6681091.Reported_Dates_Of_Birth_;
    __BS6681544 := __T(__EE6681535);
    __EE6681549 := __BS6681544(__T(__T(__EE6681535).Best_D_O_B_Rec_));
    SELF.Best_D_O_B_ := (__EE6681549)[1].Date_Of_Birth_;
    SELF.Curr_Addr_Helper_Attribute_ := __PP6681091.Current_Address_;
    __EE6681564 := __PP6681091.Edu_Rec_Ver_Source_List_;
    __CC13945 := '-99997';
    __BS6681568 := __T(__EE6681564);
    __EE6682541 := __BN(TOPN(__BS6681568(__NN(__OP2(__T(__EE6681564).Source_Date_Last_Seen_,=,__CN(__CC13945))) AND __NN(__T(__EE6681564).Source_Date_Last_Seen_) AND __NN(__T(__EE6681564).Source_Date_First_Seen_)),1000,__T(__OP2(__T(__EE6681564).Source_Date_Last_Seen_,=,__CN(__CC13945))),__T(__T(__EE6681564).Source_Date_Last_Seen_),__T(__T(__EE6681564).Source_Date_First_Seen_),__T(College_Code_),__T(College_Type_),__T(File_Type_)),__NL(__EE6681564));
    SELF.Edu_Rec_Ver_Source_List_Sorted_ := __EE6682541;
    __EE6681591 := __PP6681091.All_Lien_Data_;
    __BS6681615 := __T(__EE6681591);
    __EE6681623 := __BS6681615(__T(__AND(__T(__EE6681591).Seen___In___Seven___Years_,__T(__EE6681591).Is_Landlord_Tenant_Dispute_)));
    __CC13915 := '-99997';
    SELF.L_T_D7_Y_Old_Date_ := FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,KEL.Aggregates.MinN(__EE6681623,__EE6681623.Original_Filing_Date_))),__ECAST(KEL.typ.nstr,__CN(__CC13915)));
    SELF.Ln_J_L_T_D_Max_New_Date1_Y_ := KEL.Routines.MaxN(__PP6681091.P_L___Drg_Ln_J_New_Dt1_Y_,__PP6681091.P_L___Drg_L_T_D_New_Dt1_Y_);
    __CC13943 := '-99998';
    SELF.Ln_J_L_T_D_Min_Old_Date1_Y_ := IF(__T(__OR(__OP2(KEL.Routines.MinN(__PP6681091.P_L___Drg_Ln_J_Old_Dt1_Y_,__PP6681091.L_T_D1_Y_Old_Date_),=,__CN(__CC13945)),__OP2(KEL.Routines.MinN(__PP6681091.P_L___Drg_Ln_J_Old_Dt1_Y_,__PP6681091.L_T_D1_Y_Old_Date_),=,__CN(__CC13943)))),__ECAST(KEL.typ.nstr,KEL.Routines.MaxN(__PP6681091.P_L___Drg_Ln_J_Old_Dt1_Y_,__PP6681091.L_T_D1_Y_Old_Date_)),__ECAST(KEL.typ.nstr,KEL.Routines.MinN(__PP6681091.P_L___Drg_Ln_J_Old_Dt1_Y_,__PP6681091.L_T_D1_Y_Old_Date_)));
    __CC13871 := '-99999';
    __CC13876 := '-99998';
    SELF.P_L___Drg_Bk_New_Dt1_Y_ := IF(__PP6681091.P___Lex_I_D_Seen_Flag_ = '0',__ECAST(KEL.typ.nstr,__CN(__CC13871)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,__PP6681091.M_A_X___Bankruptcy_Date_)),__ECAST(KEL.typ.nstr,__CN(__CC13876)))));
    SELF.P_L___Drg_Bk_Old_Dt1_Y_ := IF(__PP6681091.P___Lex_I_D_Seen_Flag_ = '0',__ECAST(KEL.typ.nstr,__CN(__CC13871)),__ECAST(KEL.typ.nstr,FN_Compile(__cfg).FN_Is_Blank(__ECAST(KEL.typ.nstr,__ECAST(KEL.typ.nstr,__PP6681091.M_I_N___Bankruptcy_Date_)),__ECAST(KEL.typ.nstr,__CN(__CC13876)))));
    __CC13905 := '-99999';
    __CC13910 := '-99998';
    __BS6681721 := __T(__PP6681091.All_Lien_Data_);
    SELF.P_L___Drg_L_T_D_New_Dt7_Y_ := MAP(__PP6681091.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC13905)),__PP6681091.P_L___Drg_L_T_D_Cnt7_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC13910)), NOT EXISTS(__BS6681721(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP6681091.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC13915))),__AND(__T(__PP6681091.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP6681091.All_Lien_Data_).Is_Landlord_Tenant_Dispute_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC13915)),__ECAST(KEL.typ.nstr,__PP6681091.L_T_D7_Y_New_Date_));
    __BS6681771 := __T(__PP6681091.All_Lien_Data_);
    SELF.P_L___Drg_L_T_D_Old_Dt1_Y_ := MAP(__PP6681091.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC13905)),__PP6681091.P_L___Drg_L_T_D_Cnt1_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC13910)), NOT EXISTS(__BS6681771(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP6681091.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC13915))),__AND(__T(__PP6681091.All_Lien_Data_).Seen___In___One___Year_,__T(__PP6681091.All_Lien_Data_).Is_Landlord_Tenant_Dispute_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC13915)),__ECAST(KEL.typ.nstr,__PP6681091.L_T_D1_Y_Old_Date_));
    __BS6681827 := __T(__PP6681091.All_Lien_Data_);
    SELF.P_L___Drg_Ln_J_New_Dt7_Y_ := MAP(__PP6681091.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC13905)),__PP6681091.P_L___Drg_Ln_J_Cnt7_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC13910)), NOT EXISTS(__BS6681827(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP6681091.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC13915))),__AND(__T(__PP6681091.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP6681091.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC13915)),__ECAST(KEL.typ.nstr,__PP6681091.Ln_J7_Y_New_Date_));
    __BS6681879 := __T(__PP6681091.All_Lien_Data_);
    SELF.P_L___Drg_Ln_J_Old_Dt7_Y_ := MAP(__PP6681091.P___Lex_I_D_Seen_Flag_ = '0'=>__ECAST(KEL.typ.nstr,__CN(__CC13905)),__PP6681091.P_L___Drg_Ln_J_Cnt7_Y_ < 1=>__ECAST(KEL.typ.nstr,__CN(__CC13910)), NOT EXISTS(__BS6681879(__T(__AND(__NOT(__OP2(__ECAST(KEL.typ.nstr,__T(__PP6681091.All_Lien_Data_).Original_Filing_Date_),=,__CN(__CC13915))),__AND(__T(__PP6681091.All_Lien_Data_).Seen___In___Seven___Years_,__T(__PP6681091.All_Lien_Data_).Is_Over_All_Lien_Judgment_)))))=>__ECAST(KEL.typ.nstr,__CN(__CC13915)),__ECAST(KEL.typ.nstr,__PP6681091.Ln_J7_Y_Old_Date_));
    __EE6681077 := __PP6681091.Person_S_S_N_Match_Sources_All_Pre_;
    __BS6681916 := __T(__EE6681077);
    __EE6682614 := __BS6681916(__T(__OP2(__T(__EE6681077).Translated_Source_Code_,<>,__CN(''))));
    __ST141277_Layout __ND6682619__Project(B_Person_6(__in,__cfg).__ST141238_Layout __PP6682615) := TRANSFORM
      __CC13283 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Bankruptcy_Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,__PP6682615.S_S_N_Source_Date_Last_Seen_),__ECAST(KEL.typ.nkdate,__CC13283));
      SELF.Liens_Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,__PP6682615.S_S_N_Source_Date_Last_Seen_),__ECAST(KEL.typ.nkdate,__CC13283));
      SELF := __PP6682615;
    END;
    SELF.Person_S_S_N_Match_Sources_Group_All_ := __CN(PROJECT(__EE6682614,__ND6682619__Project(LEFT)));
    __EE6681952 := __PP6681091.Address_Hierarchy_Set_;
    __CC22835 := [0,91,92,93,94,95,96,97,98,99];
    __CC22837 := 'BUS';
    __BS6681980 := __T(__EE6681952);
    __EE6682656 := __BS6681980(__T(__AND(__CN(FN_Compile(__cfg).FN_Is_Not_Enough_To_Clean(__ECAST(KEL.typ.nstr,__T(__EE6681952).Address_Rank_)) = FALSE),__AND(__NOT(__OP2(__T(__EE6681952).Address_Rank_,IN,__CN(__CC22835))),__AND(__OR(__OP2(__T(__EE6681952).Address_Type_,<>,__CN(__CC22837)),__NT(__T(__EE6681952).Address_Type_)),__OR(__OP2(__T(__EE6681952).Addr1_From_Components_,<>,__CN('P')),__NT(__T(__EE6681952).Addr1_From_Components_)))))));
    __EE6682667 := TOPN(__EE6682656(__NN(__EE6682656.Address_Rank_) AND __NN(__EE6682656.Sort_Field_)),2,__T(__EE6682656.Address_Rank_), -__T(__EE6682656.Sort_Field_),__T(Address_Type_),__T(Address_Status_),__T(State_Code_),__T(County_Code_),__T(Latitude_),__T(Longitude_),__T(Geo_Blk_),__T(Addr_Full_),__T(Primary_Range_),__T(Predirectional_),__T(Primary_Name_),__T(Suffix_),__T(Postdirectional_),__T(Unit_Designation_),__T(Secondary_Range_),__T(Postal_City_),__T(State_),__T(Z_I_P5_),__T(Z_I_P4_),__T(Addr1_From_Components_),__T(Hierarchy_Date_First_Seen_),__T(Hierarchy_Date_Last_Seen_));
    SELF.Recent_Addr_Full_Set_ := __CN(__EE6682667);
    __EE6682024 := __PP6681091.S_S_N_Translated_Sources_;
    __ST609506_Layout __ND6682032__Project(B_Person_6(__in,__cfg).__ST109561_Layout __PP6682028) := TRANSFORM
      __CC13283 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      SELF.Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,KEL.era.ToDate(__PP6682028.Date_Last_Seen_)),__ECAST(KEL.typ.nkdate,__CC13283));
      SELF := __PP6682028;
    END;
    SELF.S_S_N_Translated_Sources_ := __PROJECT(__EE6682024,__ND6682032__Project(LEFT));
    __EE6681081 := __PP6681091.Translated_Sources_;
    __BS6682050 := __T(__EE6681081);
    __EE6682673 := __BS6682050(__T(__OP2(__T(__EE6681081).Translated_Source_Code_,<>,__CN(''))));
    __ST108303_Layout __ND6682678__Project(B_Person_6(__in,__cfg).__ST513804_Layout __PP6682674) := TRANSFORM
      __CC13283 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      __CC13945 := '-99997';
      SELF.Source_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682674.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682674.Date_First_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13945)));
      __CC73042 := '99999999';
      SELF.First_Seen_Date_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682674.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682674.Date_First_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC73042)));
      SELF.Source_Date_Last_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682674.Date_Last_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682674.Date_Last_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13945)));
      __CC73046 := 3652;
      SELF.Valid_Bankruptcy_Sources_ := __AND(__AND(__OP2(__PP6682674.Translated_Source_Code_,=,__CN('BA')),__OP2(__PP6682674.Age_In_Days_,<=,__CN(__CC73046))),__NOT(__NT(__PP6682674.Age_In_Days_)));
      __CC73044 := 2556;
      SELF.Valid_Liens_Sources_ := __AND(__AND(__OP2(__PP6682674.Translated_Source_Code_,=,__CN('L2')),__OP2(__PP6682674.Age_In_Days_,<=,__CN(__CC73044))),__NOT(__NT(__PP6682674.Age_In_Days_)));
      SELF.Other_Sources_ := __AND(__OP2(__PP6682674.Translated_Source_Code_,<>,__CN('BA')),__OP2(__PP6682674.Translated_Source_Code_,<>,__CN('L2')));
      SELF := __PP6682674;
    END;
    SELF.Ver_Source_List_ := __CN(PROJECT(__EE6682673,__ND6682678__Project(LEFT)));
    __EE6681085 := __PP6681091.Verified_First_Name_Sources_;
    __ST109287_Layout __ND6682772__Project(B_Person_6(__in,__cfg).__ST109225_Layout __PP6682143) := TRANSFORM
      __CC13283 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      __CC13945 := '-99997';
      SELF.Source_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682143.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682143.Date_First_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13945)));
      __CC73042 := '99999999';
      SELF.First_Seen_Date_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682143.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682143.Date_First_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC73042)));
      SELF.Source_Date_Last_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682143.Date_Last_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682143.Date_Last_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13945)));
      SELF.Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,KEL.era.ToDate(__PP6682143.Date_Last_Seen_)),__ECAST(KEL.typ.nkdate,__CC13283));
      SELF := __PP6682143;
    END;
    SELF.Verified_First_Name_Sources_With_Dates_ := __PROJECT(__EE6681085,__ND6682772__Project(LEFT));
    __EE6681089 := __PP6681091.Verified_Last_Name_Sources_;
    __ST109449_Layout __ND6682791__Project(B_Person_6(__in,__cfg).__ST109387_Layout __PP6682198) := TRANSFORM
      __CC13283 := KEL.Routines.MinN(FN_Compile(__cfg).FN_G_E_T_B_U_I_L_D_D_A_T_E(__ECAST(KEL.typ.nstr,__CN('header_build_version'))),__CN(__cfg.CurrentDate));
      __CC13945 := '-99997';
      SELF.Source_Date_First_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682198.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682198.Date_First_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13945)));
      __CC73042 := '99999999';
      SELF.First_Seen_Date_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682198.Date_First_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682198.Date_First_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC73042)));
      SELF.Source_Date_Last_Seen_ := IF(__T(__FN1(KEL.Routines.IsValidDate,KEL.era.ToDate(__PP6682198.Date_Last_Seen_))),__ECAST(KEL.typ.nstr,__FN2(KEL.Routines.DateToString,KEL.Routines.MinN(KEL.era.ToDate(__PP6682198.Date_Last_Seen_),__CC13283),__CN('%Y%m%d'))),__ECAST(KEL.typ.nstr,__CN(__CC13945)));
      SELF.Age_In_Days_ := FN_Compile(__cfg).FN_A_B_S_D_A_Y_S_B_E_T_W_E_E_N(__ECAST(KEL.typ.nkdate,KEL.era.ToDate(__PP6682198.Date_Last_Seen_)),__ECAST(KEL.typ.nkdate,__CC13283));
      SELF := __PP6682198;
    END;
    SELF.Verified_Last_Name_Sources_With_Dates_ := __PROJECT(__EE6681089,__ND6682791__Project(LEFT));
    SELF := __PP6681091;
  END;
  EXPORT __ENH_Person_5 := PROJECT(__EE6680668,__ND6682532__Project(LEFT));
END;
