rec := record
string30 sub_acct_id;
string30 interview_end_format;
string30 responseid;
string30 respid;
string30 interview_end;
string30 RFstatus;
string30 RFVerb;
string30 ProductName;
string30 Wave;
string30 Country;
string30 Business;
string30 Market;
string30 SolutionLine;
string30 Language;
string30 Vertical;
string30 Industry;
string30 Industry2;
string30 Industry3;
string30 MasterNumber;
string30 MasterName;
string30 SubAcctID;
string30 AcctID;
string30 CustNo;
string30 ContactID;
string30 AccntName;
string30 SubAccountName;
string30 nps_id;
string30 source;
string30 system_id;
string30 TitleSalutation;
string30 UserFN;
string30 UserLN;
string30 Title;
string30 Email;
string30 Address1;
string30 Address2;
string30 City;
string30 ST;
string30 Zip;
string30 Phone;
string30 FirmRev;
string30 FirmRevGroup;
string30 SalesRep;
string30 SalesRepLegalID;
string30 SalesRepEmail;
string30 SalesVP;
string30 RedFlagEmail;
string30 Product;
string30 vertical_business_breakdown;
string30 Legacy;
string30 IDNum;
string30 IndRev;
string30 IndRevGroup;
string30 q1_1;
string30 q2;
string30 q13_1;
string30 NPS;
string30 q7;
string30 q20a_1;
string30 q20a_2;
string30 q20a_3;
string30 q20a_4;
string30 q20a_5;
string30 q20a_6;
string30 q20a_7;
string30 q20a_8;
string30 q20a_9;
string30 q20a_10;
string30 q20a_11;
string30 q20a_12;
string30 q20a_13;
string30 q20a_14;
string30 q20b_1;
string30 q20b_41;
string30 q20b_42;
string30 q20b_50;
string30 q20b_7;
string30 q20b_51;
string30 q20b_52;
string30 q20b_53;
string30 q20b_54;
string30 q20b_8;
string30 q20b_81;
string30 q20b_82;
string30 q20b_12;
string30 q20b_55;
string30 q20b_56;
string30 q20b_57;
string30 q20b_18;
string30 q20b_58;
string30 q20b_59;
string30 q20b_60;
string30 q20b_61;
string30 q20b_23;
string30 q20b_25;
string30 q20b_26;
string30 q20b_23_other;
string30 q20c_1;
string30 q20c_47;
string30 q20c_70;
string30 q20c_4;
string30 q20c_71;
string30 q20c_72;
string30 q20c_5;
string30 q20c_73;
string30 q20c_74;
string30 q20c_75;
string30 q20c_76;
string30 q20c_23;
string30 q20c_25;
string30 q20c_26;
string30 q20c_23_other;
string30 q20d_1;
string30 q20d_3;
string30 q20d_6;
string30 q20d_90;
string30 q20d_9;
string30 q20d_91;
string30 q20d_10;
string30 q20d_11;
string30 q20d_92;
string30 q20d_93;
string30 q20d_94;
string30 q20d_16;
string30 q20d_21;
string30 q20d_22;
string30 q20d_23;
string30 q20d_25;
string30 q20d_26;
string30 q20d_23_other;
string30 q20e_1;
string30 q20e_43;
string30 q20e_44;
string30 q20e_45;
string30 q20e_46;
string30 q20e_3;
string30 q20e_4;
string30 q20e_5;
string30 q20e_10;
string30 q20e_11;
string30 q20e_13;
string30 q20e_15;
string30 q20e_19;
string30 q20e_20;
string30 q20e_21;
string30 q20e_22;
string30 q20e_23;
string30 q20e_25;
string30 q20e_26;
string30 q20e_23_other;
string30 q20g_1;
string30 q20g_46;
string30 q20g_3;
string30 q20g_6;
string30 q20g_95;
string30 q20g_96;
string30 q20g_97;
string30 q20g_10;
string30 q20g_21;
string30 q20g_98;
string30 q20g_23;
string30 q20g_25;
string30 q20g_26;
string30 q20g_23_other;
string30 q20f;
string30 q11;
string30 q21;
string30 q21b;
string30 redflag_consent;
string30 Recontact;
string30 code1;
string30 code2;
string30 code3;
string30 code4;
string30 code5;
string30 code6;
string30 code7;
string30 code8;
string30 code9;
string30 code10;
string30 code11;
string30 code12;
string30 code13;
string30 code14;
string30 code15;
string30 code16;
string30 code17;
string30 code18;
string30 code19;
string30 code20;
string30 code21;
string30 code22;
string30 code23;
string30 code24;
string30 code25;
string30 code26;
string30 code27;
string30 code28;
string30 code29;
string30 code30;
string30 code31;
string30 code32;
string30 code33;
string30 derived_billgroup;
end;

ds := dataset('~foreign::10.194.10.1::thor::ms::data_analytics::analysis_nps', rec, CSV(SEPARATOR(['\t'])));
// output(sort(ds, sub_acct_id));
// count(ds);

rec1 := record
string30 sub_acct_id;
string30 interview_end_format;
string30 q1_1;
string30 q2;
string30 q13_1;
string30 NPS;
string30 q21;
string30 q21b;
string30 q7;
string30 q11;
string30 wave;
string30 redflag_consent;
string30 Recontact;
string30 derived_billgroup;
string30 Vertical;
string30 Industry;
string30 Industry2;
string30 Industry3;
string30 MasterNumber;
string30 AccntName;
string30 AcctID;
string30 CustNo;
string30 ContactID;
string30 SubAccountName;
string30 source;
string30 code1;
end;

s1 := sort(project(ds, rec1), sub_acct_id, -interview_end_format);
output(count(s1), named('TotalRecords'));
output(s1);

rec3 := record, maxlength(128192)
	string30 	sub_acct_id;
	string30 	mig_gen03_cd;
	integer  	totalRecords;	
	string30 	RecentWave;
	string30 	RecentInterviewDate;
	integer 	RecentRating;
	integer 	averageRating;
end;	

rec2_1 := record
	integer2 rating;
end;

rec3 doRollup(recordof(s1) l, DATASET(recordof(s1)) allRows) := TRANSFORM
	allRatings := project(allRows, transform(rec2_1, self.rating := (integer2)REGEXREPLACE('[A-Za-z-]*',TRIM(left.q1_1,LEFT,RIGHT),''), self := []));
	self.sub_acct_id						:= l.sub_acct_id;
	self.totalRecords 					:= count(allRows);
	self.recentWave							:= allRows[1].wave;
	self.averageRating					:= ave(allRatings, rating);
	self.RecentInterviewDate		:= allRows[1].interview_end_format;
	self.RecentRating						:= (integer)trim(REGEXREPLACE('[A-Za-z-]*',TRIM(allRows[1].q1_1,LEFT,RIGHT),''));
	// self.detailedInfo 					:= project(allRows, transform(rec2, self.totalRecords := count(all));
	self := [];
end;
aggr := ROLLUP(group(s1, sub_acct_id), GROUP, doRollup(LEFT, ROWS(LEFT)));

ma := RECORD
  string sys_cd;
  string cust_cd;
  string vc_id;
  string mig_gen03_cd;
  string cust_id;
  string hh_id;
 END;
acct := dataset('~thor20_11::poc::fs_accts_slim', ma,CSV(SEPARATOR(['\t']))); 

j1 := join(aggr, acct, trim(left.sub_acct_id) = trim(right.vc_id), transform(recordof(left), self.mig_gen03_cd := right.mig_gen03_cd, self := left), left outer);
result1 := j1;
output(sort(result1, -totalRecords),,'~thor::ms::data_analytics::analysis_nps::aggregate_result', overwrite, csv(heading(single), separator('\t'), terminator('\n')));
count(result1);


rec2 := record
	rec1;
	rec3 and not sub_acct_id;
end;
j2 := join(s1, result1, trim(left.sub_acct_id) = trim(right.sub_acct_id), transform(rec2, self := right, self := left, self := []), left outer);
result2 := j2;
output(result2,,'~thor::ms::data_analytics::analysis_nps::result', overwrite, csv(heading(single), separator('\t'), terminator('\n')));
count(result2);


t1 := table(sort(result1, recentRating), {RecentRating, unsigned4 cnt := count(group)}, recentRating);
output(t1, named('ratingDistribution'));

output(count(result1(mig_gen03_cd != '')), named('totalRecordswithMigId'));;
output((result1(mig_gen03_cd != '')));;


t1 := FileServices.DeSpray('~thor::ms::data_analytics::analysis_nps::aggregate_result', Analytics_poc.Constants.landing_ip, 'w:\\poc\\nps_aggregate_result.csv', ,,,true);
t2 := FileServices.DeSpray('~thor::ms::data_analytics::analysis_nps::result', Analytics_poc.Constants.landing_ip, 'w:\\poc\\nps_result.csv', ,,,true);
sequential(t1, t2);