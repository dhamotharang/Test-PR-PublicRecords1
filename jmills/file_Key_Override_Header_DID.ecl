import FCRA;

/*layout_addr_flags := RECORD
   string1 dwelltype;
   string1 valid;
   string1 prisonaddr;
   string1 highrisk;
   string1 corpmil;
   string1 donotdeliver;
   string1 deliverystatus;
   string1 addresstype;
   string1 dropindicator;
  END;

RECORD
  unsigned6 did;
  RECORD
   unsigned6 s_did;
   unsigned6 did;
   unsigned6 rid;
   string1 pflag1;
   string1 pflag2;
   string1 pflag3;
   string2 src;
   unsigned3 dt_first_seen;
   unsigned3 dt_last_seen;
   unsigned3 dt_vendor_last_reported;
   unsigned3 dt_vendor_first_reported;
   unsigned3 dt_nonglb_last_seen;
   string1 rec_type;
   qstring18 vendor_id;
   qstring10 phone;
   qstring9 ssn;
   integer4 dob;
   qstring5 title;
   qstring20 fname;
   qstring20 mname;
   qstring20 lname;
   qstring5 name_suffix;
   qstring10 prim_range;
   string2 predir;
   qstring28 prim_name;
   qstring4 suffix;
   string2 postdir;
   qstring10 unit_desig;
   qstring8 sec_range;
   qstring25 city_name;
   string2 st;
   qstring5 zip;
   qstring4 zip4;
   string3 county;
   qstring7 geo_blk;
   qstring5 cbsa;
   string1 tnt;
   string1 valid_ssn;
   string1 jflag1;
   string1 jflag2;
   string1 jflag3;
   unsigned8 rawaid;
   unsigned8 persistent_record_id;
   string1 valid_dob;
   unsigned6 hhid;
   string18 county_name;
   string120 listed_name;
   string10 listed_phone;
   unsigned4 dod;
   string1 death_code;
   unsigned4 lookup_did;
  END head;
  layout_addr_flags addr_flags;
  string35 blankout;
  unsigned8 __internal_fpos__;
 END;*/
 
 layout_key_out := RECORD
   unsigned6 did;
  //RECORD
   unsigned6 record_s_did;
   unsigned6 record_did;
   unsigned6 record_rid;
   string1 record_pflag1;
   string1 record_pflag2;
   string1 record_pflag3;
   string2 record_src;
   unsigned3 record_dt_first_seen;
   unsigned3 record_dt_last_seen;
   unsigned3 record_dt_vendor_last_reported;
   unsigned3 record_dt_vendor_first_reported;
   unsigned3 record_dt_nonglb_last_seen;
   string1 record_rec_type;
   qstring18 record_vendor_id;
   qstring10 record_phone;
   qstring9 record_ssn;
   integer4 record_dob;
   qstring5 record_title;
   qstring20 record_fname;
   qstring20 record_mname;
   qstring20 record_lname;
   qstring5 record_name_suffix;
   qstring10 record_prim_range;
   string2 record_predir;
   qstring28 record_prim_name;
   qstring4 record_suffix;
   string2 record_postdir;
   qstring10 record_unit_desig;
   qstring8 record_sec_range;
   qstring25 record_city_name;
   string2 record_st;
   qstring5 record_zip;
   qstring4 record_zip4;
   string3 record_county;
   qstring7 record_geo_blk;
   qstring5 record_cbsa;
   string1 record_tnt;
   string1 record_valid_ssn;
   string1 record_jflag1;
   string1 record_jflag2;
   string1 record_jflag3;
   unsigned8 record_rawaid;
   unsigned8 record_persistent_record_id;
   string1 record_valid_dob;
   unsigned6 record_hhid;
   string18 record_county_name;
   string120 record_listed_name;
   string10 record_listed_phone;
   unsigned4 record_dod;
   string1 record_death_code;
   unsigned4 record_lookup_did;
  //END head;
  //layout_addr_flags := RECORD
   string1 dwelltype;
   string1 valid;
   string1 prisonaddr;
   string1 highrisk;
   string1 corpmil;
   string1 donotdeliver;
   string1 deliverystatus;
   string1 addresstype;
   string1 dropindicator;
	 string35 blankout;
  //unsigned8 __internal_fpos__;
	END;

 key_in :=  FCRA.Key_Override_Header_DID;

 //transform statement
layout_key_out makerecord (key_in L) := transform
self.did := L.did;
//RECORD
self.record_s_did := L.head.s_did;
self.record_did := L.head.did;
self.record_rid := L.head.rid;
self.record_pflag1 := L.head.pflag1;
self.record_pflag2 := L.head.pflag2;
self.record_pflag3 := L.head.pflag3;
self.record_src := L.head.src;
self.record_dt_first_seen := L.head.dt_first_seen;
self.record_dt_last_seen := L.head.dt_last_seen;
self.record_dt_vendor_last_reported := L.head.dt_vendor_last_reported;
self.record_dt_vendor_first_reported := L.head.dt_vendor_first_reported;
self.record_dt_nonglb_last_seen := L.head.dt_nonglb_last_seen;
self.record_rec_type := L.head.rec_type;
self.record_vendor_id := L.head.vendor_id;
self.record_phone := L.head.phone;
self.record_ssn := L.head.ssn;
self.record_dob := L.head.dob;
self.record_title := L.head.title;
self.record_fname := L.head.fname;
self.record_mname := L.head.mname;
self.record_lname := L.head.lname;
self.record_name_suffix := L.head.name_suffix;
self.record_prim_range := L.head.prim_range;
self.record_predir := L.head.predir;
self.record_prim_name := L.head.prim_name;
self.record_suffix := L.head.suffix;
self.record_postdir := L.head.postdir;
self.record_unit_desig := L.head.unit_desig;
self.record_sec_range := L.head.sec_range;
self.record_city_name := L.head.city_name;
self.record_st := L.head.st;
self.record_zip := L.head.zip;
self.record_zip4 := L.head.zip4;
self.record_county := L.head.county;
self.record_geo_blk := L.head.geo_blk;
self.record_cbsa := L.head.cbsa;
self.record_tnt := L.head.tnt;
self.record_valid_ssn := L.head.valid_ssn;
self.record_jflag1 := L.head.jflag1;
self.record_jflag2 := L.head.jflag2;
self.record_jflag3 := L.head.jflag3;
self.record_rawaid := L.head.rawaid;
self.record_persistent_record_id := L.head.persistent_record_id;
self.record_valid_dob := L.head.valid_dob;
self.record_hhid := L.head.hhid;
self.record_county_name := L.head.county_name;
self.record_listed_name := L.head.listed_name;
self.record_listed_phone := L.head.listed_phone;
self.record_dod := L.head.dod;
self.record_death_code := L.head.death_code;
self.record_lookup_did := L.head.lookup_did;
//END head;
//layout_addr_flags := RECORD
self.dwelltype := L.addr_flags.dwelltype;
self.valid := L.addr_flags.valid;
self.prisonaddr := L.addr_flags.prisonaddr;
self.highrisk := L.addr_flags.highrisk;
self.corpmil := L.addr_flags.corpmil;
self.donotdeliver := L.addr_flags.donotdeliver;
self.deliverystatus := L.addr_flags.deliverystatus;
self.addresstype := L.addr_flags.addresstype;
self.dropindicator := L.addr_flags.dropindicator;
self.blankout := L.blankout;
//unsigned8 __internal_fpos__;
END;


EXPORT file_Key_Override_Header_DID := project(key_in,makerecord(left));