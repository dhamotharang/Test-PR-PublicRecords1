Generated by SALT V3.7.2
Command line options: -MInsuranceHeader_RemoteLinking -eC:\Users\suffza01\AppData\Local\Temp\TFR84A4.tmp 
File being processed :-
OPTIONS:-ga -gs2 -ra
THRESHOLD:46 
MODULE:InsuranceHeader_RemoteLinking 
PROCESS:InsuranceHeader
IDNAME:DID     
RIDFIELD:RID
FILENAME:HEADER
IDFIELD:EXISTS:DID 
RECORDS:11400000000
POPULATION:1400000000  
NINES:3   
HACK:SLICEDISTANCE:18 
FIELDTYPE:DEFAULT:LEFTTRIM:NOQUOTES("'):ONFAIL(CLEAN):
FIELDTYPE:NUMBER:LIKE():ALLOW(0123456789):NOQUOTES("'):ONFAIL(CLEAN):
// Source Field - CARRY option ignores it for linking
FIELD:VENDOR_ID:CARRY 
FIELD:BOCA_DID:CARRY
FIELD:SRC:CARRY
SOURCEFIELD:SRC
// FUZZY
FUZZY:Right4:RST:CUSTOM(fn_Right4):TYPE(STRING4)
FUZZY:TrimLeadingZero:RST:CUSTOM(fn_TrimLeadingZero):TYPE(STRING20)
FUZZY:PreferredName:RST:CUSTOM(fn_PreferredName):TYPE(STRING20)
// SSN-DOB
FIELD:SSN:LIKE(NUMBER):PROP:Right4:EDIT1:28,100
DATEFIELD:DOB:PROP:SOFT1(4.0):MDDM:YEARSHIFT12(4.0):FORCE(GENERATION,--3):15,107
// Dln
FIELD:DL_NBR:CONTEXT(DL_STATE):TrimLeadingZero:26,201
// Name
FIELD:SNAME:PROP:2,7
FIELD:FNAME:PROP:EDITX(6):INITIAL:PreferredName:FORCE(--):9,130
FIELD:MNAME:PROP:INITIAL:EDITX(6):6,137
FIELD:LNAME:PROP:INITIAL:HYPHEN2:EDITX(6):11,221
FIELD:GENDER:1,5
FIELD:DERIVED_GENDER:PROP:1,0
// Address
FIELD:PRIM_NAME:12,534
FIELD:PRIM_RANGE:11,523
FIELD:SEC_RANGE:HYPHEN2:8,481
FIELD:CITY:10,406
FIELD:ST:5,177
FIELD:ZIP:14,463
// Other Information
FIELD:POLICY_NUMBER:CONTEXT(AMBEST):TrimLeadingZero:28,704
FIELD:CLAIM_NUMBER:CONTEXT(AMBEST):28,556
// Date
FIELD:DT_FIRST_SEEN:RECORDDATE(FIRST,YYYYMM):
FIELD:DT_LAST_SEEN:RECORDDATE(LAST,YYYYMM):
// Concept
CONCEPT:MAINNAME:FNAME:MNAME:LNAME:BAGOFWORDS:18,366
CONCEPT:ADDR1:PRIM_RANGE:SEC_RANGE:PRIM_NAME:18,576
CONCEPT:LOCALE:CITY:ST:ZIP:14,481
CONCEPT:ADDRESS:ADDR1:LOCALE:30,601
CONCEPT:FULLNAME:MAINNAME:SNAME:FORCE(+-3,OR(SSN[15]:DOB[5]:FNAME),OR(ADDRESS[15]:DOB[5]:FNAME)):22,529
 
 
Total available specificity:317
Specificity number that should imply one record specified 30.
Assuming an average of 8 records per cluster
Specificity value at which N^2 joins will be tolerated: 27
User specified threshold 46
Recommended matching threshold 40
Search Threshold set at 22
Use of PERSISTs in code set at:3
 
______________________________English Description of Matching Process___________________________
 
A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 3 nines of accuracy on a population of 1400000000 with 11399999488 records.
A matching threshold of 40 is recommended although this was overridden to 46.
 
___Field by Field Breakdown of Scoring Method___
 
VENDOR_ID Scoring: This field is not used for scoring; rather it is carried along for context and debugging
BOCA_DID Scoring: This field is not used for scoring; rather it is carried along for context and debugging
SRC Scoring: This field is not used for scoring; rather it is carried along for context and debugging
SSN Scoring: If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two SSN fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - if the two fields have the same value for the function Right4
The exact number of points allocated to a match will depend upon the global scarcity of the SSN
and the degree of fuzziness required but should average 28 points with a failed match substracting 25 points.
(This subtraction estimate is based upon 10% of clusters with 2 or more records have 2 or more values for SSN.)
 
DOB Scoring: In order for two records to be a match it is also required that the DOB fields not not match.
Specifically the score awarded to this field must be >= 3 unless one field is null.
If one or more components (year/month/day) of the field are blank then a value from a different record
in the same cluster will be used provided the other components match. eg DAY will propagate in cluster if year/month match.
Two DOB fields will be considered to match if:
  - they are identical
  - if the YEARs are more than 13 apart then the whole record will be a no match.
  - if a Month or Day miss-match has a 01 on either side it will count as a 0 for that component
  - if the decade value differs by 1 it will be considered a fuzzy match
  - if the Year value differs by 2 it will be considered a fuzzy match
  - if the month component matches the day and vice-versi it will be considered a fuzzy match
  - otherwise each component of the score will be scored individually
The exact number of points allocated to a match will depend upon the global scarcity of the DOB
but should average 15 points with a failed match substracting 13 points.
(This subtraction estimate is based upon 10% of clusters with 2 or more records have 2 or more values for DOB.)
 
DL_NBR Scoring: 
The scoring for this field is ignored unless the DL_STATE fields are identical.
Two DL_NBR fields will be considered to match if:
  - they are identical
  - if the two fields have the same value for the function TrimLeadingZero
The exact number of points allocated to a match will depend upon the global scarcity of the DL_NBR
but should average 26 points with a failed match substracting 20 points.
(This subtraction estimate is based upon 20% of clusters with 2 or more records have 2 or more values for DL_NBR.)
 
SNAME Scoring: If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two SNAME fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the SNAME
but should average 2 points with a failed match substracting 1 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for SNAME.)
It should also be noted that SNAME is a child field of FULLNAME. Therefore if FULLNAME is a full match this field will score 0.
This field is scaled to match with its parent FULLNAME, on average that will mean multiplying by 110%
 
FNAME Scoring: In order for two records to be a match it is also required that the FNAME fields not not match.
If a field is null or an initial and another record in the same cluster has a fuller value for that field then the other records value will be used.
Two FNAME fields will be considered to match if:
  - they are identical
  - one is the leading part of the other
  - one can be turned into the other with 2 edits (see Glossary)
  - if the two fields have the same value for the function PreferredName
The exact number of points allocated to a match will depend upon the global scarcity of the FNAME
and the degree of fuzziness required but should average 9 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 13% of clusters with 2 or more records have 2 or more values for FNAME.)
It should also be noted that FNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 69%
(Although the score is still computed to satisfy the forcing condition.)
 
MNAME Scoring: If a field is null or an initial and another record in the same cluster has a fuller value for that field then the other records value will be used.
Two MNAME fields will be considered to match if:
  - they are identical
  - one is the leading part of the other
  - one can be turned into the other with 2 edits (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the MNAME
and the degree of fuzziness required but should average 6 points with a failed match substracting 5 points.
(This subtraction estimate is based upon 13% of clusters with 2 or more records have 2 or more values for MNAME.)
It should also be noted that MNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 69%
 
LNAME Scoring: If a field is null or an initial and another record in the same cluster has a fuller value for that field then the other records value will be used.
Two LNAME fields will be considered to match if:
  - they are identical
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
  - one is the leading part of the other
  - one can be turned into the other with 2 edits (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the LNAME
and the degree of fuzziness required but should average 11 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 22% of clusters with 2 or more records have 2 or more values for LNAME.)
It should also be noted that LNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 69%
 
GENDER Scoring: Two GENDER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the GENDER
but should average 1 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for GENDER.)
 
DERIVED_GENDER Scoring: If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two DERIVED_GENDER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DERIVED_GENDER
but should average 1 points with a failed match substracting 1 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for DERIVED_GENDER.)
 
PRIM_NAME Scoring: Two PRIM_NAME fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_NAME
but should average 12 points with a failed match substracting 5 points.
(This subtraction estimate is based upon 53% of clusters with 2 or more records have 2 or more values for PRIM_NAME.)
It should also be noted that PRIM_NAME is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 58%
 
PRIM_RANGE Scoring: Two PRIM_RANGE fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_RANGE
but should average 11 points with a failed match substracting 5 points.
(This subtraction estimate is based upon 52% of clusters with 2 or more records have 2 or more values for PRIM_RANGE.)
It should also be noted that PRIM_RANGE is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 58%
 
SEC_RANGE Scoring: Two SEC_RANGE fields will be considered to match if:
  - they are identical
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the SEC_RANGE
and the degree of fuzziness required but should average 8 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 48% of clusters with 2 or more records have 2 or more values for SEC_RANGE.)
It should also be noted that SEC_RANGE is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 58%
 
CITY Scoring: Two CITY fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the CITY
but should average 10 points with a failed match substracting 5 points.
(This subtraction estimate is based upon 40% of clusters with 2 or more records have 2 or more values for CITY.)
It should also be noted that CITY is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 48%
 
ST Scoring: Two ST fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ST
but should average 5 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 17% of clusters with 2 or more records have 2 or more values for ST.)
It should also be noted that ST is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 48%
 
ZIP Scoring: Two ZIP fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ZIP
but should average 14 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 46% of clusters with 2 or more records have 2 or more values for ZIP.)
It should also be noted that ZIP is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 48%
 
POLICY_NUMBER Scoring: 
The scoring for this field is ignored unless the AMBEST fields are identical.
Two POLICY_NUMBER fields will be considered to match if:
  - they are identical
  - if the two fields have the same value for the function TrimLeadingZero
The exact number of points allocated to a match will depend upon the global scarcity of the POLICY_NUMBER
but should average 28 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 70% of clusters with 2 or more records have 2 or more values for POLICY_NUMBER.)
 
CLAIM_NUMBER Scoring: 
The scoring for this field is ignored unless the AMBEST fields are identical.
Two CLAIM_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the CLAIM_NUMBER
but should average 28 points with a failed match substracting 12 points.
(This subtraction estimate is based upon 55% of clusters with 2 or more records have 2 or more values for CLAIM_NUMBER.)
 
DT_FIRST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LAST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
MAINNAME Scoring: Two MAINNAME fields will be considered to match if:
  - they are identical
  - The fields of either concept (but not both) can be shuffled so that they match preserving the FORCE conditions upon FNAME
Note: MAINNAME is an amalgam of (FNAME,MNAME,LNAME)
Points will only be allocated for a match, the amount depending upon the scarcity of MAINNAME
but should average 18 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that MAINNAME is a child field of FULLNAME. Therefore if FULLNAME is a full match this field will score 0.
This field is scaled to match with its parent FULLNAME, on average that will mean multiplying by 110%
 
ADDR1 Scoring: Two ADDR1 fields will be considered to match if:
  - they are identical
Note: ADDR1 is an amalgam of (PRIM_RANGE,SEC_RANGE,PRIM_NAME)
Points will only be allocated for a match, the amount depending upon the scarcity of ADDR1
but should average 18 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that ADDR1 is a child field of ADDRESS. Therefore if ADDRESS is a full match this field will score 0.
This field is scaled to match with its parent ADDRESS, on average that will mean multiplying by 93%
 
LOCALE Scoring: Two LOCALE fields will be considered to match if:
  - they are identical
Note: LOCALE is an amalgam of (CITY,ST,ZIP)
Points will only be allocated for a match, the amount depending upon the scarcity of LOCALE
but should average 14 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that LOCALE is a child field of ADDRESS. Therefore if ADDRESS is a full match this field will score 0.
This field is scaled to match with its parent ADDRESS, on average that will mean multiplying by 93%
 
ADDRESS Scoring: Two ADDRESS fields will be considered to match if:
  - they are identical
Note: ADDRESS is an amalgam of (ADDR1,LOCALE)
Points will only be allocated for a match, the amount depending upon the scarcity of ADDRESS
but should average 30 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
 
FULLNAME Scoring: In order for two records to be a match it is also required that the FULLNAME fields match.
Specifically the score awarded to this field must be >= -3 .
Two FULLNAME fields will be considered to match if:
  - they are identical
Note: FULLNAME is an amalgam of (MAINNAME,SNAME)
Points will only be allocated for a match, the amount depending upon the scarcity of FULLNAME
but should average 22 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score) and the sum of the scores of its' children will be used to determine the force criteria.
 
DL_STATE Scoring: This field is not used for scoring; rather it is carried along for context and debugging
AMBEST Scoring: This field is not used for scoring; rather it is carried along for context and debugging
 
__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters
 
Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.
 
Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.
 
__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.
 
