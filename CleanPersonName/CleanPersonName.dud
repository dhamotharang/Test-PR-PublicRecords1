NAME CleanPersonName;
VERSION "1.0.0";
LABEL "Clean Person Name";
DESCRIPTION "This plugin splits a single column person name into first, middle, and last.";
CATEGORY CLEAN;
AUTHOR "prichajx";

PERMISSIONS
 VIEW:PUBLIC;
 EDIT:PRIVATE;
 RUN:PUBLIC;
END
 
INPUTS
    STRING Prefix:LABEL("Append Column Prefix"),OPTIONAL,NULL("");
    DATASET dsInput:MAPBYNAME
        FIELD Name:LABEL("Name Field");
    END
END

OUTPUTS
  DATASET dsOutput(dsInput):PREFIX(INPUTS.Prefix),APPEND
      STRING Title;
      STRING Firstname;
      STRING Middlename;
      STRING Lastname;
      STRING Suffix;
  END
  DATASET CleanNameStats : SIDE, WUID, SMALL
      STRING     Label;
      INTEGER     Cnt;
  END    
END

VISUALIZE CleanPersonNameStats : LABEL("Clean Person Name Stats")
    BAR     CleanName(CleanNameStats{Label, Cnt}) : TITLE("Person Name Clean Result"), LABEL(Label), WEIGHT(Cnt);
END

GENERATES INLINE
IMPORT Address;


 Layout := RECORD
  RECORDOF(%dsInput%);
    STRING    %Prefix%Title;
    STRING    %Prefix%Firstname;
    STRING    %Prefix%Middlename;
    STRING    %Prefix%Lastname;
    STRING    %Prefix%Suffix;
  END;

 Layout tLayout(%dsInput% InFile) := TRANSFORM
    clean_name := Address.CleanPersonFML73(InFile.%Name%);
    self.%Prefix%Title := clean_name[1..5];
    self.%Prefix%Firstname := clean_name[6..25];
    self.%Prefix%Middlename := clean_name[26..45];
    self.%Prefix%Lastname := clean_name[46..65];
    self.%Prefix%Suffix := clean_name[66..70];
    self := InFile;
 END;

   dsOutputPrep := PROJECT(%dsInput%, tLayout(LEFT));
   %^edsOutput% := dsOutputPrep; 
   %^eCleanNameStats% := DATASET([{'Total Rows', COUNT(%dsOutput%)}, {'Titles',COUNT(%dsOutput%(%Prefix%Title != ''))},{'Firstnames',COUNT(%dsOutput%(%Prefix%Firstname != ''))},{'Middlenames', COUNT(%dsOutput%(%Prefix%Middlename != ''))},  {'Lastnames', COUNT(%dsOutput%(%Prefix%Lastname != ''))}, {'Suffixes', COUNT(%dsOutput%(%Prefix%Suffix != ''))}], {STRING Label, INTEGER Cnt});

ENDGENERATES

RESOURCES
   LOGICALFILE testinput:FILENAME("~qa::cleanpersonname::cleanpersonname::input"), URL("http://10.241.100.157:8010"), DALIIP("10.241.100.157"), CLUSTER("thor100_100cert");
   ECL Address:FILENAME("Address"), URL("http:// 10.241.100.153:8010");
FILE readme: FILENAME("CleanPersonName_ReadMe.txt"),LABEL("Plugin Readme File");
	FILE CleanPersonName_BuildTestDataset: FILENAME("CleanPersonName_BuildTestDataset.ecl"),LABEL("BWR to create data for test composition");
	FILE CleanPersonName_testcmp: FILENAME("CleanPersonName_testcmp.txt"),LABEL("Plugin Test Composition");

END

