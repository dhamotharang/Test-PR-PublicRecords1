ID "feee0e66-b2d1-4f42-8e16-ad2ad753b826";
NAME AppendNewDataIndicator;
LABEL "Append New Data Indicator";
VERSION "1.0.0";
AUTHOR "CarmigJX  ";
CATEGORY APPEND;
DESCRIPTION "Plugin that compares two input dataset and appends a new data indicator for records not found in the previous dataset run";
PERMISSIONS
VIEW:PUBLIC;
EDIT:PRIVATE;
RUN:PUBLIC;
END

INPUTS
	STRING Prefix: LABEL("Append Column Prefix"),DEFAULT("Record"),DESCRIPTION("This prefix will be appended to all fields added by this plugin. This allows the same plugin to be chained more than once in a composition without creating field conflicts.");
	DATASET dsNewRun
    FIELD JoinFields1: MANY,LABEL("Join Fields from dsInput1"),DESCRIPTION("Fields to use for the comparison");
  END
	DATASET dsOldRun
    FIELD JoinFields2: MANY,LABEL("Join Fields from dsInput2"),DESCRIPTION("Fields to use for the comparison");
  END
END

OUTPUTS
	DATASET dsOutput(dsNewRun): PREFIX(INPUTS.Prefix),APPEND
		INTEGER NewFlag;
  END
	DATASET NewDataHitStats: SIDE,WUID,SMALL
		STRING DataIndicator: FEW;
    INTEGER Cnt;
  END
END

VISUALIZE AppendNewDataIndicatorStats: LABEL("Append New Data Indicator Stats")
  TABLE HitRate(NewDataHitStats): TITLE("Data Indicator Rate"),LABEL("Data Indicator","Count"),VALUE(DataIndicator,Cnt);
END

GENERATES INLINE
  IMPORT AppendNewDataIndicator;
  
  strJoinFields1    := '%#foreach(INPUTS.JoinFields1,",")% %INPUTS.JoinFields1% %#end%';
  strJoinFields2    := '%#foreach(INPUTS.JoinFields2,",")% %INPUTS.JoinFields2% %#end%';
  
  %^edsOutput% := AppendNewDataIndicator.macAppendNewDataIndicator(%dsNewRun%, %dsOldRun%, strJoinFields1, strJoinFields2, %^qPrefix%) %^p%;
  
  %^eNewDataHitStats% := TABLE(%dsOutput%,{STRING DataIndicator := IF(%Prefix%NewFlag=1, 'New Record', 'Record Present in Previous Run'),INTEGER Cnt := COUNT(GROUP)},%Prefix%NewFlag,MERGE);
ENDGENERATES

RESOURCES
	FILE readme: FILENAME("AppendNewDataIndicator_ReadMe.txt"),LABEL("Plugin Readme File");
	FILE AppendNewDataIndicator_testcmp: FILENAME("AppendNewDataIndicator_testcmp.txt"),LABEL("Plugin Test Composition");
	FILE AppendNewDataIndicator_BuildTestDataset: FILENAME("AppendNewDataIndicator_BuildTestDataset.ecl"),LABEL("BWR to create data for test composition");
	FILE AppendNewDataIndicator_TestHarness: FILENAME("AppendNewDataIndicator_TestHarness.txt"),LABEL("Plugin Test Harness");
	FILE AppendNewDataIndicatorCheckList: FILENAME("AppendNewDataIndicatorCheckList.xlsx"),LABEL("Plugin checklist");
	ECL  AppendNewDataIndicator:FILENAME("AppendNewDataIndicator"), URL("<http://10.241.100.155:8010>"); 
	ECL  hipie_ecl:FILENAME("hipie_ecl"), URL("<http://10.241.100.155:8010>"); 
	ECL  JoinDataset:FILENAME("JoinDataset"), URL("<http://10.241.100.155:8010>"); 
	LOGICALFILE test: FILENAME("~qa::appendnewdataindicator::appendnewdataindicator::input"),URL("http://10.241.100.159:8010"),DALIIP("10.241.100.159"),CLUSTER("thor100_100dev");
	LOGICALFILE testcompare: FILENAME("~qa::appendnewdataindicator::appendnewdataindicator::inputcompare"),URL("http://10.241.100.159:8010"),DALIIP("10.241.100.159"),CLUSTER("thor100_100dev");
END
