export stored_variables() :=
	macro
		export boolean  parm_SSNTypos                 := false : stored('SSNTypos');
		export string   parm_fein                     := ''    : stored('fein');
		export string   parm_phone                    := ''    : stored('phone');
		export string   parm_companyname              := ''    : stored('companyname');
		export string   parm_lname                    := ''    : stored('lname');
		export string   parm_LastName                 := ''    : stored('LastName');
		export string   parm_Lname4                   := ''    : stored('Lname4');
		export string   parm_Fname3                   := ''    : stored('Fname3');
		export string   parm_UnParsedFullName         := ''    : stored('UnParsedFullName');
		export string   parm_nameasis                 := ''    : stored('nameasis');
		export string   parm_asisname                 := ''    : stored('asisname');
		export string   parm_lfmname                  := ''    : stored('lfmname');
		export boolean  parm_PhoneticMatch            := false : stored('PhoneticMatch');
		export boolean  parm_AllowNicknames           := false : stored('AllowNicknames');
		export string   parm_FirstName                := ''    : stored('FirstName');
		export string   parm_MiddleName               := ''    : stored('MiddleName');
		export string   parm_OtherLastName1           := ''    : stored('OtherLastName1');
		export string   parm_cn                       := ''    : stored('cn');
		export string   parm_company                  := ''    : stored('company');
		export string   parm_corpname                 := ''    : stored('corpname');
		export string   parm_addr                     := ''    : stored('addr');
		export string   parm_city                     := ''    : stored('city');
		export string   parm_state                    := ''    : stored('state');
		export string   parm_zip                      := ''    : stored('zip');
		export string   parm_County                   := ''    : stored('County');
		export string   parm_OtherState1              := ''    : stored('OtherState1');
		export string   parm_OtherState2              := ''    : stored('OtherState2');
		export string   parm_predir                   := ''    : stored('predir');
		export string   parm_StateCityZip             := ''    : stored('StateCityZip');
		export string   parm_z5                       := ''    : stored('z5');
		export string   parm_prim_name                := ''    : stored('prim_name');
		export string   parm_street_name              := ''    : stored('street_name');
		export string   parm_prim_range               := ''    : stored('prim_range');
		export string   parm_st                       := ''    : stored('st');
		export string   parm_st_orig                  := ''    : stored('st_orig');
		export unsigned parm_DOB                      := 0     : stored('DOB');
		export unsigned parm_AgeHigh                  := 0     : stored('AgeHigh');
		export unsigned parm_AgeLow                   := 0     : stored('AgeLow');
		export string   parm_RelativeFirstName1       := ''    : stored('RelativeFirstName1');
		export string   parm_RelativeFirstName2       := ''    : stored('RelativeFirstName2');
		export unsigned parm_ScoreThreshold           := 10    : stored('ScoreThreshold');
		export string   parm_did                      := ''    : stored('did');
		export string   parm_LookupType               := ''    : stored('LookupType');
		export string   parm_PartyType                := ''    : stored('PartyType');
		export string   parm_BDID                     := ''    : stored('BDID');
		export string   parm_suffix                   := ''    : stored('suffix');
		export string   parm_postdir                  := ''    : stored('postdir');
		export string   parm_sec_range                := ''    : stored('sec_range');
		export unsigned parm_ZipRadius                := 0     : stored('ZipRadius');
		export string   parm_OtherCity1               := ''    : stored('OtherCity1');
		export boolean  parm_NoDeepDive               := false : stored('NoDeepDive');
		export unsigned parm_MileRadius               := 0     : stored('MileRadius');
		export boolean  parm_useSupergroup            := false : stored('useSupergroup');
		export boolean  parm_useLevels                := true  : stored('useLevels');
		export boolean  parm_ExactOnly                := false : stored('ExactOnly');
		export string   parm_SeisintAdlService        := ''    : stored('SeisintAdlService');
		export boolean  parm_NonExclusion             := false : stored('NonExclusion');
		export boolean  parm_LnBranded                := false : stored('LnBranded');
		export string   parm_rid                      := ''    : stored('rid');
		export boolean  parm_SearchGoodSSNOnly        := false : stored('SearchGoodSSNOnly');
		export boolean  parm_SearchIgnoresAddressOnly := false : stored('SearchIgnoresAddressOnly');
		export unsigned parm_PenaltThreshold          := 0     : stored('PenaltThreshold');
		export unsigned parm_DateFirstSeen            := 0     : stored('DateFirstSeen');
		export unsigned parm_DateLastSeen             := 0     : stored('DateLastSeen');
		export boolean  parm_AllowDateSeen            := false : stored('AllowDateSeen');
		export boolean  parm_AllowWildcard            := if(thorlib.getenv('AllowWildcard','Default')='1',true,false): stored('AllowWildcard');
		export boolean  parm_UseOnlyBestDID           := false : stored('UseOnlyBestDID');
		export boolean  parm_KeepOldSsns              := false : stored('KeepOldSsns');
		export boolean  parm_UsingKeepSSNs            := false : stored('UsingKeepSSNs');
		export boolean  parm_Household                := false : stored('Household');
		export boolean  parm_AllowAll                 := false : stored('AllowAll');
		export boolean  parm_AllowDPPA                := false : stored('AllowDPPA');
		export unsigned parm_DPPAPurpose              := 0     : stored('DPPAPurpose');
		export boolean  parm_AllowGLB                 := false : stored('AllowGLB');
		export unsigned parm_GLBPurpose               := 8     : stored('GLBPurpose');
		export unsigned parm_MaxResults               := 2000  : stored('MaxResults');
		export unsigned parm_SkipRecords              := 0     : stored('SkipRecords');
		export unsigned parm_MaxResultsThisTime       := 2000  : stored('MaxResultsThisTime');
		export string   parm_ssn                      := ''    : stored('ssn');
		export boolean  parm_isCrs                    := false : stored('isCrs');
	endmacro;
	