Generated by SALT V3.11.7
Command line options: -ga 
File being processed :-
OPTIONS:-ga
FILENAME:Hdr
MODULE:Watchdog_best
// Uncomment up to NINES for internal or external adl
IDFIELD:EXISTS:did
RIDFIELD:rid
RECORDS:3000000000
POPULATION:3000000000
NINES:3
// Uncomment Process if doing external adl
// PROCESS:<ProcessName>
// FIELDTYPE statements can be used to clean up (or check the cleaning) of individual fields
// BESTTYPE statements declare methods of generating the best value for a given cluster; this can also improve linking
// FUZZY can be used to create new types of FUZZY linking
// Remember to generate specificities and update the 0,0 placeholders below before running any sort of linking.
// If the actual specificity for a field is <1, round it up to 1 rather than down to 0.  If your cluster is running
// a shared repository, calling SALTTOOLS30.mac_Patch_SPC from the bottom of BWR_Specificities may be a convenience.
// Field Types
FIELDTYPE:number:ALLOW(0123456789)
FIELDTYPE:alpha:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ)
FIELDTYPE:NAME:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ -'):ONFAIL(CLEAN)
//Title
BESTTYPE:BestTitle:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_valid_name_title)
// first name
FUZZY:PreferredName:RST:CUSTOM(Watchdog_Best.fn_PreferredName):TYPE(STRING20)
BESTTYPE:BestFirstName:BASIS(did):COMMONEST:FUZZY:VALID(Watchdog_Best.fn_valid_fname_strict)
BESTTYPE:CommonFirstName:BASIS(did):COMMONEST:FUZZY:VALID(Watchdog_Best.fn_valid_fname)
BESTTYPE:AnyFirstName:BASIS(did):COMMONEST
// middle name
BESTTYPE:BestMiddleName:BASIS(did):LONGEST:FUZZY:VALID(Watchdog_Best.fn_valid_mname_strict)
BESTTYPE:CommonMiddleName:BASIS(did):COMMONEST:FUZZY:VALID(Watchdog_Best.fn_valid_mname)
BESTTYPE:AnyMiddleName:BASIS(did):COMMONEST
// last name
BESTTYPE:BestLastName:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_best_lname)
BESTTYPE:CommonLastName:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_valid_lname)
BESTTYPE:AnyLastName:BASIS(did):COMMONEST
//Suffix
BESTTYPE:BestSuffix:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_valid_name_suffix)
//SSN
BESTTYPE:BestSSN:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_valid_ssn)
BESTTYPE:SecondBestSSN:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_ok_ssn)
//Phone
BESTTYPE:BestPhoneCurrentWithNpa:BASIS(did):RECENT(dt_last_seen):FUZZY:VALID(Watchdog_Best.fn_valid_phone)
//DOB
BESTTYPE:PrefferedDOB:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_preffered_dob)
BESTTYPE:BestDOB:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_valid_dob)
BESTTYPE:NoDayDOB:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_dob_noday)
BESTTYPE:NoMonthDOB:BASIS(did):COMMONEST:VALID(Watchdog_Best.fn_dob_nomonth)
//Address
BESTTYPE:BestAddress:BASIS(did):RECENT(dt_last_seen):VALID(Watchdog_Best.fn_best_address)
BESTTYPE:GongAddressBySeen:BASIS(did):RECENT(dt_last_seen):VALID(Watchdog_Best.fn_gong_address)
BESTTYPE:BetterAddressBySeen:BASIS(did):RECENT(dt_last_seen):VALID(Watchdog_Best.fn_better_address)
BESTTYPE:RecentAddressBySeen:BASIS(did):RECENT(dt_last_seen):VALID(Watchdog_Best.fn_valid_address)
BESTTYPE:BetterAddressByReported:BASIS(did):RECENT(dt_vendor_last_reported):VALID(Watchdog_Best.fn_better_address2)
BESTTYPE:RecentAddressByReported:BASIS(did):RECENT(dt_vendor_last_reported):VALID(Watchdog_Best.fn_valid_address2)
BESTTYPE:CommonestAddress:BASIS(did):COMMONEST
// fields
//FIELD:did:TYPE(UNSIGNED6):1,1
//FIELD:rid:TYPE(UNSIGNED6):1,1
FIELD:pflag1:TYPE(STRING1):44,2
FIELD:pflag2:TYPE(STRING1):43,20
FIELD:pflag3:TYPE(STRING1):7,1
FIELD:src:TYPE(STRING2):311,93
SOURCEFIELD:src:PERMITS(Watchdog_Best.fn_sources)
//DATEFIELD:dt_first_seen:61,8
//DATEFIELD:dt_last_seen:56,9
//DATEFIELD:dt_vendor_last_reported:48,9
//DATEFIELD:dt_vendor_first_reported:50,8
//DATEFIELD:dt_nonglb_last_seen:64,8
FIELD:dt_first_seen:TYPE(unsigned3):61,8
FIELD:dt_last_seen:TYPE(unsigned3):56,9
FIELD:dt_vendor_last_reported:TYPE(unsigned3):48,9
FIELD:dt_vendor_first_reported:TYPE(unsigned3):50,8
FIELD:dt_nonglb_last_seen:TYPE(unsigned3):64,8
FIELD:rec_type:TYPE(STRING1):12,6
FIELD:phone:TYPE(QSTRING8):LIKE(number):EDIT1:BestPhoneCurrentWithNpa:17,0
FIELD:ssn:TYPE(QSTRING7):17,1
FIELD:dob:TYPE(INTEGER4):PrefferedDOB:BestDOB:NoDayDOB:NoMonthDOB:13,1
FIELD:title:TYPE(QSTRING4):BestTitle:1,0
FIELD:fname:TYPE(QSTRING15):EDIT1:INITIAL:BestFirstName:CommonFirstName:AnyFirstName:1,1
FIELD:mname:TYPE(QSTRING15):EDIT1:INITIAL:BestMiddleName:CommonMiddleName:AnyMiddleName:1,1
FIELD:lname:TYPE(QSTRING15):HYPHEN1:1,1
FIELD:name_suffix:TYPE(QSTRING4):NULLS(REPLACE,):BestSuffix:70,1
FIELD:prim_range:TYPE(QSTRING8):115,3
FIELD:predir:TYPE(STRING2):38,3
FIELD:prim_name:TYPE(QSTRING21):131,4
FIELD:suffix:TYPE(QSTRING3):29,4
FIELD:postdir:TYPE(STRING2):61,2
FIELD:unit_desig:TYPE(QSTRING8):29,3
FIELD:sec_range:TYPE(QSTRING6):103,5
FIELD:city_name:TYPE(QSTRING19):109,3
FIELD:st:TYPE(STRING2):48,2
FIELD:zip:TYPE(QSTRING4):129,4
FIELD:zip4:TYPE(QSTRING3):116,5
FIELD:tnt:TYPE(STRING1):93,2
FIELD:valid_ssn:TYPE(STRING1):21,1
FIELD:jflag1:TYPE(STRING1):24,5
FIELD:jflag2:TYPE(STRING1):37,0
FIELD:jflag3:TYPE(STRING1):25,0
FIELD:rawaid:TYPE(UNSIGNED8):169,5
FIELD:dodgy_tracking:TYPE(STRING5):53,4
FIELD:address_ind:TYPE(UNSIGNED2):1,0
FIELD:name_ind:TYPE(UNSIGNED2):1,1
FIELD:persistent_record_id:TYPE(UNSIGNED8):1,1
CONCEPT:lastname:lname:name_ind:BestLastName:CommonLastName:AnyLastName:1,1
CONCEPT:ssnum:ssn:valid_ssn:BestSSN:SecondBestSSN:56,5
CONCEPT:address:prim_range:predir:prim_name:suffix:postdir:unit_desig:sec_range:city_name:st:zip:zip4:tnt:rawaid:dt_first_seen:dt_last_seen:dt_vendor_first_reported:dt_vendor_last_reported:BestAddress:BetterAddressBySeen:RecentAddressBySeen:GongAddressBySeen:BetterAddressByReported:RecentAddressByReported:CommonestAddress:170,5
// CONCEPT statements should be used to group together interellated fields; such as address
// RELATIONSHIP is used to find non-obvious relationships between the clusters
// SOURCEFIELD is used if a field of the file denotes a source of the records in that file
// LINKPATH is used to define access paths for external linking

Total available specificity:2377
Specificity number that should imply one record specified 31.
Assuming an average of 1 records per cluster
Specificity value at which N^2 joins will be tolerated: 25
Recommended matching threshold 41
Search Threshold set at 20
Use of PERSISTs in code set at:3


______________________________English Description of Matching Process___________________________

A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 3 nines of accuracy on a population of -2147483648 with 3000000000 records.
The matching threshold is therefore set at 41.

___Field by Field Breakdown of Scoring Method___

pflag1 Scoring:
Two pflag1 fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the pflag1
but should average 44 points with a failed match subtracting 43 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for pflag1.)

pflag2 Scoring:
Two pflag2 fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the pflag2
but should average 43 points with a failed match subtracting 42 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for pflag2.)

pflag3 Scoring:
Two pflag3 fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the pflag3
but should average 7 points with a failed match subtracting 6 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for pflag3.)

src Scoring:
Two src fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the src
but should average 311 points with a failed match subtracting 282 points.
(This subtraction estimate is based upon 9% of clusters with 2 or more records have 2 or more values for src.)

dt_first_seen Scoring:
Two dt_first_seen fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dt_first_seen
but should average 61 points with a failed match subtracting 60 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dt_first_seen.)
It should also be noted that dt_first_seen is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

dt_last_seen Scoring:
Two dt_last_seen fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dt_last_seen
but should average 56 points with a failed match subtracting 55 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dt_last_seen.)
It should also be noted that dt_last_seen is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

dt_vendor_last_reported Scoring:
Two dt_vendor_last_reported fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dt_vendor_last_reported
but should average 48 points with a failed match subtracting 47 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dt_vendor_last_reported.)
It should also be noted that dt_vendor_last_reported is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

dt_vendor_first_reported Scoring:
Two dt_vendor_first_reported fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dt_vendor_first_reported
but should average 50 points with a failed match subtracting 49 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dt_vendor_first_reported.)
It should also be noted that dt_vendor_first_reported is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

dt_nonglb_last_seen Scoring:
Two dt_nonglb_last_seen fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dt_nonglb_last_seen
but should average 64 points with a failed match subtracting 63 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dt_nonglb_last_seen.)

rec_type Scoring:
Two rec_type fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the rec_type
but should average 12 points with a failed match subtracting 11 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for rec_type.)

phone Scoring:
Two phone fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the phone
and the degree of fuzziness required but should average 17 points with a failed match subtracting 17 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for phone.)

ssn Scoring:
Two ssn fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ssn
but should average 17 points with a failed match subtracting 16 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for ssn.)
It should also be noted that ssn is a child field of ssnum. Therefore if ssnum is a full match this field will score 0.
This field is scaled to match with its parent ssnum, on average that will mean multiplying by 147%

dob Scoring:
Two dob fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dob
but should average 13 points with a failed match subtracting 12 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dob.)

title Scoring:
Two title fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the title
but should average 1 points with a failed match subtracting 1 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for title.)

fname Scoring:
Two fname fields will be considered to match if:
  - they are identical
  - one is the leading part of the other
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the fname
and the degree of fuzziness required but should average 1 points with a failed match subtracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for fname.)

mname Scoring:
Two mname fields will be considered to match if:
  - they are identical
  - one is the leading part of the other
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the mname
and the degree of fuzziness required but should average 1 points with a failed match subtracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for mname.)

lname Scoring:
Two lname fields will be considered to match if:
  - they are identical
  - if the two strings are identical if hyphens and spaces are ignored
  - if one is the leading or trailing part of the otherand a hyphen or space indicates a logical break in the shorter string
The exact number of points allocated to a match will depend upon the global scarcity of the lname
and the degree of fuzziness required but should average 1 points with a failed match subtracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for lname.)
It should also be noted that lname is a child field of lastname. Therefore if lastname is a full match this field will score 0.
This field is scaled to match with its parent lastname, on average that will mean multiplying by 50%

name_suffix Scoring:
Two name_suffix fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the name_suffix
but should average 70 points with a failed match subtracting 69 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for name_suffix.)

prim_range Scoring:
Two prim_range fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the prim_range
but should average 115 points with a failed match subtracting 114 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for prim_range.)
It should also be noted that prim_range is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

predir Scoring:
Two predir fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the predir
but should average 38 points with a failed match subtracting 37 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for predir.)
It should also be noted that predir is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

prim_name Scoring:
Two prim_name fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the prim_name
but should average 131 points with a failed match subtracting 130 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for prim_name.)
It should also be noted that prim_name is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

suffix Scoring:
Two suffix fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the suffix
but should average 29 points with a failed match subtracting 28 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for suffix.)
It should also be noted that suffix is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

postdir Scoring:
Two postdir fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the postdir
but should average 61 points with a failed match subtracting 60 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for postdir.)
It should also be noted that postdir is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

unit_desig Scoring:
Two unit_desig fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the unit_desig
but should average 29 points with a failed match subtracting 28 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for unit_desig.)
It should also be noted that unit_desig is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

sec_range Scoring:
Two sec_range fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the sec_range
but should average 103 points with a failed match subtracting 102 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for sec_range.)
It should also be noted that sec_range is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

city_name Scoring:
Two city_name fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the city_name
but should average 109 points with a failed match subtracting 108 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for city_name.)
It should also be noted that city_name is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

st Scoring:
Two st fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the st
but should average 48 points with a failed match subtracting 47 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for st.)
It should also be noted that st is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

zip Scoring:
Two zip fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the zip
but should average 129 points with a failed match subtracting 128 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for zip.)
It should also be noted that zip is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

zip4 Scoring:
Two zip4 fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the zip4
but should average 116 points with a failed match subtracting 115 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for zip4.)
It should also be noted that zip4 is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

tnt Scoring:
Two tnt fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the tnt
but should average 93 points with a failed match subtracting 92 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for tnt.)
It should also be noted that tnt is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

valid_ssn Scoring:
Two valid_ssn fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the valid_ssn
but should average 21 points with a failed match subtracting 20 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for valid_ssn.)
It should also be noted that valid_ssn is a child field of ssnum. Therefore if ssnum is a full match this field will score 0.
This field is scaled to match with its parent ssnum, on average that will mean multiplying by 147%

jflag1 Scoring:
Two jflag1 fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the jflag1
but should average 24 points with a failed match subtracting 23 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for jflag1.)

jflag2 Scoring:
Two jflag2 fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the jflag2
but should average 37 points with a failed match subtracting 37 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for jflag2.)

jflag3 Scoring:
Two jflag3 fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the jflag3
but should average 25 points with a failed match subtracting 25 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for jflag3.)

rawaid Scoring:
Two rawaid fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the rawaid
but should average 169 points with a failed match subtracting 168 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for rawaid.)
It should also be noted that rawaid is a child field of address. Therefore if address is a full match this field will score 0.
This field is scaled to match with its parent address, on average that will mean multiplying by 12%

dodgy_tracking Scoring:
Two dodgy_tracking fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dodgy_tracking
but should average 53 points with a failed match subtracting 52 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dodgy_tracking.)

address_ind Scoring:
Two address_ind fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the address_ind
but should average 1 points with a failed match subtracting 1 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for address_ind.)

name_ind Scoring:
Two name_ind fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the name_ind
but should average 1 points with a failed match subtracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for name_ind.)
It should also be noted that name_ind is a child field of lastname. Therefore if lastname is a full match this field will score 0.
This field is scaled to match with its parent lastname, on average that will mean multiplying by 50%

persistent_record_id Scoring:
Two persistent_record_id fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the persistent_record_id
but should average 1 points with a failed match subtracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for persistent_record_id.)

lastname Scoring:
Two lastname fields will be considered to match if:
  - they are identical
Note: lastname is an amalgam of (lname,name_ind)
Points will only be allocated for a match, the amount depending upon the scarcity of lastname
but should average 1 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).

ssnum Scoring:
Two ssnum fields will be considered to match if:
  - they are identical
Note: ssnum is an amalgam of (ssn,valid_ssn)
Points will only be allocated for a match, the amount depending upon the scarcity of ssnum
but should average 56 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).

address Scoring:
Two address fields will be considered to match if:
  - they are identical
Note: address is an amalgam of (prim_range,predir,prim_name,suffix,postdir,unit_desig,sec_range,city_name,st,zip,zip4,tnt,rawaid,dt_first_seen,dt_last_seen,dt_vendor_first_reported,dt_vendor_last_reported)
Points will only be allocated for a match, the amount depending upon the scarcity of address
but should average 170 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).



__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters

Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.

Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.


__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.


