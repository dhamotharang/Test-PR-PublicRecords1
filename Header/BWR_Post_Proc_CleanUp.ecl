CleanUp(string FileName)
 :=
  if(fileservices.FileExists(FileName),
	 FileServices.DeleteLogicalFile(FileName),
	 output(FileName + ' does not exist')
	)
 ;

cluster_      := '~thor400_84::';   
as_src_prefix := cluster_+'persist::headerbuild_';
 
Cleanup(cluster_+'hss_name_address');
Cleanup(cluster_+'hss_name_ssn');
Cleanup(cluster_+'hss_name_phone');
Cleanup(cluster_+'hss_name_dayob');
Cleanup('thor_data400::base::header_current_dist_did');
Cleanup(cluster_+'pgncoa_namecount');
Cleanup(cluster_+'persist_hss_safe_name_zips');
Cleanup(cluster_+'headerbuild_hss_name_phone');
Cleanup(cluster_+'dt_temp');
Cleanup(cluster_+'pre_ndobdayob');
Cleanup(cluster_+'headerbuild_hss_name_dob_dayob');
Cleanup(cluster_+'headerbuild_hss_name_ssn');
Cleanup(cluster_+'new_header_records');
Cleanup(cluster_+'Header_Joined');
Cleanup(cluster_+'header_source_counts_new');
Cleanup(cluster_+'Persist::DrvLic_Source_Counts');
Cleanup(cluster_+'vehlic_source_counts');
Cleanup(cluster_+'headerbuild_source_check');
Cleanup(cluster_+'good_ssn');
Cleanup(cluster_+'good_name_address');
Cleanup(cluster_+'rare_names');
Cleanup(cluster_+'match_candidates_1');
Cleanup(cluster_+'match_candidates_2');
Cleanup(cluster_+'j1');
Cleanup(cluster_+'j2');
Cleanup(cluster_+'j3');
Cleanup(cluster_+'j4');
Cleanup(cluster_+'j5');
Cleanup(cluster_+'j8');
Cleanup(cluster_+'relativematches');
Cleanup(cluster_+'persist::prop_did_matches');
Cleanup(cluster_+'persist::DL_DID_matches');
Cleanup(cluster_+'persist::vehicle_did_match');
//Cleanup(cluster_+'did_rules0');
//Cleanup(cluster_+'Did_Rules1');
Cleanup(cluster_+'With_Did');
Cleanup(cluster_+'persist::apt_patch');
Cleanup(cluster_+'htemp::TNT_Candidates');
Cleanup(as_src_prefix+'aircraft_src');
Cleanup(as_src_prefix+'airmen_src');
Cleanup(as_src_prefix+'ak_src');
Cleanup(as_src_prefix+'asses_src');
Cleanup(as_src_prefix+'atf_src');
Cleanup(as_src_prefix+'bk_src');
Cleanup(as_src_prefix+'boat_src');
Cleanup(as_src_prefix+'consumer_src');
Cleanup(as_src_prefix+'dea_src');
Cleanup(as_src_prefix+'death_src');
Cleanup(as_src_prefix+'deed_src');
Cleanup(as_src_prefix+'dl_src');
Cleanup(as_src_prefix+'emerges_src');
Cleanup(as_src_prefix+'eq_src');
Cleanup(as_src_prefix+'foreclosure_src');
Cleanup(as_src_prefix+'liens_src');
Cleanup(as_src_prefix+'liensv2_src');
Cleanup(as_src_prefix+'ms_src');
Cleanup(as_src_prefix+'prof_src');
Cleanup(as_src_prefix+'state_death_src');
Cleanup(as_src_prefix+'persist::headerbuild_vehicle_v2_src');
Cleanup(as_src_prefix+'watercraft_src');
Cleanup(as_src_prefix+'headerbuild_util_na_match');
header.Header_keys_cleanup;