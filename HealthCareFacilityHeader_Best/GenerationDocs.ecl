Generated by SALT V3.0 Gold
File being processed :-
THRESHOLD:45
//BLOCKTHRESHOLD:5 
//HACK:MAXBLOCKSIZE:20000
MODULE:HealthCareFacilityHeader_Best
FILENAME:HealthFacility
IDNAME:LNPID
IDFIELD:EXISTS:LNPID
SOURCEFIELD:SRC
SOURCERIDFIELD:SOURCE_RID
//FieldType
FIELDTYPE:DEFAULT:LEFTTRIM:NOQUOTES("'):ONFAIL(CLEAN):
FIELDTYPE:NUMBER:ALLOW(0123456789-):
FIELDTYPE:ALPHA:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ):
FIELDTYPE:ALPHANUM:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-):
FIELDTYPE:WORDBAG:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'):SPACES( <>{}[]-^=!+&,./):ONFAIL(CLEAN):
//Uncomment up to NINES for internal or external adl
RIDFIELD:RID
RECORDS:7688562
POPULATION:1600000
NINES:4
//Fuzzy
//HACK
//HACK:SLICEDISTANCE:18
//HACK:SLICETHRESHOLD:1
HACK:CUSTOMINTERNALJOIN:Custom_JOIN
// BestType - Generic
BESTTYPE:BestNPI:BASIS(LNPID):VOTED(fn_Best_NPI_Source_Votes,2):EXTEND
BESTTYPE:BestDEA:BASIS(LNPID):VOTED(fn_Best_DEA_Source_Votes,2):EXTEND
BESTTYPE:BestCLIA:BASIS(LNPID):VOTED(fn_Best_CLIA_Source_Votes,2):EXTEND
BESTTYPE:BestMedicare:BASIS(LNPID):VOTED(fn_Best_Medicare_Source_Votes,2):EXTEND
BESTTYPE:BestMedicaid:BASIS(LNPID):VOTED(fn_Best_Medicaid_Source_Votes,2):EXTEND
BESTTYPE:BestNCPDP:BASIS(LNPID):VOTED(fn_Best_NCPDP_Source_Votes,2):EXTEND
BESTTYPE:MostRecent:BASIS(LNPID):RECENT(DT_LAST_SEEN):MINIMUM(2):EXTEND
BESTTYPE:MostRecentAddr:BASIS(LNPID:ST):RECENT(DT_LAST_SEEN):MINIMUM(2)
BESTTYPE:BestAddressCommonest:BASIS(LNPID):COMMONEST:FUZZY:EXTEND
BESTTYPE:MostRecentLIC:BASIS(LNPID:?:LIC_STATE):RECENT(DT_LIC_EXPIRATION):FUZZY:EXTEND
BESTTYPE:BestLICCommenest:BASIS(LNPID):COMMONEST:FUZZY
BESTTYPE:BestLICLongest:BASIS(LNPID:?:LIC_STATE):LONGEST:FUZZY
BESTTYPE:MostRecentDEA:BASIS(LNPID):RECENT(DT_DEA_EXPIRATION):EXTEND
BESTTYPE:BestFirstName:BASIS(LNPID):COMMONEST:FUZZY:EXTEND
BESTTYPE:CommonCName:BASIS(LNPID):COMMONEST
BESTTYPE:BestTaxCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)
BESTTYPE:BestFeinCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)
BESTTYPE:UniqueSingleValue:BASIS(LNPID):UNIQUE:EXTEND
BESTTYPE:MostCommonValue:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(5):EXTEND
BESTTYPE:ExtendedCommonValue:BASIS(LNPID):COMMONEST:MINIMUM(2):EXTEND
BESTTYPE:LongestValue:BASIS(LNPID):LONGEST
BESTTYPE:CurrentLastName:BASIS(LNPID):RECENT(DT_LAST_SEEN)
BESTTYPE:BestLastName:BASIS(LNPID):RECENT(DT_LAST_SEEN):EXTEND:FUZZY:MINIMUM(2)
BESTTYPE:BestSecRange:BASIS(LNPID:PRIM_RANGE:PRIM_NAME:ZIP):COMMONEST:FUZZY:EXTEND
BESTTYPE:BestCity:BASIS(LNPID:ZIP):COMMONEST:EXTEND
BESTTYPE:BestTaxID:BASIS(LNPID):RECENT(DT_LAST_SEEN)
BESTTYPE:BestFein:BASIS(LNPID):RECENT(DT_LAST_SEEN)
BESTTYPE:BestPhoneCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)
//Phone and Fax
FIELD:PHONE:SWITCH0:20,226
FIELD:FAX:SWITCH0:20,193
//UNIQUE	
FIELD:UPIN:CARRY:0,0
FIELD:NPI_NUMBER:LIKE(NUMBER):FORCE(--):BestNPI:MostRecent:FLAG:OWNED:22,0
FIELD:DEA_NUMBER:FORCE(--):BestDEA:MostRecentDEA:FLAG:OWNED:21,38
FIELD:CLIA_NUMBER:FORCE(--):BestCLIA:MostCommonValue:FLAG:OWNED:22,0
FIELD:MEDICARE_FACILITY_NUMBER:BestMedicare:MostCommonValue:FLAG:OWNED:21,147
FIELD:NCPDP_NUMBER:FORCE(--):BestNCPDP:MostCommonValue:FLAG:OWNED:22,2
//TAX
FIELD:TAX_ID:WEIGHT(0.25):BestTaxID:BestTaxCommonest:FLAG:OWNED:21,34
FIELD:FEIN:FORCE(--,OR(NPI_NUMBER[15])):BestTaxID:BestTaxCommonest:FLAG:OWNED:17,23
//LIC NUMBER
FIELD:C_LIC_NBR:CONTEXT(LIC_STATE):WEIGHT(0.75):EDIT1:MostRecentLIC:BestLICLongest:BestLICCommenest:FLAG:19,147
//Fields
FIELD:SRC:CARRY
// Name
FIELD:CNAME:CARRY:0,0
FIELD:CNP_NAME:BAGOFWORDS(MANY):LIKE(WORDBAG):TYPE(STRING120):INITIAL:HYPHEN1:ABBR(ACRONYM,INITIAL):STEM(3):EDIT1(3):SWITCH0:FORCE(+,OR(FEIN[10]),OR(NPI_NUMBER[15]),OR(C_LIC_NBR[10]),OR(CLIA_NUMBER[15]),OR(MEDICARE_FACILITY_NUMBER[15]),OR(NCPDP_NUMBER[15])):13,292
//FIELD:CNP_NAME:BAGOFWORDS(MOST):LIKE(WORDBAG):TYPE(STRING120):INITIAL:HYPHEN1:ABBR(ACRONYM,INITIAL):STEM(3):EDIT1(3):SWITCH0:FORCE(+,OR(FEIN[10]),OR(NPI_NUMBER[15]),OR(C_LIC_NBR[10]),OR(CLIA_NUMBER[15]),OR(MEDICARE_FACILITY_NUMBER[15]),OR(NCPDP_NUMBER[15])):13,292
//FIELD:CNP_NAME:BAGOFWORDS(MANY):LIKE(WORDBAG):TYPE(STRING120):FORCE(+,OR(FEIN[10]),OR(NPI_NUMBER[15]),OR(C_LIC_NBR[10]),OR(CLIA_NUMBER[15]),OR(MEDICARE_FACILITY_NUMBER[15]),OR(NCPDP_NUMBER[15])):20,366
FIELD:CNP_NUMBER:PROP:FORCE(--,OR(FEIN[10]),OR(NPI_NUMBER[15]),OR(CLIA_NUMBER[15]),OR(C_LIC_NBR[10]),OR(MEDICARE_FACILITY_NUMBER[15]),OR(NCPDP_NUMBER[15])):13,44
FIELD:CNP_STORE_NUMBER:PROP:FORCE(--,OR(FEIN[10]),OR(NPI_NUMBER[15]),OR(C_LIC_NBR[10]),OR(CLIA_NUMBER[15]),OR(MEDICARE_FACILITY_NUMBER[15]),OR(NCPDP_NUMBER[15])):20,44
FIELD:CNP_BTYPE:PROP:FORCE(--,OR(FEIN[10]),OR(NPI_NUMBER[15]),OR(C_LIC_NBR[10]),OR(CLIA_NUMBER[15]),OR(MEDICARE_FACILITY_NUMBER[15]),OR(NCPDP_NUMBER[15])):4,22
FIELD:CNP_LOWV:CARRY:5,0
FIELD:CNP_TRANSLATED:CARRY:5,0
FIELD:CNP_CLASSID:CARRY:5,0
// Address
FIELD:ADDRESS_ID:LIKE(NUMBER):CARRY
FIELD:ADDRESS_CLASSIFICATION:CARRY
FIELD:PRIM_RANGE:PROP:EDIT1:SWITCH0:FORCE(+,OR(NPI_NUMBER[15]),OR(NCPDP_NUMBER[15])):12,210
FIELD:PRIM_NAME:TYPE(STRING28):SWITCH0:BAGOFWORDS(MOST):EDIT1:INITIAL:ABBR(FIRST):PROP:FORCE(+,OR(NPI_NUMBER[15]),OR(NCPDP_NUMBER[15])):13,290
FIELD:SEC_RANGE:HYPHEN2:EDIT1:PROP:SWITCH0:FORCE(--,OR(NPI_NUMBER[15]),OR(NCPDP_NUMBER[15])):7,70
FIELD:ST:LIKE(ALPHA):SWITCH0:FORCE(+,OR(NPI_NUMBER[15]),OR(NCPDP_NUMBER[15])):5,73
FIELD:V_CITY_NAME:CONTEXT(ST):SWITCH0:11,191
FIELD:ZIP:SWITCH0:13,240
//
FIELD:TAXONOMY:PROP:SWITCH0:7,85
FIELD:TAXONOMY_CODE:WEIGHT(0.25):PROP:FORCE(--,OR(NPI_NUMBER[15])):4,10
FIELD:MEDICAID_NUMBER:BestMedicaid:MostCommonValue:FLAG:OWNED:22,14
FIELD:VENDOR_ID:CONTEXT(SRC):SWITCH0:WEIGHT(0.1):21,934
//DATE
FIELD:DT_FIRST_SEEN:RECORDDATE(FIRST,YYYYMM):
FIELD:DT_LAST_SEEN:RECORDDATE(LAST,YYYYMM):
FIELD:DT_LIC_EXPIRATION:CARRY:0,0
FIELD:DT_DEA_EXPIRATION:CARRY:0,0
//CONCEPT
CONCEPT:FAC_NAME:CNP_NAME:CNP_NUMBER:CNP_STORE_NUMBER:CNP_BTYPE:BAGOFWORDS:SWITCH0:20,401
CONCEPT:ADDR1:PRIM_RANGE:PRIM_NAME:SEC_RANGE:BAGOFWORDS:SWITCH0:20,447
CONCEPT:LOCALE:V_CITY_NAME:ST:ZIP:FORCE(+-2,OR(NPI_NUMBER[15])):SWITCH0:13,242
CONCEPT:ADDRESS:ADDR1:LOCALE:FORCE(+,OR(NPI_NUMBER[15])):SWITCH0:20,449
//CLEAVE RULES
CLEAVE:Rule01:BASIS(NPI_NUMBER):EXPLODE:MATCH(ALL)
//CLEAVE:RULE02:BASIS(CNP_NAME:CNP_STORE_NUMBER):MINIMUM(1)
//CLEAVE:RULE03:BASIS(CNP_NAME:CNP_BTYPE):MINIMUM(1)
Total available specificity:443
Specificity number that should imply one record specified 21.
Assuming an average of 5 records per cluster
Specificity value at which N^2 joins will be tolerated: 17
User specified threshold 45
Recommended matching threshold 34
Search Threshold set at 11
Use of PERSISTs in code set at:3
Presence of SOURCE and SOURCERIDFIELD allows field level delta-ing during ingest; so generating hygiene too
______________________________English Description of Matching Process___________________________
A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 4 nines of accuracy on a population of 1600000 with     7688562 records.
A matching threshold of 34 is recommended although this was overridden to 45.
___Field by Field Breakdown of Scoring Method___
PHONE Scoring: Two PHONE fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PHONE
but should average 20 points with a failed match substracting 15 points.
(This subtraction estimate is based upon 22% of clusters with 2 or more records have 2 or more values for PHONE.)
FAX Scoring: Two FAX fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the FAX
but should average 20 points with a failed match substracting 16 points.
(This subtraction estimate is based upon 19% of clusters with 2 or more records have 2 or more values for FAX.)
UPIN Scoring: This field is not used for scoring; rather it is carried along for context and debugging
NPI_NUMBER Scoring: In order for two records to be a match it is also required that the NPI_NUMBER fields not not match.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC).
 The number of each field value are then counted.
 The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_NPI_Source_Votes which takes count and source into account by a margin of at least 2.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID).
 The number of each field value are then counted.
 The best is then defined to be the one which has the most recent date recorded in:DT_LAST_SEEN and which has at least 2 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two NPI_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the NPI_NUMBER
but should average 22 points with a failed match substracting 22 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for NPI_NUMBER.)
DEA_NUMBER Scoring: In order for two records to be a match it is also required that the DEA_NUMBER fields not not match.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC).
 The number of each field value are then counted.
 The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_DEA_Source_Votes which takes count and source into account by a margin of at least 2.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID).
 The number of each field value are then counted.
 The best is then defined to be the one which has the most recent date recorded in:DT_DEA_EXPIRATION.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two DEA_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DEA_NUMBER
but should average 21 points with a failed match substracting 20 points.
(This subtraction estimate is based upon 3% of clusters with 2 or more records have 2 or more values for DEA_NUMBER.)
CLIA_NUMBER Scoring: In order for two records to be a match it is also required that the CLIA_NUMBER fields not not match.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC).
 The number of each field value are then counted.
 The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_CLIA_Source_Votes which takes count and source into account by a margin of at least 2.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which is the most commonly occurring field value and which has at least 5 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two CLIA_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the CLIA_NUMBER
but should average 22 points with a failed match substracting 22 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for CLIA_NUMBER.)
MEDICARE_FACILITY_NUMBER Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC).
 The number of each field value are then counted.
 The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_Medicare_Source_Votes which takes count and source into account by a margin of at least 2.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which is the most commonly occurring field value and which has at least 5 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two MEDICARE_FACILITY_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the MEDICARE_FACILITY_NUMBER
but should average 21 points with a failed match substracting 17 points.
(This subtraction estimate is based upon 14% of clusters with 2 or more records have 2 or more values for MEDICARE_FACILITY_NUMBER.)
NCPDP_NUMBER Scoring: In order for two records to be a match it is also required that the NCPDP_NUMBER fields not not match.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC).
 The number of each field value are then counted.
 The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_NCPDP_Source_Votes which takes count and source into account by a margin of at least 2.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which is the most commonly occurring field value and which has at least 5 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two NCPDP_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the NCPDP_NUMBER
but should average 22 points with a failed match substracting 21 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for NCPDP_NUMBER.)
TAX_ID Scoring: Two TAX_ID fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the TAX_ID
but should average 21 points with a failed match substracting 20 points.
(This subtraction estimate is based upon 3% of clusters with 2 or more records have 2 or more values for TAX_ID.)
The SPC file has specified that the weight should be multiplied by  0.25
FEIN Scoring: In order for two records to be a match it is also required that the FEIN fields not not match.
Two FEIN fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the FEIN
but should average 17 points with a failed match substracting 16 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for FEIN.)
C_LIC_NBR Scoring: 
The scoring for this field is ignored unless the LIC_STATE fields are identical.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which has the most recent date recorded in:DT_LIC_EXPIRATION.
 If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field LIC_STATE then the value currently in the field will be replaced.
Two C_LIC_NBR fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the C_LIC_NBR
and the degree of fuzziness required but should average 19 points with a failed match substracting 16 points.
(This subtraction estimate is based upon 14% of clusters with 2 or more records have 2 or more values for C_LIC_NBR.)
The SPC file has specified that the weight should be multiplied by  0.75
SRC Scoring: This field is not used for scoring; rather it is carried along for context and debugging
CNAME Scoring: This field is not used for scoring; rather it is carried along for context and debugging
CNP_NAME Scoring: In order for two records to be a match it is also required that the CNP_NAME fields match.
Two CNP_NAME fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - one is the leading part of the other
  - if the space separated tokens in one match the other if re-arranged
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the otherand a hypen or space indicates a logical break in the shorter string
The exact number of points allocated to a match will depend upon the global scarcity of the CNP_NAME
and the degree of fuzziness required but should average 13 points with a failed match substracting 9 points.
(This subtraction estimate is based upon 29% of clusters with 2 or more records have 2 or more values for CNP_NAME.)
It should also be noted that CNP_NAME is a child field of FAC_NAME. Therefore if FAC_NAME is a full match this field will score 0.
This field is scaled to match with its parent FAC_NAME, on average that will mean multiplying by 40%
(Although the score is still computed to satisfy the forcing condition.)
CNP_NUMBER Scoring: In order for two records to be a match it is also required that the CNP_NUMBER fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two CNP_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the CNP_NUMBER
but should average 13 points with a failed match substracting 12 points.
(This subtraction estimate is based upon 4% of clusters with 2 or more records have 2 or more values for CNP_NUMBER.)
It should also be noted that CNP_NUMBER is a child field of FAC_NAME. Therefore if FAC_NAME is a full match this field will score 0.
This field is scaled to match with its parent FAC_NAME, on average that will mean multiplying by 40%
(Although the score is still computed to satisfy the forcing condition.)
CNP_STORE_NUMBER Scoring: In order for two records to be a match it is also required that the CNP_STORE_NUMBER fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two CNP_STORE_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the CNP_STORE_NUMBER
but should average 20 points with a failed match substracting 19 points.
(This subtraction estimate is based upon 4% of clusters with 2 or more records have 2 or more values for CNP_STORE_NUMBER.)
It should also be noted that CNP_STORE_NUMBER is a child field of FAC_NAME. Therefore if FAC_NAME is a full match this field will score 0.
This field is scaled to match with its parent FAC_NAME, on average that will mean multiplying by 40%
(Although the score is still computed to satisfy the forcing condition.)
CNP_BTYPE Scoring: In order for two records to be a match it is also required that the CNP_BTYPE fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two CNP_BTYPE fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the CNP_BTYPE
but should average 4 points with a failed match substracting 3 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for CNP_BTYPE.)
It should also be noted that CNP_BTYPE is a child field of FAC_NAME. Therefore if FAC_NAME is a full match this field will score 0.
This field is scaled to match with its parent FAC_NAME, on average that will mean multiplying by 40%
(Although the score is still computed to satisfy the forcing condition.)
CNP_LOWV Scoring: This field is not used for scoring; rather it is carried along for context and debugging
CNP_TRANSLATED Scoring: This field is not used for scoring; rather it is carried along for context and debugging
CNP_CLASSID Scoring: This field is not used for scoring; rather it is carried along for context and debugging
ADDRESS_ID Scoring: This field is not used for scoring; rather it is carried along for context and debugging
ADDRESS_CLASSIFICATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
PRIM_RANGE Scoring: In order for two records to be a match it is also required that the PRIM_RANGE fields match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two PRIM_RANGE fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_RANGE
and the degree of fuzziness required but should average 12 points with a failed match substracting 9 points.
(This subtraction estimate is based upon 21% of clusters with 2 or more records have 2 or more values for PRIM_RANGE.)
It should also be noted that PRIM_RANGE is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 62%
(Although the score is still computed to satisfy the forcing condition.)
PRIM_NAME Scoring: In order for two records to be a match it is also required that the PRIM_NAME fields match.
If a field is null or an initial and another record in the same cluster has a fuller value for that field then the other records value will be used.
Two PRIM_NAME fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - one is the leading part of the other
  - if the space separated tokens in one match the other if re-arranged
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_NAME
and the degree of fuzziness required but should average 13 points with a failed match substracting 9 points.
(This subtraction estimate is based upon 29% of clusters with 2 or more records have 2 or more values for PRIM_NAME.)
It should also be noted that PRIM_NAME is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 62%
(Although the score is still computed to satisfy the forcing condition.)
SEC_RANGE Scoring: In order for two records to be a match it is also required that the SEC_RANGE fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two SEC_RANGE fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the SEC_RANGE
and the degree of fuzziness required but should average 7 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 7% of clusters with 2 or more records have 2 or more values for SEC_RANGE.)
It should also be noted that SEC_RANGE is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 62%
(Although the score is still computed to satisfy the forcing condition.)
ST Scoring: In order for two records to be a match it is also required that the ST fields match.
Two ST fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ST
but should average 5 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 7% of clusters with 2 or more records have 2 or more values for ST.)
It should also be noted that ST is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%
(Although the score is still computed to satisfy the forcing condition.)
V_CITY_NAME Scoring: 
The scoring for this field is ignored unless the ST fields are identical.
Two V_CITY_NAME fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the V_CITY_NAME
but should average 11 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 19% of clusters with 2 or more records have 2 or more values for V_CITY_NAME.)
It should also be noted that V_CITY_NAME is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%
ZIP Scoring: Two ZIP fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ZIP
but should average 13 points with a failed match substracting 9 points.
(This subtraction estimate is based upon 24% of clusters with 2 or more records have 2 or more values for ZIP.)
It should also be noted that ZIP is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%
TAXONOMY Scoring: If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two TAXONOMY fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the TAXONOMY
but should average 7 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 8% of clusters with 2 or more records have 2 or more values for TAXONOMY.)
TAXONOMY_CODE Scoring: In order for two records to be a match it is also required that the TAXONOMY_CODE fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two TAXONOMY_CODE fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the TAXONOMY_CODE
but should average 4 points with a failed match substracting 3 points.
(This subtraction estimate is based upon 1% of clusters with 2 or more records have 2 or more values for TAXONOMY_CODE.)
The SPC file has specified that the weight should be multiplied by  0.25
MEDICAID_NUMBER Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC).
 The number of each field value are then counted.
 The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_Medicaid_Source_Votes which takes count and source into account by a margin of at least 2.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which is the most commonly occurring field value and which has at least 5 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two MEDICAID_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the MEDICAID_NUMBER
but should average 22 points with a failed match substracting 21 points.
(This subtraction estimate is based upon 1% of clusters with 2 or more records have 2 or more values for MEDICAID_NUMBER.)
VENDOR_ID Scoring: 
The scoring for this field is ignored unless the SRC fields are identical.
Two VENDOR_ID fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the VENDOR_ID
but should average 21 points with a failed match substracting 1 points.
(This subtraction estimate is based upon 93% of clusters with 2 or more records have 2 or more values for VENDOR_ID.)
The SPC file has specified that the weight should be multiplied by  0.10
DT_FIRST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LAST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LIC_EXPIRATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
DT_DEA_EXPIRATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
FAC_NAME Scoring: Two FAC_NAME fields will be considered to match if:
  - they are identical
  - The fields of either concept (but not both) can be shuffled so that they match preserving the FORCE conditions upon CNP_NAME,CNP_NUMBER,CNP_STORE_NUMBER,CNP_BTYPE
Note: FAC_NAME is an amalgam of (CNP_NAME,CNP_NUMBER,CNP_STORE_NUMBER,CNP_BTYPE)
Points will only be allocated for a match, the amount depending upon the scarcity of FAC_NAME
but should average 20 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
ADDR1 Scoring: Two ADDR1 fields will be considered to match if:
  - they are identical
  - The fields of either concept (but not both) can be shuffled so that they match preserving the FORCE conditions upon PRIM_RANGE,PRIM_NAME,SEC_RANGE
Note: ADDR1 is an amalgam of (PRIM_RANGE,PRIM_NAME,SEC_RANGE)
Points will only be allocated for a match, the amount depending upon the scarcity of ADDR1
but should average 20 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that ADDR1 is a child field of ADDRESS. Therefore if ADDRESS is a full match this field will score 0.
This field is scaled to match with its parent ADDRESS, on average that will mean multiplying by 60%
LOCALE Scoring: In order for two records to be a match it is also required that the LOCALE fields match.
Specifically the score awarded to this field must be >= -2 .
Two LOCALE fields will be considered to match if:
  - they are identical
Note: LOCALE is an amalgam of (V_CITY_NAME,ST,ZIP)
Points will only be allocated for a match, the amount depending upon the scarcity of LOCALE
but should average 13 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score) and the sum of the scores of its' children will be used to determine the force criteria.
It should also be noted that LOCALE is a child field of ADDRESS. Therefore if ADDRESS is a full match this field will score 0.
This field is scaled to match with its parent ADDRESS, on average that will mean multiplying by 60%
(Although the score is still computed to satisfy the forcing condition.)
ADDRESS Scoring: In order for two records to be a match it is also required that the ADDRESS fields match.
Two ADDRESS fields will be considered to match if:
  - they are identical
Note: ADDRESS is an amalgam of (ADDR1,LOCALE)
Points will only be allocated for a match, the amount depending upon the scarcity of ADDRESS
but should average 20 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score) and the sum of the scores of its' children will be used to determine the force criteria.
LIC_STATE Scoring: This field is not used for scoring; rather it is carried along for context and debugging
______________________________English Description of Cleaving___________________________
 Prior to performing matching all clusters are first assessed to see if they are presently overlinked.
A cluster is considered to be overlinked if it is possible to 'slice' or 'cleave' the cluster in such a way
that records either side of the slice completely differ in one or more fields; and their are 0 records
that 'straddle' the slice point (containing values characteristic of BOTH sides of the cleave point.
The particular characteristics of each cleave point follow:-
 Cleave point for basis:_NPI_NUMBER
A cleave point is considered to exist if it is possible to divide the cluster into groups each of which have
unique values for NPI_NUMBER
Unique means different in any way; no degree of fuzziness is allowed for.
Additionally for a cleave point to be considered there must be at least 2 records either slide of the cleave.
Once a cleave point is established two clusters will be formed composed of records that completely match the values of the cleave point. 
Any records left over will each be assigned their own cluster (exploded)
__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters
Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.
Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.
__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.
