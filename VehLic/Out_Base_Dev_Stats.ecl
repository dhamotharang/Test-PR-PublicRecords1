import VehLic, strata;

dVehiclesBaseDev := vehlic.File_Base_Vehicles_Dev;

rPopulationStats_dVehiclesBaseDev
 :=
  record
    CountGroup := count(group);
    vrid_CountNonZero                                            := sum(group,if(dVehiclesBaseDev.vrid<>0,1,0));
    dt_first_seen_CountNonZero                                   := sum(group,if(dVehiclesBaseDev.dt_first_seen<>0,1,0));
    dt_last_seen_CountNonZero                                    := sum(group,if(dVehiclesBaseDev.dt_last_seen<>0,1,0));
    dt_vendor_first_reported_CountNonZero                        := sum(group,if(dVehiclesBaseDev.dt_vendor_first_reported<>0,1,0));
    dt_vendor_last_reported_CountNonZero                         := sum(group,if(dVehiclesBaseDev.dt_vendor_last_reported<>0,1,0));
    dVehiclesBaseDev.orig_state;
    dVehiclesBaseDev.source_code;
    price_CountNonBlank                                          := sum(group,if(dVehiclesBaseDev.price<>'',1,0));
    seq_no_CountNonZero                                          := sum(group,if(dVehiclesBaseDev.seq_no<>0,1,0));
    VEHICLE_NUMBERxBG1_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.VEHICLE_NUMBERxBG1<>'',1,0));
    ORIG_VIN_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.ORIG_VIN<>'',1,0));
    VEHICLE_TRANSACTION_ID_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.VEHICLE_TRANSACTION_ID<>'',1,0));
    FIRST_REGISTRATION_DATE_CountNonBlank                        := sum(group,if(dVehiclesBaseDev.FIRST_REGISTRATION_DATE<>'',1,0));
    YEAR_MAKE_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.YEAR_MAKE<>'',1,0));
    MAKE_CODE_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.MAKE_CODE<>'',1,0));
    VEHICLE_TYPE_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.VEHICLE_TYPE<>'',1,0));
    MODEL_CountNonBlank                                          := sum(group,if(dVehiclesBaseDev.MODEL<>'',1,0));
    BODY_CODE_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.BODY_CODE<>'',1,0));
    VEHICLE_USE_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.VEHICLE_USE<>'',1,0));
    MAJOR_COLOR_CODE_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.MAJOR_COLOR_CODE<>'',1,0));
    MINOR_COLOR_CODE_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.MINOR_COLOR_CODE<>'',1,0));
    TRANSFER_TYPE_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.TRANSFER_TYPE<>'',1,0));
    FUEL_TYPE_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.FUEL_TYPE<>'',1,0));
    UNIT_NUMBERxBG2_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.UNIT_NUMBERxBG2<>'',1,0));
    FLEET_NUMBER_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.FLEET_NUMBER<>'',1,0));
    ODOMETER_STATUS_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.ODOMETER_STATUS<>'',1,0));
    ODOMETER_DATE_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.ODOMETER_DATE<>'',1,0));
    ODOMETER_MILEAGE_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.ODOMETER_MILEAGE<>'',1,0));
    NET_WEIGHT_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.NET_WEIGHT<>'',1,0));
    GROSS_WEIGHT_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.GROSS_WEIGHT<>'',1,0));
    NUMBER_OF_AXLES_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.NUMBER_OF_AXLES<>'',1,0));
    HORSE_POWER_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.HORSE_POWER<>'',1,0));
    CUBIC_CENTIMETERS_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.CUBIC_CENTIMETERS<>'',1,0));
    LENGTH_FEET_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.LENGTH_FEET<>'',1,0));
    WIDTH_FEET_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.WIDTH_FEET<>'',1,0));
    MH_COUNTY_CODE_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.MH_COUNTY_CODE<>'',1,0));
    MH_CITY_CODE_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.MH_CITY_CODE<>'',1,0));
    VESSEL_PROPULSION_TYPE_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.VESSEL_PROPULSION_TYPE<>'',1,0));
    HULL_MATERIAL_TYPE_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.HULL_MATERIAL_TYPE<>'',1,0));
    VESSEL_TYPE_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.VESSEL_TYPE<>'',1,0));
    VESSEL_WATER_TYPE_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.VESSEL_WATER_TYPE<>'',1,0));
    flaghistory_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.flaghistory<>'',1,0));
    FILE_HANDLER_ACTIVITY_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.FILE_HANDLER_ACTIVITY_FLAG<>'',1,0));
    CORRESPONDENCE_LETTER_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.CORRESPONDENCE_LETTER_FLAG<>'',1,0));
    OWNER_1_CUSTOMER_TYPExBG3_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.OWNER_1_CUSTOMER_TYPExBG3<>'',1,0));
    OWN_1_CUSTOMER_NUMBER_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.OWN_1_CUSTOMER_NUMBER<>'',1,0));
    OWN_1_FEID_SSN_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.OWN_1_FEID_SSN<>'',1,0));
    OWN_1_CUSTOMER_NAME_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.OWN_1_CUSTOMER_NAME<>'',1,0));
    OWN_1_DEALER_LICENSE_NUMBER_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.OWN_1_DEALER_LICENSE_NUMBER<>'',1,0));
    OWN_1_DRIVER_LICENSE_NUMBER_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.OWN_1_DRIVER_LICENSE_NUMBER<>'',1,0));
    OWN_1_DOB_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.OWN_1_DOB<>'',1,0));
    OWN_1_SEX_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.OWN_1_SEX<>'',1,0));
    OWN_1_SEXUAL_PREDATOR_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.OWN_1_SEXUAL_PREDATOR_FLAG<>'',1,0));
    OWN_1_MAIL_SUPPESSION_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.OWN_1_MAIL_SUPPESSION_FLAG<>'',1,0));
    OWN_1_ADDR_NON_DISCLOSURE_FLAG_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.OWN_1_ADDR_NON_DISCLOSURE_FLAG<>'',1,0));
    OWN_1_LAW_ENFORCEMENT_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.OWN_1_LAW_ENFORCEMENT_FLAG<>'',1,0));
    OWN_1_ADDRESS_NUMBER_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.OWN_1_ADDRESS_NUMBER<>'',1,0));
    OWN_1_FOREIGN_ADDRESS_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.OWN_1_FOREIGN_ADDRESS_FLAG<>'',1,0));
    OWN_1_STREET_ADDRESS_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.OWN_1_STREET_ADDRESS<>'',1,0));
    OWN_1_APARTMENT_NUMBER_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.OWN_1_APARTMENT_NUMBER<>'',1,0));
    OWN_1_CITY_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.OWN_1_CITY<>'',1,0));
    OWN_1_STATE_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.OWN_1_STATE<>'',1,0));
    OWN_1_ZIP5_ZIP4_FOREIGN_POSTAL_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.OWN_1_ZIP5_ZIP4_FOREIGN_POSTAL<>'',1,0));
    OWN_1_RESIDENCE_COUNTY_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.OWN_1_RESIDENCE_COUNTY<>'',1,0));
    OWNER_2_CUSTOMER_TYPE_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.OWNER_2_CUSTOMER_TYPE<>'',1,0));
    OWN_2_CUSTOMER_NUMBER_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.OWN_2_CUSTOMER_NUMBER<>'',1,0));
    OWN_2_FEID_SSN_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.OWN_2_FEID_SSN<>'',1,0));
    OWN_2_CUSTOMER_NAME_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.OWN_2_CUSTOMER_NAME<>'',1,0));
    OWN_2_DEALER_LICENSE_NUMBER_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.OWN_2_DEALER_LICENSE_NUMBER<>'',1,0));
    OWN_2_DRIVER_LICENSE_NUMBER_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.OWN_2_DRIVER_LICENSE_NUMBER<>'',1,0));
    OWN_2_DOB_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.OWN_2_DOB<>'',1,0));
    OWN_2_SEX_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.OWN_2_SEX<>'',1,0));
    OWN_2_SEXUAL_PREDATOR_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.OWN_2_SEXUAL_PREDATOR_FLAG<>'',1,0));
    OWN_2_MAIL_SUPPESSION_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.OWN_2_MAIL_SUPPESSION_FLAG<>'',1,0));
    OWN_2_ADDR_NON_DISCLOSURE_FLAG_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.OWN_2_ADDR_NON_DISCLOSURE_FLAG<>'',1,0));
    OWN_2_LAW_ENFORCEMENT_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.OWN_2_LAW_ENFORCEMENT_FLAG<>'',1,0));
    OWN_2_ADDRESS_NUMBER_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.OWN_2_ADDRESS_NUMBER<>'',1,0));
    OWN_2_FOREIGN_ADDRESS_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.OWN_2_FOREIGN_ADDRESS_FLAG<>'',1,0));
    OWN_2_STREET_ADDRESS_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.OWN_2_STREET_ADDRESS<>'',1,0));
    OWN_2_APARTMENT_NUMBER_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.OWN_2_APARTMENT_NUMBER<>'',1,0));
    OWN_2_CITY_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.OWN_2_CITY<>'',1,0));
    OWN_2_STATE_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.OWN_2_STATE<>'',1,0));
    OWN_2_ZIP5_ZIP4_FOREIGN_POSTAL_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.OWN_2_ZIP5_ZIP4_FOREIGN_POSTAL<>'',1,0));
    OWN_2_RESIDENCE_COUNTY_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.OWN_2_RESIDENCE_COUNTY<>'',1,0));
    JOINT_OWNERSHIP_CODExAND_OR_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.JOINT_OWNERSHIP_CODExAND_OR<>'',1,0));
    flagvin_CountNonBlank                                        := sum(group,if(dVehiclesBaseDev.flagvin<>'',1,0));
    LICENSE_PLATE_NUMBERxBG4_CountNonBlank                       := sum(group,if(dVehiclesBaseDev.LICENSE_PLATE_NUMBERxBG4<>'',1,0));
    REGISTRATION_NUMBER_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.REGISTRATION_NUMBER<>'',1,0));
    REGISTRATION_TRANSACTION_ID_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.REGISTRATION_TRANSACTION_ID<>'',1,0));
    REGISTRATION_EFFECTIVE_DATE_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.REGISTRATION_EFFECTIVE_DATE<>'',1,0));
    REGISTRATION_EXPIRATION_DATE_CountNonBlank                   := sum(group,if(dVehiclesBaseDev.REGISTRATION_EXPIRATION_DATE<>'',1,0));
    PLATE_ISSUE_DATE_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.PLATE_ISSUE_DATE<>'',1,0));
    VEHICLE_CLASS_CODE_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.VEHICLE_CLASS_CODE<>'',1,0));
    ARF_CREDIT_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.ARF_CREDIT<>'',1,0));
    DECAL_NUMBER_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.DECAL_NUMBER<>'',1,0));
    DECAL_YEAR_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.DECAL_YEAR<>'',1,0));
    DECAL_TYPE_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.DECAL_TYPE<>'',1,0));
    REGISTRATION_STATUS_CODE_CountNonBlank                       := sum(group,if(dVehiclesBaseDev.REGISTRATION_STATUS_CODE<>'',1,0));
    REG_ONLY_REASON_CODE_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.REG_ONLY_REASON_CODE<>'',1,0));
    LICENSE_PLATE_CODE_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.LICENSE_PLATE_CODE<>'',1,0));
    REGISTRATION_USE_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.REGISTRATION_USE<>'',1,0));
    TRUE_LICENSE_PLSTE_NUMBER_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.TRUE_LICENSE_PLSTE_NUMBER<>'',1,0));
    flagmatchcode_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.flagmatchcode<>'',1,0));
    VESSEL_RESIDENT_STATUS_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.VESSEL_RESIDENT_STATUS<>'',1,0));
    REGISTRANT_1_CUSTOMER_TYPExBG5_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.REGISTRANT_1_CUSTOMER_TYPExBG5<>'',1,0));
    REG_1_CUSTOMER_NUMBER_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.REG_1_CUSTOMER_NUMBER<>'',1,0));
    REG_1_FEID_SSN_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.REG_1_FEID_SSN<>'',1,0));
    REG_1_CUSTOMER_NAME_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.REG_1_CUSTOMER_NAME<>'',1,0));
    REG_1_DEALER_LICENSE_NUMBER_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.REG_1_DEALER_LICENSE_NUMBER<>'',1,0));
    REG_1_DRIVER_LICENSE_NUMBER_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.REG_1_DRIVER_LICENSE_NUMBER<>'',1,0));
    REG_1_DOB_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.REG_1_DOB<>'',1,0));
    REG_1_SEX_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.REG_1_SEX<>'',1,0));
    REG_1_SEXUAL_PREDATOR_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REG_1_SEXUAL_PREDATOR_FLAG<>'',1,0));
    REG_1_MAIL_SUPPESSION_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REG_1_MAIL_SUPPESSION_FLAG<>'',1,0));
    REG_1_ADDR_NON_DISCLOSURE_FLAG_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.REG_1_ADDR_NON_DISCLOSURE_FLAG<>'',1,0));
    REG_1_LAW_ENFORCEMENT_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REG_1_LAW_ENFORCEMENT_FLAG<>'',1,0));
    REG_1_ADDRESS_NUMBER_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.REG_1_ADDRESS_NUMBER<>'',1,0));
    REG_1_FOREIGN_ADDRESS_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REG_1_FOREIGN_ADDRESS_FLAG<>'',1,0));
    REG_1_STREET_ADDRESS_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.REG_1_STREET_ADDRESS<>'',1,0));
    REG_1_APARTMENT_NUMBER_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.REG_1_APARTMENT_NUMBER<>'',1,0));
    REG_1_CITY_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.REG_1_CITY<>'',1,0));
    REG_1_STATE_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.REG_1_STATE<>'',1,0));
    REG_1_ZIP5_ZIP4_FOREIGN_POSTAL_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.REG_1_ZIP5_ZIP4_FOREIGN_POSTAL<>'',1,0));
    REG_1_RESIDENCE_COUNTY_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.REG_1_RESIDENCE_COUNTY<>'',1,0));
    REGISTRANT_2_CUSTOMER_TYPE_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REGISTRANT_2_CUSTOMER_TYPE<>'',1,0));
    REG_2_CUSTOMER_NUMBER_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.REG_2_CUSTOMER_NUMBER<>'',1,0));
    REG_2_FEID_SSN_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.REG_2_FEID_SSN<>'',1,0));
    REG_2_CUSTOMER_NAME_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.REG_2_CUSTOMER_NAME<>'',1,0));
    REG_2_DEALER_LICENSE_NUMBER_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.REG_2_DEALER_LICENSE_NUMBER<>'',1,0));
    REG_2_DRIVER_LICENSE_NUMBER_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.REG_2_DRIVER_LICENSE_NUMBER<>'',1,0));
    REG_2_DOB_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.REG_2_DOB<>'',1,0));
    REG_2_SEX_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.REG_2_SEX<>'',1,0));
    REG_2_SEXUAL_PREDATOR_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REG_2_SEXUAL_PREDATOR_FLAG<>'',1,0));
    REG_2_MAIL_SUPPESSION_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REG_2_MAIL_SUPPESSION_FLAG<>'',1,0));
    REG_2_ADDR_NON_DISCLOSURE_FLAG_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.REG_2_ADDR_NON_DISCLOSURE_FLAG<>'',1,0));
    REG_2_LAW_ENFORCEMENT_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REG_2_LAW_ENFORCEMENT_FLAG<>'',1,0));
    REG_2_ADDRESS_NUMBER_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.REG_2_ADDRESS_NUMBER<>'',1,0));
    REG_2_FOREIGN_ADDRESS_FLAG_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.REG_2_FOREIGN_ADDRESS_FLAG<>'',1,0));
    REG_2_STREET_ADDRESS_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.REG_2_STREET_ADDRESS<>'',1,0));
    REG_2_APARTMENT_NUMBER_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.REG_2_APARTMENT_NUMBER<>'',1,0));
    REG_2_CITY_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.REG_2_CITY<>'',1,0));
    REG_2_STATE_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.REG_2_STATE<>'',1,0));
    REG_2_ZIP5_ZIP4_FOREIGN_POSTAL_CountNonBlank                 := sum(group,if(dVehiclesBaseDev.REG_2_ZIP5_ZIP4_FOREIGN_POSTAL<>'',1,0));
    REG_2_RESIDENCE_COUNTY_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.REG_2_RESIDENCE_COUNTY<>'',1,0));
    ACTIVITY_DATExBG6_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.ACTIVITY_DATExBG6<>'',1,0));
    ACTIVITY_COUNTY_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.ACTIVITY_COUNTY<>'',1,0));
    ACTIVITY_AGENCYxEG6_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.ACTIVITY_AGENCYxEG6<>'',1,0));
    INSURANCE_COMPANY_CODExBG7_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.INSURANCE_COMPANY_CODExBG7<>'',1,0));
    INSURANCE_NUMBER_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.INSURANCE_NUMBER<>'',1,0));
    INSURANCE_STATUS_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.INSURANCE_STATUS<>'',1,0));
    INSURANCE_TYPExEG7_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.INSURANCE_TYPExEG7<>'',1,0));
    EMISSIONS_INSPECTION_STATUSxBG8_CountNonBlank                := sum(group,if(dVehiclesBaseDev.EMISSIONS_INSPECTION_STATUSxBG8<>'',1,0));
    EMISSIONS_INSPECTION_DATE_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.EMISSIONS_INSPECTION_DATE<>'',1,0));
    EMISSIONS_INSP_REG_YEAR_CountNonBlank                        := sum(group,if(dVehiclesBaseDev.EMISSIONS_INSP_REG_YEAR<>'',1,0));
    EMISSIONS_INSPECTION_LEVEL_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.EMISSIONS_INSPECTION_LEVEL<>'',1,0));
    EMISSIONS_CERTIFICATE_NUMBERxEG8_CountNonBlank               := sum(group,if(dVehiclesBaseDev.EMISSIONS_CERTIFICATE_NUMBERxEG8<>'',1,0));
    TITLE_NUMBERxBG9_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.TITLE_NUMBERxBG9<>'',1,0));
    TITLE_TRANSACTION_ID_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.TITLE_TRANSACTION_ID<>'',1,0));
    TITLE_ISSUE_DATE_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.TITLE_ISSUE_DATE<>'',1,0));
    PREVIOUS_TITLE_ISSUE_DATE_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.PREVIOUS_TITLE_ISSUE_DATE<>'',1,0));
    TITLE_STATUS_CODE_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.TITLE_STATUS_CODE<>'',1,0));
    TITLE_TYPE_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.TITLE_TYPE<>'',1,0));
    PREVIOUS_TITLE_STATE_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.PREVIOUS_TITLE_STATE<>'',1,0));
    SALVAGE_TYPE_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.SALVAGE_TYPE<>'',1,0));
    DEALER_LICENSE_NUMBER_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.DEALER_LICENSE_NUMBER<>'',1,0));
    TITLE_PENDING_FLAG_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.TITLE_PENDING_FLAG<>'',1,0));
    NAME_TOO_LONG_FLAG_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.NAME_TOO_LONG_FLAG<>'',1,0));
    DUPLICATE_TITLE_FLAG_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.DUPLICATE_TITLE_FLAG<>'',1,0));
    BRAND_CODESx5_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.BRAND_CODESx5<>'',1,0));
    EFS_STATUSxEG9_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.EFS_STATUSxEG9<>'',1,0));
    LIEN_COUNTxBG10_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.LIEN_COUNTxBG10<>'',1,0));
    LH_1_LIEN_DATE_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.LH_1_LIEN_DATE<>'',1,0));
    LEIN_HOLDER_1_CUSTOMER_TYPE_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.LEIN_HOLDER_1_CUSTOMER_TYPE<>'',1,0));
    LH_1_CUSTOMER_NUMBER_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.LH_1_CUSTOMER_NUMBER<>'',1,0));
    LH_1_FEID_SSN_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.LH_1_FEID_SSN<>'',1,0));
    LH_1_CUSTOMER_NAME_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.LH_1_CUSTOMER_NAME<>'',1,0));
    LH_1_DEALER_LICENSE_NUMBER_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.LH_1_DEALER_LICENSE_NUMBER<>'',1,0));
    LH_1_DRIVER_LICENSE_NUMBER_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.LH_1_DRIVER_LICENSE_NUMBER<>'',1,0));
    LH_1_DOB_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.LH_1_DOB<>'',1,0));
    LH_1_SEX_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.LH_1_SEX<>'',1,0));
    LH_1_SEXUAL_PREDATOR_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_1_SEXUAL_PREDATOR_FLAG<>'',1,0));
    LH_1_MAIL_SUPPESSION_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_1_MAIL_SUPPESSION_FLAG<>'',1,0));
    LH_1_ADDR_NON_DISCLOSURE_FLAG_CountNonBlank                  := sum(group,if(dVehiclesBaseDev.LH_1_ADDR_NON_DISCLOSURE_FLAG<>'',1,0));
    LH_1_LAW_ENFORCEMENT_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_1_LAW_ENFORCEMENT_FLAG<>'',1,0));
    LH_1_ADDRESS_NUMBER_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.LH_1_ADDRESS_NUMBER<>'',1,0));
    LH_1_FOREIGN_ADDRESS_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_1_FOREIGN_ADDRESS_FLAG<>'',1,0));
    LH_1_STREET_ADDRESS_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.LH_1_STREET_ADDRESS<>'',1,0));
    LH_1_APARTMENT_NUMBER_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.LH_1_APARTMENT_NUMBER<>'',1,0));
    LH_1_CITY_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.LH_1_CITY<>'',1,0));
    LH_1_STATE_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.LH_1_STATE<>'',1,0));
    LH_1_ZIP5_ZIP4_FOREIGN_POSTAL_CountNonBlank                  := sum(group,if(dVehiclesBaseDev.LH_1_ZIP5_ZIP4_FOREIGN_POSTAL<>'',1,0));
    LH_1_RESIDENCE_COUNTY_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.LH_1_RESIDENCE_COUNTY<>'',1,0));
    LH_2_LEIN_DATE_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.LH_2_LEIN_DATE<>'',1,0));
    LEIN_HOLDER_2_CUSTOMER_TYPE_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.LEIN_HOLDER_2_CUSTOMER_TYPE<>'',1,0));
    LH_2_CUSTOMER_NUMBER_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.LH_2_CUSTOMER_NUMBER<>'',1,0));
    LH_2_FEID_SSN_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.LH_2_FEID_SSN<>'',1,0));
    LH_2_CUSTOMER_NAME_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.LH_2_CUSTOMER_NAME<>'',1,0));
    LH_2_DEALER_LICENSE_NUMBER_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.LH_2_DEALER_LICENSE_NUMBER<>'',1,0));
    LH_2_DRIVER_LICENSE_NUMBER_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.LH_2_DRIVER_LICENSE_NUMBER<>'',1,0));
    LH_2_DOB_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.LH_2_DOB<>'',1,0));
    LH_2_SEX_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.LH_2_SEX<>'',1,0));
    LH_2_SEXUAL_PREDATOR_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_2_SEXUAL_PREDATOR_FLAG<>'',1,0));
    LH_2_MAIL_SUPPESSION_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_2_MAIL_SUPPESSION_FLAG<>'',1,0));
    LH_2_ADDR_NON_DISCLOSURE_FLAG_CountNonBlank                  := sum(group,if(dVehiclesBaseDev.LH_2_ADDR_NON_DISCLOSURE_FLAG<>'',1,0));
    LH_2_LAW_ENFORCEMENT_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_2_LAW_ENFORCEMENT_FLAG<>'',1,0));
    LH_2_ADDRESS_NUMBER_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.LH_2_ADDRESS_NUMBER<>'',1,0));
    LH_2_FOREIGN_ADDRESS_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_2_FOREIGN_ADDRESS_FLAG<>'',1,0));
    LH_2_STREET_ADDRESS_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.LH_2_STREET_ADDRESS<>'',1,0));
    LH_2_APARTMENT_NUMBER_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.LH_2_APARTMENT_NUMBER<>'',1,0));
    LH_2_CITY_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.LH_2_CITY<>'',1,0));
    LH_2_STATE_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.LH_2_STATE<>'',1,0));
    LH_2_ZIP5_ZIP4_FOREIGN_POSTAL_CountNonBlank                  := sum(group,if(dVehiclesBaseDev.LH_2_ZIP5_ZIP4_FOREIGN_POSTAL<>'',1,0));
    LH_2_RESIDENCE_COUNTY_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.LH_2_RESIDENCE_COUNTY<>'',1,0));
    LH_3_LIEN_DATE_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.LH_3_LIEN_DATE<>'',1,0));
    LEIN_HOLDER_3_CUSTOMER_TYPE_CountNonBlank                    := sum(group,if(dVehiclesBaseDev.LEIN_HOLDER_3_CUSTOMER_TYPE<>'',1,0));
    LH_3_CUSTOMER_NUMBER_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.LH_3_CUSTOMER_NUMBER<>'',1,0));
    LH_3_FEID_SSN_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.LH_3_FEID_SSN<>'',1,0));
    LH_3_CUSTOMER_NAME_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.LH_3_CUSTOMER_NAME<>'',1,0));
    LH_3_DEALER_LICENSE_NUMBER_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.LH_3_DEALER_LICENSE_NUMBER<>'',1,0));
    LH_3_DRIVER_LICENSE_NUMBER_CountNonBlank                     := sum(group,if(dVehiclesBaseDev.LH_3_DRIVER_LICENSE_NUMBER<>'',1,0));
    LH_3_DOB_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.LH_3_DOB<>'',1,0));
    LH_3_SEX_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.LH_3_SEX<>'',1,0));
    LH_3_SEXUAL_PREDATOR_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_3_SEXUAL_PREDATOR_FLAG<>'',1,0));
    LH_3_MAIL_SUPPESSION_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_3_MAIL_SUPPESSION_FLAG<>'',1,0));
    LH_3_ADDR_NON_DISCLOSURE_FLAG_CountNonBlank                  := sum(group,if(dVehiclesBaseDev.LH_3_ADDR_NON_DISCLOSURE_FLAG<>'',1,0));
    LH_3_LAW_ENFORCEMENT_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_3_LAW_ENFORCEMENT_FLAG<>'',1,0));
    LH_3_ADDRESS_NUMBER_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.LH_3_ADDRESS_NUMBER<>'',1,0));
    LH_3_FOREIGN_ADDRESS_FLAG_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.LH_3_FOREIGN_ADDRESS_FLAG<>'',1,0));
    LH_3_STREET_ADDRESS_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.LH_3_STREET_ADDRESS<>'',1,0));
    LH_3_APARTMENT_NUMBER_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.LH_3_APARTMENT_NUMBER<>'',1,0));
    LH_3_CITY_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.LH_3_CITY<>'',1,0));
    LH_3_STATE_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.LH_3_STATE<>'',1,0));
    LH_3_ZIP5_ZIP4_FOREIGN_POSTAL_CountNonBlank                  := sum(group,if(dVehiclesBaseDev.LH_3_ZIP5_ZIP4_FOREIGN_POSTAL<>'',1,0));
    LH_3_RESIDENCE_COUNTY_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.LH_3_RESIDENCE_COUNTY<>'',1,0));
    own_1_title_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.own_1_title<>'',1,0));
    own_1_fname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.own_1_fname<>'',1,0));
    own_1_mname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.own_1_mname<>'',1,0));
    own_1_lname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.own_1_lname<>'',1,0));
    own_1_name_suffix_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.own_1_name_suffix<>'',1,0));
    own_1_did_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.own_1_did<>'',1,0));
    own_1_bdid_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.own_1_bdid<>'',1,0));
    own_1_ssn_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.own_1_ssn<>'',1,0));
    own_1_company_name_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.own_1_company_name<>'',1,0));
    own_1_prim_range_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.own_1_prim_range<>'',1,0));
    own_1_predir_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.own_1_predir<>'',1,0));
    own_1_prim_name_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.own_1_prim_name<>'',1,0));
    own_1_suffix_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.own_1_suffix<>'',1,0));
    own_1_postdir_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.own_1_postdir<>'',1,0));
    own_1_unit_desig_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.own_1_unit_desig<>'',1,0));
    own_1_sec_range_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.own_1_sec_range<>'',1,0));
    own_1_p_city_name_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.own_1_p_city_name<>'',1,0));
    own_1_v_city_name_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.own_1_v_city_name<>'',1,0));
    own_1_state_2_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.own_1_state_2<>'',1,0));
    own_1_zip5_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.own_1_zip5<>'',1,0));
    own_1_zip4_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.own_1_zip4<>'',1,0));
    own_1_county_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.own_1_county<>'',1,0));
    own_1_geo_lat_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.own_1_geo_lat<>'',1,0));
    own_1_geo_long_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.own_1_geo_long<>'',1,0));
    own_2_title_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.own_2_title<>'',1,0));
    own_2_fname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.own_2_fname<>'',1,0));
    own_2_mname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.own_2_mname<>'',1,0));
    own_2_lname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.own_2_lname<>'',1,0));
    own_2_name_suffix_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.own_2_name_suffix<>'',1,0));
    own_2_did_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.own_2_did<>'',1,0));
    own_2_bdid_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.own_2_bdid<>'',1,0));
    own_2_ssn_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.own_2_ssn<>'',1,0));
    own_2_company_name_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.own_2_company_name<>'',1,0));
    own_2_prim_range_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.own_2_prim_range<>'',1,0));
    own_2_predir_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.own_2_predir<>'',1,0));
    own_2_prim_name_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.own_2_prim_name<>'',1,0));
    own_2_suffix_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.own_2_suffix<>'',1,0));
    own_2_postdir_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.own_2_postdir<>'',1,0));
    own_2_unit_desig_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.own_2_unit_desig<>'',1,0));
    own_2_sec_range_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.own_2_sec_range<>'',1,0));
    own_2_p_city_name_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.own_2_p_city_name<>'',1,0));
    own_2_v_city_name_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.own_2_v_city_name<>'',1,0));
    own_2_state_2_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.own_2_state_2<>'',1,0));
    own_2_zip5_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.own_2_zip5<>'',1,0));
    own_2_zip4_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.own_2_zip4<>'',1,0));
    own_2_county_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.own_2_county<>'',1,0));
    own_2_geo_lat_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.own_2_geo_lat<>'',1,0));
    own_2_geo_long_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.own_2_geo_long<>'',1,0));
    reg_1_title_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.reg_1_title<>'',1,0));
    reg_1_fname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.reg_1_fname<>'',1,0));
    reg_1_mname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.reg_1_mname<>'',1,0));
    reg_1_lname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.reg_1_lname<>'',1,0));
    reg_1_name_suffix_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.reg_1_name_suffix<>'',1,0));
    reg_1_did_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.reg_1_did<>'',1,0));
    reg_1_bdid_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.reg_1_bdid<>'',1,0));
    reg_1_ssn_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.reg_1_ssn<>'',1,0));
    reg_1_company_name_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.reg_1_company_name<>'',1,0));
    reg_1_prim_range_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.reg_1_prim_range<>'',1,0));
    reg_1_predir_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.reg_1_predir<>'',1,0));
    reg_1_prim_name_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.reg_1_prim_name<>'',1,0));
    reg_1_suffix_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.reg_1_suffix<>'',1,0));
    reg_1_postdir_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.reg_1_postdir<>'',1,0));
    reg_1_unit_desig_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.reg_1_unit_desig<>'',1,0));
    reg_1_sec_range_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.reg_1_sec_range<>'',1,0));
    reg_1_p_city_name_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.reg_1_p_city_name<>'',1,0));
    reg_1_v_city_name_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.reg_1_v_city_name<>'',1,0));
    reg_1_state_2_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.reg_1_state_2<>'',1,0));
    reg_1_zip5_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.reg_1_zip5<>'',1,0));
    reg_1_zip4_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.reg_1_zip4<>'',1,0));
    reg_1_county_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.reg_1_county<>'',1,0));
    reg_1_geo_lat_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.reg_1_geo_lat<>'',1,0));
    reg_1_geo_long_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.reg_1_geo_long<>'',1,0));
    reg_2_title_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.reg_2_title<>'',1,0));
    reg_2_fname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.reg_2_fname<>'',1,0));
    reg_2_mname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.reg_2_mname<>'',1,0));
    reg_2_lname_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.reg_2_lname<>'',1,0));
    reg_2_name_suffix_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.reg_2_name_suffix<>'',1,0));
    reg_2_did_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.reg_2_did<>'',1,0));
    reg_2_bdid_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.reg_2_bdid<>'',1,0));
    reg_2_ssn_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.reg_2_ssn<>'',1,0));
    reg_2_company_name_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.reg_2_company_name<>'',1,0));
    reg_2_prim_range_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.reg_2_prim_range<>'',1,0));
    reg_2_predir_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.reg_2_predir<>'',1,0));
    reg_2_prim_name_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.reg_2_prim_name<>'',1,0));
    reg_2_suffix_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.reg_2_suffix<>'',1,0));
    reg_2_postdir_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.reg_2_postdir<>'',1,0));
    reg_2_unit_desig_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.reg_2_unit_desig<>'',1,0));
    reg_2_sec_range_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.reg_2_sec_range<>'',1,0));
    reg_2_p_city_name_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.reg_2_p_city_name<>'',1,0));
    reg_2_v_city_name_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.reg_2_v_city_name<>'',1,0));
    reg_2_state_2_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.reg_2_state_2<>'',1,0));
    reg_2_zip5_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.reg_2_zip5<>'',1,0));
    reg_2_zip4_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.reg_2_zip4<>'',1,0));
    reg_2_county_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.reg_2_county<>'',1,0));
    reg_2_geo_lat_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.reg_2_geo_lat<>'',1,0));
    reg_2_geo_long_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.reg_2_geo_long<>'',1,0));
    vin_2_CountNonBlank                                          := sum(group,if(dVehiclesBaseDev.vin_2<>'',1,0));
    veh_type_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.veh_type<>'',1,0));
    ncic_make_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.ncic_make<>'',1,0));
    model_year_yy_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.model_year_yy<>'',1,0));
    vin_CountNonBlank                                            := sum(group,if(dVehiclesBaseDev.vin<>'',1,0));
    vin_pattern_indicator_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.vin_pattern_indicator<>'',1,0));
    bypass_code_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.bypass_code<>'',1,0));
    vp_restraint_CountNonBlank                                   := sum(group,if(dVehiclesBaseDev.vp_restraint<>'',1,0));
    vp_abbrev_make_name_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.vp_abbrev_make_name<>'',1,0));
    vp_year_CountNonBlank                                        := sum(group,if(dVehiclesBaseDev.vp_year<>'',1,0));
    vp_series_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.vp_series<>'',1,0));
    vp_model_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.vp_model<>'',1,0));
    vp_air_conditioning_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.vp_air_conditioning<>'',1,0));
    vp_power_steering_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.vp_power_steering<>'',1,0));
    vp_power_brakes_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.vp_power_brakes<>'',1,0));
    vp_power_windows_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.vp_power_windows<>'',1,0));
    vp_tilt_wheel_CountNonBlank                                  := sum(group,if(dVehiclesBaseDev.vp_tilt_wheel<>'',1,0));
    vp_roof_CountNonBlank                                        := sum(group,if(dVehiclesBaseDev.vp_roof<>'',1,0));
    vp_optional_roof1_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.vp_optional_roof1<>'',1,0));
    vp_optional_roof2_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.vp_optional_roof2<>'',1,0));
    vp_radio_CountNonBlank                                       := sum(group,if(dVehiclesBaseDev.vp_radio<>'',1,0));
    vp_optional_radio1_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.vp_optional_radio1<>'',1,0));
    vp_optional_radio2_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.vp_optional_radio2<>'',1,0));
    vp_transmission_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.vp_transmission<>'',1,0));
    vp_optional_transmission1_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.vp_optional_transmission1<>'',1,0));
    vp_optional_transmission2_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.vp_optional_transmission2<>'',1,0));
    vp_anti_lock_brakes_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.vp_anti_lock_brakes<>'',1,0));
    vp_front_wheel_drive_CountNonBlank                           := sum(group,if(dVehiclesBaseDev.vp_front_wheel_drive<>'',1,0));
    vp_four_wheel_drive_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.vp_four_wheel_drive<>'',1,0));
    vp_security_system_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.vp_security_system<>'',1,0));
    vp_daytime_running_lights_CountNonBlank                      := sum(group,if(dVehiclesBaseDev.vp_daytime_running_lights<>'',1,0));
    vp_series_name_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.vp_series_name<>'',1,0));
    model_year_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.model_year<>'',1,0));
    vina_series_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.vina_series<>'',1,0));
    vina_model_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.vina_model<>'',1,0));
    vina_body_style_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.vina_body_style<>'',1,0));
    make_description_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.make_description<>'',1,0));
    model_description_CountNonBlank                              := sum(group,if(dVehiclesBaseDev.model_description<>'',1,0));
    series_description_CountNonBlank                             := sum(group,if(dVehiclesBaseDev.series_description<>'',1,0));
    body_style_description_CountNonBlank                         := sum(group,if(dVehiclesBaseDev.body_style_description<>'',1,0));
    number_of_cylinders_CountNonBlank                            := sum(group,if(dVehiclesBaseDev.number_of_cylinders<>'',1,0));
    engine_size_CountNonBlank                                    := sum(group,if(dVehiclesBaseDev.engine_size<>'',1,0));
    fuel_code_CountNonBlank                                      := sum(group,if(dVehiclesBaseDev.fuel_code<>'',1,0));
    vina_price_CountNonBlank                                     := sum(group,if(dVehiclesBaseDev.vina_price<>'',1,0));
    history_CountNonBlank                                        := sum(group,if(dVehiclesBaseDev.history<>'',1,0));
    Best_Make_Code_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.Best_Make_Code<>'',1,0));
    Best_Series_Code_CountNonBlank                               := sum(group,if(dVehiclesBaseDev.Best_Series_Code<>'',1,0));
    Best_Model_Code_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.Best_Model_Code<>'',1,0));
    Best_Body_Code_CountNonBlank                                 := sum(group,if(dVehiclesBaseDev.Best_Body_Code<>'',1,0));
    Best_Model_Year_CountNonBlank                                := sum(group,if(dVehiclesBaseDev.Best_Model_Year<>'',1,0));
    Best_Major_Color_Code_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.Best_Major_Color_Code<>'',1,0));
    Best_Minor_Color_Code_CountNonBlank                          := sum(group,if(dVehiclesBaseDev.Best_Minor_Color_Code<>'',1,0));
  end;

tStats := table(dVehiclesBaseDev,rPopulationStats_dVehiclesBaseDev,orig_state,source_code,few);

STRATA.createXMLStats(tStats,'Vehicles','Data',vehlic.Version_Development,'jtrost@seisint.com',zPopulation_Stats,'View','Population')
STRATA.createAsHeaderStats(vehlic.Vehicles_as_header(dVehiclesBaseDev),'Vehicles','Data',vehlic.Version_Development,'',zAs_Header_Stats)
STRATA.CreateAsBusinessHeaderStats(vehlic.fVehicle_as_Business_Header(dVehiclesBaseDev),'Vehicles','Data',vehlic.Version_Development,'',zRunAsBusinessHeaderStats)

export Out_Base_Dev_Stats := parallel(zPopulation_Stats
									  ,zAs_Header_Stats
									  ,zRunAsBusinessHeaderStats
									  );