IMPORT corp2_raw_ct, corp2;

EXPORT Functions := Module

  
	EXPORT FixStreet(string s1, string s2, string s3) := FUNCTION
	
	// Street address info comes from the vendor in 3 parts.  Sometimes one of the parts contains 
	// only C/O (Care Of) or ATTN: (Attention) information.  When it does, we want to strip out the
	// C/O and/or ATTN: parts from the address because in many cases leaving it in makes the street
	// address over the 70-char common layout field length and the true street address part gets truncated.
		
			a1 := if (corp2.t2u(s1)[1..3] = 'C/O' or corp2.t2u(s1)[1..5] = 'ATTN:' ,'',corp2.t2u(s1));
			a2 := if (corp2.t2u(s2)[1..3] = 'C/O'or corp2.t2u(s1)[1..5] = 'ATTN:' ,'',corp2.t2u(s2));		
			a3 := if (corp2.t2u(s3)[1..3] = 'C/O'or corp2.t2u(s1)[1..5] = 'ATTN:' ,'',corp2.t2u(s3));
			
			addr := corp2.t2u(a1 + ' ' + a2 + ' ' + a3);
							
			RETURN  if (addr = 'ADD' ,'' ,addr);
    END;

	EXPORT Decode_Country(string code)
	   := map(corp2.t2u(code) in ['AL','AK','AS','AZ','AR','CA','CO','CT','DE','DEL','DC','FM','FL','FLA',
															  'GA','GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA',
																'MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','MI','MN','ND','MP',
																'OH','OK','OR','PW','PA','PR','P R','PRI','RI','SC','SD','TN','TX','UT',
																'US VI','VT','VI','V I','VIR','VA','WA','WV','WI','WY','AE','AP','AA','CZ',
																'USA','US','UNITED STATES','U.S.','U.S.A.','U.S.A'] => 'US',
						corp2.t2u(code) in ['AFG']     															=> 'AFGHANISTAN',
						corp2.t2u(code) in ['ARG']                                  => 'ARGENTINA',
						corp2.t2u(code) in ['NSW AU','VIC AU','AUS','AUST','AUSTRA']=> 'AUSTRALIA',
						corp2.t2u(code) in ['BAHAMA','BHS'] 												=> 'BAHAMAS',
						corp2.t2u(code) in ['BRB'] 																	=> 'BARBADOS',
						corp2.t2u(code) in ['BEL'] 																	=> 'BELGIUM',
						corp2.t2u(code) in ['BLZ']																	=> 'BELIZE',
						corp2.t2u(code) in ['BERM','BERMU','BERMUD','BMU','BRMUDA'] => 'BERMUDA',
						corp2.t2u(code) in ['BRA','BRAZIL']												 	=> 'BRAZIL',
						corp2.t2u(code) in ['IOT'] 																	=> 'BRITISH INDIAN OCEAN TERRITORY',
						corp2.t2u(code) in ['BVI','VGB']														=> 'BRITISH VIRGIN ISLANDS',
						corp2.t2u(code) in ['CAN','CANADA','QUEBEC','ONT','ONTARI']	=> 'CANADA',
						corp2.t2u(code) in ['CAY IS','CAYMAN','CYM','CYMISL']				=> 'CAYMAN ISLANDS',
						corp2.t2u(code) in ['CHN'] 																	=> 'CHINA',
						corp2.t2u(code) in ['COL'] 																	=> 'COLOMBIA',
						corp2.t2u(code) in ['COK'] 																	=> 'COOK ISLANDS',
						corp2.t2u(code) in ['CRI'] 																	=> 'COSTA RICA',
						corp2.t2u(code) in ['DENMAR','DNK']													=> 'DENMARK',
						corp2.t2u(code) in ['EGY'] 																	=> 'EGYPT',
						corp2.t2u(code) in ['ENG','ENGLAN','ENGLND'] 								=> 'ENGLAND',
						corp2.t2u(code) in ['FINLAND','FINLND'] 										=> 'FINLAND',
						corp2.t2u(code) in ['FR','FRA','FRANCE'] 										=> 'FRANCE',
						corp2.t2u(code) in ['DEU','GERMAN','W GERM'] 								=> 'GERMANY',
						corp2.t2u(code) in ['GHA'] 																	=> 'GHANA',
						corp2.t2u(code) in ['GREECE'] 															=> 'GREECE',
						corp2.t2u(code) in ['HTI'] 																	=> 'HAITI',
						corp2.t2u(code) in ['HONG K'] 															=> 'HONG KONG',
						corp2.t2u(code) in ['HUN'] 																	=> 'HUNGARY',
						corp2.t2u(code) in ['ISL'] 																	=> 'ICELAND',
						corp2.t2u(code) in ['IND','INDI','INDIA'] 									=> 'INDIA',
						corp2.t2u(code) in ['IDN'] 																	=> 'INDONESIA',
						corp2.t2u(code) in ['IRELAN','IRL'] 												=> 'IRELAND',
						corp2.t2u(code) in ['ISR','ISRAEL'] 												=> 'ISRAEL',
						corp2.t2u(code) in ['ITA','ITALY'] 													=> 'ITALY',
						corp2.t2u(code) in ['JA','JAPAN','JPN'] 										=> 'JAPAN',
						corp2.t2u(code) in ['KA','KAZAK'] 													=> 'KAZAKHSTAN',
						corp2.t2u(code) in ['KEN','KENYA','KNA'] 										=> 'KENYA',
						corp2.t2u(code) in ['KOR','KOREA'] 													=> 'KOREA',
						corp2.t2u(code) in ['LBR','LIBERI'] 												=> 'LIBERIA',
						corp2.t2u(code) in ['LUX'] 																	=> 'LUXEMBOURG',
						corp2.t2u(code) in ['MV'] 																	=> 'MALDIVES',
						corp2.t2u(code) in ['MLI'] 																	=> 'MALI',
						corp2.t2u(code) in ['MHL'] 																	=> 'MARSHALL ISLANDS',
						corp2.t2u(code) in ['MUS']                                  => 'MAURITIUS',
						corp2.t2u(code) in ['MEX','MEXICO'] 												=> 'MEXICO',
						corp2.t2u(code) in ['NETH','NETHER','NLD','NTHLDS','NTHRLD','NTHRLN'] => 'NETHERLANDS',
						corp2.t2u(code) in ['N A','NA','NE ANT','NET AN'] 					=> 'NETHERLANDS ANTILLES',
						corp2.t2u(code) in ['NEVIS'] 																=> 'NEVIS',
						corp2.t2u(code) in ['NGA'] 																	=> 'NIGERIA',
						corp2.t2u(code) in ['NOR','NORWAY'] 												=> 'NORWAY',
						corp2.t2u(code) in ['NOVA S'] 															=> 'NOVA SCOTIA',
						corp2.t2u(code) in ['PAN','PANAMA'] 												=> 'PANAMA',
						corp2.t2u(code) in ['PY'] 																	=> 'PARAGUAY',
						corp2.t2u(code) in ['PER','PERU'] 													=> 'PERU',
						corp2.t2u(code) in ['PHL'] 																	=> 'PHILIPPINES',
						corp2.t2u(code) in ['PN'] 																	=> 'PITCAIRN',
						corp2.t2u(code) in ['PRT'] 																	=> 'PORTUGAL',
						corp2.t2u(code) in ['LCA'] 																	=> 'SAINT LUCIA',
						corp2.t2u(code) in ['MF'] 																	=> 'SAINT MARTIN FRENCH PART',
						corp2.t2u(code) in ['VCT'] 																	=> 'SAINT VINCENT AND THE GRENADINES',
						corp2.t2u(code) in ['SGP','SING'] 													=> 'SINGAPORE',
						corp2.t2u(code) in ['SVK'] 																	=> 'SLOVAKIA',
						corp2.t2u(code) in ['S AFR'] 																=> 'SOUTH AFRICA',
						corp2.t2u(code) in ['ESP'] 																	=> 'SPAIN',
						corp2.t2u(code) in ['SWE','SWEDEN'] 												=> 'SWEDEN',
						corp2.t2u(code) in ['CHE','SWITZ','SWITZE','SWITZL','SWTZLD'] => 'SWITZERLAND',
						corp2.t2u(code) in ['TWN'] 																	=> 'TAIWAN',
						corp2.t2u(code) in ['TUR','TURKEY'] 												=> 'TURKEY',
						corp2.t2u(code) in ['TCA','TURKS'] 													=> 'TURKS AND CAICOS ISLANDS',
						corp2.t2u(code) in ['ARE'] 																	=> 'UNITED ARAB EMIRATES',
						corp2.t2u(code) in ['GBR','U K','UK'] 											=> 'UNITED KINGDOM',
						corp2.t2u(code) in ['TZA'] 																	=> 'UNITED REPUBLIC OF TANZANIA',
						corp2.t2u(code) in ['URY'] 																	=> 'URUGUAY',
						corp2.t2u(code) in ['VEN'] 																	=> 'VENEZUELA',
						corp2.t2u(code) in ['VNM'] 																	=> 'VIET NAM',
						corp2.t2u(code) in ['ZWE'] 																	=> 'ZIMBABWE',
						corp2.t2u(code) in ['N/A','REPUBL','XX','XXX','XXXX',''] 		=> '',
						'**|'+ corp2.t2u(code));
		
	 EXPORT	GetStatusDesc(string code)
				:= case(corp2.t2u(code),
				'AC' 	=> 'ACTIVE',
				'CN' 	=> 'CANCELLED',
				'CS' 	=> 'CONSOLIDATION',
				'CO'  => 'CONVERTED OUT',
				'CV' 	=> 'CONVERTED',
				'D' 	=> 'DISSOLVED',
				'ER' 	=> 'EXPIRED RESERVATION',
				'EX'  => 'EXPIRED',
				'FF'  => 'FORFEITED',
				'M' 	=> 'MERGED',
				'PC'  => 'ACTIVE',
				'PE'  => '',  // Per Lucinda
				'PM'  => 'PENDING MERGER/MERGED',
				'PR'  => 'PENDING REDOMESTICATION',
				'RC' 	=> 'RESERVED CANCELLED',
				'RD' 	=> 'REDOMESTICATED',
				'RE'  => 'RECORDED',
				'RG' 	=> 'REGISTERED',
				'RN' 	=> 'RENUNCIATED',
				'RS' 	=> 'RESERVED',
				'RV' 	=> 'REVOKED',
				'WD' 	=> 'WITHDRAWN',
				'');	
				
		EXPORT	GetOrgStrucDesc(string code)
				:= case(corp2.t2u(code),
				'B' => 'BENEFIT CORPORATION',
				'C' => 'CORP',
				'D' => 'DOMESTIC LIMITED PARTNERSHIP',
				'F' => 'FOREIGN LIMITED PARTNERSHIP',
				'G' => 'DOMESTIC LIMITED COMPANY',
				'H' => 'FOREIGN LIMITED COMPANY',
				'I' => 'DOMESTIC LIMITED LIABILITY PARTNERSHIP',
				'J' => 'FOREIGN LIMITED LIABILITY PARTNERSHIP',
				'K' => 'GENERAL PARTNERSHIP',
				'L' => 'DOMESTIC STATUTORY TRUST',
				'M' => 'FOREIGN STATUTORY TRUST',
				'O' => 'OTHER BUSINESS',
				'');		
				
	  EXPORT GetStateDesc(string code)
		     := case(corp2.t2u(code),	      
							'AK'   =>  'ALASKA',
							'AL'   =>  'ALABAMA',
							'AR'   =>  'ARKANSAS',
							'AZ'   =>  'ARIZONA',
							'CA'   =>  'CALIFORNIA',
							'CO'   =>  'COLORADO',
							'CT'   =>  'CONNECTICUT',
						  'DC'   =>  'DISTRICT OF COLUMBIA',
							'DE'   =>  'DELAWARE',
							'DEL'  =>  'DELAWARE',
							'FL'   =>  'FLORIDA',
							'FLA'  =>  'FLORIDA',
							'GA'   =>  'GEORGIA',
							'HI'   =>  'HAWAII',
							'IA'   =>  'IOWA',
							'ID'   =>  'IDAHO',
							'IL'   =>  'ILLINOIS',
							'IN'   =>  'INDIANA',
							'KS'   =>  'KANSAS',
							'KY'   =>  'KENTUCKY',
							'LA'   =>  'LOUISIANA',
							'MA'   =>  'MASSACHUSETTS',
							'MD'   =>  'MARYLAND',
							'ME'   =>  'MAINE',
							'MI'   =>  'MICHIGAN',
							'MN'   =>  'MINNESOTA',
							'MO'   =>  'MISSOURI',
							'MS'   =>  'MISSISSIPPI',
							'MT'   =>  'MONTANA',
							'NC'   =>  'NORTH CAROLINA',
							'ND'   =>  'NORTH DAKOTA',
							'NE'   =>  'NEBRASKA',
							'NH'   =>  'NEW HAMPSHIRE',
							'NJ'   =>  'NEW JERSEY',
							'NM'   =>  'NEW MEXICO',
							'NV'   =>  'NEVADA',
							'NY'   =>  'NEW YORK',
							'OH'   =>  'OHIO',
							'OK'   =>  'OKLAHOMA',
							'OR'   =>  'OREGON',
							'PA'   =>  'PENNSYLVANIA',
							'RI'   =>  'RHODE ISLAND',
							'SC'   =>  'SOUTH CAROLINA',
							'SD'   =>  'SOUTH DAKOTA',
							'TN'   =>  'TENNESSEE',
							'TX'   =>  'TEXAS',
							'UT'   =>  'UTAH',
							'VA'   =>  'VIRGINIA',
							'VT'   =>  'VERMONT',
							'WA'   =>  'WASHINGTON',
							'WI'   =>  'WISCONSIN',
							'WV'   =>  'WEST VIRGINIA',
							'WY'   =>  'WYOMING',
							'ARE'  =>  'UNITED ARAB EMIRATES',
							'ARG'  =>  'ARGENTINA',
							'AUS'  =>  'AUSTRALIA',
							'BAH'  =>  'BAHAMAS',
							'BHS'  =>  'BAHAMAS',
							'BRB'  =>  'BARBADOS',
							'BEL'  =>  'BELGIUM',
							'BLZ'  =>  'BELIZE',
							'BER'  =>  'BERMUDA',
							'BMU'  =>  'BERMUDA',
							'BRM'  =>  'BERMUDA',
							'BRA'  =>  'BRAZIL',
							'IOT'  =>  'BRITISH INDIAN OCEAN TERRITORY',
							'BVI'  =>  'BRITISH VIRGIN ISLANDS',
							'VGB'  =>  'BRITISH VIRGIN ISLANDS',
							'CAN'  =>  'CANADA',
							'CAY'  =>  'CAYMAN ISLANDS',
							'CYM'  =>  'CAYMAN ISLANDS',
							'CHN'  =>  'CHINA',
							'COL'  =>  'COLUMBIA',
							'COK'  =>  'COOK ISLANDS',
							'CRI'  =>  'COSTA RICA',
							'DEN'  =>  'DENMARK',
							'DNK'  =>  'DENMARK',
							'EGY'  =>  'EGYPT',
							'ENG'  =>  'ENGLAND',
							'FIN'  =>  'FINLAND',
							'FR'   =>  'FRANCE',
							'FRA'  =>  'FRANCE',
							'DEU'  =>  'GERMANY',
							'GER'  =>  'GERMANY',
							'GHA'  =>  'GHANA',
							'GBR'  =>  'GREAT BRITAIN',
							'GRE'  =>  'GREECE',
							'HTI'  =>  'HAITI',
							'HON'  =>  'HONDURAS',
							'HUN'  =>  'HUNGARY',
							'ISL'  =>  'ICELAND',
							'IND'  =>  'INDIA',
							'IDN'  =>  'INDONESIA',
							'IRE'  =>  'IRELAND',
							'IRL'  =>  'IRELAND',
							'ISR'  =>  'ISRAEL',
							'ITA'  =>  'ITALY',
							'JA'   =>  'JAPAN',
							'JAP'  =>  'JAPAN',
							'JPN'  =>  'JAPAN',
							'KAZ'  =>  'KAZAKHSTAN',
							'KEN'  =>  'KENYA',
							'KOR'  =>  'KOREA',
							'LBR'  =>  'LIBERIA',
							'LIB'  =>  'LIBYA',
							'LUX'  =>  'LUXEMBOURG',
							'MV'   =>  'MALDIVES',
							'MLI'  =>  'MALI',
							'MH'   =>  'MARSHALL ISLANDS',
							'MHL'  =>  'MARSHALL ISLANDS',
							'MUS'  =>  'MAURITIUS',
							'MEX'  =>  'MEXICO',
							'NA'   =>  'NAMIBIA',
							'NET'  =>  'NETHERLANDS',
							'NLD'  =>  'NETHERLANDS',
							'NTH'  =>  'NETHERLANDS',
							'NEV'  =>  'NEVADA',
							'NGA'  =>  'NIGERIA',
							'NOR'  =>  'NORWAY',
							'ONT'  =>  'ONTARIO',
							'PAN'  =>  'PANAMA',
							'PY'   =>  'PARAGUAY',
							'PER'  =>  'PERU',
							'PHL'  =>  'PHILIPPINES',
							'PN'   =>  'PITCAIRN',
							'PRT'  =>  'PORTUGAL',
							'P R'  =>  'PUERTO RICO',
							'PR'   =>  'PUERTO RICO',
							'PRI'  =>  'PUERTO RICO',
							'QUE'  =>  'QUEBEC',
							'KNA'  =>  'SAINT KITTS AND NEVIS',
							'LCA'  =>  'SAINT LUCIA',
							'MF'   =>  'SAINT MARTIN FRENCH PART',
							'VCT'  =>  'SAINT VINCENT AND THE GRENADINES',
							'SGP'  =>  'SINGAPORE',
							'SIN'  =>  'SINGAPORE',
							'SVK'  =>  'SLOVAKIA',
							'ESP'  =>  'SPAIN',
							'SWE'  =>  'SWEDEN',
							'CHE'  =>  'SWITZERLAND',
							'SWI'  =>  'SWITZERLAND',
							'TWN'  =>  'TAIWAN',
							'TZA'  =>  'TANZANIA',
							'TUR'  =>  'TURKEY',
							'TCA'  =>  'TURKS AND CAICOS ISLANDS',
							'U K'  =>  'UNITED KINGDOM',
							'UK'   =>  'UNITED KINGDOM',
							'URY'  =>  'URUGUAY',
							'VEN'  =>  'VENEZUELA',
							'VNM'  =>  'VIETNAM',
							'V I'  =>  'VIRGIN ISLANDS',
							'VI'   =>  'VIRGIN ISLANDS',
							'VIR'  =>  'VIRGIN ISLANDS',
							'ZWE'  =>  'ZIMBABWE',
							'US'   =>  'US',
							'USA'  =>  'US',
							'XXX'  =>  '', // per Lucinda
							'XX'   =>  '', // per Lucinda
							'N/A'  =>  '', // per Lucinda
							'N A'  =>  '', // per Lucinda
							'NOV'  =>  '', // per Lucinda
							'KA'   =>  '', // per Lucinda
							'NSW'  =>  '', // per Lucinda
							'REP'  =>  '', // per Lucinda
							'S A'  =>  '', // per Lucinda
							'SWT'  =>  '', // per Lucinda
							'VIC'  =>  '', // per Lucinda
							'W G'  =>  '', // per Lucinda
							''     =>  '',
							'**|' + corp2.t2u(code));
		
END; 
      

         
                            

