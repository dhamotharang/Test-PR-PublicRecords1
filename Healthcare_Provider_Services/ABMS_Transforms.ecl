Import iesp, ABMS;
EXPORT ABMS_Transforms := MODULE
	Shared myFn := Healthcare_Provider_Services.ABMS_Functions;

	export Healthcare_Provider_Services.ABMS_Layouts.autokeyInput convertIESPtoAKInput(iesp.abms.t_ABMSSearchBy inRec, boolean includeCareer=false,boolean includeEducation=false,boolean includeProfessionalAssociations=false, unsigned1 glb=8, unsigned1 dppa=0):= TRANSFORM
			//Handle unparsed input address
			clnAddr := myFn.processAddressInput(inRec.Address);
			//Handle unparsed Name
			clnName := myFn.processNameInput(inRec.Name);
			self.acctno := if(inRec.AccountNumber <>'',inRec.AccountNumber,'1');
			self.comp_name := stringlib.StringToUpperCase(inRec.CompanyName);
			self.name_first := stringlib.StringToUpperCase(clnName.FirstName);
			self.name_middle := stringlib.StringToUpperCase(clnName.MiddleName);
			self.name_last := stringlib.StringToUpperCase(clnName.LastName);
			self.name_suffix := stringlib.StringToUpperCase(clnName.Suffix);
			self.prim_range := stringlib.StringToUpperCase(clnAddr.prim_range);
			self.predir := stringlib.StringToUpperCase(clnAddr.predir);
			self.prim_name := stringlib.StringToUpperCase(clnAddr.prim_name);
			self.addr_suffix := stringlib.StringToUpperCase(clnAddr.addr_suffix);
			self.postdir := stringlib.StringToUpperCase(clnAddr.postdir);
			self.unit_desig := stringlib.StringToUpperCase(clnAddr.unit_desig);
			self.sec_range := stringlib.StringToUpperCase(clnAddr.sec_range);
			self.p_city_name := stringlib.StringToUpperCase(clnAddr.p_city_name);
			self.st := stringlib.StringToUpperCase(clnAddr.st);
			self.z5 := stringlib.StringToUpperCase(clnAddr.z5);
			self.dob := iesp.ECL2ESP.DateToString(inRec.DOB);
			self.DID	:= (integer)inRec.UniqueId;
			self.BDID	:= (integer)inRec.BusinessId;
			self.NPI := stringlib.StringToUpperCase(inRec.NPINumber);	
			self.Specialty := stringlib.StringToUpperCase(inRec.Specialty);
			self.ProviderID := (integer)inRec.ABMSBiogID;	
			self.ProviderSrc := Healthcare_Provider_Services.Constants.SRC_ABMS;	
			self.includeCareer := includeCareer;
			self.includeEducation := includeEducation;
			self.includeProfessionalAssociations := includeProfessionalAssociations;
	end;
	export iesp.abms.t_ABMSAddressInfo buildAddress(recordof(ABMS.Keys().Main.BIOGNumber.qa) inRec):= TRANSFORM
			boolean suppressAddress := inRec.address_suppress_ind = 'Y';
			self.Address := if(not suppressAddress,iesp.ECL2ESP.SetAddress(inRec.clean_company_address.prim_name, inRec.clean_company_address.prim_range,
																							inRec.clean_company_address.predir, inRec.clean_company_address.postdir,
																							inRec.clean_company_address.addr_suffix, inRec.clean_company_address.unit_desig,
																							inRec.clean_company_address.sec_range, inRec.clean_company_address.p_city_name,
																							inRec.clean_company_address.st, inRec.clean_company_address.zip,
																							inRec.clean_company_address.zip4, '','','','',''));


			self.AddressSeqID := (string)inRec.Address_ID;
			self.AddressType := inRec.Address_Type;
			self.AddressTypeDesc := inRec.Address_type_desc;
			self.DateFirstSeen := iesp.ECL2ESP.toDate(inRec.dt_vendor_first_reported);
			self.DateLastSeen := iesp.ECL2ESP.toDate(inRec.dt_vendor_last_reported);
	end;
	export iesp.abms.t_ABMSContactInfo buildContacts(recordof(ABMS.Keys().Main.BIOGNumber.qa) inRec):= TRANSFORM
			self.ContactType := inRec.Contact_Type; 
			self.ContactDescription := inRec.Description; 
			self.PhoneNumber := inRec.Phone_Number;
			self.Website := inRec.website;
			self.DateFirstSeen := iesp.ECL2ESP.toDate(inRec.dt_vendor_first_reported);
			self.DateLastSeen := iesp.ECL2ESP.toDate(inRec.dt_vendor_last_reported);
	end;
	export ABMS_Layouts.LayoutOutput buildBase(ABMS_Layouts.searchKeyResults inCriteria, recordof(ABMS.Keys().Main.BIOGNumber.qa) inRec, integer PenaltThreshold):= TRANSFORM
			boolean suppressDOB := inRec.birth_date_suppress_ind = 'Y';
			boolean suppressDOBLoc := inRec.birth_location_suppress_ind = 'Y';
			boolean isNPIDerivedMatched := inCriteria.NPI<>'' and inRec.npi = inCriteria.NPI and inCriteria.DerivedNPI = true;
			boolean isNPIMatched := inCriteria.NPI<>'' and inRec.npi = inCriteria.NPI and inCriteria.DerivedNPI = false;
			self.DataIndicator :=  inRec.record_type;
			self.isInputNPIMatched := isNPIMatched;
      self.global_sid:=inrec.global_sid;
      self.did :=inCriteria.did;
			self.isDerivedNPIMatched := isNPIDerivedMatched;
			self.DerivedNPI := '';//Not currently Used
			self.isAddressSuppressed := inRec.address_suppress_ind = 'Y';
			self.isAutoKeyResults := inCriteria.isAutokeysResult;
			penaltyVal:= myFn.doPenalty(inRec,inCriteria);
			self._Penalty :=  if(penaltyVal<=PenaltThreshold or isNPIMatched,penaltyVal,skip);
			self.AccountNumber :=  inCriteria.acctno;
			self.ABMSBiogID:= inRec.biog_number;
			self.Name := iesp.ECL2ESP.SetName(inRec.clean_name.fname, inRec.clean_name.mname, inRec.clean_name.lname, inRec.clean_name.name_suffix, inRec.clean_name.title,'');
			self.Addresses := dataset([project(inRec,buildAddress(left))],iesp.abms.t_ABMSAddressInfo);
			self.Contacts := dataset([project(inRec,buildContacts(left))],iesp.abms.t_ABMSContactInfo);
			self.Organization := inRec.Org_Name;
			self.Gender := inRec.Gender;
			self.BoardCertified := inRec.board_certified;
			self.NPINumber := inRec.npi;
			self.isDeceased := if(inRec.dead_ind='Y',true,false);
			self.DOD := if(inRec.dod<>'',iesp.ECL2ESP.toDatestring8(inRec.dod));
			self.DOB := if(inRec.dob<>'' and not suppressDOB,iesp.ECL2ESP.toDatestring8(inRec.dob));
			self.DOBCity := if(suppressDOBLoc,'',inRec.birth_city); 
			self.DOBState := if(suppressDOBLoc,'',inRec.birth_state); 
			self.DOBNation := if(suppressDOBLoc,'',inRec.birth_nation); 
			self.MOCParticipation := inRec.participation; 
			self.DateFirstSeen := iesp.ECL2ESP.toDate(inRec.dt_vendor_first_reported);
			self.DateLastSeen := iesp.ECL2ESP.toDate(inRec.dt_vendor_last_reported);
			self.UniqueIds := dataset([{if(inRec.did>0,(string)inRec.did,'')}],iesp.share.t_StringArrayItem);
			self.BusinessIds := dataset([{if(inRec.bdid>0,(string)inRec.bdid,'')}],iesp.share.t_StringArrayItem);
			self.RecordSources := dataset([{inRec.Board_Source}],iesp.share.t_StringArrayItem);
			self.TypeOfPractices := dataset([],iesp.abms.t_ABMSTypeOfPractice); //Will be filled in later via Join
			self.Certifications := dataset([],iesp.abms.t_ABMSCertificate); //Will be filled in later via Join
			self.CareerHistory := dataset([],iesp.abms.t_ABMSCareer); //Will be filled in later via Join
			self.EducationHistory := dataset([],iesp.abms.t_ABMSEducation); //Will be filled in later via Join
			self.ProfessionalAssociations := dataset([],iesp.abms.t_ABMSProfessionalAssociation); //Will be filled in later via Join
			self.Board_Name := inRec.Board_Name;	
			self.MOC_Cert_Name := inRec.MOC_Cert_Name;	
			self.Specialty :=inCriteria.Specialty;
			self := [];
	end;
	export ABMS_Layouts.LayoutOutput doABMSBiogIDRollup(ABMS_Layouts.LayoutOutput inRec, dataset(ABMS_Layouts.LayoutOutput) allrows):= TRANSFORM
			self.DataIndicator :=  inRec.DataIndicator;//Work to do here if we add another source.
			self.isInputNPIMatched := if(exists(allrows(isInputNPIMatched=true)),true,false);
			self.isDerivedNPIMatched := if(exists(allrows(isDerivedNPIMatched=true)),true,false);
			self.DerivedNPI := allrows(DerivedNPI<>'' and hasoptout=false)[1].DerivedNPI;
			self.isAddressSuppressed := if(exists(allrows(isAddressSuppressed=true)),true,false);
			self.isAutoKeyResults := if(exists(allrows(isAutoKeyResults=true)),true,false);	
			self._Penalty := min(allrows,_Penalty);
			self.AccountNumber :=  inRec.AccountNumber;
			self.ABMSBiogID:= inRec.ABMSBiogID;
			self.Name := allrows(hasoptout=false)[1].name;
			self.Addresses := choosen(SORT(DEDUP(NORMALIZE(allRows(hasoptout=false), LEFT.Addresses, TRANSFORM(iesp.abms.t_ABMSAddressInfo, SELF := RIGHT)), RECORD, ALL, HASH ), -DateLastSeen)(Address.StreetName<>''),iesp.Constants.HPR.Max_ABMS_ADDRESSES);
			self.Contacts := choosen(SORT(DEDUP(NORMALIZE(allRows(hasoptout=false), LEFT.Contacts, TRANSFORM(iesp.abms.t_ABMSContactInfo, SELF := RIGHT)), RECORD, ALL, HASH ), -DateLastSeen)(ContactType<>''),iesp.Constants.HPR.Max_ABMS_Contacts);
			self.Organization := allrows(Organization<>'' and hasoptout=false)[1].Organization;
			self.Gender := allrows(Gender<>'' and hasoptout=false)[1].Gender;
			self.BoardCertified := if(exists(allrows(BoardCertified='Y' and hasoptout=false)),'Y','N');
			self.NPINumber :=  allrows(NPINumber<>''and hasoptout=false)[1].NPINumber;
			self.isDeceased := if(exists(allrows(isDeceased=true and hasoptout=false)),true,false);
			self.DOD := if(exists(allrows(dod.Year>0 and hasoptout=false)),allrows(dod.Year>0)[1].dod);
			self.DOB := if(exists(allrows(dob.Year>0 and hasoptout=false)),allrows(dob.Year>0)[1].dob);
			self.DOBCity := if(exists(allrows(DOBCity<>'' and hasoptout=false)),allrows(DOBCity<>'')[1].DOBCity,''); 
			self.DOBState := if(exists(allrows(DOBState<>'' and hasoptout=false)),allrows(DOBState<>'')[1].DOBState,''); 
			self.DOBNation := if(exists(allrows(DOBNation<>'' and hasoptout=false)),allrows(DOBNation<>'')[1].DOBNation,''); 
			self.MOCParticipation := if(exists(allrows(MOCParticipation<>'' and hasoptout=false)),allrows(MOCParticipation<>'')[1].MOCParticipation,''); 
			self.DateFirstSeen := sort(allrows,DateFirstSeen)[1].DateFirstSeen;
			self.DateLastSeen := sort(allrows,-DateLastSeen)[1].DateLastSeen;
			self.UniqueIds := choosen(DEDUP(project(allRows(hasoptout=false).UniqueIds, TRANSFORM(iesp.share.t_StringArrayItem, SELF := Left)), RECORD, ALL, HASH),iesp.Constants.HPR.Max_Small_Cnt);
			self.BusinessIds := choosen(DEDUP(project(allRows(hasoptout=false).BusinessIds, TRANSFORM(iesp.share.t_StringArrayItem, SELF := left)), RECORD, ALL, HASH),iesp.Constants.HPR.Max_Small_Cnt);
			self.RecordSources := choosen(DEDUP(NORMALIZE(allRows(hasoptout=false), inRec.RecordSources, TRANSFORM(iesp.share.t_StringArrayItem, SELF := RIGHT)), RECORD, ALL, HASH),iesp.Constants.HPR.Max_Small_Cnt);
			self.TypeOfPractices := dataset([],iesp.abms.t_ABMSTypeOfPractice); //Will be filled in later via Join
			self.Certifications := dataset([],iesp.abms.t_ABMSCertificate); //Will be filled in later via Join
			self.CareerHistory := dataset([],iesp.abms.t_ABMSCareer); //Will be filled in later via Join
			self.EducationHistory := dataset([],iesp.abms.t_ABMSEducation); //Will be filled in later via Join
			self.ProfessionalAssociations := dataset([],iesp.abms.t_ABMSProfessionalAssociation); //Will be filled in later via Join
			self.Specialty :=inRec.Specialty;
                        self.hasoptout:=allRows[1].hasoptout;
			self:=inrec;
	end;
	export filterZeroes(string inDate):= function
		return if(inDate = '00000000','',inDate);
	end;
	export ABMS_Layouts.LayoutOutput_batch fmtBatchResults(ABMS_Layouts.LayoutOutputBatch inRec):= TRANSFORM
			self.acctno := inRec.accountnumber;
			self.recordPenalty := inRec._Penalty;
			self.did:= inRec.UniqueIds[1].value;
			self.bdid:= inRec.BusinessIds[1].value;
			self.Name_Full:= inRec.Name.Full;
			self.Name_First:= inRec.Name.First;
			self.Name_Middle:= inRec.Name.Middle;
			self.Name_Last:= inRec.Name.Last;
			self.Name_Suffix:= inRec.Name.Suffix;
			self.Name_Prefix:= inRec.Name.Prefix;
			self.Address1_StreetNumber:= inRec.Addresses[1].Address.StreetNumber;
			self.Address1_StreetPreDirection:= inRec.Addresses[1].Address.StreetPreDirection;
			self.Address1_StreetName:= inRec.Addresses[1].Address.StreetName;
			self.Address1_StreetSuffix:= inRec.Addresses[1].Address.StreetSuffix;
			self.Address1_StreetPostDirection:= inRec.Addresses[1].Address.StreetPostDirection;
			self.Address1_UnitDesignation:= inRec.Addresses[1].Address.UnitDesignation;
			self.Address1_UnitNumber:= inRec.Addresses[1].Address.UnitNumber;
			self.Address1_StreetAddress1:= inRec.Addresses[1].Address.StreetAddress1;
			self.Address1_StreetAddress2:= inRec.Addresses[1].Address.StreetAddress2;
			self.Address1_City:= inRec.Addresses[1].Address.City;
			self.Address1_State:= inRec.Addresses[1].Address.State;
			self.Address1_Zip5:= inRec.Addresses[1].Address.Zip5;
			self.Address1_Zip4:= inRec.Addresses[1].Address.Zip4;
			self.Address1_AddressSeqID:=inRec.Addresses[1].AddressSeqID;
			self.Address1_AddressType:=inRec.Addresses[1].AddressType;
			self.Address1_AddressTypeDesc:=inRec.Addresses[1].AddressTypeDesc;
			self.Address2_StreetNumber:= inRec.Addresses[2].Address.StreetNumber;
			self.Address2_StreetPreDirection:= inRec.Addresses[2].Address.StreetPreDirection;
			self.Address2_StreetName:= inRec.Addresses[2].Address.StreetName;
			self.Address2_StreetSuffix:= inRec.Addresses[2].Address.StreetSuffix;
			self.Address2_StreetPostDirection:= inRec.Addresses[2].Address.StreetPostDirection;
			self.Address2_UnitDesignation:= inRec.Addresses[2].Address.UnitDesignation;
			self.Address2_UnitNumber:= inRec.Addresses[2].Address.UnitNumber;
			self.Address2_StreetAddress1:= inRec.Addresses[2].Address.StreetAddress1;
			self.Address2_StreetAddress2:= inRec.Addresses[2].Address.StreetAddress2;
			self.Address2_City:= inRec.Addresses[2].Address.City;
			self.Address2_State:= inRec.Addresses[2].Address.State;
			self.Address2_Zip5:= inRec.Addresses[2].Address.Zip5;
			self.Address2_Zip4:= inRec.Addresses[2].Address.Zip4;
			self.Address2_AddressSeqID:=inRec.Addresses[2].AddressSeqID;
			self.Address2_AddressType:=inRec.Addresses[2].AddressType;
			self.Address2_AddressTypeDesc:=inRec.Addresses[2].AddressTypeDesc;
			self.Address3_StreetNumber:= inRec.Addresses[3].Address.StreetNumber;
			self.Address3_StreetPreDirection:= inRec.Addresses[3].Address.StreetPreDirection;
			self.Address3_StreetName:= inRec.Addresses[3].Address.StreetName;
			self.Address3_StreetSuffix:= inRec.Addresses[3].Address.StreetSuffix;
			self.Address3_StreetPostDirection:= inRec.Addresses[3].Address.StreetPostDirection;
			self.Address3_UnitDesignation:= inRec.Addresses[3].Address.UnitDesignation;
			self.Address3_UnitNumber:= inRec.Addresses[3].Address.UnitNumber;
			self.Address3_StreetAddress1:= inRec.Addresses[3].Address.StreetAddress1;
			self.Address3_StreetAddress2:= inRec.Addresses[3].Address.StreetAddress2;
			self.Address3_City:= inRec.Addresses[3].Address.City;
			self.Address3_State:= inRec.Addresses[3].Address.State;
			self.Address3_Zip5:= inRec.Addresses[3].Address.Zip5;
			self.Address3_Zip4:= inRec.Addresses[3].Address.Zip4;
			self.Address3_AddressSeqID:=inRec.Addresses[3].AddressSeqID;
			self.Address3_AddressType:=inRec.Addresses[3].AddressType;
			self.Address3_AddressTypeDesc:=inRec.Addresses[3].AddressTypeDesc;
			self.Address4_StreetNumber:= inRec.Addresses[4].Address.StreetNumber;
			self.Address4_StreetPreDirection:= inRec.Addresses[4].Address.StreetPreDirection;
			self.Address4_StreetName:= inRec.Addresses[4].Address.StreetName;
			self.Address4_StreetSuffix:= inRec.Addresses[4].Address.StreetSuffix;
			self.Address4_StreetPostDirection:= inRec.Addresses[4].Address.StreetPostDirection;
			self.Address4_UnitDesignation:= inRec.Addresses[4].Address.UnitDesignation;
			self.Address4_UnitNumber:= inRec.Addresses[4].Address.UnitNumber;
			self.Address4_StreetAddress1:= inRec.Addresses[4].Address.StreetAddress1;
			self.Address4_StreetAddress2:= inRec.Addresses[4].Address.StreetAddress2;
			self.Address4_City:= inRec.Addresses[4].Address.City;
			self.Address4_State:= inRec.Addresses[4].Address.State;
			self.Address4_Zip5:= inRec.Addresses[4].Address.Zip5;
			self.Address4_Zip4:= inRec.Addresses[4].Address.Zip4;
			self.Address4_AddressSeqID:=inRec.Addresses[4].AddressSeqID;
			self.Address4_AddressType:=inRec.Addresses[4].AddressType;
			self.Address4_AddressTypeDesc:=inRec.Addresses[4].AddressTypeDesc;
			self.Address5_StreetNumber:= inRec.Addresses[5].Address.StreetNumber;
			self.Address5_StreetPreDirection:= inRec.Addresses[5].Address.StreetPreDirection;
			self.Address5_StreetName:= inRec.Addresses[5].Address.StreetName;
			self.Address5_StreetSuffix:= inRec.Addresses[5].Address.StreetSuffix;
			self.Address5_StreetPostDirection:= inRec.Addresses[5].Address.StreetPostDirection;
			self.Address5_UnitDesignation:= inRec.Addresses[5].Address.UnitDesignation;
			self.Address5_UnitNumber:= inRec.Addresses[5].Address.UnitNumber;
			self.Address5_StreetAddress1:= inRec.Addresses[5].Address.StreetAddress1;
			self.Address5_StreetAddress2:= inRec.Addresses[5].Address.StreetAddress2;
			self.Address5_City:= inRec.Addresses[5].Address.City;
			self.Address5_State:= inRec.Addresses[5].Address.State;
			self.Address5_Zip5:= inRec.Addresses[5].Address.Zip5;
			self.Address5_Zip4:= inRec.Addresses[5].Address.Zip4;
			self.Address5_AddressSeqID:=inRec.Addresses[5].AddressSeqID;
			self.Address5_AddressType:=inRec.Addresses[5].AddressType;
			self.Address5_AddressTypeDesc:=inRec.Addresses[5].AddressTypeDesc;
			self.Contact1_ContactType:=inRec.Contacts[1].ContactType; 
			self.Contact1_ContactDescription:=inRec.Contacts[1].ContactDescription; 
			self.Contact1_PhoneNumber:=inRec.Contacts[1].PhoneNumber; 
			self.Contact1_Website:=inRec.Contacts[1].Website; 
			self.Contact2_ContactType:=inRec.Contacts[2].ContactType; 
			self.Contact2_ContactDescription:=inRec.Contacts[2].ContactDescription; 
			self.Contact2_PhoneNumber:=inRec.Contacts[2].PhoneNumber; 
			self.Contact2_Website:=inRec.Contacts[2].Website; 
			self.Contact3_ContactType:=inRec.Contacts[3].ContactType; 
			self.Contact3_ContactDescription:=inRec.Contacts[3].ContactDescription; 
			self.Contact3_PhoneNumber:=inRec.Contacts[3].PhoneNumber; 
			self.Contact3_Website:=inRec.Contacts[3].Website; 
			self.Contact4_ContactType:=inRec.Contacts[4].ContactType; 
			self.Contact4_ContactDescription:=inRec.Contacts[4].ContactDescription; 
			self.Contact4_PhoneNumber:=inRec.Contacts[4].PhoneNumber; 
			self.Contact4_Website:=inRec.Contacts[4].Website; 
			self.Contact5_ContactType:=inRec.Contacts[5].ContactType; 
			self.Contact5_ContactDescription:=inRec.Contacts[5].ContactDescription; 
			self.Contact5_PhoneNumber:=inRec.Contacts[5].PhoneNumber; 
			self.Contact5_Website:=inRec.Contacts[5].Website; 
			self.DOD:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.DOD));
			self.DOB:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.DOB));
			self.DateFirstSeen:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.DateFirstSeen));
			self.DateLastSeen:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.DateLastSeen));
			self.TypeOfPractice1_RecordType:= inRec.TypeOfPractices[1].RecordType;
			self.TypeOfPractice1_TypeOfPractice:= inRec.TypeOfPractices[1].TypeOfPractice;
			self.TypeOfPractice1_OtherInfo:= inRec.TypeOfPractices[1].OtherInfo;
			self.TypeOfPractice1_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[1].DateFirstReported));
			self.TypeOfPractice1_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[1].DateLastReported));
			self.TypeOfPractice2_RecordType:= inRec.TypeOfPractices[2].RecordType;
			self.TypeOfPractice2_TypeOfPractice:= inRec.TypeOfPractices[2].TypeOfPractice;
			self.TypeOfPractice2_OtherInfo:= inRec.TypeOfPractices[2].OtherInfo;
			self.TypeOfPractice2_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[2].DateFirstReported));
			self.TypeOfPractice2_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[2].DateLastReported));
			self.TypeOfPractice3_RecordType:= inRec.TypeOfPractices[3].RecordType;
			self.TypeOfPractice3_TypeOfPractice:= inRec.TypeOfPractices[3].TypeOfPractice;
			self.TypeOfPractice3_OtherInfo:= inRec.TypeOfPractices[3].OtherInfo;
			self.TypeOfPractice3_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[3].DateFirstReported));
			self.TypeOfPractice3_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[3].DateLastReported));
			self.TypeOfPractice4_RecordType:= inRec.TypeOfPractices[4].RecordType;
			self.TypeOfPractice4_TypeOfPractice:= inRec.TypeOfPractices[4].TypeOfPractice;
			self.TypeOfPractice4_OtherInfo:= inRec.TypeOfPractices[4].OtherInfo;
			self.TypeOfPractice4_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[4].DateFirstReported));
			self.TypeOfPractice4_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[4].DateLastReported));
			self.TypeOfPractice5_RecordType:= inRec.TypeOfPractices[5].RecordType;
			self.TypeOfPractice5_TypeOfPractice:= inRec.TypeOfPractices[5].TypeOfPractice;
			self.TypeOfPractice5_OtherInfo:= inRec.TypeOfPractices[5].OtherInfo;
			self.TypeOfPractice5_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[5].DateFirstReported));
			self.TypeOfPractice5_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[5].DateLastReported));
			self.TypeOfPractice6_RecordType:= inRec.TypeOfPractices[6].RecordType;
			self.TypeOfPractice6_TypeOfPractice:= inRec.TypeOfPractices[6].TypeOfPractice;
			self.TypeOfPractice6_OtherInfo:= inRec.TypeOfPractices[6].OtherInfo;
			self.TypeOfPractice6_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[6].DateFirstReported));
			self.TypeOfPractice6_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[6].DateLastReported));
			self.TypeOfPractice7_RecordType:= inRec.TypeOfPractices[7].RecordType;
			self.TypeOfPractice7_TypeOfPractice:= inRec.TypeOfPractices[7].TypeOfPractice;
			self.TypeOfPractice7_OtherInfo:= inRec.TypeOfPractices[7].OtherInfo;
			self.TypeOfPractice7_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[7].DateFirstReported));
			self.TypeOfPractice7_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[7].DateLastReported));
			self.TypeOfPractice8_RecordType:= inRec.TypeOfPractices[8].RecordType;
			self.TypeOfPractice8_TypeOfPractice:= inRec.TypeOfPractices[8].TypeOfPractice;
			self.TypeOfPractice8_OtherInfo:= inRec.TypeOfPractices[8].OtherInfo;
			self.TypeOfPractice8_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[8].DateFirstReported));
			self.TypeOfPractice8_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[8].DateLastReported));
			self.TypeOfPractice9_RecordType:= inRec.TypeOfPractices[9].RecordType;
			self.TypeOfPractice9_TypeOfPractice:= inRec.TypeOfPractices[9].TypeOfPractice;
			self.TypeOfPractice9_OtherInfo:= inRec.TypeOfPractices[9].OtherInfo;
			self.TypeOfPractice9_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[9].DateFirstReported));
			self.TypeOfPractice9_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[9].DateLastReported));
			self.TypeOfPractice10_RecordType:= inRec.TypeOfPractices[10].RecordType;
			self.TypeOfPractice10_TypeOfPractice:= inRec.TypeOfPractices[10].TypeOfPractice;
			self.TypeOfPractice10_OtherInfo:= inRec.TypeOfPractices[10].OtherInfo;
			self.TypeOfPractice10_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[10].DateFirstReported));
			self.TypeOfPractice10_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.TypeOfPractices[10].DateLastReported));
			self.Certifications1_RecordType:= inRec.BatchCertifications[1].RecordType;
			self.Certifications1_Seq:= inRec.BatchCertifications[1].Seq;
			self.Certifications1_CertificateName:= inRec.BatchCertifications[1].CertificateName;
			self.Certifications1_IssuingBoard:= inRec.BatchCertifications[1].IssuingBoard;
			self.Certifications1_CertificateTypeID:= inRec.BatchCertifications[1].CertificateTypeID;
			self.Certifications1_CertificateType:= inRec.BatchCertifications[1].CertificateType;
			self.Certifications1_RecertificateInd:= inRec.BatchCertifications[1].RecertificateInd;
			self.Certifications1_BoardCertified:= inRec.BatchCertifications[1].BoardCertified;
			self.Certifications1_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].IssueDate));
			self.Certifications1_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].ExpireDate));
			self.Certifications1_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].ReverificationDate));
			self.Certifications1_DurationType:= inRec.BatchCertifications[1].DurationType; 
			self.Certifications1_DurationTypeDesc:= inRec.BatchCertifications[1].DurationTypeDesc;
			self.Certifications1_MOCPathway_id:= inRec.BatchCertifications[1].MOCPathwayid;
			self.Certifications1_MOCPathwayName:= inRec.BatchCertifications[1].MOCPathwayName;
			self.Certifications1_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].DateFirstReported));
			self.Certifications1_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].DateLastReported));
			self.SubCertifications1_RecordType:=inRec.BatchCertifications[1].SubSpecialty.RecordType;
			self.SubCertifications1_Seq:= inRec.BatchCertifications[1].SubSpecialty.Seq;
			self.SubCertifications1_CertificateName:= inRec.BatchCertifications[1].SubSpecialty.CertificateName;
			self.SubCertifications1_IssuingBoard:= inRec.BatchCertifications[1].SubSpecialty.IssuingBoard;
			self.SubCertifications1_CertificateTypeID:= inRec.BatchCertifications[1].SubSpecialty.CertificateTypeID;
			self.SubCertifications1_CertificateType:= inRec.BatchCertifications[1].SubSpecialty.CertificateType;
			self.SubCertifications1_RecertificateInd:= inRec.BatchCertifications[1].SubSpecialty.RecertificateInd;
			self.SubCertifications1_BoardCertified:= inRec.BatchCertifications[1].SubSpecialty.BoardCertified;
			self.SubCertifications1_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].SubSpecialty.IssueDate));
			self.SubCertifications1_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].SubSpecialty.ExpireDate));
			self.SubCertifications1_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].SubSpecialty.ReverificationDate));
			self.SubCertifications1_DurationType:= inRec.BatchCertifications[1].SubSpecialty.DurationType; 
			self.SubCertifications1_DurationTypeDesc:= inRec.BatchCertifications[1].SubSpecialty.DurationTypeDesc;
			self.SubCertifications1_MOCPathway_id:= inRec.BatchCertifications[1].SubSpecialty.MOCPathwayid;
			self.SubCertifications1_MOCPathwayName:= inRec.BatchCertifications[1].SubSpecialty.MOCPathwayName;
			self.SubCertifications1_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].SubSpecialty.DateFirstReported));
			self.SubCertifications1_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[1].SubSpecialty.DateLastReported));
			self.Certifications2_RecordType:= inRec.BatchCertifications[2].RecordType;
			self.Certifications2_Seq:= inRec.BatchCertifications[2].Seq;
			self.Certifications2_CertificateName:= inRec.BatchCertifications[2].CertificateName;
			self.Certifications2_IssuingBoard:= inRec.BatchCertifications[2].IssuingBoard;
			self.Certifications2_CertificateTypeID:= inRec.BatchCertifications[2].CertificateTypeID;
			self.Certifications2_CertificateType:= inRec.BatchCertifications[2].CertificateType;
			self.Certifications2_RecertificateInd:= inRec.BatchCertifications[2].RecertificateInd;
			self.Certifications2_BoardCertified:= inRec.BatchCertifications[2].BoardCertified;
			self.Certifications2_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].IssueDate));
			self.Certifications2_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].ExpireDate));
			self.Certifications2_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].ReverificationDate));
			self.Certifications2_DurationType:= inRec.BatchCertifications[2].DurationType; 
			self.Certifications2_DurationTypeDesc:= inRec.BatchCertifications[2].DurationTypeDesc;
			self.Certifications2_MOCPathway_id:= inRec.BatchCertifications[2].MOCPathwayid;
			self.Certifications2_MOCPathwayName:= inRec.BatchCertifications[2].MOCPathwayName;
			self.Certifications2_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].DateFirstReported));
			self.Certifications2_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].DateLastReported));
			self.SubCertifications2_RecordType:=inRec.BatchCertifications[2].SubSpecialty.RecordType;
			self.SubCertifications2_Seq:= inRec.BatchCertifications[2].SubSpecialty.Seq;
			self.SubCertifications2_CertificateName:= inRec.BatchCertifications[2].SubSpecialty.CertificateName;
			self.SubCertifications2_IssuingBoard:= inRec.BatchCertifications[2].SubSpecialty.IssuingBoard;
			self.SubCertifications2_CertificateTypeID:= inRec.BatchCertifications[2].SubSpecialty.CertificateTypeID;
			self.SubCertifications2_CertificateType:= inRec.BatchCertifications[2].SubSpecialty.CertificateType;
			self.SubCertifications2_RecertificateInd:= inRec.BatchCertifications[2].SubSpecialty.RecertificateInd;
			self.SubCertifications2_BoardCertified:= inRec.BatchCertifications[2].SubSpecialty.BoardCertified;
			self.SubCertifications2_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].SubSpecialty.IssueDate));
			self.SubCertifications2_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].SubSpecialty.ExpireDate));
			self.SubCertifications2_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].SubSpecialty.ReverificationDate));
			self.SubCertifications2_DurationType:= inRec.BatchCertifications[2].SubSpecialty.DurationType; 
			self.SubCertifications2_DurationTypeDesc:= inRec.BatchCertifications[2].SubSpecialty.DurationTypeDesc;
			self.SubCertifications2_MOCPathway_id:= inRec.BatchCertifications[2].SubSpecialty.MOCPathwayid;
			self.SubCertifications2_MOCPathwayName:= inRec.BatchCertifications[2].SubSpecialty.MOCPathwayName;
			self.SubCertifications2_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].SubSpecialty.DateFirstReported));
			self.SubCertifications2_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[2].SubSpecialty.DateLastReported));
			self.Certifications3_RecordType:= inRec.BatchCertifications[3].RecordType;
			self.Certifications3_Seq:= inRec.BatchCertifications[3].Seq;
			self.Certifications3_CertificateName:= inRec.BatchCertifications[3].CertificateName;
			self.Certifications3_IssuingBoard:= inRec.BatchCertifications[3].IssuingBoard;
			self.Certifications3_CertificateTypeID:= inRec.BatchCertifications[3].CertificateTypeID;
			self.Certifications3_CertificateType:= inRec.BatchCertifications[3].CertificateType;
			self.Certifications3_RecertificateInd:= inRec.BatchCertifications[3].RecertificateInd;
			self.Certifications3_BoardCertified:= inRec.BatchCertifications[3].BoardCertified;
			self.Certifications3_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].IssueDate));
			self.Certifications3_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].ExpireDate));
			self.Certifications3_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].ReverificationDate));
			self.Certifications3_DurationType:= inRec.BatchCertifications[3].DurationType; 
			self.Certifications3_DurationTypeDesc:= inRec.BatchCertifications[3].DurationTypeDesc;
			self.Certifications3_MOCPathway_id:= inRec.BatchCertifications[3].MOCPathwayid;
			self.Certifications3_MOCPathwayName:= inRec.BatchCertifications[3].MOCPathwayName;
			self.Certifications3_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].DateFirstReported));
			self.Certifications3_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].DateLastReported));
			self.SubCertifications3_RecordType:=inRec.BatchCertifications[3].SubSpecialty.RecordType;
			self.SubCertifications3_Seq:= inRec.BatchCertifications[3].SubSpecialty.Seq;
			self.SubCertifications3_CertificateName:= inRec.BatchCertifications[3].SubSpecialty.CertificateName;
			self.SubCertifications3_IssuingBoard:= inRec.BatchCertifications[3].SubSpecialty.IssuingBoard;
			self.SubCertifications3_CertificateTypeID:= inRec.BatchCertifications[3].SubSpecialty.CertificateTypeID;
			self.SubCertifications3_CertificateType:= inRec.BatchCertifications[3].SubSpecialty.CertificateType;
			self.SubCertifications3_RecertificateInd:= inRec.BatchCertifications[3].SubSpecialty.RecertificateInd;
			self.SubCertifications3_BoardCertified:= inRec.BatchCertifications[3].SubSpecialty.BoardCertified;
			self.SubCertifications3_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].SubSpecialty.IssueDate));
			self.SubCertifications3_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].SubSpecialty.ExpireDate));
			self.SubCertifications3_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].SubSpecialty.ReverificationDate));
			self.SubCertifications3_DurationType:= inRec.BatchCertifications[3].SubSpecialty.DurationType; 
			self.SubCertifications3_DurationTypeDesc:= inRec.BatchCertifications[3].SubSpecialty.DurationTypeDesc;
			self.SubCertifications3_MOCPathway_id:= inRec.BatchCertifications[3].SubSpecialty.MOCPathwayid;
			self.SubCertifications3_MOCPathwayName:= inRec.BatchCertifications[3].SubSpecialty.MOCPathwayName;
			self.SubCertifications3_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].SubSpecialty.DateFirstReported));
			self.SubCertifications3_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[3].SubSpecialty.DateLastReported));
			self.Certifications4_RecordType:= inRec.BatchCertifications[4].RecordType;
			self.Certifications4_Seq:= inRec.BatchCertifications[4].Seq;
			self.Certifications4_CertificateName:= inRec.BatchCertifications[4].CertificateName;
			self.Certifications4_IssuingBoard:= inRec.BatchCertifications[4].IssuingBoard;
			self.Certifications4_CertificateTypeID:= inRec.BatchCertifications[4].CertificateTypeID;
			self.Certifications4_CertificateType:= inRec.BatchCertifications[4].CertificateType;
			self.Certifications4_RecertificateInd:= inRec.BatchCertifications[4].RecertificateInd;
			self.Certifications4_BoardCertified:= inRec.BatchCertifications[4].BoardCertified;
			self.Certifications4_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].IssueDate));
			self.Certifications4_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].ExpireDate));
			self.Certifications4_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].ReverificationDate));
			self.Certifications4_DurationType:= inRec.BatchCertifications[4].DurationType; 
			self.Certifications4_DurationTypeDesc:= inRec.BatchCertifications[4].DurationTypeDesc;
			self.Certifications4_MOCPathway_id:= inRec.BatchCertifications[4].MOCPathwayid;
			self.Certifications4_MOCPathwayName:= inRec.BatchCertifications[4].MOCPathwayName;
			self.Certifications4_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].DateFirstReported));
			self.Certifications4_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].DateLastReported));
			self.SubCertifications4_RecordType:=inRec.BatchCertifications[4].SubSpecialty.RecordType;
			self.SubCertifications4_Seq:= inRec.BatchCertifications[4].SubSpecialty.Seq;
			self.SubCertifications4_CertificateName:= inRec.BatchCertifications[4].SubSpecialty.CertificateName;
			self.SubCertifications4_IssuingBoard:= inRec.BatchCertifications[4].SubSpecialty.IssuingBoard;
			self.SubCertifications4_CertificateTypeID:= inRec.BatchCertifications[4].SubSpecialty.CertificateTypeID;
			self.SubCertifications4_CertificateType:= inRec.BatchCertifications[4].SubSpecialty.CertificateType;
			self.SubCertifications4_RecertificateInd:= inRec.BatchCertifications[4].SubSpecialty.RecertificateInd;
			self.SubCertifications4_BoardCertified:= inRec.BatchCertifications[4].SubSpecialty.BoardCertified;
			self.SubCertifications4_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].SubSpecialty.IssueDate));
			self.SubCertifications4_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].SubSpecialty.ExpireDate));
			self.SubCertifications4_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].SubSpecialty.ReverificationDate));
			self.SubCertifications4_DurationType:= inRec.BatchCertifications[4].SubSpecialty.DurationType; 
			self.SubCertifications4_DurationTypeDesc:= inRec.BatchCertifications[4].SubSpecialty.DurationTypeDesc;
			self.SubCertifications4_MOCPathway_id:= inRec.BatchCertifications[4].SubSpecialty.MOCPathwayid;
			self.SubCertifications4_MOCPathwayName:= inRec.BatchCertifications[4].SubSpecialty.MOCPathwayName;
			self.SubCertifications4_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].SubSpecialty.DateFirstReported));
			self.SubCertifications4_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[4].SubSpecialty.DateLastReported));
			self.Certifications5_RecordType:= inRec.BatchCertifications[5].RecordType;
			self.Certifications5_Seq:= inRec.BatchCertifications[5].Seq;
			self.Certifications5_CertificateName:= inRec.BatchCertifications[5].CertificateName;
			self.Certifications5_IssuingBoard:= inRec.BatchCertifications[5].IssuingBoard;
			self.Certifications5_CertificateTypeID:= inRec.BatchCertifications[5].CertificateTypeID;
			self.Certifications5_CertificateType:= inRec.BatchCertifications[5].CertificateType;
			self.Certifications5_RecertificateInd:= inRec.BatchCertifications[5].RecertificateInd;
			self.Certifications5_BoardCertified:= inRec.BatchCertifications[5].BoardCertified;
			self.Certifications5_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].IssueDate));
			self.Certifications5_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].ExpireDate));
			self.Certifications5_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].ReverificationDate));
			self.Certifications5_DurationType:= inRec.BatchCertifications[5].DurationType; 
			self.Certifications5_DurationTypeDesc:= inRec.BatchCertifications[5].DurationTypeDesc;
			self.Certifications5_MOCPathway_id:= inRec.BatchCertifications[5].MOCPathwayid;
			self.Certifications5_MOCPathwayName:= inRec.BatchCertifications[5].MOCPathwayName;
			self.Certifications5_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].DateFirstReported));
			self.Certifications5_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].DateLastReported));
			self.SubCertifications5_RecordType:=inRec.BatchCertifications[5].SubSpecialty.RecordType;
			self.SubCertifications5_Seq:= inRec.BatchCertifications[5].SubSpecialty.Seq;
			self.SubCertifications5_CertificateName:= inRec.BatchCertifications[5].SubSpecialty.CertificateName;
			self.SubCertifications5_IssuingBoard:= inRec.BatchCertifications[5].SubSpecialty.IssuingBoard;
			self.SubCertifications5_CertificateTypeID:= inRec.BatchCertifications[5].SubSpecialty.CertificateTypeID;
			self.SubCertifications5_CertificateType:= inRec.BatchCertifications[5].SubSpecialty.CertificateType;
			self.SubCertifications5_RecertificateInd:= inRec.BatchCertifications[5].SubSpecialty.RecertificateInd;
			self.SubCertifications5_BoardCertified:= inRec.BatchCertifications[5].SubSpecialty.BoardCertified;
			self.SubCertifications5_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].SubSpecialty.IssueDate));
			self.SubCertifications5_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].SubSpecialty.ExpireDate));
			self.SubCertifications5_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].SubSpecialty.ReverificationDate));
			self.SubCertifications5_DurationType:= inRec.BatchCertifications[5].SubSpecialty.DurationType; 
			self.SubCertifications5_DurationTypeDesc:= inRec.BatchCertifications[5].SubSpecialty.DurationTypeDesc;
			self.SubCertifications5_MOCPathway_id:= inRec.BatchCertifications[5].SubSpecialty.MOCPathwayid;
			self.SubCertifications5_MOCPathwayName:= inRec.BatchCertifications[5].SubSpecialty.MOCPathwayName;
			self.SubCertifications5_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].SubSpecialty.DateFirstReported));
			self.SubCertifications5_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[5].SubSpecialty.DateLastReported));
			self.Certifications6_RecordType:= inRec.BatchCertifications[6].RecordType;
			self.Certifications6_Seq:= inRec.BatchCertifications[6].Seq;
			self.Certifications6_CertificateName:= inRec.BatchCertifications[6].CertificateName;
			self.Certifications6_IssuingBoard:= inRec.BatchCertifications[6].IssuingBoard;
			self.Certifications6_CertificateTypeID:= inRec.BatchCertifications[6].CertificateTypeID;
			self.Certifications6_CertificateType:= inRec.BatchCertifications[6].CertificateType;
			self.Certifications6_RecertificateInd:= inRec.BatchCertifications[6].RecertificateInd;
			self.Certifications6_BoardCertified:= inRec.BatchCertifications[6].BoardCertified;
			self.Certifications6_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].IssueDate));
			self.Certifications6_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].ExpireDate));
			self.Certifications6_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].ReverificationDate));
			self.Certifications6_DurationType:= inRec.BatchCertifications[6].DurationType; 
			self.Certifications6_DurationTypeDesc:= inRec.BatchCertifications[6].DurationTypeDesc;
			self.Certifications6_MOCPathway_id:= inRec.BatchCertifications[6].MOCPathwayid;
			self.Certifications6_MOCPathwayName:= inRec.BatchCertifications[6].MOCPathwayName;
			self.Certifications6_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].DateFirstReported));
			self.Certifications6_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].DateLastReported));
			self.SubCertifications6_RecordType:=inRec.BatchCertifications[6].SubSpecialty.RecordType;
			self.SubCertifications6_Seq:= inRec.BatchCertifications[6].SubSpecialty.Seq;
			self.SubCertifications6_CertificateName:= inRec.BatchCertifications[6].SubSpecialty.CertificateName;
			self.SubCertifications6_IssuingBoard:= inRec.BatchCertifications[6].SubSpecialty.IssuingBoard;
			self.SubCertifications6_CertificateTypeID:= inRec.BatchCertifications[6].SubSpecialty.CertificateTypeID;
			self.SubCertifications6_CertificateType:= inRec.BatchCertifications[6].SubSpecialty.CertificateType;
			self.SubCertifications6_RecertificateInd:= inRec.BatchCertifications[6].SubSpecialty.RecertificateInd;
			self.SubCertifications6_BoardCertified:= inRec.BatchCertifications[6].SubSpecialty.BoardCertified;
			self.SubCertifications6_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].SubSpecialty.IssueDate));
			self.SubCertifications6_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].SubSpecialty.ExpireDate));
			self.SubCertifications6_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].SubSpecialty.ReverificationDate));
			self.SubCertifications6_DurationType:= inRec.BatchCertifications[6].SubSpecialty.DurationType; 
			self.SubCertifications6_DurationTypeDesc:= inRec.BatchCertifications[6].SubSpecialty.DurationTypeDesc;
			self.SubCertifications6_MOCPathway_id:= inRec.BatchCertifications[6].SubSpecialty.MOCPathwayid;
			self.SubCertifications6_MOCPathwayName:= inRec.BatchCertifications[6].SubSpecialty.MOCPathwayName;
			self.SubCertifications6_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].SubSpecialty.DateFirstReported));
			self.SubCertifications6_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[6].SubSpecialty.DateLastReported));
			self.Certifications7_RecordType:= inRec.BatchCertifications[7].RecordType;
			self.Certifications7_Seq:= inRec.BatchCertifications[7].Seq;
			self.Certifications7_CertificateName:= inRec.BatchCertifications[7].CertificateName;
			self.Certifications7_IssuingBoard:= inRec.BatchCertifications[7].IssuingBoard;
			self.Certifications7_CertificateTypeID:= inRec.BatchCertifications[7].CertificateTypeID;
			self.Certifications7_CertificateType:= inRec.BatchCertifications[7].CertificateType;
			self.Certifications7_RecertificateInd:= inRec.BatchCertifications[7].RecertificateInd;
			self.Certifications7_BoardCertified:= inRec.BatchCertifications[7].BoardCertified;
			self.Certifications7_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].IssueDate));
			self.Certifications7_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].ExpireDate));
			self.Certifications7_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].ReverificationDate));
			self.Certifications7_DurationType:= inRec.BatchCertifications[7].DurationType; 
			self.Certifications7_DurationTypeDesc:= inRec.BatchCertifications[7].DurationTypeDesc;
			self.Certifications7_MOCPathway_id:= inRec.BatchCertifications[7].MOCPathwayid;
			self.Certifications7_MOCPathwayName:= inRec.BatchCertifications[7].MOCPathwayName;
			self.Certifications7_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].DateFirstReported));
			self.Certifications7_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].DateLastReported));
			self.SubCertifications7_RecordType:=inRec.BatchCertifications[7].SubSpecialty.RecordType;
			self.SubCertifications7_Seq:= inRec.BatchCertifications[7].SubSpecialty.Seq;
			self.SubCertifications7_CertificateName:= inRec.BatchCertifications[7].SubSpecialty.CertificateName;
			self.SubCertifications7_IssuingBoard:= inRec.BatchCertifications[7].SubSpecialty.IssuingBoard;
			self.SubCertifications7_CertificateTypeID:= inRec.BatchCertifications[7].SubSpecialty.CertificateTypeID;
			self.SubCertifications7_CertificateType:= inRec.BatchCertifications[7].SubSpecialty.CertificateType;
			self.SubCertifications7_RecertificateInd:= inRec.BatchCertifications[7].SubSpecialty.RecertificateInd;
			self.SubCertifications7_BoardCertified:= inRec.BatchCertifications[7].SubSpecialty.BoardCertified;
			self.SubCertifications7_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].SubSpecialty.IssueDate));
			self.SubCertifications7_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].SubSpecialty.ExpireDate));
			self.SubCertifications7_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].SubSpecialty.ReverificationDate));
			self.SubCertifications7_DurationType:= inRec.BatchCertifications[7].SubSpecialty.DurationType; 
			self.SubCertifications7_DurationTypeDesc:= inRec.BatchCertifications[7].SubSpecialty.DurationTypeDesc;
			self.SubCertifications7_MOCPathway_id:= inRec.BatchCertifications[7].SubSpecialty.MOCPathwayid;
			self.SubCertifications7_MOCPathwayName:= inRec.BatchCertifications[7].SubSpecialty.MOCPathwayName;
			self.SubCertifications7_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].SubSpecialty.DateFirstReported));
			self.SubCertifications7_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[7].SubSpecialty.DateLastReported));
			self.Certifications8_RecordType:= inRec.BatchCertifications[8].RecordType;
			self.Certifications8_Seq:= inRec.BatchCertifications[8].Seq;
			self.Certifications8_CertificateName:= inRec.BatchCertifications[8].CertificateName;
			self.Certifications8_IssuingBoard:= inRec.BatchCertifications[8].IssuingBoard;
			self.Certifications8_CertificateTypeID:= inRec.BatchCertifications[8].CertificateTypeID;
			self.Certifications8_CertificateType:= inRec.BatchCertifications[8].CertificateType;
			self.Certifications8_RecertificateInd:= inRec.BatchCertifications[8].RecertificateInd;
			self.Certifications8_BoardCertified:= inRec.BatchCertifications[8].BoardCertified;
			self.Certifications8_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].IssueDate));
			self.Certifications8_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].ExpireDate));
			self.Certifications8_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].ReverificationDate));
			self.Certifications8_DurationType:= inRec.BatchCertifications[8].DurationType; 
			self.Certifications8_DurationTypeDesc:= inRec.BatchCertifications[8].DurationTypeDesc;
			self.Certifications8_MOCPathway_id:= inRec.BatchCertifications[8].MOCPathwayid;
			self.Certifications8_MOCPathwayName:= inRec.BatchCertifications[8].MOCPathwayName;
			self.Certifications8_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].DateFirstReported));
			self.Certifications8_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].DateLastReported));
			self.SubCertifications8_RecordType:=inRec.BatchCertifications[8].SubSpecialty.RecordType;
			self.SubCertifications8_Seq:= inRec.BatchCertifications[8].SubSpecialty.Seq;
			self.SubCertifications8_CertificateName:= inRec.BatchCertifications[8].SubSpecialty.CertificateName;
			self.SubCertifications8_IssuingBoard:= inRec.BatchCertifications[8].SubSpecialty.IssuingBoard;
			self.SubCertifications8_CertificateTypeID:= inRec.BatchCertifications[8].SubSpecialty.CertificateTypeID;
			self.SubCertifications8_CertificateType:= inRec.BatchCertifications[8].SubSpecialty.CertificateType;
			self.SubCertifications8_RecertificateInd:= inRec.BatchCertifications[8].SubSpecialty.RecertificateInd;
			self.SubCertifications8_BoardCertified:= inRec.BatchCertifications[8].SubSpecialty.BoardCertified;
			self.SubCertifications8_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].SubSpecialty.IssueDate));
			self.SubCertifications8_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].SubSpecialty.ExpireDate));
			self.SubCertifications8_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].SubSpecialty.ReverificationDate));
			self.SubCertifications8_DurationType:= inRec.BatchCertifications[8].SubSpecialty.DurationType; 
			self.SubCertifications8_DurationTypeDesc:= inRec.BatchCertifications[8].SubSpecialty.DurationTypeDesc;
			self.SubCertifications8_MOCPathway_id:= inRec.BatchCertifications[8].SubSpecialty.MOCPathwayid;
			self.SubCertifications8_MOCPathwayName:= inRec.BatchCertifications[8].SubSpecialty.MOCPathwayName;
			self.SubCertifications8_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].SubSpecialty.DateFirstReported));
			self.SubCertifications8_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[8].SubSpecialty.DateLastReported));
			self.Certifications9_RecordType:= inRec.BatchCertifications[9].RecordType;
			self.Certifications9_Seq:= inRec.BatchCertifications[9].Seq;
			self.Certifications9_CertificateName:= inRec.BatchCertifications[9].CertificateName;
			self.Certifications9_IssuingBoard:= inRec.BatchCertifications[9].IssuingBoard;
			self.Certifications9_CertificateTypeID:= inRec.BatchCertifications[9].CertificateTypeID;
			self.Certifications9_CertificateType:= inRec.BatchCertifications[9].CertificateType;
			self.Certifications9_RecertificateInd:= inRec.BatchCertifications[9].RecertificateInd;
			self.Certifications9_BoardCertified:= inRec.BatchCertifications[9].BoardCertified;
			self.Certifications9_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].IssueDate));
			self.Certifications9_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].ExpireDate));
			self.Certifications9_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].ReverificationDate));
			self.Certifications9_DurationType:= inRec.BatchCertifications[9].DurationType; 
			self.Certifications9_DurationTypeDesc:= inRec.BatchCertifications[9].DurationTypeDesc;
			self.Certifications9_MOCPathway_id:= inRec.BatchCertifications[9].MOCPathwayid;
			self.Certifications9_MOCPathwayName:= inRec.BatchCertifications[9].MOCPathwayName;
			self.Certifications9_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].DateFirstReported));
			self.Certifications9_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].DateLastReported));
			self.SubCertifications9_RecordType:=inRec.BatchCertifications[9].SubSpecialty.RecordType;
			self.SubCertifications9_Seq:= inRec.BatchCertifications[9].SubSpecialty.Seq;
			self.SubCertifications9_CertificateName:= inRec.BatchCertifications[9].SubSpecialty.CertificateName;
			self.SubCertifications9_IssuingBoard:= inRec.BatchCertifications[9].SubSpecialty.IssuingBoard;
			self.SubCertifications9_CertificateTypeID:= inRec.BatchCertifications[9].SubSpecialty.CertificateTypeID;
			self.SubCertifications9_CertificateType:= inRec.BatchCertifications[9].SubSpecialty.CertificateType;
			self.SubCertifications9_RecertificateInd:= inRec.BatchCertifications[9].SubSpecialty.RecertificateInd;
			self.SubCertifications9_BoardCertified:= inRec.BatchCertifications[9].SubSpecialty.BoardCertified;
			self.SubCertifications9_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].SubSpecialty.IssueDate));
			self.SubCertifications9_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].SubSpecialty.ExpireDate));
			self.SubCertifications9_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].SubSpecialty.ReverificationDate));
			self.SubCertifications9_DurationType:= inRec.BatchCertifications[9].SubSpecialty.DurationType; 
			self.SubCertifications9_DurationTypeDesc:= inRec.BatchCertifications[9].SubSpecialty.DurationTypeDesc;
			self.SubCertifications9_MOCPathway_id:= inRec.BatchCertifications[9].SubSpecialty.MOCPathwayid;
			self.SubCertifications9_MOCPathwayName:= inRec.BatchCertifications[9].SubSpecialty.MOCPathwayName;
			self.SubCertifications9_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].SubSpecialty.DateFirstReported));
			self.SubCertifications9_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[9].SubSpecialty.DateLastReported));
			self.Certifications10_RecordType:= inRec.BatchCertifications[10].RecordType;
			self.Certifications10_Seq:= inRec.BatchCertifications[10].Seq;
			self.Certifications10_CertificateName:= inRec.BatchCertifications[10].CertificateName;
			self.Certifications10_IssuingBoard:= inRec.BatchCertifications[10].IssuingBoard;
			self.Certifications10_CertificateTypeID:= inRec.BatchCertifications[10].CertificateTypeID;
			self.Certifications10_CertificateType:= inRec.BatchCertifications[10].CertificateType;
			self.Certifications10_RecertificateInd:= inRec.BatchCertifications[10].RecertificateInd;
			self.Certifications10_BoardCertified:= inRec.BatchCertifications[10].BoardCertified;
			self.Certifications10_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].IssueDate));
			self.Certifications10_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].ExpireDate));
			self.Certifications10_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].ReverificationDate));
			self.Certifications10_DurationType:= inRec.BatchCertifications[10].DurationType; 
			self.Certifications10_DurationTypeDesc:= inRec.BatchCertifications[10].DurationTypeDesc;
			self.Certifications10_MOCPathway_id:= inRec.BatchCertifications[10].MOCPathwayid;
			self.Certifications10_MOCPathwayName:= inRec.BatchCertifications[10].MOCPathwayName;
			self.Certifications10_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].DateFirstReported));
			self.Certifications10_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].DateLastReported));
			self.SubCertifications10_RecordType:=inRec.BatchCertifications[10].SubSpecialty.RecordType;
			self.SubCertifications10_Seq:= inRec.BatchCertifications[10].SubSpecialty.Seq;
			self.SubCertifications10_CertificateName:= inRec.BatchCertifications[10].SubSpecialty.CertificateName;
			self.SubCertifications10_IssuingBoard:= inRec.BatchCertifications[10].SubSpecialty.IssuingBoard;
			self.SubCertifications10_CertificateTypeID:= inRec.BatchCertifications[10].SubSpecialty.CertificateTypeID;
			self.SubCertifications10_CertificateType:= inRec.BatchCertifications[10].SubSpecialty.CertificateType;
			self.SubCertifications10_RecertificateInd:= inRec.BatchCertifications[10].SubSpecialty.RecertificateInd;
			self.SubCertifications10_BoardCertified:= inRec.BatchCertifications[10].SubSpecialty.BoardCertified;
			self.SubCertifications10_IssueDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].SubSpecialty.IssueDate));
			self.SubCertifications10_ExpireDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].SubSpecialty.ExpireDate));
			self.SubCertifications10_ReverificationDate:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].SubSpecialty.ReverificationDate));
			self.SubCertifications10_DurationType:= inRec.BatchCertifications[10].SubSpecialty.DurationType; 
			self.SubCertifications10_DurationTypeDesc:= inRec.BatchCertifications[10].SubSpecialty.DurationTypeDesc;
			self.SubCertifications10_MOCPathway_id:= inRec.BatchCertifications[10].SubSpecialty.MOCPathwayid;
			self.SubCertifications10_MOCPathwayName:= inRec.BatchCertifications[10].SubSpecialty.MOCPathwayName;
			self.SubCertifications10_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].SubSpecialty.DateFirstReported));
			self.SubCertifications10_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.BatchCertifications[10].SubSpecialty.DateLastReported));
			self.Career1_RecordType:= inRec.CareerHistory[1].RecordType;
			self.Career1_Seq:= inRec.CareerHistory[1].Seq;
			self.Career1_Organization:= inRec.CareerHistory[1].Organization;
			self.Career1_Specialty:= inRec.CareerHistory[1].Specialty;
			self.Career1_Position:= inRec.CareerHistory[1].Position;
			self.Career1_CareerType:= inRec.CareerHistory[1].CareerType;
			self.Career1_CareerTypeDesc:= inRec.CareerHistory[1].CareerTypeDesc;
			self.Career1_FromYear:= inRec.CareerHistory[1].FromYear;
			self.Career1_ToYear:= inRec.CareerHistory[1].ToYear;
			self.Career1_City:= inRec.CareerHistory[1].City;
			self.Career1_State:= inRec.CareerHistory[1].State;
			self.Career1_Country:= inRec.CareerHistory[1].Country;
			self.Career1_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[1].DateFirstReported));
			self.Career1_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[1].DateLastReported));
			self.Career2_RecordType:= inRec.CareerHistory[2].RecordType;
			self.Career2_Seq:= inRec.CareerHistory[2].Seq;
			self.Career2_Organization:= inRec.CareerHistory[2].Organization;
			self.Career2_Specialty:= inRec.CareerHistory[2].Specialty;
			self.Career2_Position:= inRec.CareerHistory[2].Position;
			self.Career2_CareerType:= inRec.CareerHistory[2].CareerType;
			self.Career2_CareerTypeDesc:= inRec.CareerHistory[2].CareerTypeDesc;
			self.Career2_FromYear:= inRec.CareerHistory[2].FromYear;
			self.Career2_ToYear:= inRec.CareerHistory[2].ToYear;
			self.Career2_City:= inRec.CareerHistory[2].City;
			self.Career2_State:= inRec.CareerHistory[2].State;
			self.Career2_Country:= inRec.CareerHistory[2].Country;
			self.Career2_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[2].DateFirstReported));
			self.Career2_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[2].DateLastReported));
			self.Career3_RecordType:= inRec.CareerHistory[3].RecordType;
			self.Career3_Seq:= inRec.CareerHistory[3].Seq;
			self.Career3_Organization:= inRec.CareerHistory[3].Organization;
			self.Career3_Specialty:= inRec.CareerHistory[3].Specialty;
			self.Career3_Position:= inRec.CareerHistory[3].Position;
			self.Career3_CareerType:= inRec.CareerHistory[3].CareerType;
			self.Career3_CareerTypeDesc:= inRec.CareerHistory[3].CareerTypeDesc;
			self.Career3_FromYear:= inRec.CareerHistory[3].FromYear;
			self.Career3_ToYear:= inRec.CareerHistory[3].ToYear;
			self.Career3_City:= inRec.CareerHistory[3].City;
			self.Career3_State:= inRec.CareerHistory[3].State;
			self.Career3_Country:= inRec.CareerHistory[3].Country;
			self.Career3_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[3].DateFirstReported));
			self.Career3_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[3].DateLastReported));
			self.Career4_RecordType:= inRec.CareerHistory[4].RecordType;
			self.Career4_Seq:= inRec.CareerHistory[4].Seq;
			self.Career4_Organization:= inRec.CareerHistory[4].Organization;
			self.Career4_Specialty:= inRec.CareerHistory[4].Specialty;
			self.Career4_Position:= inRec.CareerHistory[4].Position;
			self.Career4_CareerType:= inRec.CareerHistory[4].CareerType;
			self.Career4_CareerTypeDesc:= inRec.CareerHistory[4].CareerTypeDesc;
			self.Career4_FromYear:= inRec.CareerHistory[4].FromYear;
			self.Career4_ToYear:= inRec.CareerHistory[4].ToYear;
			self.Career4_City:= inRec.CareerHistory[4].City;
			self.Career4_State:= inRec.CareerHistory[4].State;
			self.Career4_Country:= inRec.CareerHistory[4].Country;
			self.Career4_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[4].DateFirstReported));
			self.Career4_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[4].DateLastReported));
			self.Career5_RecordType:= inRec.CareerHistory[5].RecordType;
			self.Career5_Seq:= inRec.CareerHistory[5].Seq;
			self.Career5_Organization:= inRec.CareerHistory[5].Organization;
			self.Career5_Specialty:= inRec.CareerHistory[5].Specialty;
			self.Career5_Position:= inRec.CareerHistory[5].Position;
			self.Career5_CareerType:= inRec.CareerHistory[5].CareerType;
			self.Career5_CareerTypeDesc:= inRec.CareerHistory[5].CareerTypeDesc;
			self.Career5_FromYear:= inRec.CareerHistory[5].FromYear;
			self.Career5_ToYear:= inRec.CareerHistory[5].ToYear;
			self.Career5_City:= inRec.CareerHistory[5].City;
			self.Career5_State:= inRec.CareerHistory[5].State;
			self.Career5_Country:= inRec.CareerHistory[5].Country;
			self.Career5_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[5].DateFirstReported));
			self.Career5_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[5].DateLastReported));
			self.Career6_RecordType:= inRec.CareerHistory[6].RecordType;
			self.Career6_Seq:= inRec.CareerHistory[6].Seq;
			self.Career6_Organization:= inRec.CareerHistory[6].Organization;
			self.Career6_Specialty:= inRec.CareerHistory[6].Specialty;
			self.Career6_Position:= inRec.CareerHistory[6].Position;
			self.Career6_CareerType:= inRec.CareerHistory[6].CareerType;
			self.Career6_CareerTypeDesc:= inRec.CareerHistory[6].CareerTypeDesc;
			self.Career6_FromYear:= inRec.CareerHistory[6].FromYear;
			self.Career6_ToYear:= inRec.CareerHistory[6].ToYear;
			self.Career6_City:= inRec.CareerHistory[6].City;
			self.Career6_State:= inRec.CareerHistory[6].State;
			self.Career6_Country:= inRec.CareerHistory[6].Country;
			self.Career6_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[6].DateFirstReported));
			self.Career6_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[6].DateLastReported));
			self.Career7_RecordType:= inRec.CareerHistory[7].RecordType;
			self.Career7_Seq:= inRec.CareerHistory[7].Seq;
			self.Career7_Organization:= inRec.CareerHistory[7].Organization;
			self.Career7_Specialty:= inRec.CareerHistory[7].Specialty;
			self.Career7_Position:= inRec.CareerHistory[7].Position;
			self.Career7_CareerType:= inRec.CareerHistory[7].CareerType;
			self.Career7_CareerTypeDesc:= inRec.CareerHistory[7].CareerTypeDesc;
			self.Career7_FromYear:= inRec.CareerHistory[7].FromYear;
			self.Career7_ToYear:= inRec.CareerHistory[7].ToYear;
			self.Career7_City:= inRec.CareerHistory[7].City;
			self.Career7_State:= inRec.CareerHistory[7].State;
			self.Career7_Country:= inRec.CareerHistory[7].Country;
			self.Career7_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[7].DateFirstReported));
			self.Career7_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[7].DateLastReported));
			self.Career8_RecordType:= inRec.CareerHistory[8].RecordType;
			self.Career8_Seq:= inRec.CareerHistory[8].Seq;
			self.Career8_Organization:= inRec.CareerHistory[8].Organization;
			self.Career8_Specialty:= inRec.CareerHistory[8].Specialty;
			self.Career8_Position:= inRec.CareerHistory[8].Position;
			self.Career8_CareerType:= inRec.CareerHistory[8].CareerType;
			self.Career8_CareerTypeDesc:= inRec.CareerHistory[8].CareerTypeDesc;
			self.Career8_FromYear:= inRec.CareerHistory[8].FromYear;
			self.Career8_ToYear:= inRec.CareerHistory[8].ToYear;
			self.Career8_City:= inRec.CareerHistory[8].City;
			self.Career8_State:= inRec.CareerHistory[8].State;
			self.Career8_Country:= inRec.CareerHistory[8].Country;
			self.Career8_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[8].DateFirstReported));
			self.Career8_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[8].DateLastReported));
			self.Career9_RecordType:= inRec.CareerHistory[9].RecordType;
			self.Career9_Seq:= inRec.CareerHistory[9].Seq;
			self.Career9_Organization:= inRec.CareerHistory[9].Organization;
			self.Career9_Specialty:= inRec.CareerHistory[9].Specialty;
			self.Career9_Position:= inRec.CareerHistory[9].Position;
			self.Career9_CareerType:= inRec.CareerHistory[9].CareerType;
			self.Career9_CareerTypeDesc:= inRec.CareerHistory[9].CareerTypeDesc;
			self.Career9_FromYear:= inRec.CareerHistory[9].FromYear;
			self.Career9_ToYear:= inRec.CareerHistory[9].ToYear;
			self.Career9_City:= inRec.CareerHistory[9].City;
			self.Career9_State:= inRec.CareerHistory[9].State;
			self.Career9_Country:= inRec.CareerHistory[9].Country;
			self.Career9_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[9].DateFirstReported));
			self.Career9_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[9].DateLastReported));
			self.Career10_RecordType:= inRec.CareerHistory[10].RecordType;
			self.Career10_Seq:= inRec.CareerHistory[10].Seq;
			self.Career10_Organization:= inRec.CareerHistory[10].Organization;
			self.Career10_Specialty:= inRec.CareerHistory[10].Specialty;
			self.Career10_Position:= inRec.CareerHistory[10].Position;
			self.Career10_CareerType:= inRec.CareerHistory[10].CareerType;
			self.Career10_CareerTypeDesc:= inRec.CareerHistory[10].CareerTypeDesc;
			self.Career10_FromYear:= inRec.CareerHistory[10].FromYear;
			self.Career10_ToYear:= inRec.CareerHistory[10].ToYear;
			self.Career10_City:= inRec.CareerHistory[10].City;
			self.Career10_State:= inRec.CareerHistory[10].State;
			self.Career10_Country:= inRec.CareerHistory[10].Country;
			self.Career10_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[10].DateFirstReported));
			self.Career10_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.CareerHistory[10].DateLastReported));
			self.Education1_RecordType:= inRec.EducationHistory[1].RecordType;
			self.Education1_Seq:= inRec.EducationHistory[1].Seq;
			self.Education1_Degree:= inRec.EducationHistory[1].Degree;
			self.Education1_SchoolCode:= inRec.EducationHistory[1].SchoolCode;
			self.Education1_School:= inRec.EducationHistory[1].School;
			self.Education1_Years:= inRec.EducationHistory[1].Years;
			self.Education1_City:= inRec.EducationHistory[1].City;
			self.Education1_State:= inRec.EducationHistory[1].State;
			self.Education1_Country:= inRec.EducationHistory[1].Country;
			self.Education1_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[1].DateFirstReported));
			self.Education1_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[1].DateLastReported));
			self.Education2_RecordType:= inRec.EducationHistory[2].RecordType;
			self.Education2_Seq:= inRec.EducationHistory[2].Seq;
			self.Education2_Degree:= inRec.EducationHistory[2].Degree;
			self.Education2_SchoolCode:= inRec.EducationHistory[2].SchoolCode;
			self.Education2_School:= inRec.EducationHistory[2].School;
			self.Education2_Years:= inRec.EducationHistory[2].Years;
			self.Education2_City:= inRec.EducationHistory[2].City;
			self.Education2_State:= inRec.EducationHistory[2].State;
			self.Education2_Country:= inRec.EducationHistory[2].Country;
			self.Education2_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[2].DateFirstReported));
			self.Education2_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[2].DateLastReported));
			self.Education3_RecordType:= inRec.EducationHistory[3].RecordType;
			self.Education3_Seq:= inRec.EducationHistory[3].Seq;
			self.Education3_Degree:= inRec.EducationHistory[3].Degree;
			self.Education3_SchoolCode:= inRec.EducationHistory[3].SchoolCode;
			self.Education3_School:= inRec.EducationHistory[3].School;
			self.Education3_Years:= inRec.EducationHistory[3].Years;
			self.Education3_City:= inRec.EducationHistory[3].City;
			self.Education3_State:= inRec.EducationHistory[3].State;
			self.Education3_Country:= inRec.EducationHistory[3].Country;
			self.Education3_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[3].DateFirstReported));
			self.Education3_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[3].DateLastReported));
			self.Education4_RecordType:= inRec.EducationHistory[4].RecordType;
			self.Education4_Seq:= inRec.EducationHistory[4].Seq;
			self.Education4_Degree:= inRec.EducationHistory[4].Degree;
			self.Education4_SchoolCode:= inRec.EducationHistory[4].SchoolCode;
			self.Education4_School:= inRec.EducationHistory[4].School;
			self.Education4_Years:= inRec.EducationHistory[4].Years;
			self.Education4_City:= inRec.EducationHistory[4].City;
			self.Education4_State:= inRec.EducationHistory[4].State;
			self.Education4_Country:= inRec.EducationHistory[4].Country;
			self.Education4_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[4].DateFirstReported));
			self.Education4_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[4].DateLastReported));
			self.Education5_RecordType:= inRec.EducationHistory[5].RecordType;
			self.Education5_Seq:= inRec.EducationHistory[5].Seq;
			self.Education5_Degree:= inRec.EducationHistory[5].Degree;
			self.Education5_SchoolCode:= inRec.EducationHistory[5].SchoolCode;
			self.Education5_School:= inRec.EducationHistory[5].School;
			self.Education5_Years:= inRec.EducationHistory[5].Years;
			self.Education5_City:= inRec.EducationHistory[5].City;
			self.Education5_State:= inRec.EducationHistory[5].State;
			self.Education5_Country:= inRec.EducationHistory[5].Country;
			self.Education5_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[5].DateFirstReported));
			self.Education5_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[5].DateLastReported));
			self.Education6_RecordType:= inRec.EducationHistory[6].RecordType;
			self.Education6_Seq:= inRec.EducationHistory[6].Seq;
			self.Education6_Degree:= inRec.EducationHistory[6].Degree;
			self.Education6_SchoolCode:= inRec.EducationHistory[6].SchoolCode;
			self.Education6_School:= inRec.EducationHistory[6].School;
			self.Education6_Years:= inRec.EducationHistory[6].Years;
			self.Education6_City:= inRec.EducationHistory[6].City;
			self.Education6_State:= inRec.EducationHistory[6].State;
			self.Education6_Country:= inRec.EducationHistory[6].Country;
			self.Education6_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[6].DateFirstReported));
			self.Education6_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[6].DateLastReported));
			self.Education7_RecordType:= inRec.EducationHistory[7].RecordType;
			self.Education7_Seq:= inRec.EducationHistory[7].Seq;
			self.Education7_Degree:= inRec.EducationHistory[7].Degree;
			self.Education7_SchoolCode:= inRec.EducationHistory[7].SchoolCode;
			self.Education7_School:= inRec.EducationHistory[7].School;
			self.Education7_Years:= inRec.EducationHistory[7].Years;
			self.Education7_City:= inRec.EducationHistory[7].City;
			self.Education7_State:= inRec.EducationHistory[7].State;
			self.Education7_Country:= inRec.EducationHistory[7].Country;
			self.Education7_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[7].DateFirstReported));
			self.Education7_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[7].DateLastReported));
			self.Education8_RecordType:= inRec.EducationHistory[8].RecordType;
			self.Education8_Seq:= inRec.EducationHistory[8].Seq;
			self.Education8_Degree:= inRec.EducationHistory[8].Degree;
			self.Education8_SchoolCode:= inRec.EducationHistory[8].SchoolCode;
			self.Education8_School:= inRec.EducationHistory[8].School;
			self.Education8_Years:= inRec.EducationHistory[8].Years;
			self.Education8_City:= inRec.EducationHistory[8].City;
			self.Education8_State:= inRec.EducationHistory[8].State;
			self.Education8_Country:= inRec.EducationHistory[8].Country;
			self.Education8_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[8].DateFirstReported));
			self.Education8_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[8].DateLastReported));
			self.Education9_RecordType:= inRec.EducationHistory[9].RecordType;
			self.Education9_Seq:= inRec.EducationHistory[9].Seq;
			self.Education9_Degree:= inRec.EducationHistory[9].Degree;
			self.Education9_SchoolCode:= inRec.EducationHistory[9].SchoolCode;
			self.Education9_School:= inRec.EducationHistory[9].School;
			self.Education9_Years:= inRec.EducationHistory[9].Years;
			self.Education9_City:= inRec.EducationHistory[9].City;
			self.Education9_State:= inRec.EducationHistory[9].State;
			self.Education9_Country:= inRec.EducationHistory[9].Country;
			self.Education9_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[9].DateFirstReported));
			self.Education9_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[9].DateLastReported));
			self.Education10_RecordType:= inRec.EducationHistory[10].RecordType;
			self.Education10_Seq:= inRec.EducationHistory[10].Seq;
			self.Education10_Degree:= inRec.EducationHistory[10].Degree;
			self.Education10_SchoolCode:= inRec.EducationHistory[10].SchoolCode;
			self.Education10_School:= inRec.EducationHistory[10].School;
			self.Education10_Years:= inRec.EducationHistory[10].Years;
			self.Education10_City:= inRec.EducationHistory[10].City;
			self.Education10_State:= inRec.EducationHistory[10].State;
			self.Education10_Country:= inRec.EducationHistory[10].Country;
			self.Education10_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[10].DateFirstReported));
			self.Education10_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.EducationHistory[10].DateLastReported));
			self.ProfessionalAssociation1_RecordType:= inRec.ProfessionalAssociations[1].RecordType;
			self.ProfessionalAssociation1_Organization:= inRec.ProfessionalAssociations[1].Organization;
			self.ProfessionalAssociation1_PositionHeldYears:= inRec.ProfessionalAssociations[1].PositionHeldYears;
			self.ProfessionalAssociation1_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[1].DateFirstReported));
			self.ProfessionalAssociation1_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[1].DateLastReported));
			self.ProfessionalAssociation2_RecordType:= inRec.ProfessionalAssociations[2].RecordType;
			self.ProfessionalAssociation2_Organization:= inRec.ProfessionalAssociations[2].Organization;
			self.ProfessionalAssociation2_PositionHeldYears:= inRec.ProfessionalAssociations[2].PositionHeldYears;
			self.ProfessionalAssociation2_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[2].DateFirstReported));
			self.ProfessionalAssociation2_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[2].DateLastReported));
			self.ProfessionalAssociation3_RecordType:= inRec.ProfessionalAssociations[3].RecordType;
			self.ProfessionalAssociation3_Organization:= inRec.ProfessionalAssociations[3].Organization;
			self.ProfessionalAssociation3_PositionHeldYears:= inRec.ProfessionalAssociations[3].PositionHeldYears;
			self.ProfessionalAssociation3_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[3].DateFirstReported));
			self.ProfessionalAssociation3_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[3].DateLastReported));
			self.ProfessionalAssociation4_RecordType:= inRec.ProfessionalAssociations[4].RecordType;
			self.ProfessionalAssociation4_Organization:= inRec.ProfessionalAssociations[4].Organization;
			self.ProfessionalAssociation4_PositionHeldYears:= inRec.ProfessionalAssociations[4].PositionHeldYears;
			self.ProfessionalAssociation4_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[4].DateFirstReported));
			self.ProfessionalAssociation4_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[4].DateLastReported));
			self.ProfessionalAssociation5_RecordType:= inRec.ProfessionalAssociations[5].RecordType;
			self.ProfessionalAssociation5_Organization:= inRec.ProfessionalAssociations[5].Organization;
			self.ProfessionalAssociation5_PositionHeldYears:= inRec.ProfessionalAssociations[5].PositionHeldYears;
			self.ProfessionalAssociation5_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[5].DateFirstReported));
			self.ProfessionalAssociation5_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[5].DateLastReported));
			self.ProfessionalAssociation6_RecordType:= inRec.ProfessionalAssociations[6].RecordType;
			self.ProfessionalAssociation6_Organization:= inRec.ProfessionalAssociations[6].Organization;
			self.ProfessionalAssociation6_PositionHeldYears:= inRec.ProfessionalAssociations[6].PositionHeldYears;
			self.ProfessionalAssociation6_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[6].DateFirstReported));
			self.ProfessionalAssociation6_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[6].DateLastReported));
			self.ProfessionalAssociation7_RecordType:= inRec.ProfessionalAssociations[7].RecordType;
			self.ProfessionalAssociation7_Organization:= inRec.ProfessionalAssociations[7].Organization;
			self.ProfessionalAssociation7_PositionHeldYears:= inRec.ProfessionalAssociations[7].PositionHeldYears;
			self.ProfessionalAssociation7_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[7].DateFirstReported));
			self.ProfessionalAssociation7_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[7].DateLastReported));
			self.ProfessionalAssociation8_RecordType:= inRec.ProfessionalAssociations[8].RecordType;
			self.ProfessionalAssociation8_Organization:= inRec.ProfessionalAssociations[8].Organization;
			self.ProfessionalAssociation8_PositionHeldYears:= inRec.ProfessionalAssociations[8].PositionHeldYears;
			self.ProfessionalAssociation8_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[8].DateFirstReported));
			self.ProfessionalAssociation8_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[8].DateLastReported));
			self.ProfessionalAssociation9_RecordType:= inRec.ProfessionalAssociations[9].RecordType;
			self.ProfessionalAssociation9_Organization:= inRec.ProfessionalAssociations[9].Organization;
			self.ProfessionalAssociation9_PositionHeldYears:= inRec.ProfessionalAssociations[9].PositionHeldYears;
			self.ProfessionalAssociation9_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[9].DateFirstReported));
			self.ProfessionalAssociation9_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[9].DateLastReported));
			self.ProfessionalAssociation10_RecordType:= inRec.ProfessionalAssociations[10].RecordType;
			self.ProfessionalAssociation10_Organization:= inRec.ProfessionalAssociations[10].Organization;
			self.ProfessionalAssociation10_PositionHeldYears:= inRec.ProfessionalAssociations[10].PositionHeldYears;
			self.ProfessionalAssociation10_DateFirstReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[10].DateFirstReported));
			self.ProfessionalAssociation10_DateLastReported:= filterZeroes(iesp.ECL2ESP.DateToString(inRec.ProfessionalAssociations[10].DateLastReported));
			self := inRec;
			self := [];
	end;
	export ABMS_Layouts.LayoutOutput_batch setBatchResultsFlags(Healthcare_Provider_Services.ABMS_Layouts.autokeyInput inRecs, ABMS_Layouts.LayoutOutput_batch outRec):= TRANSFORM
			self.Specialty1MatchFlag := inRecs.Specialty <> '' and 
																	(outRec.Certifications1_CertificateName=inRecs.Specialty or 
																	outRec.Certifications2_CertificateName=inRecs.Specialty or 
																	outRec.Certifications3_CertificateName=inRecs.Specialty or 
																	outRec.Certifications4_CertificateName=inRecs.Specialty or 
																	outRec.Certifications5_CertificateName=inRecs.Specialty or 
																	outRec.Certifications6_CertificateName=inRecs.Specialty or 
																	outRec.Certifications7_CertificateName=inRecs.Specialty or 
																	outRec.Certifications8_CertificateName=inRecs.Specialty or 
																	outRec.Certifications9_CertificateName=inRecs.Specialty or 
																	outRec.Certifications10_CertificateName=inRecs.Specialty or
																	outRec.Certifications1_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications2_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications3_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications4_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications5_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications6_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications7_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications8_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications9_IssuingBoard=inRecs.Specialty or 
																	outRec.Certifications10_IssuingBoard=inRecs.Specialty);
			self.SubSpecialty1MatchFlag := inRecs.SubSpecialty <> '' and 
																	(outRec.SubCertifications1_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications2_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications3_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications4_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications5_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications6_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications7_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications8_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications9_CertificateName=inRecs.SubSpecialty or 
																	outRec.SubCertifications10_CertificateName=inRecs.SubSpecialty);
			self.Specialty2MatchFlag := inRecs.Specialty2 <> '' and 
																	(outRec.Certifications1_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications2_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications3_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications4_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications5_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications6_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications7_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications8_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications9_CertificateName=inRecs.Specialty2 or 
																	outRec.Certifications10_CertificateName=inRecs.Specialty2 or
																	outRec.Certifications1_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications2_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications3_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications4_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications5_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications6_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications7_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications8_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications9_IssuingBoard=inRecs.Specialty2 or 
																	outRec.Certifications10_IssuingBoard=inRecs.Specialty2);
			self.SubSpecialty2MatchFlag := inRecs.SubSpecialty2 <> '' and 
																	(outRec.SubCertifications1_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications2_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications3_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications4_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications5_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications6_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications7_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications8_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications9_CertificateName=inRecs.SubSpecialty2 or 
																	outRec.SubCertifications10_CertificateName=inRecs.SubSpecialty2);
			self.Specialty3MatchFlag := inRecs.Specialty3 <> '' and 
																	(outRec.Certifications1_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications2_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications3_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications4_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications5_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications6_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications7_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications8_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications9_CertificateName=inRecs.Specialty3 or 
																	outRec.Certifications10_CertificateName=inRecs.Specialty3 or
																	outRec.Certifications1_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications2_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications3_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications4_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications5_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications6_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications7_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications8_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications9_IssuingBoard=inRecs.Specialty3 or 
																	outRec.Certifications10_IssuingBoard=inRecs.Specialty3);
			self.SubSpecialty3MatchFlag := inRecs.SubSpecialty3 <> '' and 
																	(outRec.SubCertifications1_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications2_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications3_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications4_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications5_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications6_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications7_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications8_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications9_CertificateName=inRecs.SubSpecialty3 or 
																	outRec.SubCertifications10_CertificateName=inRecs.SubSpecialty3);
			self.Specialty4MatchFlag := inRecs.Specialty4 <> '' and 
																	(outRec.Certifications1_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications2_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications3_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications4_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications5_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications6_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications7_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications8_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications9_CertificateName=inRecs.Specialty4 or 
																	outRec.Certifications10_CertificateName=inRecs.Specialty4 or
																	outRec.Certifications1_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications2_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications3_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications4_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications5_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications6_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications7_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications8_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications9_IssuingBoard=inRecs.Specialty4 or 
																	outRec.Certifications10_IssuingBoard=inRecs.Specialty4);
			self.SubSpecialty4MatchFlag := inRecs.SubSpecialty4 <> '' and 
																	(outRec.SubCertifications1_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications2_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications3_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications4_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications5_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications6_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications7_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications8_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications9_CertificateName=inRecs.SubSpecialty4 or 
																	outRec.SubCertifications10_CertificateName=inRecs.SubSpecialty4);
			self.Specialty5MatchFlag := inRecs.Specialty5 <> '' and 
																	(outRec.Certifications1_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications2_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications3_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications4_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications5_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications6_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications7_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications8_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications9_CertificateName=inRecs.Specialty5 or 
																	outRec.Certifications10_CertificateName=inRecs.Specialty5 or
																	outRec.Certifications1_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications2_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications3_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications4_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications5_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications6_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications7_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications8_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications9_IssuingBoard=inRecs.Specialty5 or 
																	outRec.Certifications10_IssuingBoard=inRecs.Specialty5);
			self.SubSpecialty5MatchFlag := inRecs.SubSpecialty5 <> '' and 
																	(outRec.SubCertifications1_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications2_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications3_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications4_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications5_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications6_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications7_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications8_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications9_CertificateName=inRecs.SubSpecialty5 or 
																	outRec.SubCertifications10_CertificateName=inRecs.SubSpecialty5);
			self := outRec;
			self := [];
	end;
end;