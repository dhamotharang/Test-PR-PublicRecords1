import doxie, iesp, AutoStandardI, NPPES, Healthcare_Header_Services;

EXPORT Transforms :=  MODULE
	export iesp.healthcare.t_HealthCareBusinessAddress processAddress(doxie.ingenix_provider_module.ingenix_addr_rpt_rec inAddr):= TRANSFORM
		self.address := iesp.ECL2ESP.SetAddress(inAddr.prov_clean_prim_name, inAddr.prov_clean_prim_range, inAddr.prov_clean_predir, inAddr.prov_clean_postdir,
           inAddr.prov_clean_addr_suffix, inAddr.prov_clean_unit_desig, inAddr.prov_clean_sec_range, inAddr.prov_clean_p_city_name,
           inAddr.prov_clean_st, inAddr.prov_clean_zip, inAddr.prov_clean_zip4, '');
		self.phones := choosen(project(inAddr.phone, transform (iesp.healthcare.t_HealthCarePhones, Self.Phone10 := Left.PhoneNumber, Self.PhoneType := Left.PhoneType)),iesp.constants.HPR.MAX_ADDRESSES_PHONES);
		self.Location.Latitude := inAddr.prov_clean_geo_lat;
		self.Location.Longitude := inAddr.prov_clean_geo_long;
		self.datefirstseen := iesp.ECL2ESP.toDatestring8(inAddr.first_seen);
		self.datelastseen := iesp.ECL2ESP.toDatestring8(inAddr.last_seen);
		self := [];
	end;
	export iesp.healthcare.t_HealthCareBusinessAddress processAddressSearchService(Healthcare_Provider_Services.Layouts.layout_addressinfo inAddr):= TRANSFORM
		tmp_off_phone:=dataset([{inAddr.PhoneNumber,'OFFICE PHONE'}],iesp.healthcare.t_HealthCarePhones);
		tmp_off_fax:=dataset([{inAddr.FaxNumber,'OFFICE FAX'}],iesp.healthcare.t_HealthCarePhones);
		self.address := iesp.ECL2ESP.SetAddress(inAddr.prim_name, inAddr.prim_range, inAddr.predir, inAddr.postdir,
           inAddr.addr_suffix, inAddr.unit_desig, inAddr.sec_range, inAddr.p_city_name,
           inAddr.st, inAddr.z5, inAddr.zip4, '');
		self.phones := choosen(tmp_off_phone(Phone10<>'')+tmp_off_fax(Phone10<>''),iesp.constants.HPR.MAX_ADDRESSES_PHONES);
		self.Location.Latitude := inAddr.geo_lat;
		self.Location.Longitude := inAddr.geo_long;
		self.datefirstseen := iesp.ECL2ESP.toDatestring8(if(length(trim(inAddr.first_seen,all))>0,inAddr.first_seen,inAddr.v_first_seen));
		self.datelastseen := iesp.ECL2ESP.toDatestring8(if(length(trim(inAddr.last_seen,all))>0,inAddr.last_seen,inAddr.v_last_seen));
		self := [];
	end;
	export iesp.share.t_GeoAddress processSanctionAddress(doxie.ingenix_provider_module.ingenix_sanc_child_rec_full inAddr):= TRANSFORM
		self.address := iesp.ECL2ESP.SetAddress(inAddr.ProvCo_Address_Clean_prim_name, inAddr.ProvCo_Address_clean_prim_range, inAddr.ProvCo_Address_clean_predir, inAddr.ProvCo_Address_Clean_postdir,
           inAddr.ProvCo_Address_clean_addr_suffix, inAddr.ProvCo_Address_clean_unit_desig, inAddr.ProvCo_Address_clean_sec_range, inAddr.ProvCo_Address_clean_p_city_name,
           inAddr.ProvCo_Address_clean_st, inAddr.ProvCo_Address_clean_zip, '', '');
		self.Location.Latitude := inAddr.ProvCo_Address_clean_geo_lat;
		self.Location.Longitude := inAddr.ProvCo_Address_clean_geo_long;
	end;

	export iesp.proflicense.t_PL2BusAddrAndPhone processReportProvAddress(doxie.ingenix_provider_module.ingenix_addr_rpt_rec inAddr):= TRANSFORM
		self.address := iesp.ECL2ESP.SetAddress(inAddr.prov_clean_prim_name, inAddr.prov_clean_prim_range, inAddr.prov_clean_predir, inAddr.prov_clean_postdir,
           inAddr.prov_clean_addr_suffix, inAddr.prov_clean_unit_desig, inAddr.prov_clean_sec_range, inAddr.prov_clean_p_city_name,
           inAddr.prov_clean_st, inAddr.prov_clean_zip, inAddr.prov_clean_zip4, '');
		self.PhonesInfo := choosen(project(inAddr.phone, transform (iesp.proflicense.t_PL2PhoneInfo, Self.Number := Left.PhoneNumber, Self._Type := Left.PhoneType)),iesp.Constants.PROFLIC.MAX_PHONESINFO);
	end;
	
	export iesp.healthcare.t_HealthCareSanctionConsolidatedReport processSanctions(doxie.ingenix_provider_module.ingenix_sanc_child_rec_full inSanction):= TRANSFORM
		self.SanctionId := (string)inSanction.sanc_id;
		self.UniqueId := inSanction.did;
		self.Name := iesp.ECL2ESP.SetName(inSanction.prov_clean_fname, inSanction.prov_clean_mname, inSanction.prov_clean_lname, inSanction.Prov_Clean_name_suffix, inSanction.Prov_Clean_title, inSanction.SANC_BUSNME);
		self.GeoAddress := project(inSanction, processSanctionAddress(left));
		self.DOB := iesp.ECL2ESP.toDatestring8(inSanction.sanc_dob);
		self.TaxId := inSanction.sanc_tin;
		self.UPIN := inSanction.sanc_upin;
		self.Source := inSanction.sanc_src_desc;
		self.SanctionTerm := inSanction.sanc_terms;
		self.SanctionType := inSanction.sanc_type;
		self.BoardType := inSanction.sanc_brdtype;
		self.ProviderType := inSanction.sanc_provtype;
		self.Fines := inSanction.sanc_fines;
		self.SanctionReason := inSanction.sanc_reas;
		self.Conditions := inSanction.sanc_cond;
		self.LicenseNumber := inSanction.sanc_licnbr;
		self.SanctionState := inSanction.sanc_sancst;
		self.SanctionDate := iesp.ECL2ESP.toDatestring8(inSanction.sanc_sancdte_form);
		self.DateLastReported := iesp.ECL2ESP.toDatestring8(inSanction.date_last_reported);
		self.DateFirstSeen := iesp.ECL2ESP.toDatestring8(inSanction.date_first_seen);
		self.DateLastSeen := iesp.ECL2ESP.toDatestring8(inSanction.date_last_seen);
		self.LicenseReinstatedDate := iesp.ECL2ESP.toDatestring8(inSanction.sanc_reindte_form);
		self.FraudAbuseFlag := if(inSanction.sanc_fab='Y' or inSanction.sanc_fab='TRUE',true,false);
		self.LostOfLicenseIndicator := if(inSanction.sanc_unamb_ind='Y' or inSanction.sanc_unamb_ind='TRUE',true,false);
		self.DateFirstReported := iesp.ECL2ESP.toDatestring8(inSanction.date_first_reported);
		self.ProcessDate := iesp.ECL2ESP.toDatestring8(inSanction.process_date);
		self.SanctionGroupType := inSanction.sanc_grouptype;
		self.SanctionSubGroupType := inSanction.sanc_subgrouptype;
		self.NationalProviderId := '';//Not in the Sanction file
		self.nppesVerified := inSanction.nppesVerified;
		self.DerivedReinstateDateIndicator := inSanction.LNDerivedReinstateDate;
		self.SanctionTypePriority := (string)inSanction.sanc_priority;
		self := [];
	end;
	export iesp.healthcareconsolidatedsearch.t_HealthCareConsolidatedSearchProvider formatSearchServiceProviderOutput(Healthcare_Provider_Services.Layouts.CombinedHeaderResultsDoxieLayout resultRec, dataset(Healthcare_Provider_Services.Layouts.autokeyInput) aInputData, IParams.searchParams searchCriteria =  module(project(AutoStandardI.GlobalModule(), IParams.searchParams, opt)) end)  := TRANSFORM 
		self.ProviderId := if(resultRec.isHeaderResult,(string)resultRec.hcid,(string)resultRec.SrcID);
		self.ProviderSrc := resultRec.Src;
		self.sex := resultRec.Names[1].Gender;
		self.UniqueIds := choosen(project(resultRec.dids, transform (iesp.share.t_StringArrayItem, Self.value := (string)Left.did)),iesp.Constants.HPR.MAX_UNIQUEIDS);
		self.BusinessIds := choosen(project(resultRec.bdids, transform (iesp.share.t_StringArrayItem, Self.value := (string)Left.bdid)),iesp.Constants.HPR.MAX_BDIDS);
		self.Names := choosen(project(dedup(sort(resultRec.names,LastName,FirstName,MiddleName),LastName,FirstName,MiddleName), transform(iesp.share.t_Name, self := iesp.ECL2ESP.SetName(left.FirstName, left.MiddleName, left.LastName, left.Suffix,'',if(left.LastName <> '','',left.CompanyName)))),iesp.Constants.HPR.MAX_NAMES);
		self.Languages := choosen(project(dedup(sort(resultRec.Languages,language),language), transform (iesp.share.t_StringArrayItem, Self.value := Left.language)),iesp.Constants.HPR.MAX_LANGUAGES);
		self.DOBs := choosen(project(dedup(sort(resultRec.dobs,-dob),dob), transform (iesp.share.t_Date, Self := if(resultRec.glb_ok,iesp.ECL2ESP.toDatestring8(Left.dob),iesp.ECL2ESP.ApplyDateMask(iesp.ECL2ESP.toDatestring8(Left.dob),1)))),iesp.Constants.HPR.MAX_DOBS);
		tmp_feins := project(dedup(sort(resultRec.feins,fein),fein), transform (iesp.share.t_StringArrayItem, Self.value := Left.fein));
		self.TaxIds := choosen(project(dedup(sort(resultRec.taxids,taxid),taxid), transform (iesp.share.t_StringArrayItem, Self.value := Left.taxid))+tmp_feins,iesp.Constants.HPR.MAX_TAXIDS);
		self.UPINs := choosen(project(dedup(sort(resultRec.upins,upin),upin), transform (iesp.share.t_StringArrayItem, Self.value := Left.upin)),iesp.Constants.HPR.MAX_UPINS);
		self.Degrees := choosen(project(dedup(sort(resultRec.degrees,degree),degree), transform (iesp.share.t_StringArrayItem, Self.value := Left.degree)),iesp.Constants.HPR.MAX_DEGREES);
		npi_recs := project(resultRec.NPIRaw,transform(iesp.share.t_StringArrayItem, Self.value := Left.NPIInformation.NPINumber));
		npi_recs_orig := project(resultRec.npis,transform (iesp.share.t_StringArrayItem, Self.value := Left.npi));
		npi_recs_filter := join(npi_recs,npi_recs_orig,left.value=right.value,right only);//Only keep those that are not dupes
		npi_recs_final := dedup(npi_recs+npi_recs_filter,record,all);
		self.NationalProviderIds := choosen(npi_recs_final,iesp.Constants.HPR.MAX_NPIS);
		self.NPPESVerified := resultRec.NPPESVerified;
		self.DEAInformation := choosen(project(dedup(sort(resultRec.deas,dea,-expiration_date),dea,expiration_date), transform (iesp.healthcare.t_DEAControlledSubstanceRecordEx, self.Number := left.dea, self.registrationNumber := left.dea, self.ExpirationDate := iesp.ECL2ESP.toDatestring8(Left.expiration_date), self := [])),iesp.Constants.HPR.MAX_DEAS);
		self.GroupAffiliations := choosen(project(dedup(sort(resultRec.affiliates,stringlib.StringToLowerCase(name)),stringlib.StringToLowerCase(name)), transform (iesp.healthcare.t_ProviderRelatedEntity, self.BusinessId:= if(~searchCriteria.IncludeGroupAffiliations,skip,(string)left.bdid), self.fein:= left.tin; self.Name:=left.name)),iesp.Constants.HPR.MAX_GROUPAFFILIATIONS);
		self.HospitalAffiliations := choosen(project(dedup(sort(resultRec.hospitals,stringlib.StringToLowerCase(name)),stringlib.StringToLowerCase(name)),  transform (iesp.healthcare.t_ProviderRelatedEntity,  self.BusinessId:=if(~searchCriteria.IncludeHospitalAffiliations,skip,(string)left.bdid), self.fein:= left.tin; self.Name:=left.name)),iesp.Constants.HPR.MAX_HOSPITALAFFILIATIONS);
		self.Residencies := choosen(project(dedup(sort(resultRec.Residencies,residency),residency), transform(iesp.healthcare.t_ProviderRelatedEntity, self.BusinessId:= if(~searchCriteria.IncludeResidencies,skip,left.bdid), self.Name:=left.residency, self:=[];)),iesp.Constants.HPR.MAX_RESIDENCIES);
		self.MedicalSchools := choosen(project(dedup(sort(resultRec.MedSchools,medschoolname,-graduationyear),medschoolname,graduationyear), transform(iesp.healthcare.t_MedicalSchool, self.BusinessId:=left.bdid, self.Name:=left.medschoolname, self.GraduationYear:=(Integer)left.graduationyear, self:=[];)),iesp.Constants.HPR.MAX_MEDICALSCHOOLS);
		self.Specialties := choosen(project(dedup(sort(resultRec.Specialties,specialtyname,specialtygroupname),stringlib.StringToLowerCase(specialtyname),stringlib.StringToLowerCase(specialtygroupname)), transform(iesp.healthcare.t_Specialty, self.SpecialtyId:=if(~searchCriteria.IncludeSpecialties,skip,(String)left.specialtyid), self.SpecialtyName:=left.specialtyname, self.GroupId:=(String)left.specialtygroupid, self.GroupName:=left.specialtygroupname)),iesp.Constants.HPR.MAX_SPECIALTIES);
		self.BusinessAddresses := choosen(project(resultRec.Addresses, processAddressSearchService(left)),iesp.Constants.HPR.MAX_BUSINESSADDRESSES);
		self.Licenses := choosen(project(resultRec.StateLicenses, transform(iesp.healthcare.t_ProviderLicenseInfo, self.LicenseState:=if(~searchCriteria.IncludeLicenses,skip,left.licensestate), self.LicenseNumber :=left.licensenumber, self.EffectiveDate:=iesp.ECL2ESP.toDatestring8(Left.effective_date), self.ExpirationDate:=iesp.ECL2ESP.toDatestring8(Left.termination_date), self.LicenseSeqID := left.licenseSeq;self.LicenseType:=left.LicenseType;self.LicenseNumberOrig:= if(left.LicenseNumberFmt <> '',left.LicenseNumberFmt,''); self := left)),iesp.Constants.HPR.MAX_LICENSES);
		self.HasSanctions := exists(resultRec.Sanctions);
		self.HasLEIESanctions:= exists(resultRec.Sanctions(sanc_grouptype='FEDERAL',sanc_subgrouptype='OIG'));
		self.HasEPLSSanctions:= exists(resultRec.Sanctions(sanc_grouptype='FEDERAL',sanc_subgrouptype='GSA' or sanc_subgrouptype='OPM'));
		self.HasDisciplinarySanctions:=exists(resultRec.Sanctions(sanc_grouptype='FEDERAL',sanc_subgrouptype='')) or exists(resultRec.Sanctions(sanc_grouptype='STATE'));
		self.SanctionIds := choosen(project(resultRec.Sanctions, transform (iesp.share.t_StringArrayItem, Self.value := (string)Left.sanc_id)),iesp.Constants.HPR.MAX_SANCTIONIDS);
		self.Sanctions := choosen(project(resultRec.Sanctions, processSanctions(project(left,transform(doxie.ingenix_provider_module.ingenix_sanc_child_rec_full,self:=left)))),iesp.Constants.HPR.MAX_SANCTIONS);
		self.Deceased := resultRec.DeathLookup or resultRec.DateofDeath <> '' or exists(resultRec.optouts(death_ind='Y')) or exists(resultRec.customerDeath);
		self.IsFederalDeceased := resultRec.DeathLookup or resultRec.DateofDeath <> '' or exists(resultRec.optouts(death_ind='Y'));
		self.IsStateDeceased := exists(resultRec.customerDeath);
		self.SSNs := choosen(dedup(sort(project(resultRec.ssns, transform (iesp.share.t_StringArrayItem, Self.value := Left.ssn))+project(resultRec.ssnlookups, transform (iesp.share.t_StringArrayItem, Self.value := Left.ssn)),value),value),iesp.Constants.HPR.MAX_SSNS);
		self.MedicareOptOuts := project(resultRec.optouts, transform(iesp.healthcare.t_MedicareOptOut,
																						self.OptOutSiteDescription:=left.optout_sitedesc;
																						self.AffidavitReceivedDate:=iesp.ECL2ESP.toDatestring8(Left.optout_rec_dt);
																						self.OptOutEffectiveDate:=iesp.ECL2ESP.toDatestring8(left.optout_eff_dt);
																						self.OptOutTerminationDate:=iesp.ECL2ESP.toDatestring8(left.optout_term_dt);
																						self.OptOutStatus:=left.optout_status;
																						self := []))[1];
		//Add rules about DOD
		dodTmp := if(length(trim(resultRec.DateofDeath,all))>0,iesp.ECL2ESP.toDatestring8(resultRec.DateofDeath));
		dodFull := dedup(sort(project(resultRec.optouts(death_ind<>''), transform(iesp.share.t_Date, self:=iesp.ECL2ESP.toDatestring8(left.death_dt)))+dodTmp,-year,-month,-day),year,month,day)(year>0);
		self.DODs := if(searchCriteria.IsShowAllDoDs,dodFull,choosen(dodFull,1));
		self.CLIARecords := resultRec.CLIARaw;
		self.NPIReports := choosen(resultRec.NPIRaw,1);
		self.Taxonomies := choosen(project(resultRec.Taxonomy,transform(iesp.proflicense.t_Taxonomy,self:=left)),iesp.Constants.PROFLIC.MAX_TAXONOMY);
		self.StateLicenseRecords := choosen(resultRec.customerLicense,iesp.Constants.PROFLIC.MAX_TAXONOMY);
		self.StateVitalRecords := choosen(resultRec.customerDeath,iesp.Constants.PROFLIC.MAX_TAXONOMY);
		self.Certifications := resultRec.abmsRaw[1].Certifications;//Let's hope for the best in matching.
		self.Verifications.VerificationConfiguration := resultRec.VerificationInfo[1].VerificationConfiguration;
		self.Verifications.VerificationConfigurationStatus := resultRec.VerificationInfo[1].VerificationConfigurationStatus;
		self.Verifications.VerificationConfigurationOutcome := resultRec.VerificationInfo[1].VerificationConfigurationOutcome;
		self.Verifications.NameVerified := resultRec.VerificationInfo[1].NameVerified;
		self.Verifications.CompanyNameVerified := resultRec.VerificationInfo[1].CompanyNameVerified;
		self.Verifications.AddressVerified := resultRec.VerificationInfo[1].AddressVerified;
		self.Verifications.PhoneVerified := resultRec.VerificationInfo[1].PhoneVerified;
		self.Verifications.UPINVerified := resultRec.VerificationInfo[1].UPINVerified;
		self.Verifications.NPIVerified := resultRec.VerificationInfo[1].NPIVerified;
		self.Verifications.FEINVerified := resultRec.VerificationInfo[1].FEINVerified;
		self.Verifications.FEINSuppliedExists := resultRec.VerificationInfo[1].FEINSuppliedExists;
		self.Verifications.SSNVerified := resultRec.VerificationInfo[1].SSNVerified;
		self.Verifications.LicenseVerified := resultRec.VerificationInfo[1].LicenseVerified;
		self.Verifications.CLIAVerified := resultRec.VerificationInfo[1].CLIAVerified;
		self.Verifications.MedicalSchoolNameVerified := resultRec.VerificationInfo[1].MedicalSchoolNameVerified;
		self.Verifications.GraduationYearVerified := resultRec.VerificationInfo[1].GraduationYearVerified;
		self.Verifications.NPIValid := resultRec.VerificationInfo[1].NPIValid;
		self.Verifications.NPISuppliedExists := resultRec.VerificationInfo[1].NPISuppliedExists;
		self.Verifications.LicenseValid := resultRec.VerificationInfo[1].LicenseValid;
		self.Verifications.CLIAValid := resultRec.VerificationInfo[1].CLIAValid;
		self.Verifications.DEAVerified := resultRec.VerificationInfo[1].DEAVerified;
		self.Verifications.DEA2Verified := resultRec.VerificationInfo[1].DEA2Verified;
		self.Verifications.DEAValid := resultRec.VerificationInfo[1].DEAValid;
		self.Verifications.DEA2Valid := resultRec.VerificationInfo[1].DEA2Valid;
		self.Verifications.TaxonomyVerified := resultRec.VerificationInfo[1].TaxonomyVerified;
		self.Verifications.Taxonomy1Verified := resultRec.VerificationInfo[1].Taxonomy1Verified;
		self.Verifications.Taxonomy2Verified := resultRec.VerificationInfo[1].Taxonomy2Verified;
		self.Verifications.Taxonomy3Verified := resultRec.VerificationInfo[1].Taxonomy3Verified;
		self.Verifications.Taxonomy4Verified := resultRec.VerificationInfo[1].Taxonomy4Verified;
		self.Verifications.Taxonomy5Verified := resultRec.VerificationInfo[1].Taxonomy5Verified;
		self.Verifications.License1Verified := resultRec.VerificationInfo[1].License1Verified;
		self.Verifications.License1Valid := resultRec.VerificationInfo[1].License1Valid;
		self.Verifications.License1ResultMatch := resultRec.VerificationInfo[1].License1ResultMatch;
		self.Verifications.License2Verified := resultRec.VerificationInfo[1].License2Verified;
		self.Verifications.License2Valid := resultRec.VerificationInfo[1].License2Valid;
		self.Verifications.License2ResultMatch := resultRec.VerificationInfo[1].License2ResultMatch;
		self.Verifications.License3Verified := resultRec.VerificationInfo[1].License3Verified;
		self.Verifications.License3Valid := resultRec.VerificationInfo[1].License3Valid;
		self.Verifications.License3ResultMatch := resultRec.VerificationInfo[1].License3ResultMatch;
		self.Verifications.License4Verified := resultRec.VerificationInfo[1].License4Verified;
		self.Verifications.License4Valid := resultRec.VerificationInfo[1].License4Valid;
		self.Verifications.License4ResultMatch := resultRec.VerificationInfo[1].License4ResultMatch;
		self.Verifications.License5Verified := resultRec.VerificationInfo[1].License5Verified;
		self.Verifications.License5Valid := resultRec.VerificationInfo[1].License5Valid;
		self.Verifications.License5ResultMatch := resultRec.VerificationInfo[1].License5ResultMatch;
		self.Verifications.License6Verified := resultRec.VerificationInfo[1].License6Verified;
		self.Verifications.License6Valid := resultRec.VerificationInfo[1].License6Valid;
		self.Verifications.License6ResultMatch := resultRec.VerificationInfo[1].License6ResultMatch;
		self.Verifications.License7Verified := resultRec.VerificationInfo[1].License7Verified;
		self.Verifications.License7Valid := resultRec.VerificationInfo[1].License7Valid;
		self.Verifications.License7ResultMatch := resultRec.VerificationInfo[1].License7ResultMatch;
		self.Verifications.License8Verified := resultRec.VerificationInfo[1].License8Verified;
		self.Verifications.License8Valid := resultRec.VerificationInfo[1].License8Valid;
		self.Verifications.License8ResultMatch := resultRec.VerificationInfo[1].License8ResultMatch;
		self.Verifications.License9Verified := resultRec.VerificationInfo[1].License9Verified;
		self.Verifications.License9Valid := resultRec.VerificationInfo[1].License9Valid;
		self.Verifications.License9ResultMatch := resultRec.VerificationInfo[1].License9ResultMatch;
		self.Verifications.License10Verified := resultRec.VerificationInfo[1].License10Verified;
		self.Verifications.License10Valid := resultRec.VerificationInfo[1].License10Valid;
		self.Verifications.License10ResultMatch := resultRec.VerificationInfo[1].License10ResultMatch;
		self.Verifications.BoardCertifiedSpecialtyVerified := resultRec.VerificationInfo[1].BoardCertifiedSpecialtyVerified;
		self.Verifications.BoardCertifiedSubSpecialtyVerified := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialtyVerified;
		self.Verifications.BoardCertifiedSpecialty1Verified := resultRec.VerificationInfo[1].BoardCertifiedSpecialty1Verified;
		self.Verifications.BoardCertifiedSpecialty2Verified := resultRec.VerificationInfo[1].BoardCertifiedSpecialty2Verified;
		self.Verifications.BoardCertifiedSpecialty3Verified := resultRec.VerificationInfo[1].BoardCertifiedSpecialty3Verified;
		self.Verifications.BoardCertifiedSpecialty4Verified := resultRec.VerificationInfo[1].BoardCertifiedSpecialty4Verified;
		self.Verifications.BoardCertifiedSpecialty5Verified := resultRec.VerificationInfo[1].BoardCertifiedSpecialty5Verified;
		self.Verifications.BoardCertifiedSubSpecialty1Verified := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty1Verified;
		self.Verifications.BoardCertifiedSubSpecialty2Verified := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty2Verified;
		self.Verifications.BoardCertifiedSubSpecialty3Verified := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty3Verified;
		self.Verifications.BoardCertifiedSubSpecialty4Verified := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty4Verified;
		self.Verifications.BoardCertifiedSubSpecialty5Verified := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty5Verified;
		self.Verifications.BoardCertifiedSpecialtyValid := resultRec.VerificationInfo[1].BoardCertifiedSpecialtyValid;
		self.Verifications.BoardCertifiedSubSpecialtyValid := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialtyValid;
		self.Verifications.BoardCertifiedSpecialty1Valid := resultRec.VerificationInfo[1].BoardCertifiedSpecialty1Valid;
		self.Verifications.BoardCertifiedSpecialty2Valid := resultRec.VerificationInfo[1].BoardCertifiedSpecialty2Valid;
		self.Verifications.BoardCertifiedSpecialty3Valid := resultRec.VerificationInfo[1].BoardCertifiedSpecialty3Valid;
		self.Verifications.BoardCertifiedSpecialty4Valid := resultRec.VerificationInfo[1].BoardCertifiedSpecialty4Valid;
		self.Verifications.BoardCertifiedSpecialty5Valid := resultRec.VerificationInfo[1].BoardCertifiedSpecialty5Valid;
		self.Verifications.BoardCertifiedSubSpecialty1Valid := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty1Valid;
		self.Verifications.BoardCertifiedSubSpecialty2Valid := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty2Valid;
		self.Verifications.BoardCertifiedSubSpecialty3Valid := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty3Valid;
		self.Verifications.BoardCertifiedSubSpecialty4Valid := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty4Valid;
		self.Verifications.BoardCertifiedSubSpecialty5Valid := resultRec.VerificationInfo[1].BoardCertifiedSubSpecialty5Valid;
		self := [];
	end;


	export iesp.proflicense.t_ProviderRecord formatReportProviderOutput(Healthcare_Header_Services.Layouts.LegacyReportWithVerifications recs, Healthcare_Header_Services.IParams.reportParams inputData =  module(project(AutoStandardI.GlobalModule(), Healthcare_Header_Services.IParams.reportParams, opt)) end)  := TRANSFORM 
		tmpSkip := if(recs.providerid<>'',recs.providerid,skip);
		self.ProviderNumber := recs.providerid;
		self.Gender := recs.gender_name;
		self.SanctionFlag := recs.sanc_flag;
		self.SanctionIds := choosen(project(recs.sanction_id, transform (iesp.share.t_StringArrayItem, Self.value := (string)Left.sanc_id)),iesp.Constants.PROFLIC.MAX_SANCTIONIDS);
		self.Names := choosen(project(dedup(sort(recs.name,prov_clean_lname,prov_clean_fname,prov_clean_mname),prov_clean_lname,prov_clean_fname,prov_clean_mname), transform(iesp.share.t_Name, self := iesp.ECL2ESP.SetName(left.prov_clean_fname, left.prov_clean_mname, left.prov_clean_lname, left.prov_clean_name_suffix,'',''))),iesp.Constants.PROFLIC.MAX_NAMES);
		self.TaxIds := choosen(project(dedup(sort(recs.taxid,taxid),taxid), transform (iesp.share.t_StringArrayItem, Self.value := Left.taxid)),iesp.Constants.PROFLIC.MAX_TAXIDS);
		self.DOBs := choosen(project(dedup(sort(recs.dob,-birthdate),birthdate), transform (iesp.share.t_Date, Self := if(recs.glb_ok,iesp.ECL2ESP.toDatestring8(Left.birthdate),iesp.ECL2ESP.ApplyDateMask(iesp.ECL2ESP.toDatestring8(Left.birthdate),1)))),iesp.Constants.PROFLIC.MAX_DOBS);
		self.UPINs := choosen(project(dedup(sort(recs.upin,upin),upin), transform (iesp.share.t_StringArrayItem, Self.value := Left.upin)),iesp.Constants.PROFLIC.MAX_UPINS);
		self.NationalProviderIdentifiers := choosen(project(dedup(sort(recs.npi,npi),npi), transform (iesp.share.t_StringArrayItem, Self.value := Left.npi)),iesp.Constants.PROFLIC.MAX_UPINS);
		self.Languages := choosen(project(dedup(sort(recs.language,language),language), transform (iesp.share.t_StringArrayItem, Self.value := Left.language)),iesp.Constants.PROFLIC.MAX_LANGUAGES);
		self.LicenseInfos := if(inputData.IncludeLicenses,choosen(project(dedup(sort(recs.license,licensestate,licensenumber,-termination_date,-effective_date),licensestate,licensenumber,termination_date,effective_date), transform(iesp.proflicense.t_PL2LicenseInfo, self.State:=if(~inputData.IncludeLicenses,skip,left.licensestate), self.Number :=left.licensenumber, self.EffectiveDate:=iesp.ECL2ESP.toDatestring8(Left.effective_date), self.TerminationDate:=iesp.ECL2ESP.toDatestring8(Left.termination_date))),iesp.Constants.PROFLIC.MAX_LICENSEINFOS));
		self.Degrees := if(inputData.IncludeDegrees,choosen(project(dedup(sort(recs.degree,degree),degree), transform (iesp.share.t_StringArrayItem, Self.value := Left.degree)),iesp.Constants.PROFLIC.MAX_DEGREES));
		self.Specialties := if(inputData.IncludeSpecialties,choosen(project(dedup(sort(recs.specialty,specialtyname,specialtygroupname),stringlib.StringToLowerCase(specialtyname),stringlib.StringToLowerCase(specialtygroupname)), transform(iesp.proflicense.t_PL2ProviderSpecialty, self.Id:=if(~inputData.IncludeSpecialties,skip,left.specialtyid), self.Name:=left.specialtyname, self.GroupId:=left.specialtygroupid, self.GroupName:=left.specialtygroupname)),iesp.Constants.HPR.MAX_SPECIALTIES));
		self.BusAddrAndPhones := if(inputData.IncludeBusinessAddresses,choosen(project(recs.business_address, processReportProvAddress(left)),iesp.Constants.PROFLIC.MAX_BUSADDRANDPHONES));
		self.GroupAffiliations := if(inputData.IncludeGroupAffiliations,choosen(project(dedup(sort(recs.group_affiliation,stringlib.StringToLowerCase(groupname)),stringlib.StringToLowerCase(groupname)), transform (iesp.proflicense.t_PL2BusinessIdAndName, self.BusinessId:= if(~inputData.IncludeGroupAffiliations,skip,left.bdid), self.Name:=left.groupname)),iesp.Constants.PROFLIC.MAX_GROUPAFFILIATIONS));
		self.HospitalAffiliations := if(inputData.IncludeHospitalAffiliations,choosen(project(dedup(sort(recs.hospital_affiliation,stringlib.StringToLowerCase(hospitalname)),stringlib.StringToLowerCase(hospitalname)),  transform (iesp.proflicense.t_PL2BusinessIdAndName,  self.BusinessId:=if(~inputData.IncludeHospitalAffiliations,skip,left.bdid), self.Name:=left.hospitalname)),iesp.Constants.PROFLIC.MAX_HOSPITALAFFILIATIONS));
		self.Residencies := if(inputData.IncludeResidencies,choosen(project(dedup(sort(recs.residency,residency),residency), transform(iesp.proflicense.t_PL2Residency, self.BusinessId:= if(~inputData.IncludeResidencies,skip,left.bdid), self.Residency:=left.residency)),iesp.Constants.HPR.MAX_RESIDENCIES));
		self.MedicalSchoolInfos := if(inputData.IncludeMedicalSchools,choosen(project(dedup(sort(recs.medschool,medschoolname,-graduationyear),medschoolname,graduationyear), transform(iesp.proflicense.t_PL2MedicalSchoolInfo, self.BusinessId:=left.bdid, self.SchoolName:=left.medschoolname, self.GraduationYear:=(Integer)left.graduationyear)),iesp.Constants.HPR.MAX_MEDICALSCHOOLS));
		self.Providers := choosen(project(recs.providerdid, transform (iesp.share.t_StringArrayItem, Self.value := Left.did)),iesp.Constants.PROFLIC.MAX_PROVIDERS);
		self.Taxonomies := choosen(project(recs.taxonomy, transform (iesp.proflicense.t_Taxonomy, Self.TaxonomyCode := Left.taxonomycode,self.PrimaryIndicator := left.primaryindicator)),iesp.Constants.PROFLIC.MAX_TAXONOMY);
	end;

	export iesp.healthcare.t_HealthCareSanctionConsolidatedReport formatSanctionOutput(doxie.ingenix_sanctions_module.layout_ingenix_sanctions_report inSanction) := TRANSFORM
		tmpSkip := if(inSanction.ProvCo_Address_clean_p_city_name<>'',inSanction.ProvCo_Address_clean_p_city_name,skip); 
		self.SanctionId := inSanction.sanc_id;
		self.UniqueId := inSanction.did;
		self.Name := iesp.ECL2ESP.SetName(inSanction.prov_clean_fname, inSanction.prov_clean_mname, inSanction.prov_clean_lname, inSanction.Prov_Clean_name_suffix, '', '');
		self.GeoAddress.address := iesp.ECL2ESP.SetAddress(inSanction.ProvCo_Address_Clean_prim_name, inSanction.ProvCo_Address_clean_prim_range, inSanction.ProvCo_Address_clean_predir, inSanction.ProvCo_Address_Clean_postdir,
						 inSanction.ProvCo_Address_clean_addr_suffix, inSanction.ProvCo_Address_clean_unit_desig, inSanction.ProvCo_Address_clean_sec_range, inSanction.ProvCo_Address_clean_p_city_name,
						 inSanction.ProvCo_Address_clean_st, inSanction.ProvCo_Address_clean_zip, '', '');
		self.GeoAddress.Location.Latitude := inSanction.ProvCo_Address_clean_geo_lat;
		self.GeoAddress.Location.Longitude := inSanction.ProvCo_Address_clean_geo_long;
		self.DOB := iesp.ECL2ESP.toDatestring8(inSanction.sanc_dob);
		self.TaxId := inSanction.sanc_tin;
		self.UPIN := inSanction.sanc_upin;
		self.NationalProviderId := inSanction.npi;
		self.Source := inSanction.sanc_src_desc;
		self.SanctionTerm := inSanction.sanc_terms;
		self.SanctionType := inSanction.sanc_type;
		self.BoardType := inSanction.sanc_brdtype;
		self.ProviderType := inSanction.sanc_provtype;
		self.Fines := inSanction.sanc_fines;
		self.SanctionReason := inSanction.sanc_reas;
		self.Conditions := inSanction.sanc_cond;
		self.LicenseNumber := inSanction.sanc_licnbr;
		self.SanctionState := inSanction.sanc_sancst;
		self.SanctionDate := iesp.ECL2ESP.toDatestring8(inSanction.sanc_sancdte_form);
		self.DateLastReported := iesp.ECL2ESP.toDatestring8(inSanction.date_last_reported);
		self.DateFirstSeen := iesp.ECL2ESP.toDatestring8(inSanction.date_first_seen);
		self.DateLastSeen := iesp.ECL2ESP.toDatestring8(inSanction.date_last_seen);
		self.LicenseReinstatedDate := iesp.ECL2ESP.toDatestring8(inSanction.sanc_reindte_form);
		self.FraudAbuseFlag := if(inSanction.sanc_fab='Y',true,false);
		self.LostOfLicenseIndicator := if(inSanction.sanc_unamb_ind='Y',true,false);
		self.DateFirstReported := iesp.ECL2ESP.toDatestring8(inSanction.date_first_reported);
		self.ProcessDate := iesp.ECL2ESP.toDatestring8(inSanction.process_date);
		self.SanctionGroupType := inSanction.sanc_grouptype;
		self.SanctionSubGroupType := inSanction.sanc_subgrouptype;
		self.nppesVerified := inSanction.nppesVerified;
		self := [];
end;

	export doxie.ingenix_provider_module.layout_ingenix_provider_report nppesProvider(Layouts.NPPES_Layouts.nppes_penalty_recs provider) := transform
		self.ProviderID:='';
		self.Gender:=provider.Provider_Gender_Code;
		self.providerdid:=dataset([{provider.did}],doxie.ingenix_provider_module.ingenix_did_rec);
		self.name:=dataset([{provider.Provider_First_Name,provider.Provider_Middle_Name,provider.Provider_Last_Name,'',0}],doxie.ingenix_provider_module.ingenix_name_rec);
		self.npi:=dataset([{provider.NPI,0}],doxie.ingenix_provider_module.ingenix_npi_rec);
		lic_ds1 := if(trim(provider.Provider_License_Number_State_Code_1,all)<>'',dataset([{provider.Provider_License_Number_State_Code_1,provider.Provider_License_Number_1,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds2 := if(trim(provider.Provider_License_Number_State_Code_2,all)<>'',dataset([{provider.Provider_License_Number_State_Code_2,provider.Provider_License_Number_2,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds3 := if(trim(provider.Provider_License_Number_State_Code_3,all)<>'',dataset([{provider.Provider_License_Number_State_Code_3,provider.Provider_License_Number_3,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds4 := if(trim(provider.Provider_License_Number_State_Code_4,all)<>'',dataset([{provider.Provider_License_Number_State_Code_4,provider.Provider_License_Number_4,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds5 := if(trim(provider.Provider_License_Number_State_Code_5,all)<>'',dataset([{provider.Provider_License_Number_State_Code_5,provider.Provider_License_Number_5,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds6 := if(trim(provider.Provider_License_Number_State_Code_6,all)<>'',dataset([{provider.Provider_License_Number_State_Code_6,provider.Provider_License_Number_6,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds7 := if(trim(provider.Provider_License_Number_State_Code_7,all)<>'',dataset([{provider.Provider_License_Number_State_Code_7,provider.Provider_License_Number_7,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds8 := if(trim(provider.Provider_License_Number_State_Code_8,all)<>'',dataset([{provider.Provider_License_Number_State_Code_8,provider.Provider_License_Number_8,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds9 := if(trim(provider.Provider_License_Number_State_Code_9,all)<>'',dataset([{provider.Provider_License_Number_State_Code_9,provider.Provider_License_Number_9,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds10 := if(trim(provider.Provider_License_Number_State_Code_10,all)<>'',dataset([{provider.Provider_License_Number_State_Code_10,provider.Provider_License_Number_10,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds11 := if(trim(provider.Provider_License_Number_State_Code_11,all)<>'',dataset([{provider.Provider_License_Number_State_Code_11,provider.Provider_License_Number_11,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds12 := if(trim(provider.Provider_License_Number_State_Code_12,all)<>'',dataset([{provider.Provider_License_Number_State_Code_12,provider.Provider_License_Number_12,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds13 := if(trim(provider.Provider_License_Number_State_Code_13,all)<>'',dataset([{provider.Provider_License_Number_State_Code_13,provider.Provider_License_Number_13,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds14 := if(trim(provider.Provider_License_Number_State_Code_14,all)<>'',dataset([{provider.Provider_License_Number_State_Code_14,provider.Provider_License_Number_14,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		lic_ds15 := if(trim(provider.Provider_License_Number_State_Code_15,all)<>'',dataset([{provider.Provider_License_Number_State_Code_15,provider.Provider_License_Number_15,'','',0}],doxie.ingenix_provider_module.ingenix_license_rpt_rec));
		self.license:=lic_ds1+lic_ds2+lic_ds3+lic_ds4+lic_ds5+lic_ds6+lic_ds7+lic_ds8+lic_ds9+lic_ds10+lic_ds11+lic_ds12+lic_ds13+lic_ds14+lic_ds15;
		tax_ds1 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_1,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_1,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds2 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_2,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_2,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds3 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_3,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_3,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds4 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_4,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_4,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds5 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_5,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_5,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds6 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_6,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_6,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds7 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_7,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_7,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds8 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_8,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_8,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds9 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_9,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_9,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds10 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_10,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_10,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds11 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_11,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_11,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds12 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_12,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_12,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds13 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_13,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_13,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds14 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_14,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_14,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		tax_ds15 := if(trim(provider.Healthcare_Provider_Taxonomy_Code_15,all)<>'',dataset([{provider.Healthcare_Provider_Taxonomy_Code_15,''}],doxie.ingenix_provider_module.ingenix_taxonomy_rec));
		self.taxonomy:=tax_ds1+tax_ds2+tax_ds3+tax_ds4+tax_ds5+tax_ds6+tax_ds7+tax_ds8+tax_ds9+tax_ds10+tax_ds11+tax_ds12+tax_ds13+tax_ds14+tax_ds15;
		Mailing_phone_ds := if(trim(provider.Provider_Business_Mailing_Address_Telephone_Number,all)<>'',dataset([{provider.Provider_Business_Mailing_Address_Telephone_Number,'Office Phone',0}],doxie.ingenix_provider_module.ingenix_phone_slim_rec));
		Mailing_fax_ds := if(trim(provider.Provider_Business_Mailing_Address_Fax_Number,all)<>'',dataset([{provider.Provider_Business_Mailing_Address_Fax_Number,'Office Fax',0}],doxie.ingenix_provider_module.ingenix_phone_slim_rec));
		Location_phone_ds := if(trim(provider.Provider_Business_Practice_Location_Address_Telephone_Number,all)<>'',dataset([{provider.Provider_Business_Practice_Location_Address_Telephone_Number,'Office Phone',0}],doxie.ingenix_provider_module.ingenix_phone_slim_rec));
		Location_fax_ds := if(trim(provider.Provider_Business_Practice_Location_Address_Fax_Number,all)<>'',dataset([{provider.Provider_Business_Practice_Location_Address_Fax_Number,'Office Fax',0}],doxie.ingenix_provider_module.ingenix_phone_slim_rec));
		Mailing_phones := dedup(sort(Mailing_phone_ds+Mailing_fax_ds,record),record);
		Location_phones := dedup(sort(Location_phone_ds+Location_fax_ds,record),record);
		Mailing_addr := dataset([{provider.clean_mailing_address.prim_range,
															provider.clean_mailing_address.predir,
															provider.clean_mailing_address.prim_name,
															provider.clean_mailing_address.addr_suffix,
															provider.clean_mailing_address.postdir,
															provider.clean_mailing_address.unit_desig,
															provider.clean_mailing_address.sec_range,
															provider.clean_mailing_address.p_city_name,
															provider.clean_mailing_address.v_city_name,
															provider.clean_mailing_address.st,
															provider.clean_mailing_address.zip,
															provider.clean_mailing_address.zip4,
															provider.clean_mailing_address.geo_lat,
															provider.clean_mailing_address.geo_long,
															0,
															provider.dt_first_seen,
															provider.dt_last_seen,
															Mailing_phones}],doxie.ingenix_provider_module.ingenix_addr_rpt_rec);
		Location_addr := dataset([{provider.clean_location_address.prim_range,
															provider.clean_location_address.predir,
															provider.clean_location_address.prim_name,
															provider.clean_location_address.addr_suffix,
															provider.clean_location_address.postdir,
															provider.clean_location_address.unit_desig,
															provider.clean_location_address.sec_range,
															provider.clean_location_address.p_city_name,
															provider.clean_location_address.v_city_name,
															provider.clean_location_address.st,
															provider.clean_location_address.zip,
															provider.clean_location_address.zip4,
															provider.clean_location_address.geo_lat,
															provider.clean_location_address.geo_long,
															0,
															provider.dt_first_seen,
															provider.dt_last_seen,
															Location_phones}],doxie.ingenix_provider_module.ingenix_addr_rpt_rec);
		self.business_address := dedup(sort(Mailing_addr+Location_addr,record),record);
		self := [];
	end;
	export Healthcare_Provider_Services.Layouts.SearchServiceBatchOut processSearchServiceBatch(Healthcare_Header_Services.Layouts.CombinedHeaderResultsDoxieLayout inRec):= TRANSFORM
		self.acctno:=inRec.acctno;
		self.record_penalty:=(string)inRec.record_penalty;
		self.record_penalty_name:=(string)inRec.record_penalty_name;
		self.record_penalty_license:=(string)inRec.record_penalty_license;
		self.isExactLNID:=if(inRec.isExactLNID,'TRUE','FALSE');
		self.isExactDEA:=if(inRec.isExactDEA,'TRUE','FALSE');
		self.isExactNPI:=if(inRec.isExactNPI,'TRUE','FALSE');
		self.isExactUPIN:=if(inRec.isExactUPIN,'TRUE','FALSE');
		self.isExactStateLicense:=if(inRec.isExactStateLicense,'TRUE','FALSE');
		self.isExactLNPID:=if(inRec.isExactLNPID,'TRUE','FALSE');
		self.isAutokeysResult:=if(inRec.isAutokeysResult,'TRUE','FALSE');
		self.isDerivedSource:=if(inRec.isDerivedSource,'TRUE','FALSE');
		self.LNPID:=(string)inRec.LNPID;
		self.HcId:=(string)inRec.LNPID;
		self.SrcId:=(string)inRec.SrcId;
		self.Src:=inRec.Src;
		self.SrcId_1:=inRec.sources[1].SrcId;
		self.Src_1:=inRec.sources[1].Src;
		self.SrcId_2:=inRec.sources[2].SrcId;
		self.Src_2:=inRec.sources[2].Src;
		self.SrcId_3:=inRec.sources[3].SrcId;
		self.Src_3:=inRec.sources[3].Src;
		self.SrcId_4:=inRec.sources[4].SrcId;
		self.Src_4:=inRec.sources[4].Src;
		self.SrcId_5:=inRec.sources[5].SrcId;
		self.Src_5:=inRec.sources[5].Src;
		nameChildren := inRec.Names(CompanyName<>'' or LastName <>'');
		self.Name_1_namePenalty:=(string)nameChildren[1].namePenalty;
		self.Name_1_CompanyName:=if(nameChildren[1].LastName = '',nameChildren[1].CompanyName,'');
		self.Name_1_FirstName:=nameChildren[1].FirstName;
		self.Name_1_MiddleName:=nameChildren[1].MiddleName;
		self.Name_1_LastName:=nameChildren[1].LastName;
		self.Name_1_Suffix:=nameChildren[1].Suffix;
		self.Name_1_Title:=nameChildren[1].Title;
		self.Name_1_Gender:=nameChildren[1].Gender;
		self.Name_2_namePenalty:=if(nameChildren[2].CompanyName<>'' or nameChildren[2].LastName <> '',(string)nameChildren[2].namePenalty,'');
		self.Name_2_CompanyName:=if(nameChildren[2].LastName ='',nameChildren[2].CompanyName,'');
		self.Name_2_FirstName:=nameChildren[2].FirstName;
		self.Name_2_MiddleName:=nameChildren[2].MiddleName;
		self.Name_2_LastName:=nameChildren[2].LastName;
		self.Name_2_Suffix:=nameChildren[2].Suffix;
		self.Name_2_Title:=nameChildren[2].Title;
		self.Name_2_Gender:=nameChildren[2].Gender;
		self.Name_3_namePenalty:=if(nameChildren[3].CompanyName<>'' or nameChildren[3].LastName <> '',(string)nameChildren[3].namePenalty,'');
		self.Name_3_CompanyName:=if(nameChildren[3].LastName ='',nameChildren[3].CompanyName,'');
		self.Name_3_FirstName:=nameChildren[3].FirstName;
		self.Name_3_MiddleName:=nameChildren[3].MiddleName;
		self.Name_3_LastName:=nameChildren[3].LastName;
		self.Name_3_Suffix:=nameChildren[3].Suffix;
		self.Name_3_Title:=nameChildren[3].Title;
		self.Name_3_Gender:=nameChildren[3].Gender;
		self.Name_4_namePenalty:=if(nameChildren[4].CompanyName<>'' or nameChildren[4].LastName <> '',(string)nameChildren[4].namePenalty,'');
		self.Name_4_CompanyName:=if(nameChildren[4].LastName ='',nameChildren[4].CompanyName,'');
		self.Name_4_FirstName:=nameChildren[4].FirstName;
		self.Name_4_MiddleName:=nameChildren[4].MiddleName;
		self.Name_4_LastName:=nameChildren[4].LastName;
		self.Name_4_Suffix:=nameChildren[4].Suffix;
		self.Name_4_Title:=nameChildren[4].Title;
		self.Name_4_Gender:=nameChildren[4].Gender;
		self.Name_5_namePenalty:=if(nameChildren[5].CompanyName<>'' or nameChildren[5].LastName <> '',(string)nameChildren[5].namePenalty,'');
		self.Name_5_CompanyName:=if(nameChildren[5].LastName ='',nameChildren[5].CompanyName,'');
		self.Name_5_FirstName:=nameChildren[5].FirstName;
		self.Name_5_MiddleName:=nameChildren[5].MiddleName;
		self.Name_5_LastName:=nameChildren[5].LastName;
		self.Name_5_Suffix:=nameChildren[5].Suffix;
		self.Name_5_Title:=nameChildren[5].Title;
		self.Name_5_Gender:=nameChildren[5].Gender;
		self.Addr_1_addrGoldFlag:=inRec.Addresses[1].addrGoldFlag;
		self.Addr_1_addrConfidenceValue:=inRec.Addresses[1].addrConfidenceValue;
		self.Addr_1_addrTypeCode:=inRec.Addresses[1].addrTypeCode;
		self.Addr_1_addrVerificationStatusFlag:=inRec.Addresses[1].addrVerificationStatusFlag;
		self.Addr_1_addrVerificationDate:=inRec.Addresses[1].addrVerificationDate;
		self.Addr_1_addrPenalty:=if(inRec.Addresses[1].p_city_name<>'',(string)inRec.Addresses[1].addrPenalty,'');
		self.Addr_1_address1:=inRec.Addresses[1].address1;
		self.Addr_1_address2:=inRec.Addresses[1].address2;
		self.Addr_1_prim_range:=inRec.Addresses[1].prim_range;
		self.Addr_1_predir:=inRec.Addresses[1].predir;
		self.Addr_1_prim_name:=inRec.Addresses[1].prim_name;
		self.Addr_1_addr_suffix:=inRec.Addresses[1].addr_suffix;
		self.Addr_1_postdir:=inRec.Addresses[1].postdir;
		self.Addr_1_unit_desig:=inRec.Addresses[1].unit_desig;
		self.Addr_1_sec_range:=inRec.Addresses[1].sec_range;
		self.Addr_1_p_city_name:=inRec.Addresses[1].p_city_name;
		self.Addr_1_v_city_name:=inRec.Addresses[1].v_city_name;
		self.Addr_1_st:=inRec.Addresses[1].st;
		self.Addr_1_z5:=inRec.Addresses[1].z5;
		self.Addr_1_zip4:=inRec.Addresses[1].zip4;
		self.Addr_1_last_seen:=inRec.Addresses[1].last_seen;
		self.Addr_1_first_seen:=inRec.Addresses[1].first_seen;
		self.Addr_1_v_last_seen:=inRec.Addresses[1].v_last_seen;
		self.Addr_1_v_first_seen:=inRec.Addresses[1].v_first_seen;
		self.Addr_1_geo_lat:=inRec.Addresses[1].geo_lat;
		self.Addr_1_geo_long:=inRec.Addresses[1].geo_long;
		self.Addr_1_PhoneNumber:=inRec.Addresses[1].Phones[1].PhoneNumber;
		self.Addr_1_FaxNumber:=inRec.Addresses[1].Phones[1].FaxNumber;
		self.Addr_2_addrGoldFlag:=inRec.Addresses[2].addrGoldFlag;
		self.Addr_2_addrConfidenceValue:=inRec.Addresses[2].addrConfidenceValue;
		self.Addr_2_addrTypeCode:=inRec.Addresses[2].addrTypeCode;
		self.Addr_2_addrVerificationStatusFlag:=inRec.Addresses[2].addrVerificationStatusFlag;
		self.Addr_2_addrVerificationDate:=inRec.Addresses[2].addrVerificationDate;
		self.Addr_2_addrPenalty:=if(inRec.Addresses[2].p_city_name<>'',(string)inRec.Addresses[2].addrPenalty,'');
		self.Addr_2_address1:=inRec.Addresses[2].address1;
		self.Addr_2_address2:=inRec.Addresses[2].address2;
		self.Addr_2_prim_range:=inRec.Addresses[2].prim_range;
		self.Addr_2_predir:=inRec.Addresses[2].predir;
		self.Addr_2_prim_name:=inRec.Addresses[2].prim_name;
		self.Addr_2_addr_suffix:=inRec.Addresses[2].addr_suffix;
		self.Addr_2_postdir:=inRec.Addresses[2].postdir;
		self.Addr_2_unit_desig:=inRec.Addresses[2].unit_desig;
		self.Addr_2_sec_range:=inRec.Addresses[2].sec_range;
		self.Addr_2_p_city_name:=inRec.Addresses[2].p_city_name;
		self.Addr_2_v_city_name:=inRec.Addresses[2].v_city_name;
		self.Addr_2_st:=inRec.Addresses[2].st;
		self.Addr_2_z5:=inRec.Addresses[2].z5;
		self.Addr_2_zip4:=inRec.Addresses[2].zip4;
		self.Addr_2_last_seen:=inRec.Addresses[2].last_seen;
		self.Addr_2_first_seen:=inRec.Addresses[2].first_seen;
		self.Addr_2_v_last_seen:=inRec.Addresses[2].v_last_seen;
		self.Addr_2_v_first_seen:=inRec.Addresses[2].v_first_seen;
		self.Addr_2_geo_lat:=inRec.Addresses[2].geo_lat;
		self.Addr_2_geo_long:=inRec.Addresses[2].geo_long;
		self.Addr_2_PhoneNumber:=inRec.Addresses[2].Phones[1].PhoneNumber;
		self.Addr_2_FaxNumber:=inRec.Addresses[2].Phones[1].FaxNumber;
		self.Addr_3_addrGoldFlag:=inRec.Addresses[3].addrGoldFlag;
		self.Addr_3_addrConfidenceValue:=inRec.Addresses[3].addrConfidenceValue;
		self.Addr_3_addrTypeCode:=inRec.Addresses[3].addrTypeCode;
		self.Addr_3_addrVerificationStatusFlag:=inRec.Addresses[3].addrVerificationStatusFlag;
		self.Addr_3_addrVerificationDate:=inRec.Addresses[3].addrVerificationDate;
		self.Addr_3_addrPenalty:=if(inRec.Addresses[3].p_city_name<>'',(string)inRec.Addresses[3].addrPenalty,'');
		self.Addr_3_address1:=inRec.Addresses[3].address1;
		self.Addr_3_address2:=inRec.Addresses[3].address2;
		self.Addr_3_prim_range:=inRec.Addresses[3].prim_range;
		self.Addr_3_predir:=inRec.Addresses[3].predir;
		self.Addr_3_prim_name:=inRec.Addresses[3].prim_name;
		self.Addr_3_addr_suffix:=inRec.Addresses[3].addr_suffix;
		self.Addr_3_postdir:=inRec.Addresses[3].postdir;
		self.Addr_3_unit_desig:=inRec.Addresses[3].unit_desig;
		self.Addr_3_sec_range:=inRec.Addresses[3].sec_range;
		self.Addr_3_p_city_name:=inRec.Addresses[3].p_city_name;
		self.Addr_3_v_city_name:=inRec.Addresses[3].v_city_name;
		self.Addr_3_st:=inRec.Addresses[3].st;
		self.Addr_3_z5:=inRec.Addresses[3].z5;
		self.Addr_3_zip4:=inRec.Addresses[3].zip4;
		self.Addr_3_last_seen:=inRec.Addresses[3].last_seen;
		self.Addr_3_first_seen:=inRec.Addresses[3].first_seen;
		self.Addr_3_v_last_seen:=inRec.Addresses[3].v_last_seen;
		self.Addr_3_v_first_seen:=inRec.Addresses[3].v_first_seen;
		self.Addr_3_geo_lat:=inRec.Addresses[3].geo_lat;
		self.Addr_3_geo_long:=inRec.Addresses[3].geo_long;
		self.Addr_3_PhoneNumber:=inRec.Addresses[3].Phones[1].PhoneNumber;
		self.Addr_3_FaxNumber:=inRec.Addresses[3].Phones[1].FaxNumber;
		self.Addr_4_addrGoldFlag:=inRec.Addresses[4].addrGoldFlag;
		self.Addr_4_addrConfidenceValue:=inRec.Addresses[4].addrConfidenceValue;
		self.Addr_4_addrTypeCode:=inRec.Addresses[4].addrTypeCode;
		self.Addr_4_addrVerificationStatusFlag:=inRec.Addresses[4].addrVerificationStatusFlag;
		self.Addr_4_addrVerificationDate:=inRec.Addresses[4].addrVerificationDate;
		self.Addr_4_addrPenalty:=if(inRec.Addresses[4].p_city_name<>'',(string)inRec.Addresses[4].addrPenalty,'');
		self.Addr_4_address1:=inRec.Addresses[4].address1;
		self.Addr_4_address2:=inRec.Addresses[4].address2;
		self.Addr_4_prim_range:=inRec.Addresses[4].prim_range;
		self.Addr_4_predir:=inRec.Addresses[4].predir;
		self.Addr_4_prim_name:=inRec.Addresses[4].prim_name;
		self.Addr_4_addr_suffix:=inRec.Addresses[4].addr_suffix;
		self.Addr_4_postdir:=inRec.Addresses[4].postdir;
		self.Addr_4_unit_desig:=inRec.Addresses[4].unit_desig;
		self.Addr_4_sec_range:=inRec.Addresses[4].sec_range;
		self.Addr_4_p_city_name:=inRec.Addresses[4].p_city_name;
		self.Addr_4_v_city_name:=inRec.Addresses[4].v_city_name;
		self.Addr_4_st:=inRec.Addresses[4].st;
		self.Addr_4_z5:=inRec.Addresses[4].z5;
		self.Addr_4_zip4:=inRec.Addresses[4].zip4;
		self.Addr_4_last_seen:=inRec.Addresses[4].last_seen;
		self.Addr_4_first_seen:=inRec.Addresses[4].first_seen;
		self.Addr_4_v_last_seen:=inRec.Addresses[4].v_last_seen;
		self.Addr_4_v_first_seen:=inRec.Addresses[4].v_first_seen;
		self.Addr_4_geo_lat:=inRec.Addresses[4].geo_lat;
		self.Addr_4_geo_long:=inRec.Addresses[4].geo_long;
		self.Addr_4_PhoneNumber:=inRec.Addresses[4].Phones[1].PhoneNumber;
		self.Addr_4_FaxNumber:=inRec.Addresses[4].Phones[1].FaxNumber;
		self.Addr_5_addrGoldFlag:=inRec.Addresses[5].addrGoldFlag;
		self.Addr_5_addrConfidenceValue:=inRec.Addresses[5].addrConfidenceValue;
		self.Addr_5_addrTypeCode:=inRec.Addresses[5].addrTypeCode;
		self.Addr_5_addrVerificationStatusFlag:=inRec.Addresses[5].addrVerificationStatusFlag;
		self.Addr_5_addrVerificationDate:=inRec.Addresses[5].addrVerificationDate;
		self.Addr_5_addrPenalty:=if(inRec.Addresses[5].p_city_name<>'',(string)inRec.Addresses[5].addrPenalty,'');
		self.Addr_5_address1:=inRec.Addresses[5].address1;
		self.Addr_5_address2:=inRec.Addresses[5].address2;
		self.Addr_5_prim_range:=inRec.Addresses[5].prim_range;
		self.Addr_5_predir:=inRec.Addresses[5].predir;
		self.Addr_5_prim_name:=inRec.Addresses[5].prim_name;
		self.Addr_5_addr_suffix:=inRec.Addresses[5].addr_suffix;
		self.Addr_5_postdir:=inRec.Addresses[5].postdir;
		self.Addr_5_unit_desig:=inRec.Addresses[5].unit_desig;
		self.Addr_5_sec_range:=inRec.Addresses[5].sec_range;
		self.Addr_5_p_city_name:=inRec.Addresses[5].p_city_name;
		self.Addr_5_v_city_name:=inRec.Addresses[5].v_city_name;
		self.Addr_5_st:=inRec.Addresses[5].st;
		self.Addr_5_z5:=inRec.Addresses[5].z5;
		self.Addr_5_zip4:=inRec.Addresses[5].zip4;
		self.Addr_5_last_seen:=inRec.Addresses[5].last_seen;
		self.Addr_5_first_seen:=inRec.Addresses[5].first_seen;
		self.Addr_5_v_last_seen:=inRec.Addresses[5].v_last_seen;
		self.Addr_5_v_first_seen:=inRec.Addresses[5].v_first_seen;
		self.Addr_5_geo_lat:=inRec.Addresses[5].geo_lat;
		self.Addr_5_geo_long:=inRec.Addresses[5].geo_long;
		self.Addr_5_PhoneNumber:=inRec.Addresses[5].Phones[1].PhoneNumber;
		self.Addr_5_FaxNumber:=inRec.Addresses[5].Phones[1].FaxNumber;
		self.Addr_6_addrGoldFlag:=inRec.Addresses[6].addrGoldFlag;
		self.Addr_6_addrConfidenceValue:=inRec.Addresses[6].addrConfidenceValue;
		self.Addr_6_addrTypeCode:=inRec.Addresses[6].addrTypeCode;
		self.Addr_6_addrVerificationStatusFlag:=inRec.Addresses[6].addrVerificationStatusFlag;
		self.Addr_6_addrVerificationDate:=inRec.Addresses[6].addrVerificationDate;
		self.Addr_6_addrPenalty:=if(inRec.Addresses[6].p_city_name<>'',(string)inRec.Addresses[6].addrPenalty,'');
		self.Addr_6_address1:=inRec.Addresses[6].address1;
		self.Addr_6_address2:=inRec.Addresses[6].address2;
		self.Addr_6_prim_range:=inRec.Addresses[6].prim_range;
		self.Addr_6_predir:=inRec.Addresses[6].predir;
		self.Addr_6_prim_name:=inRec.Addresses[6].prim_name;
		self.Addr_6_addr_suffix:=inRec.Addresses[6].addr_suffix;
		self.Addr_6_postdir:=inRec.Addresses[6].postdir;
		self.Addr_6_unit_desig:=inRec.Addresses[6].unit_desig;
		self.Addr_6_sec_range:=inRec.Addresses[6].sec_range;
		self.Addr_6_p_city_name:=inRec.Addresses[6].p_city_name;
		self.Addr_6_v_city_name:=inRec.Addresses[6].v_city_name;
		self.Addr_6_st:=inRec.Addresses[6].st;
		self.Addr_6_z5:=inRec.Addresses[6].z5;
		self.Addr_6_zip4:=inRec.Addresses[6].zip4;
		self.Addr_6_last_seen:=inRec.Addresses[6].last_seen;
		self.Addr_6_first_seen:=inRec.Addresses[6].first_seen;
		self.Addr_6_v_last_seen:=inRec.Addresses[6].v_last_seen;
		self.Addr_6_v_first_seen:=inRec.Addresses[6].v_first_seen;
		self.Addr_6_geo_lat:=inRec.Addresses[6].geo_lat;
		self.Addr_6_geo_long:=inRec.Addresses[6].geo_long;
		self.Addr_6_PhoneNumber:=inRec.Addresses[6].Phones[1].PhoneNumber;
		self.Addr_6_FaxNumber:=inRec.Addresses[6].Phones[1].FaxNumber;
		self.Addr_7_addrGoldFlag:=inRec.Addresses[7].addrGoldFlag;
		self.Addr_7_addrConfidenceValue:=inRec.Addresses[7].addrConfidenceValue;
		self.Addr_7_addrTypeCode:=inRec.Addresses[7].addrTypeCode;
		self.Addr_7_addrVerificationStatusFlag:=inRec.Addresses[7].addrVerificationStatusFlag;
		self.Addr_7_addrVerificationDate:=inRec.Addresses[7].addrVerificationDate;
		self.Addr_7_addrPenalty:=if(inRec.Addresses[7].p_city_name<>'',(string)inRec.Addresses[7].addrPenalty,'');
		self.Addr_7_address1:=inRec.Addresses[7].address1;
		self.Addr_7_address2:=inRec.Addresses[7].address2;
		self.Addr_7_prim_range:=inRec.Addresses[7].prim_range;
		self.Addr_7_predir:=inRec.Addresses[7].predir;
		self.Addr_7_prim_name:=inRec.Addresses[7].prim_name;
		self.Addr_7_addr_suffix:=inRec.Addresses[7].addr_suffix;
		self.Addr_7_postdir:=inRec.Addresses[7].postdir;
		self.Addr_7_unit_desig:=inRec.Addresses[7].unit_desig;
		self.Addr_7_sec_range:=inRec.Addresses[7].sec_range;
		self.Addr_7_p_city_name:=inRec.Addresses[7].p_city_name;
		self.Addr_7_v_city_name:=inRec.Addresses[7].v_city_name;
		self.Addr_7_st:=inRec.Addresses[7].st;
		self.Addr_7_z5:=inRec.Addresses[7].z5;
		self.Addr_7_zip4:=inRec.Addresses[7].zip4;
		self.Addr_7_last_seen:=inRec.Addresses[7].last_seen;
		self.Addr_7_first_seen:=inRec.Addresses[7].first_seen;
		self.Addr_7_v_last_seen:=inRec.Addresses[7].v_last_seen;
		self.Addr_7_v_first_seen:=inRec.Addresses[7].v_first_seen;
		self.Addr_7_geo_lat:=inRec.Addresses[7].geo_lat;
		self.Addr_7_geo_long:=inRec.Addresses[7].geo_long;
		self.Addr_7_PhoneNumber:=inRec.Addresses[7].Phones[1].PhoneNumber;
		self.Addr_7_FaxNumber:=inRec.Addresses[7].Phones[1].FaxNumber;
		self.Addr_8_addrGoldFlag:=inRec.Addresses[8].addrGoldFlag;
		self.Addr_8_addrConfidenceValue:=inRec.Addresses[8].addrConfidenceValue;
		self.Addr_8_addrTypeCode:=inRec.Addresses[8].addrTypeCode;
		self.Addr_8_addrVerificationStatusFlag:=inRec.Addresses[8].addrVerificationStatusFlag;
		self.Addr_8_addrVerificationDate:=inRec.Addresses[8].addrVerificationDate;
		self.Addr_8_addrPenalty:=if(inRec.Addresses[8].p_city_name<>'',(string)inRec.Addresses[8].addrPenalty,'');
		self.Addr_8_address1:=inRec.Addresses[8].address1;
		self.Addr_8_address2:=inRec.Addresses[8].address2;
		self.Addr_8_prim_range:=inRec.Addresses[8].prim_range;
		self.Addr_8_predir:=inRec.Addresses[8].predir;
		self.Addr_8_prim_name:=inRec.Addresses[8].prim_name;
		self.Addr_8_addr_suffix:=inRec.Addresses[8].addr_suffix;
		self.Addr_8_postdir:=inRec.Addresses[8].postdir;
		self.Addr_8_unit_desig:=inRec.Addresses[8].unit_desig;
		self.Addr_8_sec_range:=inRec.Addresses[8].sec_range;
		self.Addr_8_p_city_name:=inRec.Addresses[8].p_city_name;
		self.Addr_8_v_city_name:=inRec.Addresses[8].v_city_name;
		self.Addr_8_st:=inRec.Addresses[8].st;
		self.Addr_8_z5:=inRec.Addresses[8].z5;
		self.Addr_8_zip4:=inRec.Addresses[8].zip4;
		self.Addr_8_last_seen:=inRec.Addresses[8].last_seen;
		self.Addr_8_first_seen:=inRec.Addresses[8].first_seen;
		self.Addr_8_v_last_seen:=inRec.Addresses[8].v_last_seen;
		self.Addr_8_v_first_seen:=inRec.Addresses[8].v_first_seen;
		self.Addr_8_geo_lat:=inRec.Addresses[8].geo_lat;
		self.Addr_8_geo_long:=inRec.Addresses[8].geo_long;
		self.Addr_8_PhoneNumber:=inRec.Addresses[8].Phones[1].PhoneNumber;
		self.Addr_8_FaxNumber:=inRec.Addresses[8].Phones[1].FaxNumber;
		self.Addr_9_addrGoldFlag:=inRec.Addresses[9].addrGoldFlag;
		self.Addr_9_addrConfidenceValue:=inRec.Addresses[9].addrConfidenceValue;
		self.Addr_9_addrTypeCode:=inRec.Addresses[9].addrTypeCode;
		self.Addr_9_addrVerificationStatusFlag:=inRec.Addresses[9].addrVerificationStatusFlag;
		self.Addr_9_addrVerificationDate:=inRec.Addresses[9].addrVerificationDate;
		self.Addr_9_addrPenalty:=if(inRec.Addresses[9].p_city_name<>'',(string)inRec.Addresses[9].addrPenalty,'');
		self.Addr_9_address1:=inRec.Addresses[9].address1;
		self.Addr_9_address2:=inRec.Addresses[9].address2;
		self.Addr_9_prim_range:=inRec.Addresses[9].prim_range;
		self.Addr_9_predir:=inRec.Addresses[9].predir;
		self.Addr_9_prim_name:=inRec.Addresses[9].prim_name;
		self.Addr_9_addr_suffix:=inRec.Addresses[9].addr_suffix;
		self.Addr_9_postdir:=inRec.Addresses[9].postdir;
		self.Addr_9_unit_desig:=inRec.Addresses[9].unit_desig;
		self.Addr_9_sec_range:=inRec.Addresses[9].sec_range;
		self.Addr_9_p_city_name:=inRec.Addresses[9].p_city_name;
		self.Addr_9_v_city_name:=inRec.Addresses[9].v_city_name;
		self.Addr_9_st:=inRec.Addresses[9].st;
		self.Addr_9_z5:=inRec.Addresses[9].z5;
		self.Addr_9_zip4:=inRec.Addresses[9].zip4;
		self.Addr_9_last_seen:=inRec.Addresses[9].last_seen;
		self.Addr_9_first_seen:=inRec.Addresses[9].first_seen;
		self.Addr_9_v_last_seen:=inRec.Addresses[9].v_last_seen;
		self.Addr_9_v_first_seen:=inRec.Addresses[9].v_first_seen;
		self.Addr_9_geo_lat:=inRec.Addresses[9].geo_lat;
		self.Addr_9_geo_long:=inRec.Addresses[9].geo_long;
		self.Addr_9_PhoneNumber:=inRec.Addresses[9].Phones[1].PhoneNumber;
		self.Addr_9_FaxNumber:=inRec.Addresses[9].Phones[1].FaxNumber;
		self.Addr_10_addrGoldFlag:=inRec.Addresses[10].addrGoldFlag;
		self.Addr_10_addrConfidenceValue:=inRec.Addresses[10].addrConfidenceValue;
		self.Addr_10_addrTypeCode:=inRec.Addresses[10].addrTypeCode;
		self.Addr_10_addrVerificationStatusFlag:=inRec.Addresses[10].addrVerificationStatusFlag;
		self.Addr_10_addrVerificationDate:=inRec.Addresses[10].addrVerificationDate;
		self.Addr_10_addrPenalty:=if(inRec.Addresses[10].p_city_name<>'',(string)inRec.Addresses[10].addrPenalty,'');
		self.Addr_10_address1:=inRec.Addresses[10].address1;
		self.Addr_10_address2:=inRec.Addresses[10].address2;
		self.Addr_10_prim_range:=inRec.Addresses[10].prim_range;
		self.Addr_10_predir:=inRec.Addresses[10].predir;
		self.Addr_10_prim_name:=inRec.Addresses[10].prim_name;
		self.Addr_10_addr_suffix:=inRec.Addresses[10].addr_suffix;
		self.Addr_10_postdir:=inRec.Addresses[10].postdir;
		self.Addr_10_unit_desig:=inRec.Addresses[10].unit_desig;
		self.Addr_10_sec_range:=inRec.Addresses[10].sec_range;
		self.Addr_10_p_city_name:=inRec.Addresses[10].p_city_name;
		self.Addr_10_v_city_name:=inRec.Addresses[10].v_city_name;
		self.Addr_10_st:=inRec.Addresses[10].st;
		self.Addr_10_z5:=inRec.Addresses[10].z5;
		self.Addr_10_zip4:=inRec.Addresses[10].zip4;
		self.Addr_10_last_seen:=inRec.Addresses[10].last_seen;
		self.Addr_10_first_seen:=inRec.Addresses[10].first_seen;
		self.Addr_10_v_last_seen:=inRec.Addresses[10].v_last_seen;
		self.Addr_10_v_first_seen:=inRec.Addresses[10].v_first_seen;
		self.Addr_10_geo_lat:=inRec.Addresses[10].geo_lat;
		self.Addr_10_geo_long:=inRec.Addresses[10].geo_long;
		self.Addr_10_PhoneNumber:=inRec.Addresses[10].Phones[1].PhoneNumber;
		self.Addr_10_FaxNumber:=inRec.Addresses[10].Phones[1].FaxNumber;
		self.phone_1:=inRec.phones[1].phone;
		self.PhoneType_1:=inRec.phones[1].PhoneType;
		self.phone_2:=inRec.phones[2].phone;
		self.PhoneType_2:=inRec.phones[2].PhoneType;
		self.phone_3:=inRec.phones[3].phone;
		self.PhoneType_3:=inRec.phones[3].PhoneType;
		self.phone_4:=inRec.phones[4].phone;
		self.PhoneType_4:=inRec.phones[4].PhoneType;
		self.phone_5:=inRec.phones[5].phone;
		self.PhoneType_5:=inRec.phones[5].PhoneType;
		self.phone_6:=inRec.phones[6].phone;
		self.PhoneType_6:=inRec.phones[6].PhoneType;
		self.phone_7:=inRec.phones[7].phone;
		self.PhoneType_7:=inRec.phones[7].PhoneType;
		self.phone_8:=inRec.phones[8].phone;
		self.PhoneType_8:=inRec.phones[8].PhoneType;
		self.phone_9:=inRec.phones[9].phone;
		self.PhoneType_9:=inRec.phones[9].PhoneType;
		self.phone_10:=inRec.phones[10].phone;
		self.PhoneType_10:=inRec.phones[10].PhoneType;
		self.ssn_1:=inRec.ssns[1].ssn;
		self.ssn_2:=inRec.ssns[2].ssn;
		self.ssn_3:=inRec.ssns[3].ssn;
		self.ssn_4:=inRec.ssns[4].ssn;
		self.ssn_5:=inRec.ssns[5].ssn;
		self.dob_1:=inRec.dobs[1].dob;
		self.dob_2:=inRec.dobs[2].dob;
		self.dob_3:=inRec.dobs[3].dob;
		self.dob_4:=inRec.dobs[4].dob;
		self.dob_5:=inRec.dobs[5].dob;
		self.DeathLookup:=if(inRec.DeathLookup,'TRUE','FALSE');
		self.DateofDeath:=inRec.DateofDeath;
		self.did_1:=if(inRec.dids[1].did>0,(string)inRec.dids[1].did,'');
		self.didfreq_1:=if(inRec.dids[1].did>0,(string)inRec.dids[1].freq,'');
		self.did_2:=if(inRec.dids[2].did>0,(string)inRec.dids[2].did,'');
		self.didfreq_2:=if(inRec.dids[2].did>0,(string)inRec.dids[2].freq,'');
		self.did_3:=if(inRec.dids[3].did>0,(string)inRec.dids[3].did,'');
		self.didfreq_3:=if(inRec.dids[3].did>0,(string)inRec.dids[3].freq,'');
		self.did_4:=if(inRec.dids[4].did>0,(string)inRec.dids[4].did,'');
		self.didfreq_4:=if(inRec.dids[4].did>0,(string)inRec.dids[4].freq,'');
		self.did_5:=if(inRec.dids[5].did>0,(string)inRec.dids[5].did,'');
		self.didfreq_5:=if(inRec.dids[5].did>0,(string)inRec.dids[5].freq,'');
		self.bdid_1:=if(inRec.bdids[1].bdid>0,(string)inRec.bdids[1].bdid,'');
		self.bdidfreq_1:=if(inRec.bdids[1].bdid>0,(string)inRec.bdids[1].freq,'');
		self.bdid_2:=if(inRec.bdids[2].bdid>0,(string)inRec.bdids[2].bdid,'');
		self.bdidfreq_2:=if(inRec.bdids[2].bdid>0,(string)inRec.bdids[2].freq,'');
		self.bdid_3:=if(inRec.bdids[3].bdid>0,(string)inRec.bdids[3].bdid,'');
		self.bdidfreq_3:=if(inRec.bdids[3].bdid>0,(string)inRec.bdids[3].freq,'');
		self.bdid_4:=if(inRec.bdids[4].bdid>0,(string)inRec.bdids[4].bdid,'');
		self.bdidfreq_4:=if(inRec.bdids[4].bdid>0,(string)inRec.bdids[4].freq,'');
		self.bdid_5:=if(inRec.bdids[5].bdid>0,(string)inRec.bdids[5].bdid,'');
		self.bdidfreq_5:=if(inRec.bdids[5].bdid>0,(string)inRec.bdids[5].freq,'');
		self.fein_1:=inRec.feins[1].fein;
		self.fein_2:=inRec.feins[2].fein;
		self.fein_3:=inRec.feins[3].fein;
		self.fein_4:=inRec.feins[4].fein;
		self.fein_5:=inRec.feins[5].fein;
		self.taxid_1:=inRec.taxids[1].taxid;
		self.taxid_2:=inRec.taxids[2].taxid;
		self.taxid_3:=inRec.taxids[3].taxid;
		self.taxid_4:=inRec.taxids[4].taxid;
		self.taxid_5:=inRec.taxids[5].taxid;
		self.upin_1:=inRec.upins[1].upin;
		self.upin_2:=inRec.upins[2].upin;
		self.upin_3:=inRec.upins[3].upin;
		self.upin_4:=inRec.upins[4].upin;
		self.upin_5:=inRec.upins[5].upin;
		self.npi_1:=inRec.npis[1].npi;
		self.npi_2:=inRec.npis[2].npi;
		self.npi_3:=inRec.npis[3].npi;
		self.npi_4:=inRec.npis[4].npi;
		self.npi_5:=inRec.npis[5].npi;
		dea1:=inRec.deas[1].dea;
		dea1_ds:=inRec.DEARaw(RegistrationNumber=dea1);
		dea2:=inRec.deas[2].dea;
		dea2_ds:=inRec.DEARaw(RegistrationNumber=dea2);
		dea3:=inRec.deas[3].dea;
		dea3_ds:=inRec.DEARaw(RegistrationNumber=dea3);
		dea4:=inRec.deas[4].dea;
		dea4_ds:=inRec.DEARaw(RegistrationNumber=dea4);
		dea5:=inRec.deas[5].dea;
		dea5_ds:=inRec.DEARaw(RegistrationNumber=dea5);
		dea6:=inRec.deas[6].dea;
		dea6_ds:=inRec.DEARaw(RegistrationNumber=dea6);
		dea7:=inRec.deas[7].dea;
		dea7_ds:=inRec.DEARaw(RegistrationNumber=dea7);
		dea8:=inRec.deas[8].dea;
		dea8_ds:=inRec.DEARaw(RegistrationNumber=dea8);
		dea9:=inRec.deas[9].dea;
		dea9_ds:=inRec.DEARaw(RegistrationNumber=dea9);
		dea10:=inRec.deas[10].dea;
		dea10_ds:=inRec.DEARaw(RegistrationNumber=dea10);
		self.dea_1:=dea1;
		self.dea_1_expiration_date:=inRec.deas[1].expiration_date;
		self.dea_1_Drug_Schedules:=dea1_ds[1].DrugSchedules;
		self.dea_2:=dea2;
		self.dea_2_expiration_date:=inRec.deas[2].expiration_date;
		self.dea_2_Drug_Schedules:=dea2_ds[1].DrugSchedules;
		self.dea_3:=dea3;
		self.dea_3_expiration_date:=inRec.deas[3].expiration_date;
		self.dea_3_Drug_Schedules:=dea3_ds[1].DrugSchedules;
		self.dea_4:=dea4;
		self.dea_4_expiration_date:=inRec.deas[4].expiration_date;
		self.dea_4_Drug_Schedules:=dea4_ds[1].DrugSchedules;
		self.dea_5:=dea5;
		self.dea_5_expiration_date:=inRec.deas[5].expiration_date;
		self.dea_5_Drug_Schedules:=dea5_ds[1].DrugSchedules;
		self.dea_6:=dea6;
		self.dea_6_expiration_date:=inRec.deas[6].expiration_date;
		self.dea_6_Drug_Schedules:=dea6_ds[1].DrugSchedules;
		self.dea_7:=dea7;
		self.dea_7_expiration_date:=inRec.deas[7].expiration_date;
		self.dea_7_Drug_Schedules:=dea7_ds[1].DrugSchedules;
		self.dea_8:=dea8;
		self.dea_8_expiration_date:=inRec.deas[8].expiration_date;
		self.dea_8_Drug_Schedules:=dea8_ds[1].DrugSchedules;
		self.dea_9:=dea9;
		self.dea_9_expiration_date:=inRec.deas[9].expiration_date;
		self.dea_9_Drug_Schedules:=dea9_ds[1].DrugSchedules;
		self.dea_10:=dea10;
		self.dea_10_expiration_date:=inRec.deas[10].expiration_date;
		self.dea_10_Drug_Schedules:=dea10_ds[1].DrugSchedules;
		self.clianumber_1:=inRec.clianumbers[1].clianumber;
		self.clianumber_2:=inRec.clianumbers[2].clianumber;
		self.clianumber_3:=inRec.clianumbers[3].clianumber;
		self.clianumber_4:=inRec.clianumbers[4].clianumber;
		self.clianumber_5:=inRec.clianumbers[5].clianumber;
		self.optout_1_sitedesc:=inRec.optouts[1].optout_sitedesc;
		self.optout_1_rec_dt:=inRec.optouts[1].optout_rec_dt;
		self.optout_1_eff_dt:=inRec.optouts[1].optout_eff_dt;
		self.optout_1_term_dt:=inRec.optouts[1].optout_term_dt;
		self.optout_1_status:=inRec.optouts[1].optout_status;
		self.optout_1_last_update:=inRec.optouts[1].optout_last_update;
		self.optout_2_sitedesc:=inRec.optouts[2].optout_sitedesc;
		self.optout_2_rec_dt:=inRec.optouts[2].optout_rec_dt;
		self.optout_2_eff_dt:=inRec.optouts[2].optout_eff_dt;
		self.optout_2_term_dt:=inRec.optouts[2].optout_term_dt;
		self.optout_2_status:=inRec.optouts[2].optout_status;
		self.optout_2_last_update:=inRec.optouts[2].optout_last_update;
		self.optout_3_sitedesc:=inRec.optouts[3].optout_sitedesc;
		self.optout_3_rec_dt:=inRec.optouts[3].optout_rec_dt;
		self.optout_3_eff_dt:=inRec.optouts[3].optout_eff_dt;
		self.optout_3_term_dt:=inRec.optouts[3].optout_term_dt;
		self.optout_3_status:=inRec.optouts[3].optout_status;
		self.optout_3_last_update:=inRec.optouts[3].optout_last_update;
		self.optout_4_sitedesc:=inRec.optouts[4].optout_sitedesc;
		self.optout_4_rec_dt:=inRec.optouts[4].optout_rec_dt;
		self.optout_4_eff_dt:=inRec.optouts[4].optout_eff_dt;
		self.optout_4_term_dt:=inRec.optouts[4].optout_term_dt;
		self.optout_4_status:=inRec.optouts[4].optout_status;
		self.optout_4_last_update:=inRec.optouts[4].optout_last_update;
		self.optout_5_sitedesc:=inRec.optouts[5].optout_sitedesc;
		self.optout_5_rec_dt:=inRec.optouts[5].optout_rec_dt;
		self.optout_5_eff_dt:=inRec.optouts[5].optout_eff_dt;
		self.optout_5_term_dt:=inRec.optouts[5].optout_term_dt;
		self.optout_5_status:=inRec.optouts[5].optout_status;
		self.optout_5_last_update:=inRec.optouts[5].optout_last_update;
		self.death_ind:=inRec.optouts[1].death_ind;
		self.death_dt:=inRec.optouts[1].death_dt;
		self.License_1_State:=inRec.StateLicenses[1].LicenseState;
		self.License_1_Number:=inRec.StateLicenses[1].LicenseNumber;
		self.License_1_Status:=inRec.StateLicenses[1].LicenseStatus;
		self.License_1_Effective_Date:=inRec.StateLicenses[1].Effective_Date;
		self.License_1_Termination_Date:=inRec.StateLicenses[1].Termination_Date;
		Self.License_1_Type := inRec.StateLicenses[1].LicenseType;
		Self.License_1_NumberOrigFmt := inRec.StateLicenses[1].LicenseNumberFmt;
		self.License_2_State:=inRec.StateLicenses[2].LicenseState;
		self.License_2_Number:=inRec.StateLicenses[2].LicenseNumber;
		self.License_2_Status:=inRec.StateLicenses[2].LicenseStatus;
		self.License_2_Effective_Date:=inRec.StateLicenses[2].Effective_Date;
		self.License_2_Termination_Date:=inRec.StateLicenses[2].Termination_Date;
		Self.License_2_Type := inRec.StateLicenses[2].LicenseType;
		Self.License_2_NumberOrigFmt := inRec.StateLicenses[2].LicenseNumberFmt;
		self.License_3_State:=inRec.StateLicenses[3].LicenseState;
		self.License_3_Number:=inRec.StateLicenses[3].LicenseNumber;
		self.License_3_Status:=inRec.StateLicenses[3].LicenseStatus;
		self.License_3_Effective_Date:=inRec.StateLicenses[3].Effective_Date;
		self.License_3_Termination_Date:=inRec.StateLicenses[3].Termination_Date;
		Self.License_3_Type := inRec.StateLicenses[3].LicenseType;
		Self.License_3_NumberOrigFmt := inRec.StateLicenses[3].LicenseNumberFmt;
		self.License_4_State:=inRec.StateLicenses[4].LicenseState;
		self.License_4_Number:=inRec.StateLicenses[4].LicenseNumber;
		self.License_4_Status:=inRec.StateLicenses[4].LicenseStatus;
		self.License_4_Effective_Date:=inRec.StateLicenses[4].Effective_Date;
		self.License_4_Termination_Date:=inRec.StateLicenses[4].Termination_Date;
		Self.License_4_Type := inRec.StateLicenses[4].LicenseType;
		Self.License_4_NumberOrigFmt := inRec.StateLicenses[4].LicenseNumberFmt;
		self.License_5_State:=inRec.StateLicenses[5].LicenseState;
		self.License_5_Number:=inRec.StateLicenses[5].LicenseNumber;
		self.License_5_Status:=inRec.StateLicenses[5].LicenseStatus;
		self.License_5_Effective_Date:=inRec.StateLicenses[5].Effective_Date;
		self.License_5_Termination_Date:=inRec.StateLicenses[5].Termination_Date;
		Self.License_5_Type := inRec.StateLicenses[5].LicenseType;
		Self.License_5_NumberOrigFmt := inRec.StateLicenses[5].LicenseNumberFmt;
		self.License_6_State:=inRec.StateLicenses[6].LicenseState;
		self.License_6_Number:=inRec.StateLicenses[6].LicenseNumber;
		self.License_6_Status:=inRec.StateLicenses[6].LicenseStatus;
		self.License_6_Effective_Date:=inRec.StateLicenses[6].Effective_Date;
		self.License_6_Termination_Date:=inRec.StateLicenses[6].Termination_Date;
		Self.License_6_Type := inRec.StateLicenses[6].LicenseType;
		Self.License_6_NumberOrigFmt := inRec.StateLicenses[6].LicenseNumberFmt;
		self.License_7_State:=inRec.StateLicenses[7].LicenseState;
		self.License_7_Number:=inRec.StateLicenses[7].LicenseNumber;
		self.License_7_Status:=inRec.StateLicenses[7].LicenseStatus;
		self.License_7_Effective_Date:=inRec.StateLicenses[7].Effective_Date;
		self.License_7_Termination_Date:=inRec.StateLicenses[7].Termination_Date;
		Self.License_7_Type := inRec.StateLicenses[7].LicenseType;
		Self.License_7_NumberOrigFmt := inRec.StateLicenses[7].LicenseNumberFmt;
		self.License_8_State:=inRec.StateLicenses[8].LicenseState;
		self.License_8_Number:=inRec.StateLicenses[8].LicenseNumber;
		self.License_8_Status:=inRec.StateLicenses[8].LicenseStatus;
		self.License_8_Effective_Date:=inRec.StateLicenses[8].Effective_Date;
		self.License_8_Termination_Date:=inRec.StateLicenses[8].Termination_Date;
		Self.License_8_Type := inRec.StateLicenses[8].LicenseType;
		Self.License_8_NumberOrigFmt := inRec.StateLicenses[8].LicenseNumberFmt;
		self.License_9_State:=inRec.StateLicenses[9].LicenseState;
		self.License_9_Number:=inRec.StateLicenses[9].LicenseNumber;
		self.License_9_Status:=inRec.StateLicenses[9].LicenseStatus;
		self.License_9_Effective_Date:=inRec.StateLicenses[9].Effective_Date;
		self.License_9_Termination_Date:=inRec.StateLicenses[9].Termination_Date;
		Self.License_9_Type := inRec.StateLicenses[9].LicenseType;
		Self.License_9_NumberOrigFmt := inRec.StateLicenses[9].LicenseNumberFmt;
		self.License_10_State:=inRec.StateLicenses[10].LicenseState;
		self.License_10_Number:=inRec.StateLicenses[10].LicenseNumber;
		self.License_10_Status:=inRec.StateLicenses[10].LicenseStatus;
		self.License_10_Effective_Date:=inRec.StateLicenses[10].Effective_Date;
		self.License_10_Termination_Date:=inRec.StateLicenses[10].Termination_Date;
		Self.License_10_Type := inRec.StateLicenses[10].LicenseType;
		Self.License_10_NumberOrigFmt := inRec.StateLicenses[10].LicenseNumberFmt;
		self.License_11_State:=inRec.StateLicenses[11].LicenseState;
		self.License_11_Number:=inRec.StateLicenses[11].LicenseNumber;
		self.License_11_Status:=inRec.StateLicenses[11].LicenseStatus;
		self.License_11_Effective_Date:=inRec.StateLicenses[11].Effective_Date;
		self.License_11_Termination_Date:=inRec.StateLicenses[11].Termination_Date;
		Self.License_11_Type := inRec.StateLicenses[11].LicenseType;
		Self.License_11_NumberOrigFmt := inRec.StateLicenses[11].LicenseNumberFmt;
		self.License_12_State:=inRec.StateLicenses[12].LicenseState;
		self.License_12_Number:=inRec.StateLicenses[12].LicenseNumber;
		self.License_12_Status:=inRec.StateLicenses[12].LicenseStatus;
		self.License_12_Effective_Date:=inRec.StateLicenses[12].Effective_Date;
		self.License_12_Termination_Date:=inRec.StateLicenses[12].Termination_Date;
		Self.License_12_Type := inRec.StateLicenses[12].LicenseType;
		Self.License_12_NumberOrigFmt := inRec.StateLicenses[12].LicenseNumberFmt;
		self.License_13_State:=inRec.StateLicenses[13].LicenseState;
		self.License_13_Number:=inRec.StateLicenses[13].LicenseNumber;
		self.License_13_Status:=inRec.StateLicenses[13].LicenseStatus;
		self.License_13_Effective_Date:=inRec.StateLicenses[13].Effective_Date;
		self.License_13_Termination_Date:=inRec.StateLicenses[13].Termination_Date;
		Self.License_13_Type := inRec.StateLicenses[13].LicenseType;
		Self.License_13_NumberOrigFmt := inRec.StateLicenses[13].LicenseNumberFmt;
		self.License_14_State:=inRec.StateLicenses[14].LicenseState;
		self.License_14_Number:=inRec.StateLicenses[14].LicenseNumber;
		self.License_14_Status:=inRec.StateLicenses[14].LicenseStatus;
		self.License_14_Effective_Date:=inRec.StateLicenses[14].Effective_Date;
		self.License_14_Termination_Date:=inRec.StateLicenses[14].Termination_Date;
		Self.License_14_Type := inRec.StateLicenses[14].LicenseType;
		Self.License_14_NumberOrigFmt := inRec.StateLicenses[14].LicenseNumberFmt;
		self.License_15_State:=inRec.StateLicenses[15].LicenseState;
		self.License_15_Number:=inRec.StateLicenses[15].LicenseNumber;
		self.License_15_Status:=inRec.StateLicenses[15].LicenseStatus;
		self.License_15_Effective_Date:=inRec.StateLicenses[15].Effective_Date;
		self.License_15_Termination_Date:=inRec.StateLicenses[15].Termination_Date;
		Self.License_15_Type := inRec.StateLicenses[15].LicenseType;
		Self.License_15_NumberOrigFmt := inRec.StateLicenses[15].LicenseNumberFmt;
		self.License_16_State:=inRec.StateLicenses[16].LicenseState;
		self.License_16_Number:=inRec.StateLicenses[16].LicenseNumber;
		self.License_16_Status:=inRec.StateLicenses[16].LicenseStatus;
		self.License_16_Effective_Date:=inRec.StateLicenses[16].Effective_Date;
		self.License_16_Termination_Date:=inRec.StateLicenses[16].Termination_Date;
		Self.License_16_Type := inRec.StateLicenses[16].LicenseType;
		Self.License_16_NumberOrigFmt := inRec.StateLicenses[16].LicenseNumberFmt; 
		self.License_17_State:=inRec.StateLicenses[17].LicenseState;
		self.License_17_Number:=inRec.StateLicenses[17].LicenseNumber;
		self.License_17_Status:=inRec.StateLicenses[17].LicenseStatus;
		self.License_17_Effective_Date:=inRec.StateLicenses[17].Effective_Date;
		self.License_17_Termination_Date:=inRec.StateLicenses[17].Termination_Date;
		Self.License_17_Type := inRec.StateLicenses[17].LicenseType;
		Self.License_17_NumberOrigFmt := inRec.StateLicenses[17].LicenseNumberFmt; 
		self.License_18_State:=inRec.StateLicenses[18].LicenseState;
		self.License_18_Number:=inRec.StateLicenses[18].LicenseNumber;
		self.License_18_Status:=inRec.StateLicenses[18].LicenseStatus;
		self.License_18_Effective_Date:=inRec.StateLicenses[18].Effective_Date;
		self.License_18_Termination_Date:=inRec.StateLicenses[18].Termination_Date;
		Self.License_18_Type := inRec.StateLicenses[18].LicenseType;
		Self.License_18_NumberOrigFmt := inRec.StateLicenses[18].LicenseNumberFmt; 
		self.License_19_State:=inRec.StateLicenses[19].LicenseState;
		self.License_19_Number:=inRec.StateLicenses[19].LicenseNumber;
		self.License_19_Status:=inRec.StateLicenses[19].LicenseStatus;
		self.License_19_Effective_Date:=inRec.StateLicenses[19].Effective_Date;
		self.License_19_Termination_Date:=inRec.StateLicenses[19].Termination_Date;
		Self.License_19_Type := inRec.StateLicenses[19].LicenseType;
		Self.License_19_NumberOrigFmt := inRec.StateLicenses[19].LicenseNumberFmt; 
	  self.License_20_State:=inRec.StateLicenses[20].LicenseState;
		self.License_20_Number:=inRec.StateLicenses[20].LicenseNumber;
		self.License_20_Status:=inRec.StateLicenses[20].LicenseStatus;
		self.License_20_Effective_Date:=inRec.StateLicenses[20].Effective_Date;
		self.License_20_Termination_Date:=inRec.StateLicenses[20].Termination_Date;
		Self.License_20_Type := inRec.StateLicenses[20].LicenseType;
		Self.License_20_NumberOrigFmt := inRec.StateLicenses[20].LicenseNumberFmt; 		
		self.Affiliate_1_bdid:=if(inRec.affiliates[1].bdid>0,(string)inRec.affiliates[1].bdid,'');
		self.Affiliate_1_fein:=inRec.affiliates[1].tin;
		self.Affiliate_1_name:=inRec.affiliates[1].name;
		self.Affiliate_1_addrPenalty:=if(inRec.affiliates[1].name<>'',(string)inRec.affiliates[1].addrPenalty,'');
		self.Affiliate_1_address1:=inRec.affiliates[1].address1;
		self.Affiliate_1_prim_range:=inRec.affiliates[1].prim_range;
		self.Affiliate_1_predir:=inRec.affiliates[1].predir;
		self.Affiliate_1_prim_name:=inRec.affiliates[1].prim_name;
		self.Affiliate_1_addr_suffix:=inRec.affiliates[1].addr_suffix;
		self.Affiliate_1_postdir:=inRec.affiliates[1].postdir;
		self.Affiliate_1_unit_desig:=inRec.affiliates[1].unit_desig;
		self.Affiliate_1_sec_range:=inRec.affiliates[1].sec_range;
		self.Affiliate_1_p_city_name:=inRec.affiliates[1].p_city_name;
		self.Affiliate_1_st:=inRec.affiliates[1].st;
		self.Affiliate_1_z5:=inRec.affiliates[1].z5;
		self.Affiliate_1_zip4:=inRec.affiliates[1].zip4;
		self.Affiliate_2_bdid:=if(inRec.affiliates[2].bdid>0,(string)inRec.affiliates[2].bdid,'');
		self.Affiliate_2_fein:=inRec.affiliates[2].tin;
		self.Affiliate_2_name:=inRec.affiliates[2].name;
		self.Affiliate_2_addrPenalty:=if(inRec.affiliates[2].name<>'',(string)inRec.affiliates[2].addrPenalty,'');
		self.Affiliate_2_address1:=inRec.affiliates[2].address1;
		self.Affiliate_2_prim_range:=inRec.affiliates[2].prim_range;
		self.Affiliate_2_predir:=inRec.affiliates[2].predir;
		self.Affiliate_2_prim_name:=inRec.affiliates[2].prim_name;
		self.Affiliate_2_addr_suffix:=inRec.affiliates[2].addr_suffix;
		self.Affiliate_2_postdir:=inRec.affiliates[2].postdir;
		self.Affiliate_2_unit_desig:=inRec.affiliates[2].unit_desig;
		self.Affiliate_2_sec_range:=inRec.affiliates[2].sec_range;
		self.Affiliate_2_p_city_name:=inRec.affiliates[2].p_city_name;
		self.Affiliate_2_st:=inRec.affiliates[2].st;
		self.Affiliate_2_z5:=inRec.affiliates[2].z5;
		self.Affiliate_2_zip4:=inRec.affiliates[2].zip4;
		self.Affiliate_3_bdid:=if(inRec.affiliates[3].bdid>0,(string)inRec.affiliates[3].bdid,'');
		self.Affiliate_3_fein:=inRec.affiliates[3].tin;
		self.Affiliate_3_name:=inRec.affiliates[3].name;
		self.Affiliate_3_addrPenalty:=if(inRec.affiliates[3].name<>'',(string)inRec.affiliates[3].addrPenalty,'');
		self.Affiliate_3_address1:=inRec.affiliates[3].address1;
		self.Affiliate_3_prim_range:=inRec.affiliates[3].prim_range;
		self.Affiliate_3_predir:=inRec.affiliates[3].predir;
		self.Affiliate_3_prim_name:=inRec.affiliates[3].prim_name;
		self.Affiliate_3_addr_suffix:=inRec.affiliates[3].addr_suffix;
		self.Affiliate_3_postdir:=inRec.affiliates[3].postdir;
		self.Affiliate_3_unit_desig:=inRec.affiliates[3].unit_desig;
		self.Affiliate_3_sec_range:=inRec.affiliates[3].sec_range;
		self.Affiliate_3_p_city_name:=inRec.affiliates[3].p_city_name;
		self.Affiliate_3_st:=inRec.affiliates[3].st;
		self.Affiliate_3_z5:=inRec.affiliates[3].z5;
		self.Affiliate_3_zip4:=inRec.affiliates[3].zip4;
		self.Affiliate_4_bdid:=if(inRec.affiliates[4].bdid>0,(string)inRec.affiliates[4].bdid,'');
		self.Affiliate_4_fein:=inRec.affiliates[4].tin;
		self.Affiliate_4_name:=inRec.affiliates[4].name;
		self.Affiliate_4_addrPenalty:=if(inRec.affiliates[4].name<>'',(string)inRec.affiliates[4].addrPenalty,'');
		self.Affiliate_4_address1:=inRec.affiliates[4].address1;
		self.Affiliate_4_prim_range:=inRec.affiliates[4].prim_range;
		self.Affiliate_4_predir:=inRec.affiliates[4].predir;
		self.Affiliate_4_prim_name:=inRec.affiliates[4].prim_name;
		self.Affiliate_4_addr_suffix:=inRec.affiliates[4].addr_suffix;
		self.Affiliate_4_postdir:=inRec.affiliates[4].postdir;
		self.Affiliate_4_unit_desig:=inRec.affiliates[4].unit_desig;
		self.Affiliate_4_sec_range:=inRec.affiliates[4].sec_range;
		self.Affiliate_4_p_city_name:=inRec.affiliates[4].p_city_name;
		self.Affiliate_4_st:=inRec.affiliates[4].st;
		self.Affiliate_4_z5:=inRec.affiliates[4].z5;
		self.Affiliate_4_zip4:=inRec.affiliates[4].zip4;
		self.Affiliate_5_bdid:=if(inRec.affiliates[5].bdid>0,(string)inRec.affiliates[5].bdid,'');
		self.Affiliate_5_fein:=inRec.affiliates[5].tin;
		self.Affiliate_5_name:=inRec.affiliates[5].name;
		self.Affiliate_5_addrPenalty:=if(inRec.affiliates[5].name<>'',(string)inRec.affiliates[5].addrPenalty,'');
		self.Affiliate_5_address1:=inRec.affiliates[5].address1;
		self.Affiliate_5_prim_range:=inRec.affiliates[5].prim_range;
		self.Affiliate_5_predir:=inRec.affiliates[5].predir;
		self.Affiliate_5_prim_name:=inRec.affiliates[5].prim_name;
		self.Affiliate_5_addr_suffix:=inRec.affiliates[5].addr_suffix;
		self.Affiliate_5_postdir:=inRec.affiliates[5].postdir;
		self.Affiliate_5_unit_desig:=inRec.affiliates[5].unit_desig;
		self.Affiliate_5_sec_range:=inRec.affiliates[5].sec_range;
		self.Affiliate_5_p_city_name:=inRec.affiliates[5].p_city_name;
		self.Affiliate_5_st:=inRec.affiliates[5].st;
		self.Affiliate_5_z5:=inRec.affiliates[5].z5;
		self.Affiliate_5_zip4:=inRec.affiliates[5].zip4;
		self.Affiliate_6_bdid:=if(inRec.affiliates[6].bdid>0,(string)inRec.affiliates[6].bdid,'');
		self.Affiliate_6_fein:=inRec.affiliates[6].tin;
		self.Affiliate_6_name:=inRec.affiliates[6].name;
		self.Affiliate_6_addrPenalty:=if(inRec.affiliates[6].name<>'',(string)inRec.affiliates[6].addrPenalty,'');
		self.Affiliate_6_address1:=inRec.affiliates[6].address1;
		self.Affiliate_6_prim_range:=inRec.affiliates[6].prim_range;
		self.Affiliate_6_predir:=inRec.affiliates[6].predir;
		self.Affiliate_6_prim_name:=inRec.affiliates[6].prim_name;
		self.Affiliate_6_addr_suffix:=inRec.affiliates[6].addr_suffix;
		self.Affiliate_6_postdir:=inRec.affiliates[6].postdir;
		self.Affiliate_6_unit_desig:=inRec.affiliates[6].unit_desig;
		self.Affiliate_6_sec_range:=inRec.affiliates[6].sec_range;
		self.Affiliate_6_p_city_name:=inRec.affiliates[6].p_city_name;
		self.Affiliate_6_st:=inRec.affiliates[6].st;
		self.Affiliate_6_z5:=inRec.affiliates[6].z5;
		self.Affiliate_6_zip4:=inRec.affiliates[6].zip4;
		self.Affiliate_7_bdid:=if(inRec.affiliates[7].bdid>0,(string)inRec.affiliates[7].bdid,'');
		self.Affiliate_7_fein:=inRec.affiliates[7].tin;
		self.Affiliate_7_name:=inRec.affiliates[7].name;
		self.Affiliate_7_addrPenalty:=if(inRec.affiliates[7].name<>'',(string)inRec.affiliates[7].addrPenalty,'');
		self.Affiliate_7_address1:=inRec.affiliates[7].address1;
		self.Affiliate_7_prim_range:=inRec.affiliates[7].prim_range;
		self.Affiliate_7_predir:=inRec.affiliates[7].predir;
		self.Affiliate_7_prim_name:=inRec.affiliates[7].prim_name;
		self.Affiliate_7_addr_suffix:=inRec.affiliates[7].addr_suffix;
		self.Affiliate_7_postdir:=inRec.affiliates[7].postdir;
		self.Affiliate_7_unit_desig:=inRec.affiliates[7].unit_desig;
		self.Affiliate_7_sec_range:=inRec.affiliates[7].sec_range;
		self.Affiliate_7_p_city_name:=inRec.affiliates[7].p_city_name;
		self.Affiliate_7_st:=inRec.affiliates[7].st;
		self.Affiliate_7_z5:=inRec.affiliates[7].z5;
		self.Affiliate_7_zip4:=inRec.affiliates[7].zip4;
		self.Affiliate_8_bdid:=if(inRec.affiliates[8].bdid>0,(string)inRec.affiliates[8].bdid,'');
		self.Affiliate_8_fein:=inRec.affiliates[8].tin;
		self.Affiliate_8_name:=inRec.affiliates[8].name;
		self.Affiliate_8_addrPenalty:=if(inRec.affiliates[8].name<>'',(string)inRec.affiliates[8].addrPenalty,'');
		self.Affiliate_8_address1:=inRec.affiliates[8].address1;
		self.Affiliate_8_prim_range:=inRec.affiliates[8].prim_range;
		self.Affiliate_8_predir:=inRec.affiliates[8].predir;
		self.Affiliate_8_prim_name:=inRec.affiliates[8].prim_name;
		self.Affiliate_8_addr_suffix:=inRec.affiliates[8].addr_suffix;
		self.Affiliate_8_postdir:=inRec.affiliates[8].postdir;
		self.Affiliate_8_unit_desig:=inRec.affiliates[8].unit_desig;
		self.Affiliate_8_sec_range:=inRec.affiliates[8].sec_range;
		self.Affiliate_8_p_city_name:=inRec.affiliates[8].p_city_name;
		self.Affiliate_8_st:=inRec.affiliates[8].st;
		self.Affiliate_8_z5:=inRec.affiliates[8].z5;
		self.Affiliate_8_zip4:=inRec.affiliates[8].zip4;
		self.Affiliate_9_bdid:=if(inRec.affiliates[9].bdid>0,(string)inRec.affiliates[9].bdid,'');
		self.Affiliate_9_fein:=inRec.affiliates[9].tin;
		self.Affiliate_9_name:=inRec.affiliates[9].name;
		self.Affiliate_9_addrPenalty:=if(inRec.affiliates[9].name<>'',(string)inRec.affiliates[9].addrPenalty,'');
		self.Affiliate_9_address1:=inRec.affiliates[9].address1;
		self.Affiliate_9_prim_range:=inRec.affiliates[9].prim_range;
		self.Affiliate_9_predir:=inRec.affiliates[9].predir;
		self.Affiliate_9_prim_name:=inRec.affiliates[9].prim_name;
		self.Affiliate_9_addr_suffix:=inRec.affiliates[9].addr_suffix;
		self.Affiliate_9_postdir:=inRec.affiliates[9].postdir;
		self.Affiliate_9_unit_desig:=inRec.affiliates[9].unit_desig;
		self.Affiliate_9_sec_range:=inRec.affiliates[9].sec_range;
		self.Affiliate_9_p_city_name:=inRec.affiliates[9].p_city_name;
		self.Affiliate_9_st:=inRec.affiliates[9].st;
		self.Affiliate_9_z5:=inRec.affiliates[9].z5;
		self.Affiliate_9_zip4:=inRec.affiliates[9].zip4;
		self.Affiliate_10_bdid:=if(inRec.affiliates[10].bdid>0,(string)inRec.affiliates[10].bdid,'');
		self.Affiliate_10_fein:=inRec.affiliates[10].tin;
		self.Affiliate_10_name:=inRec.affiliates[10].name;
		self.Affiliate_10_addrPenalty:=if(inRec.affiliates[10].name<>'',(string)inRec.affiliates[10].addrPenalty,'');
		self.Affiliate_10_address1:=inRec.affiliates[10].address1;
		self.Affiliate_10_prim_range:=inRec.affiliates[10].prim_range;
		self.Affiliate_10_predir:=inRec.affiliates[10].predir;
		self.Affiliate_10_prim_name:=inRec.affiliates[10].prim_name;
		self.Affiliate_10_addr_suffix:=inRec.affiliates[10].addr_suffix;
		self.Affiliate_10_postdir:=inRec.affiliates[10].postdir;
		self.Affiliate_10_unit_desig:=inRec.affiliates[10].unit_desig;
		self.Affiliate_10_sec_range:=inRec.affiliates[10].sec_range;
		self.Affiliate_10_p_city_name:=inRec.affiliates[10].p_city_name;
		self.Affiliate_10_st:=inRec.affiliates[10].st;
		self.Affiliate_10_z5:=inRec.affiliates[10].z5;
		self.Affiliate_10_zip4:=inRec.affiliates[10].zip4;
		self.Hospital_1_bdid:=if(inRec.Hospitals[1].bdid>0,(string)inRec.Hospitals[1].bdid,'');
		self.Hospital_1_fein:=inRec.Hospitals[1].tin;
		self.Hospital_1_name:=inRec.Hospitals[1].name;
		self.Hospital_1_addrPenalty:=if(inRec.Hospitals[1].name<>'',(string)inRec.Hospitals[1].addrPenalty,'');
		self.Hospital_1_address1:=inRec.Hospitals[1].address1;
		self.Hospital_1_prim_range:=inRec.Hospitals[1].prim_range;
		self.Hospital_1_predir:=inRec.Hospitals[1].predir;
		self.Hospital_1_prim_name:=inRec.Hospitals[1].prim_name;
		self.Hospital_1_addr_suffix:=inRec.Hospitals[1].addr_suffix;
		self.Hospital_1_postdir:=inRec.Hospitals[1].postdir;
		self.Hospital_1_unit_desig:=inRec.Hospitals[1].unit_desig;
		self.Hospital_1_sec_range:=inRec.Hospitals[1].sec_range;
		self.Hospital_1_p_city_name:=inRec.Hospitals[1].p_city_name;
		self.Hospital_1_st:=inRec.Hospitals[1].st;
		self.Hospital_1_z5:=inRec.Hospitals[1].z5;
		self.Hospital_1_zip4:=inRec.Hospitals[1].zip4;
		self.Hospital_2_bdid:=if(inRec.Hospitals[2].bdid>0,(string)inRec.Hospitals[2].bdid,'');
		self.Hospital_2_fein:=inRec.Hospitals[2].tin;
		self.Hospital_2_name:=inRec.Hospitals[2].name;
		self.Hospital_2_addrPenalty:=if(inRec.Hospitals[2].name<>'',(string)inRec.Hospitals[2].addrPenalty,'');
		self.Hospital_2_address1:=inRec.Hospitals[2].address1;
		self.Hospital_2_prim_range:=inRec.Hospitals[2].prim_range;
		self.Hospital_2_predir:=inRec.Hospitals[2].predir;
		self.Hospital_2_prim_name:=inRec.Hospitals[2].prim_name;
		self.Hospital_2_addr_suffix:=inRec.Hospitals[2].addr_suffix;
		self.Hospital_2_postdir:=inRec.Hospitals[2].postdir;
		self.Hospital_2_unit_desig:=inRec.Hospitals[2].unit_desig;
		self.Hospital_2_sec_range:=inRec.Hospitals[2].sec_range;
		self.Hospital_2_p_city_name:=inRec.Hospitals[2].p_city_name;
		self.Hospital_2_st:=inRec.Hospitals[2].st;
		self.Hospital_2_z5:=inRec.Hospitals[2].z5;
		self.Hospital_2_zip4:=inRec.Hospitals[2].zip4;
		self.Hospital_3_bdid:=if(inRec.Hospitals[3].bdid>0,(string)inRec.Hospitals[3].bdid,'');
		self.Hospital_3_fein:=inRec.Hospitals[3].tin;
		self.Hospital_3_name:=inRec.Hospitals[3].name;
		self.Hospital_3_addrPenalty:=if(inRec.Hospitals[3].name<>'',(string)inRec.Hospitals[3].addrPenalty,'');
		self.Hospital_3_address1:=inRec.Hospitals[3].address1;
		self.Hospital_3_prim_range:=inRec.Hospitals[3].prim_range;
		self.Hospital_3_predir:=inRec.Hospitals[3].predir;
		self.Hospital_3_prim_name:=inRec.Hospitals[3].prim_name;
		self.Hospital_3_addr_suffix:=inRec.Hospitals[3].addr_suffix;
		self.Hospital_3_postdir:=inRec.Hospitals[3].postdir;
		self.Hospital_3_unit_desig:=inRec.Hospitals[3].unit_desig;
		self.Hospital_3_sec_range:=inRec.Hospitals[3].sec_range;
		self.Hospital_3_p_city_name:=inRec.Hospitals[3].p_city_name;
		self.Hospital_3_st:=inRec.Hospitals[3].st;
		self.Hospital_3_z5:=inRec.Hospitals[3].z5;
		self.Hospital_3_zip4:=inRec.Hospitals[3].zip4;
		self.Hospital_4_bdid:=if(inRec.Hospitals[4].bdid>0,(string)inRec.Hospitals[4].bdid,'');
		self.Hospital_4_fein:=inRec.Hospitals[4].tin;
		self.Hospital_4_name:=inRec.Hospitals[4].name;
		self.Hospital_4_addrPenalty:=if(inRec.Hospitals[4].name<>'',(string)inRec.Hospitals[4].addrPenalty,'');
		self.Hospital_4_address1:=inRec.Hospitals[4].address1;
		self.Hospital_4_prim_range:=inRec.Hospitals[4].prim_range;
		self.Hospital_4_predir:=inRec.Hospitals[4].predir;
		self.Hospital_4_prim_name:=inRec.Hospitals[4].prim_name;
		self.Hospital_4_addr_suffix:=inRec.Hospitals[4].addr_suffix;
		self.Hospital_4_postdir:=inRec.Hospitals[4].postdir;
		self.Hospital_4_unit_desig:=inRec.Hospitals[4].unit_desig;
		self.Hospital_4_sec_range:=inRec.Hospitals[4].sec_range;
		self.Hospital_4_p_city_name:=inRec.Hospitals[4].p_city_name;
		self.Hospital_4_st:=inRec.Hospitals[4].st;
		self.Hospital_4_z5:=inRec.Hospitals[4].z5;
		self.Hospital_4_zip4:=inRec.Hospitals[4].zip4;
		self.Hospital_5_bdid:=if(inRec.Hospitals[5].bdid>0,(string)inRec.Hospitals[5].bdid,'');
		self.Hospital_5_fein:=inRec.Hospitals[5].tin;
		self.Hospital_5_name:=inRec.Hospitals[5].name;
		self.Hospital_5_addrPenalty:=if(inRec.Hospitals[5].name<>'',(string)inRec.Hospitals[5].addrPenalty,'');
		self.Hospital_5_address1:=inRec.Hospitals[5].address1;
		self.Hospital_5_prim_range:=inRec.Hospitals[5].prim_range;
		self.Hospital_5_predir:=inRec.Hospitals[5].predir;
		self.Hospital_5_prim_name:=inRec.Hospitals[5].prim_name;
		self.Hospital_5_addr_suffix:=inRec.Hospitals[5].addr_suffix;
		self.Hospital_5_postdir:=inRec.Hospitals[5].postdir;
		self.Hospital_5_unit_desig:=inRec.Hospitals[5].unit_desig;
		self.Hospital_5_sec_range:=inRec.Hospitals[5].sec_range;
		self.Hospital_5_p_city_name:=inRec.Hospitals[5].p_city_name;
		self.Hospital_5_st:=inRec.Hospitals[5].st;
		self.Hospital_5_z5:=inRec.Hospitals[5].z5;
		self.Hospital_5_zip4:=inRec.Hospitals[5].zip4;
		self.Hospital_6_bdid:=if(inRec.Hospitals[6].bdid>0,(string)inRec.Hospitals[6].bdid,'');
		self.Hospital_6_fein:=inRec.Hospitals[6].tin;
		self.Hospital_6_name:=inRec.Hospitals[6].name;
		self.Hospital_6_addrPenalty:=if(inRec.Hospitals[6].name<>'',(string)inRec.Hospitals[6].addrPenalty,'');
		self.Hospital_6_address1:=inRec.Hospitals[6].address1;
		self.Hospital_6_prim_range:=inRec.Hospitals[6].prim_range;
		self.Hospital_6_predir:=inRec.Hospitals[6].predir;
		self.Hospital_6_prim_name:=inRec.Hospitals[6].prim_name;
		self.Hospital_6_addr_suffix:=inRec.Hospitals[6].addr_suffix;
		self.Hospital_6_postdir:=inRec.Hospitals[6].postdir;
		self.Hospital_6_unit_desig:=inRec.Hospitals[6].unit_desig;
		self.Hospital_6_sec_range:=inRec.Hospitals[6].sec_range;
		self.Hospital_6_p_city_name:=inRec.Hospitals[6].p_city_name;
		self.Hospital_6_st:=inRec.Hospitals[6].st;
		self.Hospital_6_z5:=inRec.Hospitals[6].z5;
		self.Hospital_6_zip4:=inRec.Hospitals[6].zip4;
		self.Hospital_7_bdid:=if(inRec.Hospitals[7].bdid>0,(string)inRec.Hospitals[7].bdid,'');
		self.Hospital_7_fein:=inRec.Hospitals[7].tin;
		self.Hospital_7_name:=inRec.Hospitals[7].name;
		self.Hospital_7_addrPenalty:=if(inRec.Hospitals[7].name<>'',(string)inRec.Hospitals[7].addrPenalty,'');
		self.Hospital_7_address1:=inRec.Hospitals[7].address1;
		self.Hospital_7_prim_range:=inRec.Hospitals[7].prim_range;
		self.Hospital_7_predir:=inRec.Hospitals[7].predir;
		self.Hospital_7_prim_name:=inRec.Hospitals[7].prim_name;
		self.Hospital_7_addr_suffix:=inRec.Hospitals[7].addr_suffix;
		self.Hospital_7_postdir:=inRec.Hospitals[7].postdir;
		self.Hospital_7_unit_desig:=inRec.Hospitals[7].unit_desig;
		self.Hospital_7_sec_range:=inRec.Hospitals[7].sec_range;
		self.Hospital_7_p_city_name:=inRec.Hospitals[7].p_city_name;
		self.Hospital_7_st:=inRec.Hospitals[7].st;
		self.Hospital_7_z5:=inRec.Hospitals[7].z5;
		self.Hospital_7_zip4:=inRec.Hospitals[7].zip4;
		self.Hospital_8_bdid:=if(inRec.Hospitals[8].bdid>0,(string)inRec.Hospitals[8].bdid,'');
		self.Hospital_8_fein:=inRec.Hospitals[8].tin;
		self.Hospital_8_name:=inRec.Hospitals[8].name;
		self.Hospital_8_addrPenalty:=if(inRec.Hospitals[8].name<>'',(string)inRec.Hospitals[8].addrPenalty,'');
		self.Hospital_8_address1:=inRec.Hospitals[8].address1;
		self.Hospital_8_prim_range:=inRec.Hospitals[8].prim_range;
		self.Hospital_8_predir:=inRec.Hospitals[8].predir;
		self.Hospital_8_prim_name:=inRec.Hospitals[8].prim_name;
		self.Hospital_8_addr_suffix:=inRec.Hospitals[8].addr_suffix;
		self.Hospital_8_postdir:=inRec.Hospitals[8].postdir;
		self.Hospital_8_unit_desig:=inRec.Hospitals[8].unit_desig;
		self.Hospital_8_sec_range:=inRec.Hospitals[8].sec_range;
		self.Hospital_8_p_city_name:=inRec.Hospitals[8].p_city_name;
		self.Hospital_8_st:=inRec.Hospitals[8].st;
		self.Hospital_8_z5:=inRec.Hospitals[8].z5;
		self.Hospital_8_zip4:=inRec.Hospitals[8].zip4;
		self.Hospital_9_bdid:=if(inRec.Hospitals[9].bdid>0,(string)inRec.Hospitals[9].bdid,'');
		self.Hospital_9_fein:=inRec.Hospitals[9].tin;
		self.Hospital_9_name:=inRec.Hospitals[9].name;
		self.Hospital_9_addrPenalty:=if(inRec.Hospitals[9].name<>'',(string)inRec.Hospitals[9].addrPenalty,'');
		self.Hospital_9_address1:=inRec.Hospitals[9].address1;
		self.Hospital_9_prim_range:=inRec.Hospitals[9].prim_range;
		self.Hospital_9_predir:=inRec.Hospitals[9].predir;
		self.Hospital_9_prim_name:=inRec.Hospitals[9].prim_name;
		self.Hospital_9_addr_suffix:=inRec.Hospitals[9].addr_suffix;
		self.Hospital_9_postdir:=inRec.Hospitals[9].postdir;
		self.Hospital_9_unit_desig:=inRec.Hospitals[9].unit_desig;
		self.Hospital_9_sec_range:=inRec.Hospitals[9].sec_range;
		self.Hospital_9_p_city_name:=inRec.Hospitals[9].p_city_name;
		self.Hospital_9_st:=inRec.Hospitals[9].st;
		self.Hospital_9_z5:=inRec.Hospitals[9].z5;
		self.Hospital_9_zip4:=inRec.Hospitals[9].zip4;
		self.Hospital_10_bdid:=if(inRec.Hospitals[10].bdid>0,(string)inRec.Hospitals[10].bdid,'');
		self.Hospital_10_fein:=inRec.Hospitals[10].tin;
		self.Hospital_10_name:=inRec.Hospitals[10].name;
		self.Hospital_10_addrPenalty:=if(inRec.Hospitals[10].name<>'',(string)inRec.Hospitals[10].addrPenalty,'');
		self.Hospital_10_address1:=inRec.Hospitals[10].address1;
		self.Hospital_10_prim_range:=inRec.Hospitals[10].prim_range;
		self.Hospital_10_predir:=inRec.Hospitals[10].predir;
		self.Hospital_10_prim_name:=inRec.Hospitals[10].prim_name;
		self.Hospital_10_addr_suffix:=inRec.Hospitals[10].addr_suffix;
		self.Hospital_10_postdir:=inRec.Hospitals[10].postdir;
		self.Hospital_10_unit_desig:=inRec.Hospitals[10].unit_desig;
		self.Hospital_10_sec_range:=inRec.Hospitals[10].sec_range;
		self.Hospital_10_p_city_name:=inRec.Hospitals[10].p_city_name;
		self.Hospital_10_st:=inRec.Hospitals[10].st;
		self.Hospital_10_z5:=inRec.Hospitals[10].z5;
		self.Hospital_10_zip4:=inRec.Hospitals[10].zip4;
		self.Language_1:=inRec.Languages[1].Language;
		self.Language_2:=inRec.Languages[2].Language;
		self.Language_3:=inRec.Languages[3].Language;
		self.Language_4:=inRec.Languages[4].Language;
		self.Language_5:=inRec.Languages[5].Language;
		self.Language_6:=inRec.Languages[6].Language;
		self.Language_7:=inRec.Languages[7].Language;
		self.Language_8:=inRec.Languages[8].Language;
		self.Language_9:=inRec.Languages[9].Language;
		self.Language_10:=inRec.Languages[10].Language;
		self.Degree_1:=inRec.Degrees[1].Degree;
		self.Degree_2:=inRec.Degrees[2].Degree;
		self.Degree_3:=inRec.Degrees[3].Degree;
		self.Degree_4:=inRec.Degrees[4].Degree;
		self.Degree_5:=inRec.Degrees[5].Degree;
		self.Degree_6:=inRec.Degrees[6].Degree;
		self.Degree_7:=inRec.Degrees[7].Degree;
		self.Degree_8:=inRec.Degrees[8].Degree;
		self.Degree_9:=inRec.Degrees[9].Degree;
		self.Degree_10:=inRec.Degrees[10].Degree;
		self.SpecialtyID_1:=if(inRec.Specialties[1].SpecialtyID>0,(string)inRec.Specialties[1].SpecialtyID,'');
		self.SpecialtyName_1:=inRec.Specialties[1].SpecialtyName;
		self.SpecialtyGroupID_1:=if(inRec.Specialties[1].SpecialtyGroupID>0,(string)inRec.Specialties[1].SpecialtyGroupID,'');
		self.SpecialtyGroupName_1:=inRec.Specialties[1].SpecialtyGroupName;
		self.SpecialtyID_2:=if(inRec.Specialties[2].SpecialtyID>0,(string)inRec.Specialties[2].SpecialtyID,'');
		self.SpecialtyName_2:=inRec.Specialties[2].SpecialtyName;
		self.SpecialtyGroupID_2:=if(inRec.Specialties[2].SpecialtyGroupID>0,(string)inRec.Specialties[2].SpecialtyGroupID,'');
		self.SpecialtyGroupName_2:=inRec.Specialties[2].SpecialtyGroupName;
		self.SpecialtyID_3:=if(inRec.Specialties[3].SpecialtyID>0,(string)inRec.Specialties[3].SpecialtyID,'');
		self.SpecialtyName_3:=inRec.Specialties[3].SpecialtyName;
		self.SpecialtyGroupID_3:=if(inRec.Specialties[3].SpecialtyGroupID>0,(string)inRec.Specialties[3].SpecialtyGroupID,'');
		self.SpecialtyGroupName_3:=inRec.Specialties[3].SpecialtyGroupName;
		self.SpecialtyID_4:=if(inRec.Specialties[4].SpecialtyID>0,(string)inRec.Specialties[4].SpecialtyID,'');
		self.SpecialtyName_4:=inRec.Specialties[4].SpecialtyName;
		self.SpecialtyGroupID_4:=if(inRec.Specialties[4].SpecialtyGroupID>0,(string)inRec.Specialties[4].SpecialtyGroupID,'');
		self.SpecialtyGroupName_4:=inRec.Specialties[4].SpecialtyGroupName;
		self.SpecialtyID_5:=if(inRec.Specialties[5].SpecialtyID>0,(string)inRec.Specialties[5].SpecialtyID,'');
		self.SpecialtyName_5:=inRec.Specialties[5].SpecialtyName;
		self.SpecialtyGroupID_5:=if(inRec.Specialties[5].SpecialtyGroupID>0,(string)inRec.Specialties[5].SpecialtyGroupID,'');
		self.SpecialtyGroupName_5:=inRec.Specialties[5].SpecialtyGroupName;
		self.SpecialtyID_6:=if(inRec.Specialties[6].SpecialtyID>0,(string)inRec.Specialties[6].SpecialtyID,'');
		self.SpecialtyName_6:=inRec.Specialties[6].SpecialtyName;
		self.SpecialtyGroupID_6:=if(inRec.Specialties[6].SpecialtyGroupID>0,(string)inRec.Specialties[6].SpecialtyGroupID,'');
		self.SpecialtyGroupName_6:=inRec.Specialties[6].SpecialtyGroupName;
		self.SpecialtyID_7:=if(inRec.Specialties[7].SpecialtyID>0,(string)inRec.Specialties[7].SpecialtyID,'');
		self.SpecialtyName_7:=inRec.Specialties[7].SpecialtyName;
		self.SpecialtyGroupID_7:=if(inRec.Specialties[7].SpecialtyGroupID>0,(string)inRec.Specialties[7].SpecialtyGroupID,'');
		self.SpecialtyGroupName_7:=inRec.Specialties[7].SpecialtyGroupName;
		self.SpecialtyID_8:=if(inRec.Specialties[8].SpecialtyID>0,(string)inRec.Specialties[8].SpecialtyID,'');
		self.SpecialtyName_8:=inRec.Specialties[8].SpecialtyName;
		self.SpecialtyGroupID_8:=if(inRec.Specialties[8].SpecialtyGroupID>0,(string)inRec.Specialties[8].SpecialtyGroupID,'');
		self.SpecialtyGroupName_8:=inRec.Specialties[8].SpecialtyGroupName;
		self.SpecialtyID_9:=if(inRec.Specialties[9].SpecialtyID>0,(string)inRec.Specialties[9].SpecialtyID,'');
		self.SpecialtyName_9:=inRec.Specialties[9].SpecialtyName;
		self.SpecialtyGroupID_9:=if(inRec.Specialties[9].SpecialtyGroupID>0,(string)inRec.Specialties[9].SpecialtyGroupID,'');
		self.SpecialtyGroupName_9:=inRec.Specialties[9].SpecialtyGroupName;
		self.SpecialtyID_10:=if(inRec.Specialties[10].SpecialtyID>0,(string)inRec.Specialties[10].SpecialtyID,'');
		self.SpecialtyName_10:=inRec.Specialties[10].SpecialtyName;
		self.SpecialtyGroupID_10:=if(inRec.Specialties[10].SpecialtyGroupID>0,(string)inRec.Specialties[10].SpecialtyGroupID,'');
		self.SpecialtyGroupName_10:=inRec.Specialties[10].SpecialtyGroupName;
		self.Residency_1:=inRec.Residencies[1].Residency;
		self.Residency_2:=inRec.Residencies[2].Residency;
		self.Residency_3:=inRec.Residencies[3].Residency;
		self.Residency_4:=inRec.Residencies[4].Residency;
		self.Residency_5:=inRec.Residencies[5].Residency;
		self.Residency_6:=inRec.Residencies[6].Residency;
		self.Residency_7:=inRec.Residencies[7].Residency;
		self.Residency_8:=inRec.Residencies[8].Residency;
		self.Residency_9:=inRec.Residencies[9].Residency;
		self.Residency_10:=inRec.Residencies[10].Residency;
		self.MedSchoolName_1:=inRec.MedSchools[1].MedSchoolName;
		self.GraduationYear_1:=inRec.MedSchools[1].GraduationYear;
		self.MedSchoolName_2:=inRec.MedSchools[2].MedSchoolName;
		self.GraduationYear_2:=inRec.MedSchools[2].GraduationYear;
		self.MedSchoolName_3:=inRec.MedSchools[3].MedSchoolName;
		self.GraduationYear_3:=inRec.MedSchools[3].GraduationYear;
		self.MedSchoolName_4:=inRec.MedSchools[4].MedSchoolName;
		self.GraduationYear_4:=inRec.MedSchools[4].GraduationYear;
		self.MedSchoolName_5:=inRec.MedSchools[5].MedSchoolName;
		self.GraduationYear_5:=inRec.MedSchools[5].GraduationYear;
		self.TaxonomyCode_1:=inRec.Taxonomy[1].TaxonomyCode;
		self.PrimaryIndicator_1:=inRec.Taxonomy[1].PrimaryIndicator;
		self.TaxonomyCode_2:=inRec.Taxonomy[2].TaxonomyCode;
		self.PrimaryIndicator_2:=inRec.Taxonomy[2].PrimaryIndicator;
		self.TaxonomyCode_3:=inRec.Taxonomy[3].TaxonomyCode;
		self.PrimaryIndicator_3:=inRec.Taxonomy[3].PrimaryIndicator;
		self.TaxonomyCode_4:=inRec.Taxonomy[4].TaxonomyCode;
		self.PrimaryIndicator_4:=inRec.Taxonomy[4].PrimaryIndicator;
		self.TaxonomyCode_5:=inRec.Taxonomy[5].TaxonomyCode;
		self.PrimaryIndicator_5:=inRec.Taxonomy[5].PrimaryIndicator;
		self.HasSanctions := if(inRec.hasStateRestrict or inrec.hasOIG or inrec.hasOPM,'TRUE','FALSE');
		self.HasLEIESanctions := if(inRec.hasOIG,'TRUE','FALSE');
		self.HasEPLSSanctions := if(inRec.hasOPM,'TRUE','FALSE');
		self.HasDisciplinarySanctions := if(inRec.hasStateRestrict,'TRUE','FALSE');
		self.Sanction_1_SANC_ID:=(string)inRec.LegacySanctions[1].SANC_ID;
		self.Sanction_1_SANC_DOB:=inRec.LegacySanctions[1].SANC_DOB;
		self.Sanction_1_SANC_TIN:=inRec.LegacySanctions[1].SANC_TIN;
		self.Sanction_1_SANC_UPIN:=inRec.LegacySanctions[1].SANC_UPIN;
		self.Sanction_1_SANC_PROVTYPE:=inRec.LegacySanctions[1].SANC_PROVTYPE;
		self.Sanction_1_SANC_SANCDTE:=inRec.LegacySanctions[1].SANC_SANCDTE_form;
		self.Sanction_1_SANC_LICNBR:=inRec.LegacySanctions[1].SANC_LICNBR;
		self.Sanction_1_SANC_SANCST:=inRec.LegacySanctions[1].SANC_SANCST;
		self.Sanction_1_SANC_BRDTYPE:=inRec.LegacySanctions[1].SANC_BRDTYPE;
		self.Sanction_1_SANC_SRC_DESC:=inRec.LegacySanctions[1].SANC_SRC_DESC;
		self.Sanction_1_SANC_TYPE:=inRec.LegacySanctions[1].SANC_TYPE;
		self.Sanction_1_SANC_TERMS:=inRec.LegacySanctions[1].SANC_TERMS;
		self.Sanction_1_SANC_REAS:=inRec.LegacySanctions[1].SANC_REAS;
		self.Sanction_1_SANC_COND:=inRec.LegacySanctions[1].SANC_COND;
		self.Sanction_1_SANC_FINES:=inRec.LegacySanctions[1].SANC_FINES;
		self.Sanction_1_SANC_UPDTE:=inRec.LegacySanctions[1].SANC_UPDTE_form;
		self.Sanction_1_date_first_reported:=inRec.LegacySanctions[1].date_first_reported;
		self.Sanction_1_date_last_reported:=inRec.LegacySanctions[1].date_last_reported;
		self.Sanction_1_SANC_REINDTE:=inRec.LegacySanctions[1].SANC_REINDTE_form;
		self.Sanction_1_SANC_FAB:=inRec.LegacySanctions[1].SANC_FAB;
		self.Sanction_1_SANC_UNAMB_IND:=inRec.LegacySanctions[1].SANC_UNAMB_IND;
		self.Sanction_1_process_date:=inRec.LegacySanctions[1].process_date;
		self.Sanction_1_date_first_seen:=inRec.LegacySanctions[1].date_first_seen;
		self.Sanction_1_date_last_seen:=inRec.LegacySanctions[1].date_last_seen;
		self.Sanction_1_title:=inRec.LegacySanctions[1].Prov_Clean_title;
		self.Sanction_1_fname:=inRec.LegacySanctions[1].Prov_Clean_fname;
		self.Sanction_1_mname:=inRec.LegacySanctions[1].Prov_Clean_mname;
		self.Sanction_1_lname:=inRec.LegacySanctions[1].Prov_Clean_lname;
		self.Sanction_1_name_suffix:=inRec.LegacySanctions[1].Prov_Clean_name_suffix;
		self.Sanction_1_prim_range:=inRec.LegacySanctions[1].ProvCo_Address_Clean_prim_range;
		self.Sanction_1_predir:=inRec.LegacySanctions[1].ProvCo_Address_Clean_predir;
		self.Sanction_1_prim_name:=inRec.LegacySanctions[1].ProvCo_Address_Clean_prim_name;
		self.Sanction_1_addr_suffix:=inRec.LegacySanctions[1].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_1_postdir:=inRec.LegacySanctions[1].ProvCo_Address_Clean_postdir;
		self.Sanction_1_unit_desig:=inRec.LegacySanctions[1].ProvCo_Address_Clean_unit_desig;
		self.Sanction_1_sec_range:=inRec.LegacySanctions[1].ProvCo_Address_Clean_sec_range;
		self.Sanction_1_p_city_name:=inRec.LegacySanctions[1].ProvCo_Address_Clean_p_city_name;
		self.Sanction_1_st:=inRec.LegacySanctions[1].ProvCo_Address_Clean_st;
		self.Sanction_1_zip:=inRec.LegacySanctions[1].ProvCo_Address_Clean_zip;
		self.Sanction_1_geo_lat:=inRec.LegacySanctions[1].ProvCo_Address_Clean_geo_lat;
		self.Sanction_1_geo_long:=inRec.LegacySanctions[1].ProvCo_Address_Clean_geo_long;
		self.Sanction_1_did:=inRec.LegacySanctions[1].did;
		self.Sanction_1_bdid:=inRec.LegacySanctions[1].bdid;
		self.Sanction_1_sanc_grouptype:=inRec.LegacySanctions[1].sanc_grouptype;
		self.Sanction_1_sanc_subgrouptype:=inRec.LegacySanctions[1].sanc_subgrouptype;
		self.Sanction_2_SANC_ID:=(string)inRec.LegacySanctions[2].SANC_ID;
		self.Sanction_2_SANC_DOB:=inRec.LegacySanctions[2].SANC_DOB;
		self.Sanction_2_SANC_TIN:=inRec.LegacySanctions[2].SANC_TIN;
		self.Sanction_2_SANC_UPIN:=inRec.LegacySanctions[2].SANC_UPIN;
		self.Sanction_2_SANC_PROVTYPE:=inRec.LegacySanctions[2].SANC_PROVTYPE;
		self.Sanction_2_SANC_SANCDTE:=inRec.LegacySanctions[2].SANC_SANCDTE_form;
		self.Sanction_2_SANC_LICNBR:=inRec.LegacySanctions[2].SANC_LICNBR;
		self.Sanction_2_SANC_SANCST:=inRec.LegacySanctions[2].SANC_SANCST;
		self.Sanction_2_SANC_BRDTYPE:=inRec.LegacySanctions[2].SANC_BRDTYPE;
		self.Sanction_2_SANC_SRC_DESC:=inRec.LegacySanctions[2].SANC_SRC_DESC;
		self.Sanction_2_SANC_TYPE:=inRec.LegacySanctions[2].SANC_TYPE;
		self.Sanction_2_SANC_TERMS:=inRec.LegacySanctions[2].SANC_TERMS;
		self.Sanction_2_SANC_REAS:=inRec.LegacySanctions[2].SANC_REAS;
		self.Sanction_2_SANC_COND:=inRec.LegacySanctions[2].SANC_COND;
		self.Sanction_2_SANC_FINES:=inRec.LegacySanctions[2].SANC_FINES;
		self.Sanction_2_SANC_UPDTE:=inRec.LegacySanctions[2].SANC_UPDTE_form;
		self.Sanction_2_date_first_reported:=inRec.LegacySanctions[2].date_first_reported;
		self.Sanction_2_date_last_reported:=inRec.LegacySanctions[2].date_last_reported;
		self.Sanction_2_SANC_REINDTE:=inRec.LegacySanctions[2].SANC_REINDTE_form;
		self.Sanction_2_SANC_FAB:=inRec.LegacySanctions[2].SANC_FAB;
		self.Sanction_2_SANC_UNAMB_IND:=inRec.LegacySanctions[2].SANC_UNAMB_IND;
		self.Sanction_2_process_date:=inRec.LegacySanctions[2].process_date;
		self.Sanction_2_date_first_seen:=inRec.LegacySanctions[2].date_first_seen;
		self.Sanction_2_date_last_seen:=inRec.LegacySanctions[2].date_last_seen;
		self.Sanction_2_title:=inRec.LegacySanctions[2].Prov_Clean_title;
		self.Sanction_2_fname:=inRec.LegacySanctions[2].Prov_Clean_fname;
		self.Sanction_2_mname:=inRec.LegacySanctions[2].Prov_Clean_mname;
		self.Sanction_2_lname:=inRec.LegacySanctions[2].Prov_Clean_lname;
		self.Sanction_2_name_suffix:=inRec.LegacySanctions[2].Prov_Clean_name_suffix;
		self.Sanction_2_prim_range:=inRec.LegacySanctions[2].ProvCo_Address_Clean_prim_range;
		self.Sanction_2_predir:=inRec.LegacySanctions[2].ProvCo_Address_Clean_predir;
		self.Sanction_2_prim_name:=inRec.LegacySanctions[2].ProvCo_Address_Clean_prim_name;
		self.Sanction_2_addr_suffix:=inRec.LegacySanctions[2].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_2_postdir:=inRec.LegacySanctions[2].ProvCo_Address_Clean_postdir;
		self.Sanction_2_unit_desig:=inRec.LegacySanctions[2].ProvCo_Address_Clean_unit_desig;
		self.Sanction_2_sec_range:=inRec.LegacySanctions[2].ProvCo_Address_Clean_sec_range;
		self.Sanction_2_p_city_name:=inRec.LegacySanctions[2].ProvCo_Address_Clean_p_city_name;
		self.Sanction_2_st:=inRec.LegacySanctions[2].ProvCo_Address_Clean_st;
		self.Sanction_2_zip:=inRec.LegacySanctions[2].ProvCo_Address_Clean_zip;
		self.Sanction_2_geo_lat:=inRec.LegacySanctions[2].ProvCo_Address_Clean_geo_lat;
		self.Sanction_2_geo_long:=inRec.LegacySanctions[2].ProvCo_Address_Clean_geo_long;
		self.Sanction_2_did:=inRec.LegacySanctions[2].did;
		self.Sanction_2_bdid:=inRec.LegacySanctions[2].bdid;
		self.Sanction_2_sanc_grouptype:=inRec.LegacySanctions[2].sanc_grouptype;
		self.Sanction_2_sanc_subgrouptype:=inRec.LegacySanctions[2].sanc_subgrouptype;
		self.Sanction_3_SANC_ID:=(string)inRec.LegacySanctions[3].SANC_ID;
		self.Sanction_3_SANC_DOB:=inRec.LegacySanctions[3].SANC_DOB;
		self.Sanction_3_SANC_TIN:=inRec.LegacySanctions[3].SANC_TIN;
		self.Sanction_3_SANC_UPIN:=inRec.LegacySanctions[3].SANC_UPIN;
		self.Sanction_3_SANC_PROVTYPE:=inRec.LegacySanctions[3].SANC_PROVTYPE;
		self.Sanction_3_SANC_SANCDTE:=inRec.LegacySanctions[3].SANC_SANCDTE_form;
		self.Sanction_3_SANC_LICNBR:=inRec.LegacySanctions[3].SANC_LICNBR;
		self.Sanction_3_SANC_SANCST:=inRec.LegacySanctions[3].SANC_SANCST;
		self.Sanction_3_SANC_BRDTYPE:=inRec.LegacySanctions[3].SANC_BRDTYPE;
		self.Sanction_3_SANC_SRC_DESC:=inRec.LegacySanctions[3].SANC_SRC_DESC;
		self.Sanction_3_SANC_TYPE:=inRec.LegacySanctions[3].SANC_TYPE;
		self.Sanction_3_SANC_TERMS:=inRec.LegacySanctions[3].SANC_TERMS;
		self.Sanction_3_SANC_REAS:=inRec.LegacySanctions[3].SANC_REAS;
		self.Sanction_3_SANC_COND:=inRec.LegacySanctions[3].SANC_COND;
		self.Sanction_3_SANC_FINES:=inRec.LegacySanctions[3].SANC_FINES;
		self.Sanction_3_SANC_UPDTE:=inRec.LegacySanctions[3].SANC_UPDTE_form;
		self.Sanction_3_date_first_reported:=inRec.LegacySanctions[3].date_first_reported;
		self.Sanction_3_date_last_reported:=inRec.LegacySanctions[3].date_last_reported;
		self.Sanction_3_SANC_REINDTE:=inRec.LegacySanctions[3].SANC_REINDTE_form;
		self.Sanction_3_SANC_FAB:=inRec.LegacySanctions[3].SANC_FAB;
		self.Sanction_3_SANC_UNAMB_IND:=inRec.LegacySanctions[3].SANC_UNAMB_IND;
		self.Sanction_3_process_date:=inRec.LegacySanctions[3].process_date;
		self.Sanction_3_date_first_seen:=inRec.LegacySanctions[3].date_first_seen;
		self.Sanction_3_date_last_seen:=inRec.LegacySanctions[3].date_last_seen;
		self.Sanction_3_title:=inRec.LegacySanctions[3].Prov_Clean_title;
		self.Sanction_3_fname:=inRec.LegacySanctions[3].Prov_Clean_fname;
		self.Sanction_3_mname:=inRec.LegacySanctions[3].Prov_Clean_mname;
		self.Sanction_3_lname:=inRec.LegacySanctions[3].Prov_Clean_lname;
		self.Sanction_3_name_suffix:=inRec.LegacySanctions[3].Prov_Clean_name_suffix;
		self.Sanction_3_prim_range:=inRec.LegacySanctions[3].ProvCo_Address_Clean_prim_range;
		self.Sanction_3_predir:=inRec.LegacySanctions[3].ProvCo_Address_Clean_predir;
		self.Sanction_3_prim_name:=inRec.LegacySanctions[3].ProvCo_Address_Clean_prim_name;
		self.Sanction_3_addr_suffix:=inRec.LegacySanctions[3].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_3_postdir:=inRec.LegacySanctions[3].ProvCo_Address_Clean_postdir;
		self.Sanction_3_unit_desig:=inRec.LegacySanctions[3].ProvCo_Address_Clean_unit_desig;
		self.Sanction_3_sec_range:=inRec.LegacySanctions[3].ProvCo_Address_Clean_sec_range;
		self.Sanction_3_p_city_name:=inRec.LegacySanctions[3].ProvCo_Address_Clean_p_city_name;
		self.Sanction_3_st:=inRec.LegacySanctions[3].ProvCo_Address_Clean_st;
		self.Sanction_3_zip:=inRec.LegacySanctions[3].ProvCo_Address_Clean_zip;
		self.Sanction_3_geo_lat:=inRec.LegacySanctions[3].ProvCo_Address_Clean_geo_lat;
		self.Sanction_3_geo_long:=inRec.LegacySanctions[3].ProvCo_Address_Clean_geo_long;
		self.Sanction_3_did:=inRec.LegacySanctions[3].did;
		self.Sanction_3_bdid:=inRec.LegacySanctions[3].bdid;
		self.Sanction_3_sanc_grouptype:=inRec.LegacySanctions[3].sanc_grouptype;
		self.Sanction_3_sanc_subgrouptype:=inRec.LegacySanctions[3].sanc_subgrouptype;
		self.Sanction_4_SANC_ID:=(string)inRec.LegacySanctions[4].SANC_ID;
		self.Sanction_4_SANC_DOB:=inRec.LegacySanctions[4].SANC_DOB;
		self.Sanction_4_SANC_TIN:=inRec.LegacySanctions[4].SANC_TIN;
		self.Sanction_4_SANC_UPIN:=inRec.LegacySanctions[4].SANC_UPIN;
		self.Sanction_4_SANC_PROVTYPE:=inRec.LegacySanctions[4].SANC_PROVTYPE;
		self.Sanction_4_SANC_SANCDTE:=inRec.LegacySanctions[4].SANC_SANCDTE_form;
		self.Sanction_4_SANC_LICNBR:=inRec.LegacySanctions[4].SANC_LICNBR;
		self.Sanction_4_SANC_SANCST:=inRec.LegacySanctions[4].SANC_SANCST;
		self.Sanction_4_SANC_BRDTYPE:=inRec.LegacySanctions[4].SANC_BRDTYPE;
		self.Sanction_4_SANC_SRC_DESC:=inRec.LegacySanctions[4].SANC_SRC_DESC;
		self.Sanction_4_SANC_TYPE:=inRec.LegacySanctions[4].SANC_TYPE;
		self.Sanction_4_SANC_TERMS:=inRec.LegacySanctions[4].SANC_TERMS;
		self.Sanction_4_SANC_REAS:=inRec.LegacySanctions[4].SANC_REAS;
		self.Sanction_4_SANC_COND:=inRec.LegacySanctions[4].SANC_COND;
		self.Sanction_4_SANC_FINES:=inRec.LegacySanctions[4].SANC_FINES;
		self.Sanction_4_SANC_UPDTE:=inRec.LegacySanctions[4].SANC_UPDTE_form;
		self.Sanction_4_date_first_reported:=inRec.LegacySanctions[4].date_first_reported;
		self.Sanction_4_date_last_reported:=inRec.LegacySanctions[4].date_last_reported;
		self.Sanction_4_SANC_REINDTE:=inRec.LegacySanctions[4].SANC_REINDTE_form;
		self.Sanction_4_SANC_FAB:=inRec.LegacySanctions[4].SANC_FAB;
		self.Sanction_4_SANC_UNAMB_IND:=inRec.LegacySanctions[4].SANC_UNAMB_IND;
		self.Sanction_4_process_date:=inRec.LegacySanctions[4].process_date;
		self.Sanction_4_date_first_seen:=inRec.LegacySanctions[4].date_first_seen;
		self.Sanction_4_date_last_seen:=inRec.LegacySanctions[4].date_last_seen;
		self.Sanction_4_title:=inRec.LegacySanctions[4].Prov_Clean_title;
		self.Sanction_4_fname:=inRec.LegacySanctions[4].Prov_Clean_fname;
		self.Sanction_4_mname:=inRec.LegacySanctions[4].Prov_Clean_mname;
		self.Sanction_4_lname:=inRec.LegacySanctions[4].Prov_Clean_lname;
		self.Sanction_4_name_suffix:=inRec.LegacySanctions[4].Prov_Clean_name_suffix;
		self.Sanction_4_prim_range:=inRec.LegacySanctions[4].ProvCo_Address_Clean_prim_range;
		self.Sanction_4_predir:=inRec.LegacySanctions[4].ProvCo_Address_Clean_predir;
		self.Sanction_4_prim_name:=inRec.LegacySanctions[4].ProvCo_Address_Clean_prim_name;
		self.Sanction_4_addr_suffix:=inRec.LegacySanctions[4].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_4_postdir:=inRec.LegacySanctions[4].ProvCo_Address_Clean_postdir;
		self.Sanction_4_unit_desig:=inRec.LegacySanctions[4].ProvCo_Address_Clean_unit_desig;
		self.Sanction_4_sec_range:=inRec.LegacySanctions[4].ProvCo_Address_Clean_sec_range;
		self.Sanction_4_p_city_name:=inRec.LegacySanctions[4].ProvCo_Address_Clean_p_city_name;
		self.Sanction_4_st:=inRec.LegacySanctions[4].ProvCo_Address_Clean_st;
		self.Sanction_4_zip:=inRec.LegacySanctions[4].ProvCo_Address_Clean_zip;
		self.Sanction_4_geo_lat:=inRec.LegacySanctions[4].ProvCo_Address_Clean_geo_lat;
		self.Sanction_4_geo_long:=inRec.LegacySanctions[4].ProvCo_Address_Clean_geo_long;
		self.Sanction_4_did:=inRec.LegacySanctions[4].did;
		self.Sanction_4_bdid:=inRec.LegacySanctions[4].bdid;
		self.Sanction_4_sanc_grouptype:=inRec.LegacySanctions[4].sanc_grouptype;
		self.Sanction_4_sanc_subgrouptype:=inRec.LegacySanctions[4].sanc_subgrouptype;
		self.Sanction_5_SANC_ID:=(string)inRec.LegacySanctions[5].SANC_ID;
		self.Sanction_5_SANC_DOB:=inRec.LegacySanctions[5].SANC_DOB;
		self.Sanction_5_SANC_TIN:=inRec.LegacySanctions[5].SANC_TIN;
		self.Sanction_5_SANC_UPIN:=inRec.LegacySanctions[5].SANC_UPIN;
		self.Sanction_5_SANC_PROVTYPE:=inRec.LegacySanctions[5].SANC_PROVTYPE;
		self.Sanction_5_SANC_SANCDTE:=inRec.LegacySanctions[5].SANC_SANCDTE_form;
		self.Sanction_5_SANC_LICNBR:=inRec.LegacySanctions[5].SANC_LICNBR;
		self.Sanction_5_SANC_SANCST:=inRec.LegacySanctions[5].SANC_SANCST;
		self.Sanction_5_SANC_BRDTYPE:=inRec.LegacySanctions[5].SANC_BRDTYPE;
		self.Sanction_5_SANC_SRC_DESC:=inRec.LegacySanctions[5].SANC_SRC_DESC;
		self.Sanction_5_SANC_TYPE:=inRec.LegacySanctions[5].SANC_TYPE;
		self.Sanction_5_SANC_TERMS:=inRec.LegacySanctions[5].SANC_TERMS;
		self.Sanction_5_SANC_REAS:=inRec.LegacySanctions[5].SANC_REAS;
		self.Sanction_5_SANC_COND:=inRec.LegacySanctions[5].SANC_COND;
		self.Sanction_5_SANC_FINES:=inRec.LegacySanctions[5].SANC_FINES;
		self.Sanction_5_SANC_UPDTE:=inRec.LegacySanctions[5].SANC_UPDTE_form;
		self.Sanction_5_date_first_reported:=inRec.LegacySanctions[5].date_first_reported;
		self.Sanction_5_date_last_reported:=inRec.LegacySanctions[5].date_last_reported;
		self.Sanction_5_SANC_REINDTE:=inRec.LegacySanctions[5].SANC_REINDTE_form;
		self.Sanction_5_SANC_FAB:=inRec.LegacySanctions[5].SANC_FAB;
		self.Sanction_5_SANC_UNAMB_IND:=inRec.LegacySanctions[5].SANC_UNAMB_IND;
		self.Sanction_5_process_date:=inRec.LegacySanctions[5].process_date;
		self.Sanction_5_date_first_seen:=inRec.LegacySanctions[5].date_first_seen;
		self.Sanction_5_date_last_seen:=inRec.LegacySanctions[5].date_last_seen;
		self.Sanction_5_title:=inRec.LegacySanctions[5].Prov_Clean_title;
		self.Sanction_5_fname:=inRec.LegacySanctions[5].Prov_Clean_fname;
		self.Sanction_5_mname:=inRec.LegacySanctions[5].Prov_Clean_mname;
		self.Sanction_5_lname:=inRec.LegacySanctions[5].Prov_Clean_lname;
		self.Sanction_5_name_suffix:=inRec.LegacySanctions[5].Prov_Clean_name_suffix;
		self.Sanction_5_prim_range:=inRec.LegacySanctions[5].ProvCo_Address_Clean_prim_range;
		self.Sanction_5_predir:=inRec.LegacySanctions[5].ProvCo_Address_Clean_predir;
		self.Sanction_5_prim_name:=inRec.LegacySanctions[5].ProvCo_Address_Clean_prim_name;
		self.Sanction_5_addr_suffix:=inRec.LegacySanctions[5].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_5_postdir:=inRec.LegacySanctions[5].ProvCo_Address_Clean_postdir;
		self.Sanction_5_unit_desig:=inRec.LegacySanctions[5].ProvCo_Address_Clean_unit_desig;
		self.Sanction_5_sec_range:=inRec.LegacySanctions[5].ProvCo_Address_Clean_sec_range;
		self.Sanction_5_p_city_name:=inRec.LegacySanctions[5].ProvCo_Address_Clean_p_city_name;
		self.Sanction_5_st:=inRec.LegacySanctions[5].ProvCo_Address_Clean_st;
		self.Sanction_5_zip:=inRec.LegacySanctions[5].ProvCo_Address_Clean_zip;
		self.Sanction_5_geo_lat:=inRec.LegacySanctions[5].ProvCo_Address_Clean_geo_lat;
		self.Sanction_5_geo_long:=inRec.LegacySanctions[5].ProvCo_Address_Clean_geo_long;
		self.Sanction_5_did:=inRec.LegacySanctions[5].did;
		self.Sanction_5_bdid:=inRec.LegacySanctions[5].bdid;
		self.Sanction_5_sanc_grouptype:=inRec.LegacySanctions[5].sanc_grouptype;
		self.Sanction_5_sanc_subgrouptype:=inRec.LegacySanctions[5].sanc_subgrouptype;
		self.Sanction_6_SANC_ID:=(string)inRec.LegacySanctions[6].SANC_ID;
		self.Sanction_6_SANC_DOB:=inRec.LegacySanctions[6].SANC_DOB;
		self.Sanction_6_SANC_TIN:=inRec.LegacySanctions[6].SANC_TIN;
		self.Sanction_6_SANC_UPIN:=inRec.LegacySanctions[6].SANC_UPIN;
		self.Sanction_6_SANC_PROVTYPE:=inRec.LegacySanctions[6].SANC_PROVTYPE;
		self.Sanction_6_SANC_SANCDTE:=inRec.LegacySanctions[6].SANC_SANCDTE_form;
		self.Sanction_6_SANC_LICNBR:=inRec.LegacySanctions[6].SANC_LICNBR;
		self.Sanction_6_SANC_SANCST:=inRec.LegacySanctions[6].SANC_SANCST;
		self.Sanction_6_SANC_BRDTYPE:=inRec.LegacySanctions[6].SANC_BRDTYPE;
		self.Sanction_6_SANC_SRC_DESC:=inRec.LegacySanctions[6].SANC_SRC_DESC;
		self.Sanction_6_SANC_TYPE:=inRec.LegacySanctions[6].SANC_TYPE;
		self.Sanction_6_SANC_TERMS:=inRec.LegacySanctions[6].SANC_TERMS;
		self.Sanction_6_SANC_REAS:=inRec.LegacySanctions[6].SANC_REAS;
		self.Sanction_6_SANC_COND:=inRec.LegacySanctions[6].SANC_COND;
		self.Sanction_6_SANC_FINES:=inRec.LegacySanctions[6].SANC_FINES;
		self.Sanction_6_SANC_UPDTE:=inRec.LegacySanctions[6].SANC_UPDTE_form;
		self.Sanction_6_date_first_reported:=inRec.LegacySanctions[6].date_first_reported;
		self.Sanction_6_date_last_reported:=inRec.LegacySanctions[6].date_last_reported;
		self.Sanction_6_SANC_REINDTE:=inRec.LegacySanctions[6].SANC_REINDTE_form;
		self.Sanction_6_SANC_FAB:=inRec.LegacySanctions[6].SANC_FAB;
		self.Sanction_6_SANC_UNAMB_IND:=inRec.LegacySanctions[6].SANC_UNAMB_IND;
		self.Sanction_6_process_date:=inRec.LegacySanctions[6].process_date;
		self.Sanction_6_date_first_seen:=inRec.LegacySanctions[6].date_first_seen;
		self.Sanction_6_date_last_seen:=inRec.LegacySanctions[6].date_last_seen;
		self.Sanction_6_title:=inRec.LegacySanctions[6].Prov_Clean_title;
		self.Sanction_6_fname:=inRec.LegacySanctions[6].Prov_Clean_fname;
		self.Sanction_6_mname:=inRec.LegacySanctions[6].Prov_Clean_mname;
		self.Sanction_6_lname:=inRec.LegacySanctions[6].Prov_Clean_lname;
		self.Sanction_6_name_suffix:=inRec.LegacySanctions[6].Prov_Clean_name_suffix;
		self.Sanction_6_prim_range:=inRec.LegacySanctions[6].ProvCo_Address_Clean_prim_range;
		self.Sanction_6_predir:=inRec.LegacySanctions[6].ProvCo_Address_Clean_predir;
		self.Sanction_6_prim_name:=inRec.LegacySanctions[6].ProvCo_Address_Clean_prim_name;
		self.Sanction_6_addr_suffix:=inRec.LegacySanctions[6].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_6_postdir:=inRec.LegacySanctions[6].ProvCo_Address_Clean_postdir;
		self.Sanction_6_unit_desig:=inRec.LegacySanctions[6].ProvCo_Address_Clean_unit_desig;
		self.Sanction_6_sec_range:=inRec.LegacySanctions[6].ProvCo_Address_Clean_sec_range;
		self.Sanction_6_p_city_name:=inRec.LegacySanctions[6].ProvCo_Address_Clean_p_city_name;
		self.Sanction_6_st:=inRec.LegacySanctions[6].ProvCo_Address_Clean_st;
		self.Sanction_6_zip:=inRec.LegacySanctions[6].ProvCo_Address_Clean_zip;
		self.Sanction_6_geo_lat:=inRec.LegacySanctions[6].ProvCo_Address_Clean_geo_lat;
		self.Sanction_6_geo_long:=inRec.LegacySanctions[6].ProvCo_Address_Clean_geo_long;
		self.Sanction_6_did:=inRec.LegacySanctions[6].did;
		self.Sanction_6_bdid:=inRec.LegacySanctions[6].bdid;
		self.Sanction_6_sanc_grouptype:=inRec.LegacySanctions[6].sanc_grouptype;
		self.Sanction_6_sanc_subgrouptype:=inRec.LegacySanctions[6].sanc_subgrouptype;
		self.Sanction_7_SANC_ID:=(string)inRec.LegacySanctions[7].SANC_ID;
		self.Sanction_7_SANC_DOB:=inRec.LegacySanctions[7].SANC_DOB;
		self.Sanction_7_SANC_TIN:=inRec.LegacySanctions[7].SANC_TIN;
		self.Sanction_7_SANC_UPIN:=inRec.LegacySanctions[7].SANC_UPIN;
		self.Sanction_7_SANC_PROVTYPE:=inRec.LegacySanctions[7].SANC_PROVTYPE;
		self.Sanction_7_SANC_SANCDTE:=inRec.LegacySanctions[7].SANC_SANCDTE_form;
		self.Sanction_7_SANC_LICNBR:=inRec.LegacySanctions[7].SANC_LICNBR;
		self.Sanction_7_SANC_SANCST:=inRec.LegacySanctions[7].SANC_SANCST;
		self.Sanction_7_SANC_BRDTYPE:=inRec.LegacySanctions[7].SANC_BRDTYPE;
		self.Sanction_7_SANC_SRC_DESC:=inRec.LegacySanctions[7].SANC_SRC_DESC;
		self.Sanction_7_SANC_TYPE:=inRec.LegacySanctions[7].SANC_TYPE;
		self.Sanction_7_SANC_TERMS:=inRec.LegacySanctions[7].SANC_TERMS;
		self.Sanction_7_SANC_REAS:=inRec.LegacySanctions[7].SANC_REAS;
		self.Sanction_7_SANC_COND:=inRec.LegacySanctions[7].SANC_COND;
		self.Sanction_7_SANC_FINES:=inRec.LegacySanctions[7].SANC_FINES;
		self.Sanction_7_SANC_UPDTE:=inRec.LegacySanctions[7].SANC_UPDTE_form;
		self.Sanction_7_date_first_reported:=inRec.LegacySanctions[7].date_first_reported;
		self.Sanction_7_date_last_reported:=inRec.LegacySanctions[7].date_last_reported;
		self.Sanction_7_SANC_REINDTE:=inRec.LegacySanctions[7].SANC_REINDTE_form;
		self.Sanction_7_SANC_FAB:=inRec.LegacySanctions[7].SANC_FAB;
		self.Sanction_7_SANC_UNAMB_IND:=inRec.LegacySanctions[7].SANC_UNAMB_IND;
		self.Sanction_7_process_date:=inRec.LegacySanctions[7].process_date;
		self.Sanction_7_date_first_seen:=inRec.LegacySanctions[7].date_first_seen;
		self.Sanction_7_date_last_seen:=inRec.LegacySanctions[7].date_last_seen;
		self.Sanction_7_title:=inRec.LegacySanctions[7].Prov_Clean_title;
		self.Sanction_7_fname:=inRec.LegacySanctions[7].Prov_Clean_fname;
		self.Sanction_7_mname:=inRec.LegacySanctions[7].Prov_Clean_mname;
		self.Sanction_7_lname:=inRec.LegacySanctions[7].Prov_Clean_lname;
		self.Sanction_7_name_suffix:=inRec.LegacySanctions[7].Prov_Clean_name_suffix;
		self.Sanction_7_prim_range:=inRec.LegacySanctions[7].ProvCo_Address_Clean_prim_range;
		self.Sanction_7_predir:=inRec.LegacySanctions[7].ProvCo_Address_Clean_predir;
		self.Sanction_7_prim_name:=inRec.LegacySanctions[7].ProvCo_Address_Clean_prim_name;
		self.Sanction_7_addr_suffix:=inRec.LegacySanctions[7].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_7_postdir:=inRec.LegacySanctions[7].ProvCo_Address_Clean_postdir;
		self.Sanction_7_unit_desig:=inRec.LegacySanctions[7].ProvCo_Address_Clean_unit_desig;
		self.Sanction_7_sec_range:=inRec.LegacySanctions[7].ProvCo_Address_Clean_sec_range;
		self.Sanction_7_p_city_name:=inRec.LegacySanctions[7].ProvCo_Address_Clean_p_city_name;
		self.Sanction_7_st:=inRec.LegacySanctions[7].ProvCo_Address_Clean_st;
		self.Sanction_7_zip:=inRec.LegacySanctions[7].ProvCo_Address_Clean_zip;
		self.Sanction_7_geo_lat:=inRec.LegacySanctions[7].ProvCo_Address_Clean_geo_lat;
		self.Sanction_7_geo_long:=inRec.LegacySanctions[7].ProvCo_Address_Clean_geo_long;
		self.Sanction_7_did:=inRec.LegacySanctions[7].did;
		self.Sanction_7_bdid:=inRec.LegacySanctions[7].bdid;
		self.Sanction_7_sanc_grouptype:=inRec.LegacySanctions[7].sanc_grouptype;
		self.Sanction_7_sanc_subgrouptype:=inRec.LegacySanctions[7].sanc_subgrouptype;
		self.Sanction_8_SANC_ID:=(string)inRec.LegacySanctions[8].SANC_ID;
		self.Sanction_8_SANC_DOB:=inRec.LegacySanctions[8].SANC_DOB;
		self.Sanction_8_SANC_TIN:=inRec.LegacySanctions[8].SANC_TIN;
		self.Sanction_8_SANC_UPIN:=inRec.LegacySanctions[8].SANC_UPIN;
		self.Sanction_8_SANC_PROVTYPE:=inRec.LegacySanctions[8].SANC_PROVTYPE;
		self.Sanction_8_SANC_SANCDTE:=inRec.LegacySanctions[8].SANC_SANCDTE_form;
		self.Sanction_8_SANC_LICNBR:=inRec.LegacySanctions[8].SANC_LICNBR;
		self.Sanction_8_SANC_SANCST:=inRec.LegacySanctions[8].SANC_SANCST;
		self.Sanction_8_SANC_BRDTYPE:=inRec.LegacySanctions[8].SANC_BRDTYPE;
		self.Sanction_8_SANC_SRC_DESC:=inRec.LegacySanctions[8].SANC_SRC_DESC;
		self.Sanction_8_SANC_TYPE:=inRec.LegacySanctions[8].SANC_TYPE;
		self.Sanction_8_SANC_TERMS:=inRec.LegacySanctions[8].SANC_TERMS;
		self.Sanction_8_SANC_REAS:=inRec.LegacySanctions[8].SANC_REAS;
		self.Sanction_8_SANC_COND:=inRec.LegacySanctions[8].SANC_COND;
		self.Sanction_8_SANC_FINES:=inRec.LegacySanctions[8].SANC_FINES;
		self.Sanction_8_SANC_UPDTE:=inRec.LegacySanctions[8].SANC_UPDTE_form;
		self.Sanction_8_date_first_reported:=inRec.LegacySanctions[8].date_first_reported;
		self.Sanction_8_date_last_reported:=inRec.LegacySanctions[8].date_last_reported;
		self.Sanction_8_SANC_REINDTE:=inRec.LegacySanctions[8].SANC_REINDTE_form;
		self.Sanction_8_SANC_FAB:=inRec.LegacySanctions[8].SANC_FAB;
		self.Sanction_8_SANC_UNAMB_IND:=inRec.LegacySanctions[8].SANC_UNAMB_IND;
		self.Sanction_8_process_date:=inRec.LegacySanctions[8].process_date;
		self.Sanction_8_date_first_seen:=inRec.LegacySanctions[8].date_first_seen;
		self.Sanction_8_date_last_seen:=inRec.LegacySanctions[8].date_last_seen;
		self.Sanction_8_title:=inRec.LegacySanctions[8].Prov_Clean_title;
		self.Sanction_8_fname:=inRec.LegacySanctions[8].Prov_Clean_fname;
		self.Sanction_8_mname:=inRec.LegacySanctions[8].Prov_Clean_mname;
		self.Sanction_8_lname:=inRec.LegacySanctions[8].Prov_Clean_lname;
		self.Sanction_8_name_suffix:=inRec.LegacySanctions[8].Prov_Clean_name_suffix;
		self.Sanction_8_prim_range:=inRec.LegacySanctions[8].ProvCo_Address_Clean_prim_range;
		self.Sanction_8_predir:=inRec.LegacySanctions[8].ProvCo_Address_Clean_predir;
		self.Sanction_8_prim_name:=inRec.LegacySanctions[8].ProvCo_Address_Clean_prim_name;
		self.Sanction_8_addr_suffix:=inRec.LegacySanctions[8].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_8_postdir:=inRec.LegacySanctions[8].ProvCo_Address_Clean_postdir;
		self.Sanction_8_unit_desig:=inRec.LegacySanctions[8].ProvCo_Address_Clean_unit_desig;
		self.Sanction_8_sec_range:=inRec.LegacySanctions[8].ProvCo_Address_Clean_sec_range;
		self.Sanction_8_p_city_name:=inRec.LegacySanctions[8].ProvCo_Address_Clean_p_city_name;
		self.Sanction_8_st:=inRec.LegacySanctions[8].ProvCo_Address_Clean_st;
		self.Sanction_8_zip:=inRec.LegacySanctions[8].ProvCo_Address_Clean_zip;
		self.Sanction_8_geo_lat:=inRec.LegacySanctions[8].ProvCo_Address_Clean_geo_lat;
		self.Sanction_8_geo_long:=inRec.LegacySanctions[8].ProvCo_Address_Clean_geo_long;
		self.Sanction_8_did:=inRec.LegacySanctions[8].did;
		self.Sanction_8_bdid:=inRec.LegacySanctions[8].bdid;
		self.Sanction_8_sanc_grouptype:=inRec.LegacySanctions[8].sanc_grouptype;
		self.Sanction_8_sanc_subgrouptype:=inRec.LegacySanctions[8].sanc_subgrouptype;
		self.Sanction_9_SANC_ID:=(string)inRec.LegacySanctions[9].SANC_ID;
		self.Sanction_9_SANC_DOB:=inRec.LegacySanctions[9].SANC_DOB;
		self.Sanction_9_SANC_TIN:=inRec.LegacySanctions[9].SANC_TIN;
		self.Sanction_9_SANC_UPIN:=inRec.LegacySanctions[9].SANC_UPIN;
		self.Sanction_9_SANC_PROVTYPE:=inRec.LegacySanctions[9].SANC_PROVTYPE;
		self.Sanction_9_SANC_SANCDTE:=inRec.LegacySanctions[9].SANC_SANCDTE_form;
		self.Sanction_9_SANC_LICNBR:=inRec.LegacySanctions[9].SANC_LICNBR;
		self.Sanction_9_SANC_SANCST:=inRec.LegacySanctions[9].SANC_SANCST;
		self.Sanction_9_SANC_BRDTYPE:=inRec.LegacySanctions[9].SANC_BRDTYPE;
		self.Sanction_9_SANC_SRC_DESC:=inRec.LegacySanctions[9].SANC_SRC_DESC;
		self.Sanction_9_SANC_TYPE:=inRec.LegacySanctions[9].SANC_TYPE;
		self.Sanction_9_SANC_TERMS:=inRec.LegacySanctions[9].SANC_TERMS;
		self.Sanction_9_SANC_REAS:=inRec.LegacySanctions[9].SANC_REAS;
		self.Sanction_9_SANC_COND:=inRec.LegacySanctions[9].SANC_COND;
		self.Sanction_9_SANC_FINES:=inRec.LegacySanctions[9].SANC_FINES;
		self.Sanction_9_SANC_UPDTE:=inRec.LegacySanctions[9].SANC_UPDTE_form;
		self.Sanction_9_date_first_reported:=inRec.LegacySanctions[9].date_first_reported;
		self.Sanction_9_date_last_reported:=inRec.LegacySanctions[9].date_last_reported;
		self.Sanction_9_SANC_REINDTE:=inRec.LegacySanctions[9].SANC_REINDTE_form;
		self.Sanction_9_SANC_FAB:=inRec.LegacySanctions[9].SANC_FAB;
		self.Sanction_9_SANC_UNAMB_IND:=inRec.LegacySanctions[9].SANC_UNAMB_IND;
		self.Sanction_9_process_date:=inRec.LegacySanctions[9].process_date;
		self.Sanction_9_date_first_seen:=inRec.LegacySanctions[9].date_first_seen;
		self.Sanction_9_date_last_seen:=inRec.LegacySanctions[9].date_last_seen;
		self.Sanction_9_title:=inRec.LegacySanctions[9].Prov_Clean_title;
		self.Sanction_9_fname:=inRec.LegacySanctions[9].Prov_Clean_fname;
		self.Sanction_9_mname:=inRec.LegacySanctions[9].Prov_Clean_mname;
		self.Sanction_9_lname:=inRec.LegacySanctions[9].Prov_Clean_lname;
		self.Sanction_9_name_suffix:=inRec.LegacySanctions[9].Prov_Clean_name_suffix;
		self.Sanction_9_prim_range:=inRec.LegacySanctions[9].ProvCo_Address_Clean_prim_range;
		self.Sanction_9_predir:=inRec.LegacySanctions[9].ProvCo_Address_Clean_predir;
		self.Sanction_9_prim_name:=inRec.LegacySanctions[9].ProvCo_Address_Clean_prim_name;
		self.Sanction_9_addr_suffix:=inRec.LegacySanctions[9].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_9_postdir:=inRec.LegacySanctions[9].ProvCo_Address_Clean_postdir;
		self.Sanction_9_unit_desig:=inRec.LegacySanctions[9].ProvCo_Address_Clean_unit_desig;
		self.Sanction_9_sec_range:=inRec.LegacySanctions[9].ProvCo_Address_Clean_sec_range;
		self.Sanction_9_p_city_name:=inRec.LegacySanctions[9].ProvCo_Address_Clean_p_city_name;
		self.Sanction_9_st:=inRec.LegacySanctions[9].ProvCo_Address_Clean_st;
		self.Sanction_9_zip:=inRec.LegacySanctions[9].ProvCo_Address_Clean_zip;
		self.Sanction_9_geo_lat:=inRec.LegacySanctions[9].ProvCo_Address_Clean_geo_lat;
		self.Sanction_9_geo_long:=inRec.LegacySanctions[9].ProvCo_Address_Clean_geo_long;
		self.Sanction_9_did:=inRec.LegacySanctions[9].did;
		self.Sanction_9_bdid:=inRec.LegacySanctions[9].bdid;
		self.Sanction_9_sanc_grouptype:=inRec.LegacySanctions[9].sanc_grouptype;
		self.Sanction_9_sanc_subgrouptype:=inRec.LegacySanctions[9].sanc_subgrouptype;
		self.Sanction_10_SANC_ID:=(string)inRec.LegacySanctions[10].SANC_ID;
		self.Sanction_10_SANC_DOB:=inRec.LegacySanctions[10].SANC_DOB;
		self.Sanction_10_SANC_TIN:=inRec.LegacySanctions[10].SANC_TIN;
		self.Sanction_10_SANC_UPIN:=inRec.LegacySanctions[10].SANC_UPIN;
		self.Sanction_10_SANC_PROVTYPE:=inRec.LegacySanctions[10].SANC_PROVTYPE;
		self.Sanction_10_SANC_SANCDTE:=inRec.LegacySanctions[10].SANC_SANCDTE_form;
		self.Sanction_10_SANC_LICNBR:=inRec.LegacySanctions[10].SANC_LICNBR;
		self.Sanction_10_SANC_SANCST:=inRec.LegacySanctions[10].SANC_SANCST;
		self.Sanction_10_SANC_BRDTYPE:=inRec.LegacySanctions[10].SANC_BRDTYPE;
		self.Sanction_10_SANC_SRC_DESC:=inRec.LegacySanctions[10].SANC_SRC_DESC;
		self.Sanction_10_SANC_TYPE:=inRec.LegacySanctions[10].SANC_TYPE;
		self.Sanction_10_SANC_TERMS:=inRec.LegacySanctions[10].SANC_TERMS;
		self.Sanction_10_SANC_REAS:=inRec.LegacySanctions[10].SANC_REAS;
		self.Sanction_10_SANC_COND:=inRec.LegacySanctions[10].SANC_COND;
		self.Sanction_10_SANC_FINES:=inRec.LegacySanctions[10].SANC_FINES;
		self.Sanction_10_SANC_UPDTE:=inRec.LegacySanctions[10].SANC_UPDTE_form;
		self.Sanction_10_date_first_reported:=inRec.LegacySanctions[10].date_first_reported;
		self.Sanction_10_date_last_reported:=inRec.LegacySanctions[10].date_last_reported;
		self.Sanction_10_SANC_REINDTE:=inRec.LegacySanctions[10].SANC_REINDTE_form;
		self.Sanction_10_SANC_FAB:=inRec.LegacySanctions[10].SANC_FAB;
		self.Sanction_10_SANC_UNAMB_IND:=inRec.LegacySanctions[10].SANC_UNAMB_IND;
		self.Sanction_10_process_date:=inRec.LegacySanctions[10].process_date;
		self.Sanction_10_date_first_seen:=inRec.LegacySanctions[10].date_first_seen;
		self.Sanction_10_date_last_seen:=inRec.LegacySanctions[10].date_last_seen;
		self.Sanction_10_title:=inRec.LegacySanctions[10].Prov_Clean_title;
		self.Sanction_10_fname:=inRec.LegacySanctions[10].Prov_Clean_fname;
		self.Sanction_10_mname:=inRec.LegacySanctions[10].Prov_Clean_mname;
		self.Sanction_10_lname:=inRec.LegacySanctions[10].Prov_Clean_lname;
		self.Sanction_10_name_suffix:=inRec.LegacySanctions[10].Prov_Clean_name_suffix;
		self.Sanction_10_prim_range:=inRec.LegacySanctions[10].ProvCo_Address_Clean_prim_range;
		self.Sanction_10_predir:=inRec.LegacySanctions[10].ProvCo_Address_Clean_predir;
		self.Sanction_10_prim_name:=inRec.LegacySanctions[10].ProvCo_Address_Clean_prim_name;
		self.Sanction_10_addr_suffix:=inRec.LegacySanctions[10].ProvCo_Address_Clean_addr_suffix;
		self.Sanction_10_postdir:=inRec.LegacySanctions[10].ProvCo_Address_Clean_postdir;
		self.Sanction_10_unit_desig:=inRec.LegacySanctions[10].ProvCo_Address_Clean_unit_desig;
		self.Sanction_10_sec_range:=inRec.LegacySanctions[10].ProvCo_Address_Clean_sec_range;
		self.Sanction_10_p_city_name:=inRec.LegacySanctions[10].ProvCo_Address_Clean_p_city_name;
		self.Sanction_10_st:=inRec.LegacySanctions[10].ProvCo_Address_Clean_st;
		self.Sanction_10_zip:=inRec.LegacySanctions[10].ProvCo_Address_Clean_zip;
		self.Sanction_10_geo_lat:=inRec.LegacySanctions[10].ProvCo_Address_Clean_geo_lat;
		self.Sanction_10_geo_long:=inRec.LegacySanctions[10].ProvCo_Address_Clean_geo_long;
		self.Sanction_10_did:=inRec.LegacySanctions[10].did;
		self.Sanction_10_bdid:=inRec.LegacySanctions[10].bdid;
		self.Sanction_10_sanc_grouptype:=inRec.LegacySanctions[10].sanc_grouptype;
		self.Sanction_10_sanc_subgrouptype:=inRec.LegacySanctions[10].sanc_subgrouptype;
		self.CLIA_1_BusinessId:=inRec.CLIARaw[1].BusinessId;
		self.CLIA_1_Number:=inRec.CLIARaw[1].CLIANumber;
		self.CLIA_1_ExpirationDate:=iesp.ECL2ESP.t_DateToString8(inRec.CLIARaw[1].ExpirationDate);
		self.CLIA_1_CertificateType:=inRec.CLIARaw[1].CertificateType;
		self.CLIA_1_LaboratoryType:=inRec.CLIARaw[1].LaboratoryType;
		self.CLIA_1_LabTerminationCode:=inRec.CLIARaw[1].TerminationCode;
		self.CLIA_1_LabTerminationDesc:=inRec.CLIARaw[1].TerminationCodeDesc;
		self.CLIA_1_CompanyName:=inRec.CLIARaw[1].CompanyName;
		self.CLIA_1_CompanyName2:=inRec.CLIARaw[1].CompanyName2;
		self.CLIA_1_Address_prim_range:=inRec.CLIARaw[1].CLIAProviderAddress.StreetNumber;
		self.CLIA_1_Address_predir:=inRec.CLIARaw[1].CLIAProviderAddress.StreetPreDirection;
		self.CLIA_1_Address_prim_name:=inRec.CLIARaw[1].CLIAProviderAddress.StreetName;
		self.CLIA_1_Address_addr_suffix:=inRec.CLIARaw[1].CLIAProviderAddress.StreetSuffix;
		self.CLIA_1_Address_postdir:=inRec.CLIARaw[1].CLIAProviderAddress.StreetPostDirection;
		self.CLIA_1_Address_unit_desig:=inRec.CLIARaw[1].CLIAProviderAddress.UnitDesignation;
		self.CLIA_1_Address_sec_range:=inRec.CLIARaw[1].CLIAProviderAddress.UnitNumber;
		self.CLIA_1_Address_p_city_name:=inRec.CLIARaw[1].CLIAProviderAddress.City;
		self.CLIA_1_Address_st:=inRec.CLIARaw[1].CLIAProviderAddress.State;
		self.CLIA_1_Address_zip:=inRec.CLIARaw[1].CLIAProviderAddress.Zip5;
		self.CLIA_1_Phone10:=inRec.CLIARaw[1].Phone10;
		self.CLIA_1_RecordType:=inRec.CLIARaw[1].RecordType;
		self.CLIA_1_DateFirstSeen:=iesp.ECL2ESP.t_DateToString8(inRec.CLIARaw[1].DateFirstSeen);
		self.CLIA_1_DateLastSeen:=iesp.ECL2ESP.t_DateToString8(inRec.CLIARaw[1].DateLastSeen);
		self.NPI_1_Full:=inRec.NPIRaw[1].EntityInformation.EntityName.Full;
		self.NPI_1_First:=inRec.NPIRaw[1].EntityInformation.EntityName.First;
		self.NPI_1_Middle:=inRec.NPIRaw[1].EntityInformation.EntityName.Middle;
		self.NPI_1_Last:=inRec.NPIRaw[1].EntityInformation.EntityName.Last;
		self.NPI_1_Suffix:=inRec.NPIRaw[1].EntityInformation.EntityName.Suffix;
		self.NPI_1_Prefix:=inRec.NPIRaw[1].EntityInformation.EntityName.Prefix;
		self.NPI_1_CompanyName:=inRec.NPIRaw[1].EntityInformation.CompanyName;
		self.NPI_1_CompanyNameAKA:=inRec.NPIRaw[1].EntityInformation.CompanyNameAKA;
		self.NPI_1_ParentOrganization:=inRec.NPIRaw[1].EntityInformation.ParentOrganization;
		self.NPI_1_TIN:=inRec.NPIRaw[1].EntityInformation.TIN;
		self.NPI_1_ChildOrganization:=inRec.NPIRaw[1].EntityInformation.ChildOrganization ;
		self.NPI_1_AuthorizedName_Full:=inRec.NPIRaw[1].EntityInformation.AuthorizedName.Full;
		self.NPI_1_AuthorizedName_First:=inRec.NPIRaw[1].EntityInformation.AuthorizedName.First;
		self.NPI_1_AuthorizedName_Middle:=inRec.NPIRaw[1].EntityInformation.AuthorizedName.Middle;
		self.NPI_1_AuthorizedName_Last:=inRec.NPIRaw[1].EntityInformation.AuthorizedName.Last;
		self.NPI_1_AuthorizedName_Suffix:=inRec.NPIRaw[1].EntityInformation.AuthorizedName.Suffix;
		self.NPI_1_AuthorizedName_Prefix:=inRec.NPIRaw[1].EntityInformation.AuthorizedName.Prefix;
		self.NPI_1_AuthorizedName_Title:=inRec.NPIRaw[1].EntityInformation.AuthorizedTitle;
		self.NPI_1_AuthorizedName_Credentials:=inRec.NPIRaw[1].EntityInformation.AuthorizedCredentials;
		self.NPI_1_Sex:=inRec.NPIRaw[1].EntityInformation.Sex ;
		self.NPI_1_SoleProprietor:=if(exists(inRec.NPIRaw) and inRec.NPIRaw[1].EntityInformation.SoleProprietor,'TRUE','FALSE');
		self.NPI_1_Number:=inRec.NPIRaw[1].NPIInformation.NPINumber;
		self.NPI_1_EntityType:=inRec.NPIRaw[1].NPIInformation.EntityType;
		self.NPI_1_EnumDate:=iesp.ECL2ESP.t_DateToString8(inRec.NPIRaw[1].NPIInformation.EnumDate);
		self.NPI_1_LastUpdateDate:=iesp.ECL2ESP.t_DateToString8(inRec.NPIRaw[1].NPIInformation.LastUpdateDate);
		self.NPI_1_ReplacementNPI:=inRec.NPIRaw[1].NPIInformation.ReplacementNPI;
		self.NPI_1_ReactivationDate:=iesp.ECL2ESP.t_DateToString8(inRec.NPIRaw[1].NPIInformation.ReactivationDate);
		self.NPI_1_DeactivationDate:=iesp.ECL2ESP.t_DateToString8(inRec.NPIRaw[1].NPIInformation.DeactivationDate);
		self.NPI_1_DeactivationReasonDesc :=inRec.NPIRaw[1].NPIInformation.DeactivationReason;
		self.NPI_1_MailingAddress_StreetNumber:=inRec.NPIRaw[1].ProviderMailingAddress.StreetNumber;
		self.NPI_1_MailingAddress_StreetPreDirection:=inRec.NPIRaw[1].ProviderMailingAddress.StreetPreDirection;
		self.NPI_1_MailingAddress_StreetName:=inRec.NPIRaw[1].ProviderMailingAddress.StreetName;
		self.NPI_1_MailingAddress_StreetSuffix:=inRec.NPIRaw[1].ProviderMailingAddress.StreetSuffix;
		self.NPI_1_MailingAddress_StreetPostDirection:=inRec.NPIRaw[1].ProviderMailingAddress.StreetPostDirection;
		self.NPI_1_MailingAddress_UnitDesignation:=inRec.NPIRaw[1].ProviderMailingAddress.UnitDesignation;
		self.NPI_1_MailingAddress_UnitNumber:=inRec.NPIRaw[1].ProviderMailingAddress.UnitNumber;
		self.NPI_1_MailingAddress_StreetAddress1:=inRec.NPIRaw[1].ProviderMailingAddress.StreetAddress1;
		self.NPI_1_MailingAddress_StreetAddress2:=inRec.NPIRaw[1].ProviderMailingAddress.StreetAddress2;
		self.NPI_1_MailingAddress_City:=inRec.NPIRaw[1].ProviderMailingAddress.City;
		self.NPI_1_MailingAddress_State:=inRec.NPIRaw[1].ProviderMailingAddress.State;
		self.NPI_1_MailingAddress_Zip5:=inRec.NPIRaw[1].ProviderMailingAddress.Zip5;
		self.NPI_1_MailingAddress_Zip4:=inRec.NPIRaw[1].ProviderMailingAddress.Zip4;
		self.NPI_1_MailingAddress_County:=inRec.NPIRaw[1].ProviderMailingAddress.County;
		self.NPI_1_MailingAddress_Phone10:=inRec.NPIRaw[1].ProviderMailingAddress.Phone10;
		self.NPI_1_MailingAddress_FaxNumber:=inRec.NPIRaw[1].ProviderMailingAddress.FaxNumber;
		self.NPI_1_PracticeAddress_StreetNumber:=inRec.NPIRaw[1].ProviderPracticeAddress.StreetNumber;
		self.NPI_1_PracticeAddress_StreetPreDirection:=inRec.NPIRaw[1].ProviderPracticeAddress.StreetPreDirection;
		self.NPI_1_PracticeAddress_StreetName:=inRec.NPIRaw[1].ProviderPracticeAddress.StreetName;
		self.NPI_1_PracticeAddress_StreetSuffix:=inRec.NPIRaw[1].ProviderPracticeAddress.StreetSuffix;
		self.NPI_1_PracticeAddress_StreetPostDirection:=inRec.NPIRaw[1].ProviderPracticeAddress.StreetPostDirection;
		self.NPI_1_PracticeAddress_UnitDesignation:=inRec.NPIRaw[1].ProviderPracticeAddress.UnitDesignation;
		self.NPI_1_PracticeAddress_UnitNumber:=inRec.NPIRaw[1].ProviderPracticeAddress.UnitNumber;
		self.NPI_1_PracticeAddress_StreetAddress1:=inRec.NPIRaw[1].ProviderPracticeAddress.StreetAddress1;
		self.NPI_1_PracticeAddress_StreetAddress2:=inRec.NPIRaw[1].ProviderPracticeAddress.StreetAddress2;
		self.NPI_1_PracticeAddress_City:=inRec.NPIRaw[1].ProviderPracticeAddress.City;
		self.NPI_1_PracticeAddress_State:=inRec.NPIRaw[1].ProviderPracticeAddress.State;
		self.NPI_1_PracticeAddress_Zip5:=inRec.NPIRaw[1].ProviderPracticeAddress.Zip5;
		self.NPI_1_PracticeAddress_Zip4:=inRec.NPIRaw[1].ProviderPracticeAddress.Zip4;
		self.NPI_1_PracticeAddress_County:=inRec.NPIRaw[1].ProviderPracticeAddress.County;
		self.NPI_1_PracticeAddress_Phone10:=inRec.NPIRaw[1].ProviderPracticeAddress.Phone10;
		self.NPI_1_PracticeAddress_FaxNumber:=inRec.NPIRaw[1].ProviderPracticeAddress.FaxNumber;
		self.NPI_1_PrimaryTaxonomy_1:=inRec.NPIRaw[1].ProviderTaxonomies[1].PrimaryTaxonomy;
		self.NPI_1_SelectedTaxonomyCode_1:=inRec.NPIRaw[1].ProviderTaxonomies[1].SelectedTaxonomyCode;
		self.NPI_1_SelectedTaxonomyDesc_1:=inRec.NPIRaw[1].ProviderTaxonomies[1].SelectedTaxonomyDesc;
		self.NPI_1_State_1:=inRec.NPIRaw[1].ProviderTaxonomies[1].State;
		self.NPI_1_LicenseNumber_1:=inRec.NPIRaw[1].ProviderTaxonomies[1].LicenseNumber;
		self.NPI_1_PrimaryTaxonomy_2:=inRec.NPIRaw[1].ProviderTaxonomies[2].PrimaryTaxonomy;
		self.NPI_1_SelectedTaxonomyCode_2:=inRec.NPIRaw[1].ProviderTaxonomies[2].SelectedTaxonomyCode;
		self.NPI_1_SelectedTaxonomyDesc_2:=inRec.NPIRaw[1].ProviderTaxonomies[2].SelectedTaxonomyDesc;
		self.NPI_1_State_2:=inRec.NPIRaw[1].ProviderTaxonomies[2].State;
		self.NPI_1_LicenseNumber_2:=inRec.NPIRaw[1].ProviderTaxonomies[2].LicenseNumber;
		self.NPI_1_PrimaryTaxonomy_3:=inRec.NPIRaw[1].ProviderTaxonomies[3].PrimaryTaxonomy;
		self.NPI_1_SelectedTaxonomyCode_3:=inRec.NPIRaw[1].ProviderTaxonomies[3].SelectedTaxonomyCode;
		self.NPI_1_SelectedTaxonomyDesc_3:=inRec.NPIRaw[1].ProviderTaxonomies[3].SelectedTaxonomyDesc;
		self.NPI_1_State_3:=inRec.NPIRaw[1].ProviderTaxonomies[3].State;
		self.NPI_1_LicenseNumber_3:=inRec.NPIRaw[1].ProviderTaxonomies[3].LicenseNumber;
		self.NPI_1_PrimaryTaxonomy_4:=inRec.NPIRaw[1].ProviderTaxonomies[4].PrimaryTaxonomy;
		self.NPI_1_SelectedTaxonomyCode_4:=inRec.NPIRaw[1].ProviderTaxonomies[4].SelectedTaxonomyCode;
		self.NPI_1_SelectedTaxonomyDesc_4:=inRec.NPIRaw[1].ProviderTaxonomies[4].SelectedTaxonomyDesc;
		self.NPI_1_State_4:=inRec.NPIRaw[1].ProviderTaxonomies[4].State;
		self.NPI_1_LicenseNumber_4:=inRec.NPIRaw[1].ProviderTaxonomies[4].LicenseNumber;
		self.NPI_1_PrimaryTaxonomy_5:=inRec.NPIRaw[1].ProviderTaxonomies[5].PrimaryTaxonomy;
		self.NPI_1_SelectedTaxonomyCode_5:=inRec.NPIRaw[1].ProviderTaxonomies[5].SelectedTaxonomyCode;
		self.NPI_1_SelectedTaxonomyDesc_5:=inRec.NPIRaw[1].ProviderTaxonomies[5].SelectedTaxonomyDesc;
		self.NPI_1_State_5:=inRec.NPIRaw[1].ProviderTaxonomies[5].State;
		self.NPI_1_LicenseNumber_5:=inRec.NPIRaw[1].ProviderTaxonomies[5].LicenseNumber;
		self.NPI_1_TypeCode_1:=inRec.NPIRaw[1].OtherProviderIdentifiers[1].TypeCode;
		self.NPI_1_TypeDescription_1:=inRec.NPIRaw[1].OtherProviderIdentifiers[1].TypeDescription;
		self.NPI_1_Issuer_1:=inRec.NPIRaw[1].OtherProviderIdentifiers[1].Issuer;
		self.NPI_1_IssuerNumber_1:=inRec.NPIRaw[1].OtherProviderIdentifiers[1].Number;
		self.NPI_1_IssuerState_1:=inRec.NPIRaw[1].OtherProviderIdentifiers[1].State;
		self.NPI_1_TypeCode_2:=inRec.NPIRaw[1].OtherProviderIdentifiers[2].TypeCode;
		self.NPI_1_TypeDescription_2:=inRec.NPIRaw[1].OtherProviderIdentifiers[2].TypeDescription;
		self.NPI_1_Issuer_2:=inRec.NPIRaw[1].OtherProviderIdentifiers[2].Issuer;
		self.NPI_1_IssuerNumber_2:=inRec.NPIRaw[1].OtherProviderIdentifiers[2].Number;
		self.NPI_1_IssuerState_2:=inRec.NPIRaw[1].OtherProviderIdentifiers[2].State;
		self.NPI_1_TypeCode_3:=inRec.NPIRaw[1].OtherProviderIdentifiers[3].TypeCode;
		self.NPI_1_TypeDescription_3:=inRec.NPIRaw[1].OtherProviderIdentifiers[3].TypeDescription;
		self.NPI_1_Issuer_3:=inRec.NPIRaw[1].OtherProviderIdentifiers[3].Issuer;
		self.NPI_1_IssuerNumber_3:=inRec.NPIRaw[1].OtherProviderIdentifiers[3].Number;
		self.NPI_1_IssuerState_3:=inRec.NPIRaw[1].OtherProviderIdentifiers[3].State;
		self.NPI_1_TypeCode_4:=inRec.NPIRaw[1].OtherProviderIdentifiers[4].TypeCode;
		self.NPI_1_TypeDescription_4:=inRec.NPIRaw[1].OtherProviderIdentifiers[4].TypeDescription;
		self.NPI_1_Issuer_4:=inRec.NPIRaw[1].OtherProviderIdentifiers[4].Issuer;
		self.NPI_1_IssuerNumber_4:=inRec.NPIRaw[1].OtherProviderIdentifiers[4].Number;
		self.NPI_1_IssuerState_4:=inRec.NPIRaw[1].OtherProviderIdentifiers[4].State;
		self.NPI_1_TypeCode_5:=inRec.NPIRaw[1].OtherProviderIdentifiers[5].TypeCode;
		self.NPI_1_TypeDescription_5:=inRec.NPIRaw[1].OtherProviderIdentifiers[5].TypeDescription;
		self.NPI_1_Issuer_5:=inRec.NPIRaw[1].OtherProviderIdentifiers[5].Issuer;
		self.NPI_1_IssuerNumber_5:=inRec.NPIRaw[1].OtherProviderIdentifiers[5].Number;
		self.NPI_1_IssuerState_5:=inRec.NPIRaw[1].OtherProviderIdentifiers[5].State;	
		self.NCPDP_1_PharmacyProviderID:=inRec.NCPDPRaw[1].EntityInformation.PharmacyProviderID;  
		self.NCPDP_1_LegalBusinessName:=inRec.NCPDPRaw[1].EntityInformation.CompanyName;  
		self.NCPDP_1_DBA:=inRec.NCPDPRaw[1].EntityInformation.DBAName;    
		self.NCPDP_1_store_number:=inRec.NCPDPRaw[1].EntityInformation.StoreNumber;  
		self.NCPDP_1_medicare_provider_id:=inRec.NCPDPRaw[1].EntityInformation.MedicareProviderId; 
		self.NCPDP_1_national_provider_id:=inRec.NCPDPRaw[1].EntityInformation.NpiNumber; 
		self.NCPDP_1_DEA_registration_id:=inRec.NCPDPRaw[1].EntityInformation.DEANumber;  
		self.NCPDP_1_federal_tax_id:=inRec.NCPDPRaw[1].EntityInformation.FEIN;
		self.NCPDP_1_state_license_number:=inRec.NCPDPRaw[1].EntityInformation.LicenseNumber; 
		self.NCPDP_1_dispenser_class_code:=inRec.NCPDPRaw[1].EntityInformation.DispenserClass; 
		self.NCPDP_1_primary_dispenser_type_code:=inRec.NCPDPRaw[1].EntityInformation.DispenserType; 
		self.NCPDP_1_secondary_dispenser_type_code:=inRec.NCPDPRaw[1].EntityInformation.SecondaryDispenserType;
		self.NCPDP_1_tertiary_dispenser_type_code:=inRec.NCPDPRaw[1].EntityInformation.TertiaryDispenserType;
		self.NCPDP_1_phys_loc_address1:=inRec.NCPDPRaw[1].PharmacyLocationAddress.StreetAddress1;    
		self.NCPDP_1_phys_loc_address2:=inRec.NCPDPRaw[1].PharmacyLocationAddress.StreetAddress2;    
		self.NCPDP_1_phys_loc_city:=inRec.NCPDPRaw[1].PharmacyLocationAddress.City; 
		self.NCPDP_1_phys_loc_state:=inRec.NCPDPRaw[1].PharmacyLocationAddress.State;
		self.NCPDP_1_phys_loc_full_zip:=inRec.NCPDPRaw[1].PharmacyLocationAddress.Zip5;    
		self.NCPDP_1_phys_loc_phone:=inRec.NCPDPRaw[1].PharmacyLocationAddress.Phone10;
		self.NCPDP_1_phys_loc_email:=inRec.NCPDPRaw[1].PharmacyLocationAddress.Email;
		self.NCPDP_1_phys_loc_store_open_date:=iesp.ecl2esp.t_DateToString8(inRec.NCPDPRaw[1].EntityInformation.OpenDate);    
		self.NCPDP_1_phys_loc_store_close_date:=iesp.ecl2esp.t_DateToString8(inRec.NCPDPRaw[1].EntityInformation.ClosureDate);   
		self.NCPDP_1_address1:=inRec.NCPDPRaw[1].PharmacyMailingAddress.StreetAddress1;
		self.NCPDP_1_address2:=inRec.NCPDPRaw[1].PharmacyMailingAddress.StreetAddress2;
		self.NCPDP_1_city:=inRec.NCPDPRaw[1].PharmacyMailingAddress.City;   
		self.NCPDP_1_state:=inRec.NCPDPRaw[1].PharmacyMailingAddress.State;  
		self.NCPDP_1_full_zip:=inRec.NCPDPRaw[1].PharmacyMailingAddress.Zip5;
		self.NCPDP_1_contact_last_name:=inRec.NCPDPRaw[1].PharmacyMailingAddress.ContactName.Last;    
		self.NCPDP_1_contact_first_name:=inRec.NCPDPRaw[1].PharmacyMailingAddress.ContactName.First;   
		self.NCPDP_1_contact_middle_initial:=inRec.NCPDPRaw[1].PharmacyMailingAddress.ContactName.Middle;
		self.NCPDP_1_contact_title:=inRec.NCPDPRaw[1].PharmacyMailingAddress.ContactTitle; 
		self.NCPDP_1_contact_phone:=inRec.NCPDPRaw[1].PharmacyMailingAddress.Phone10; 
		self.NCPDP_1_contact_email:=inRec.NCPDPRaw[1].PharmacyMailingAddress.Email; 
		self.NCPDP_1_phys_loc_24hr_operation:=inRec.NCPDPRaw[1].PharmacyServices.Open24Hours;     
		self.NCPDP_1_SundayHours:=inRec.NCPDPRaw[1].PharmacyServices.Hours(DayofWeek='SUNDAY')[1].Hours;    
		self.NCPDP_1_MondayHours:=inRec.NCPDPRaw[1].PharmacyServices.Hours(DayofWeek='MONDAY')[1].Hours;    
		self.NCPDP_1_TuesdayHours:=inRec.NCPDPRaw[1].PharmacyServices.Hours(DayofWeek='TUESDAY')[1].Hours;   
		self.NCPDP_1_WednesdayHours:=inRec.NCPDPRaw[1].PharmacyServices.Hours(DayofWeek='WEDNESDAY')[1].Hours; 
		self.NCPDP_1_ThursdayHours:=inRec.NCPDPRaw[1].PharmacyServices.Hours(DayofWeek='THURSDAY')[1].Hours;  
		self.NCPDP_1_FridayHours:=inRec.NCPDPRaw[1].PharmacyServices.Hours(DayofWeek='FRIDAY')[1].Hours;    
		self.NCPDP_1_SaturdayHours:=inRec.NCPDPRaw[1].PharmacyServices.Hours(DayofWeek='SATURDAY')[1].Hours;  
		self.NCPDP_1_phys_loc_accepts_ePrescriptions:=inRec.NCPDPRaw[1].PharmacyServices.AcceptsEPrescriptions;    
		self.NCPDP_1_phys_loc_delivery_service:=inRec.NCPDPRaw[1].PharmacyServices.DeliveryService;   
		self.NCPDP_1_phys_loc_compounding_service:=inRec.NCPDPRaw[1].PharmacyServices.CompoundingService;
		self.NCPDP_1_phys_loc_driveup_window:=inRec.NCPDPRaw[1].PharmacyServices.DriveupWindow;     
		self.NCPDP_1_phys_loc_durable_med_equip:=inRec.NCPDPRaw[1].PharmacyServices.DurableMedicalEquipment;  
		self.NCPDP_1_languageCode1Desc:=inRec.NCPDPRaw[1].PharmacyServices.Languages[1].Language;     
		self.NCPDP_1_languageCode2Desc:=inRec.NCPDPRaw[1].PharmacyServices.Languages[2].Language;     
		self.NCPDP_1_languageCode3Desc:=inRec.NCPDPRaw[1].PharmacyServices.Languages[3].Language;     
		self.NCPDP_1_languageCode4Desc:=inRec.NCPDPRaw[1].PharmacyServices.Languages[4].Language;     
		self.NCPDP_1_languageCode5Desc:=inRec.NCPDPRaw[1].PharmacyServices.Languages[5].Language;     
		self.Certifications_1_RecordType := inRec.abmsRaw[1].Certifications[1].RecordType;
		self.Certifications_1_Seq := inRec.abmsRaw[1].Certifications[1].Seq;
		self.Certifications_1_CertificateName := inRec.abmsRaw[1].Certifications[1].CertificateName;
		self.Certifications_1_IssuingBoard := inRec.abmsRaw[1].Certifications[1].IssuingBoard;
		self.Certifications_1_CertificateTypeID := inRec.abmsRaw[1].Certifications[1].CertificateTypeID;
		self.Certifications_1_CertificateType := inRec.abmsRaw[1].Certifications[1].CertificateType;
		self.Certifications_1_RecertificateInd := inRec.abmsRaw[1].Certifications[1].RecertificateInd;
		self.Certifications_1_BoardCertified := inRec.abmsRaw[1].Certifications[1].BoardCertified;
		self.Certifications_1_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[1].IssueDate);
		self.Certifications_1_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[1].ExpireDate);
		self.Certifications_1_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[1].ReverificationDate);
		self.Certifications_1_DurationType := inRec.abmsRaw[1].Certifications[1].DurationType;
		self.Certifications_1_DurationTypeDesc := inRec.abmsRaw[1].Certifications[1].DurationTypeDesc;
		self.Certifications_1_MOCPathwayID := inRec.abmsRaw[1].Certifications[1].MOCPathwayID;
		self.Certifications_1_MOCPathwayName := inRec.abmsRaw[1].Certifications[1].MOCPathwayName;
		self.Certifications_1_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[1].DateFirstReported);
		self.Certifications_1_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[1].DateLastReported);
		self.Certifications_2_RecordType := inRec.abmsRaw[1].Certifications[2].RecordType;
		self.Certifications_2_Seq := inRec.abmsRaw[1].Certifications[2].Seq;
		self.Certifications_2_CertificateName := inRec.abmsRaw[1].Certifications[2].CertificateName;
		self.Certifications_2_IssuingBoard := inRec.abmsRaw[1].Certifications[2].IssuingBoard;
		self.Certifications_2_CertificateTypeID := inRec.abmsRaw[1].Certifications[2].CertificateTypeID;
		self.Certifications_2_CertificateType := inRec.abmsRaw[1].Certifications[2].CertificateType;
		self.Certifications_2_RecertificateInd := inRec.abmsRaw[1].Certifications[2].RecertificateInd;
		self.Certifications_2_BoardCertified := inRec.abmsRaw[1].Certifications[2].BoardCertified;
		self.Certifications_2_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[2].IssueDate);
		self.Certifications_2_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[2].ExpireDate);
		self.Certifications_2_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[2].ReverificationDate);
		self.Certifications_2_DurationType := inRec.abmsRaw[1].Certifications[2].DurationType;
		self.Certifications_2_DurationTypeDesc := inRec.abmsRaw[1].Certifications[2].DurationTypeDesc;
		self.Certifications_2_MOCPathwayID := inRec.abmsRaw[1].Certifications[2].MOCPathwayID;
		self.Certifications_2_MOCPathwayName := inRec.abmsRaw[1].Certifications[2].MOCPathwayName;
		self.Certifications_2_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[2].DateFirstReported);
		self.Certifications_2_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[2].DateLastReported);
		self.Certifications_3_RecordType := inRec.abmsRaw[1].Certifications[3].RecordType;
		self.Certifications_3_Seq := inRec.abmsRaw[1].Certifications[3].Seq;
		self.Certifications_3_CertificateName := inRec.abmsRaw[1].Certifications[3].CertificateName;
		self.Certifications_3_IssuingBoard := inRec.abmsRaw[1].Certifications[3].IssuingBoard;
		self.Certifications_3_CertificateTypeID := inRec.abmsRaw[1].Certifications[3].CertificateTypeID;
		self.Certifications_3_CertificateType := inRec.abmsRaw[1].Certifications[3].CertificateType;
		self.Certifications_3_RecertificateInd := inRec.abmsRaw[1].Certifications[3].RecertificateInd;
		self.Certifications_3_BoardCertified := inRec.abmsRaw[1].Certifications[3].BoardCertified;
		self.Certifications_3_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[3].IssueDate);
		self.Certifications_3_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[3].ExpireDate);
		self.Certifications_3_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[3].ReverificationDate);
		self.Certifications_3_DurationType := inRec.abmsRaw[1].Certifications[3].DurationType;
		self.Certifications_3_DurationTypeDesc := inRec.abmsRaw[1].Certifications[3].DurationTypeDesc;
		self.Certifications_3_MOCPathwayID := inRec.abmsRaw[1].Certifications[3].MOCPathwayID;
		self.Certifications_3_MOCPathwayName := inRec.abmsRaw[1].Certifications[3].MOCPathwayName;
		self.Certifications_3_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[3].DateFirstReported);
		self.Certifications_3_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[3].DateLastReported);
		self.Certifications_4_RecordType := inRec.abmsRaw[1].Certifications[4].RecordType;
		self.Certifications_4_Seq := inRec.abmsRaw[1].Certifications[4].Seq;
		self.Certifications_4_CertificateName := inRec.abmsRaw[1].Certifications[4].CertificateName;
		self.Certifications_4_IssuingBoard := inRec.abmsRaw[1].Certifications[4].IssuingBoard;
		self.Certifications_4_CertificateTypeID := inRec.abmsRaw[1].Certifications[4].CertificateTypeID;
		self.Certifications_4_CertificateType := inRec.abmsRaw[1].Certifications[4].CertificateType;
		self.Certifications_4_RecertificateInd := inRec.abmsRaw[1].Certifications[4].RecertificateInd;
		self.Certifications_4_BoardCertified := inRec.abmsRaw[1].Certifications[4].BoardCertified;
		self.Certifications_4_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[4].IssueDate);
		self.Certifications_4_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[4].ExpireDate);
		self.Certifications_4_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[4].ReverificationDate);
		self.Certifications_4_DurationType := inRec.abmsRaw[1].Certifications[4].DurationType;
		self.Certifications_4_DurationTypeDesc := inRec.abmsRaw[1].Certifications[4].DurationTypeDesc;
		self.Certifications_4_MOCPathwayID := inRec.abmsRaw[1].Certifications[4].MOCPathwayID;
		self.Certifications_4_MOCPathwayName := inRec.abmsRaw[1].Certifications[4].MOCPathwayName;
		self.Certifications_4_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[4].DateFirstReported);
		self.Certifications_4_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[4].DateLastReported);
		self.Certifications_5_RecordType := inRec.abmsRaw[1].Certifications[5].RecordType;
		self.Certifications_5_Seq := inRec.abmsRaw[1].Certifications[5].Seq;
		self.Certifications_5_CertificateName := inRec.abmsRaw[1].Certifications[5].CertificateName;
		self.Certifications_5_IssuingBoard := inRec.abmsRaw[1].Certifications[5].IssuingBoard;
		self.Certifications_5_CertificateTypeID := inRec.abmsRaw[1].Certifications[5].CertificateTypeID;
		self.Certifications_5_CertificateType := inRec.abmsRaw[1].Certifications[5].CertificateType;
		self.Certifications_5_RecertificateInd := inRec.abmsRaw[1].Certifications[5].RecertificateInd;
		self.Certifications_5_BoardCertified := inRec.abmsRaw[1].Certifications[5].BoardCertified;
		self.Certifications_5_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[5].IssueDate);
		self.Certifications_5_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[5].ExpireDate);
		self.Certifications_5_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[5].ReverificationDate);
		self.Certifications_5_DurationType := inRec.abmsRaw[1].Certifications[5].DurationType;
		self.Certifications_5_DurationTypeDesc := inRec.abmsRaw[1].Certifications[5].DurationTypeDesc;
		self.Certifications_5_MOCPathwayID := inRec.abmsRaw[1].Certifications[5].MOCPathwayID;
		self.Certifications_5_MOCPathwayName := inRec.abmsRaw[1].Certifications[5].MOCPathwayName;
		self.Certifications_5_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[5].DateFirstReported);
		self.Certifications_5_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[5].DateLastReported);
		self.Certifications_6_RecordType := inRec.abmsRaw[1].Certifications[6].RecordType;
		self.Certifications_6_Seq := inRec.abmsRaw[1].Certifications[6].Seq;
		self.Certifications_6_CertificateName := inRec.abmsRaw[1].Certifications[6].CertificateName;
		self.Certifications_6_IssuingBoard := inRec.abmsRaw[1].Certifications[6].IssuingBoard;
		self.Certifications_6_CertificateTypeID := inRec.abmsRaw[1].Certifications[6].CertificateTypeID;
		self.Certifications_6_CertificateType := inRec.abmsRaw[1].Certifications[6].CertificateType;
		self.Certifications_6_RecertificateInd := inRec.abmsRaw[1].Certifications[6].RecertificateInd;
		self.Certifications_6_BoardCertified := inRec.abmsRaw[1].Certifications[6].BoardCertified;
		self.Certifications_6_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[6].IssueDate);
		self.Certifications_6_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[6].ExpireDate);
		self.Certifications_6_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[6].ReverificationDate);
		self.Certifications_6_DurationType := inRec.abmsRaw[1].Certifications[6].DurationType;
		self.Certifications_6_DurationTypeDesc := inRec.abmsRaw[1].Certifications[6].DurationTypeDesc;
		self.Certifications_6_MOCPathwayID := inRec.abmsRaw[1].Certifications[6].MOCPathwayID;
		self.Certifications_6_MOCPathwayName := inRec.abmsRaw[1].Certifications[6].MOCPathwayName;
		self.Certifications_6_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[6].DateFirstReported);
		self.Certifications_6_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[6].DateLastReported);
		self.Certifications_7_RecordType := inRec.abmsRaw[1].Certifications[7].RecordType;
		self.Certifications_7_Seq := inRec.abmsRaw[1].Certifications[7].Seq;
		self.Certifications_7_CertificateName := inRec.abmsRaw[1].Certifications[7].CertificateName;
		self.Certifications_7_IssuingBoard := inRec.abmsRaw[1].Certifications[7].IssuingBoard;
		self.Certifications_7_CertificateTypeID := inRec.abmsRaw[1].Certifications[7].CertificateTypeID;
		self.Certifications_7_CertificateType := inRec.abmsRaw[1].Certifications[7].CertificateType;
		self.Certifications_7_RecertificateInd := inRec.abmsRaw[1].Certifications[7].RecertificateInd;
		self.Certifications_7_BoardCertified := inRec.abmsRaw[1].Certifications[7].BoardCertified;
		self.Certifications_7_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[7].IssueDate);
		self.Certifications_7_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[7].ExpireDate);
		self.Certifications_7_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[7].ReverificationDate);
		self.Certifications_7_DurationType := inRec.abmsRaw[1].Certifications[7].DurationType;
		self.Certifications_7_DurationTypeDesc := inRec.abmsRaw[1].Certifications[7].DurationTypeDesc;
		self.Certifications_7_MOCPathwayID := inRec.abmsRaw[1].Certifications[7].MOCPathwayID;
		self.Certifications_7_MOCPathwayName := inRec.abmsRaw[1].Certifications[7].MOCPathwayName;
		self.Certifications_7_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[7].DateFirstReported);
		self.Certifications_7_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[7].DateLastReported);
		self.Certifications_8_RecordType := inRec.abmsRaw[1].Certifications[8].RecordType;
		self.Certifications_8_Seq := inRec.abmsRaw[1].Certifications[8].Seq;
		self.Certifications_8_CertificateName := inRec.abmsRaw[1].Certifications[8].CertificateName;
		self.Certifications_8_IssuingBoard := inRec.abmsRaw[1].Certifications[8].IssuingBoard;
		self.Certifications_8_CertificateTypeID := inRec.abmsRaw[1].Certifications[8].CertificateTypeID;
		self.Certifications_8_CertificateType := inRec.abmsRaw[1].Certifications[8].CertificateType;
		self.Certifications_8_RecertificateInd := inRec.abmsRaw[1].Certifications[8].RecertificateInd;
		self.Certifications_8_BoardCertified := inRec.abmsRaw[1].Certifications[8].BoardCertified;
		self.Certifications_8_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[8].IssueDate);
		self.Certifications_8_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[8].ExpireDate);
		self.Certifications_8_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[8].ReverificationDate);
		self.Certifications_8_DurationType := inRec.abmsRaw[1].Certifications[8].DurationType;
		self.Certifications_8_DurationTypeDesc := inRec.abmsRaw[1].Certifications[8].DurationTypeDesc;
		self.Certifications_8_MOCPathwayID := inRec.abmsRaw[1].Certifications[8].MOCPathwayID;
		self.Certifications_8_MOCPathwayName := inRec.abmsRaw[1].Certifications[8].MOCPathwayName;
		self.Certifications_8_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[8].DateFirstReported);
		self.Certifications_8_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[8].DateLastReported);
		self.Certifications_9_RecordType := inRec.abmsRaw[1].Certifications[9].RecordType;
		self.Certifications_9_Seq := inRec.abmsRaw[1].Certifications[9].Seq;
		self.Certifications_9_CertificateName := inRec.abmsRaw[1].Certifications[9].CertificateName;
		self.Certifications_9_IssuingBoard := inRec.abmsRaw[1].Certifications[9].IssuingBoard;
		self.Certifications_9_CertificateTypeID := inRec.abmsRaw[1].Certifications[9].CertificateTypeID;
		self.Certifications_9_CertificateType := inRec.abmsRaw[1].Certifications[9].CertificateType;
		self.Certifications_9_RecertificateInd := inRec.abmsRaw[1].Certifications[9].RecertificateInd;
		self.Certifications_9_BoardCertified := inRec.abmsRaw[1].Certifications[9].BoardCertified;
		self.Certifications_9_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[9].IssueDate);
		self.Certifications_9_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[9].ExpireDate);
		self.Certifications_9_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[9].ReverificationDate);
		self.Certifications_9_DurationType := inRec.abmsRaw[1].Certifications[9].DurationType;
		self.Certifications_9_DurationTypeDesc := inRec.abmsRaw[1].Certifications[9].DurationTypeDesc;
		self.Certifications_9_MOCPathwayID := inRec.abmsRaw[1].Certifications[9].MOCPathwayID;
		self.Certifications_9_MOCPathwayName := inRec.abmsRaw[1].Certifications[9].MOCPathwayName;
		self.Certifications_9_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[9].DateFirstReported);
		self.Certifications_9_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[9].DateLastReported);
		self.Certifications_10_RecordType := inRec.abmsRaw[1].Certifications[10].RecordType;
		self.Certifications_10_Seq := inRec.abmsRaw[1].Certifications[10].Seq;
		self.Certifications_10_CertificateName := inRec.abmsRaw[1].Certifications[10].CertificateName;
		self.Certifications_10_IssuingBoard := inRec.abmsRaw[1].Certifications[10].IssuingBoard;
		self.Certifications_10_CertificateTypeID := inRec.abmsRaw[1].Certifications[10].CertificateTypeID;
		self.Certifications_10_CertificateType := inRec.abmsRaw[1].Certifications[10].CertificateType;
		self.Certifications_10_RecertificateInd := inRec.abmsRaw[1].Certifications[10].RecertificateInd;
		self.Certifications_10_BoardCertified := inRec.abmsRaw[1].Certifications[10].BoardCertified;
		self.Certifications_10_IssueDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[10].IssueDate);
		self.Certifications_10_ExpireDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[10].ExpireDate);
		self.Certifications_10_ReverificationDate := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[10].ReverificationDate);
		self.Certifications_10_DurationType := inRec.abmsRaw[1].Certifications[10].DurationType;
		self.Certifications_10_DurationTypeDesc := inRec.abmsRaw[1].Certifications[10].DurationTypeDesc;
		self.Certifications_10_MOCPathwayID := inRec.abmsRaw[1].Certifications[10].MOCPathwayID;
		self.Certifications_10_MOCPathwayName := inRec.abmsRaw[1].Certifications[10].MOCPathwayName;
		self.Certifications_10_DateFirstReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[10].DateFirstReported);
		self.Certifications_10_DateLastReported := iesp.ECL2ESP.t_DateToString8(inRec.abmsRaw[1].Certifications[10].DateLastReported);
		self.Verification_Configuration := inRec.VerificationInfo[1].VerificationConfiguration;
		self.Verification_ConfigurationStatus := inRec.VerificationInfo[1].VerificationConfigurationStatus;
		self.Verification_ConfigurationOutcome := if(inRec.VerificationInfo[1].VerificationConfigurationOutcome,'TRUE','FALSE');
		self.Verification_NameVerified :=  if(inRec.VerificationInfo[1].NameVerified,'TRUE','FALSE');
		self.Verification_CompanyNameVerified :=  if(inRec.VerificationInfo[1].CompanyNameVerified,'TRUE','FALSE');
		self.Verification_AddressVerified :=  if(inRec.VerificationInfo[1].AddressVerified,'TRUE','FALSE');
		self.Verification_PhoneVerified :=  if(inRec.VerificationInfo[1].PhoneVerified,'TRUE','FALSE');
		self.Verification_SSNVerified :=  if(inRec.VerificationInfo[1].SSNVerified,'TRUE','FALSE');
		self.Verification_FEINVerified :=  if(inRec.VerificationInfo[1].FEINVerified,'TRUE','FALSE');
		self.Verification_FEINSuppliedExists :=  if(inRec.VerificationInfo[1].FEINSuppliedExists,'TRUE','FALSE');
		self.Verification_MedicalSchoolNameVerified :=  if(inRec.VerificationInfo[1].MedicalSchoolNameVerified,'TRUE','FALSE');
		self.Verification_GraduationYearVerified :=  if(inRec.VerificationInfo[1].GraduationYearVerified,'TRUE','FALSE');
		self.Verification_CLIAValid :=  if(inRec.VerificationInfo[1].CLIAValid,'TRUE','FALSE');
		self.Verification_CLIAVerified :=  if(inRec.VerificationInfo[1].CLIAVerified,'TRUE','FALSE');
		self.Verification_UPINVerified :=  if(inRec.VerificationInfo[1].UPINVerified,'TRUE','FALSE');
		self.Verification_NPIValid :=  if(inRec.VerificationInfo[1].NPIValid,'TRUE','FALSE');
		self.Verification_NPISuppliedExists :=  if(inRec.VerificationInfo[1].NPISuppliedExists,'TRUE','FALSE');
		self.Verification_NPIVerified :=  if(inRec.VerificationInfo[1].NPIVerified,'TRUE','FALSE');
		self.Verification_DEAValid :=  if(inRec.VerificationInfo[1].DEAValid,'TRUE','FALSE');
		self.Verification_DEAVerified :=  if(inRec.VerificationInfo[1].DEAVerified,'TRUE','FALSE');
		self.Verification_DEA2Valid :=  if(inRec.VerificationInfo[1].DEA2Valid,'TRUE','FALSE');
		self.Verification_DEA2Verified :=  if(inRec.VerificationInfo[1].DEA2Verified,'TRUE','FALSE');
		self.Verification_NCPDPNumberVerified :=  if(inRec.VerificationInfo[1].NCPDPNumberVerified,'TRUE','FALSE');
		self.Verification_LicenseValid :=  if(inRec.VerificationInfo[1].LicenseValid,'TRUE','FALSE');
		self.Verification_LicenseVerified :=  if(inRec.VerificationInfo[1].LicenseVerified,'TRUE','FALSE');
		self.Verification_License1Valid :=  if(inRec.VerificationInfo[1].License1Valid,'TRUE','FALSE');
		self.Verification_License1Verified :=  if(inRec.VerificationInfo[1].License1Verified,'TRUE','FALSE');
		self.Verification_License1ResultMatch :=  inRec.VerificationInfo[1].License1ResultMatch;
		self.Verification_License2Valid :=  if(inRec.VerificationInfo[1].License2Valid,'TRUE','FALSE');
		self.Verification_License2Verified :=  if(inRec.VerificationInfo[1].License2Verified,'TRUE','FALSE');
		self.Verification_License2ResultMatch :=  inRec.VerificationInfo[1].License2ResultMatch;
		self.Verification_License3Valid :=  if(inRec.VerificationInfo[1].License3Valid,'TRUE','FALSE');
		self.Verification_License3Verified :=  if(inRec.VerificationInfo[1].License3Verified,'TRUE','FALSE');
		self.Verification_License3ResultMatch :=  inRec.VerificationInfo[1].License3ResultMatch;
		self.Verification_License4Valid :=  if(inRec.VerificationInfo[1].License4Valid,'TRUE','FALSE');
		self.Verification_License4Verified :=  if(inRec.VerificationInfo[1].License4Verified,'TRUE','FALSE');
		self.Verification_License4ResultMatch :=  inRec.VerificationInfo[1].License4ResultMatch;
		self.Verification_License5Valid :=  if(inRec.VerificationInfo[1].License5Valid,'TRUE','FALSE');
		self.Verification_License5Verified :=  if(inRec.VerificationInfo[1].License5Verified,'TRUE','FALSE');
		self.Verification_License5ResultMatch :=  inRec.VerificationInfo[1].License5ResultMatch;
		self.Verification_License6Valid :=  if(inRec.VerificationInfo[1].License6Valid,'TRUE','FALSE');
		self.Verification_License6Verified :=  if(inRec.VerificationInfo[1].License6Verified,'TRUE','FALSE');
		self.Verification_License6ResultMatch :=  inRec.VerificationInfo[1].License6ResultMatch;
		self.Verification_License7Valid :=  if(inRec.VerificationInfo[1].License7Valid,'TRUE','FALSE');
		self.Verification_License7Verified :=  if(inRec.VerificationInfo[1].License7Verified,'TRUE','FALSE');
		self.Verification_License7ResultMatch :=  inRec.VerificationInfo[1].License7ResultMatch;
		self.Verification_License8Valid :=  if(inRec.VerificationInfo[1].License8Valid,'TRUE','FALSE');
		self.Verification_License8Verified :=  if(inRec.VerificationInfo[1].License8Verified,'TRUE','FALSE');
		self.Verification_License8ResultMatch :=  inRec.VerificationInfo[1].License8ResultMatch;
		self.Verification_License9Valid :=  if(inRec.VerificationInfo[1].License9Valid,'TRUE','FALSE');
		self.Verification_License9Verified :=  if(inRec.VerificationInfo[1].License9Verified,'TRUE','FALSE');
		self.Verification_License9ResultMatch :=  inRec.VerificationInfo[1].License9ResultMatch;
		self.Verification_License10Valid :=  if(inRec.VerificationInfo[1].License10Valid,'TRUE','FALSE');
		self.Verification_License10Verified :=  if(inRec.VerificationInfo[1].License10Verified,'TRUE','FALSE');
		self.Verification_License10ResultMatch :=  inRec.VerificationInfo[1].License10ResultMatch;
		self.Verification_TaxonomyVerified :=  if(inRec.VerificationInfo[1].TaxonomyVerified,'TRUE','FALSE');
		self.Verification_Taxonomy1Verified :=  if(inRec.VerificationInfo[1].Taxonomy1Verified,'TRUE','FALSE');
		self.Verification_Taxonomy2Verified :=  if(inRec.VerificationInfo[1].Taxonomy2Verified,'TRUE','FALSE');
		self.Verification_Taxonomy3Verified :=  if(inRec.VerificationInfo[1].Taxonomy3Verified,'TRUE','FALSE');
		self.Verification_Taxonomy4Verified :=  if(inRec.VerificationInfo[1].Taxonomy4Verified,'TRUE','FALSE');
		self.Verification_Taxonomy5Verified :=  if(inRec.VerificationInfo[1].Taxonomy5Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialtyVerified := if(inRec.VerificationInfo[1].BoardCertifiedSpecialtyVerified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialtyVerified := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialtyVerified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty1Verified := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty1Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty1Verified := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty1Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty2Verified := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty2Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty2Verified := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty2Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty3Verified := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty3Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty3Verified := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty3Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty4Verified := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty4Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty4Verified := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty4Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty5Verified := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty5Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty5Verified := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty5Verified,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialtyValid := if(inRec.VerificationInfo[1].BoardCertifiedSpecialtyValid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialtyValid := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialtyValid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty1Valid := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty1Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty1Valid := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty1Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty2Valid := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty2Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty2Valid := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty2Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty3Valid := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty3Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty3Valid := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty3Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty4Valid := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty4Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty4Valid := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty4Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSpecialty5Valid := if(inRec.VerificationInfo[1].BoardCertifiedSpecialty5Valid,'TRUE','FALSE');
		self.Verification_BoardCertifiedSubSpecialty5Valid := if(inRec.VerificationInfo[1].BoardCertifiedSubSpecialty5Valid,'TRUE','FALSE');
    self.hasoptout:=inrec.hasoptout;   
	  self := inRec;
		self := [];
	end; 
end;