EXPORT Score_FIWN12103_0_SSN(fullDebugOutput=FALSE,landingZoneIP='Constants.LandingZoneIP',lzFilePathFolder='\'/data/LUCI/FIWN12103_0_SSN/\'',
                    fileLayout='\'fiwn12103_0_ssn.z_layouts\'',CSVSprayFile='\'FIWN12103_0_SSN_luci_validationfile.csv\'',CSVSprayHeaderLine=1,CSVSpraySeparator='\'|\'',
                    CSVSprayQuote='\'"\'',isCSVFile=FALSE,preSprayed=FALSE,sprayedFile='\'\'',deSpray=TRUE,deSpraySuffix='\'\'') := FUNCTIONMACRO
 Score_Model := MODULE
    IMPORT STD;
    SHARED Constants := fiwn12103_0_ssn.Constants;
    SHARED Layouts := #EXPAND(fileLayout);
    SHARED FNValidation := fiwn12103_0_ssn.FNValidationWithRC;

    /******************************************************************************\
    |**************************Step 0 - Spray Input File***************************|
    \******************************************************************************/
    SHARED ModelName      := 'FIWN12103_0_SSN';
    SHARED lzFilePath     := lzFilePathFolder + CSVSprayFile;
    #IF(sprayedFile)
    SHARED SprayCSVName 	:= sprayedFile; // Will set up by user if test file is a logical file.
    #ELSE
    SHARED SprayCSVName   := '~fiwn12103_0_ssn::' + (STRING)STD.Date.Today() + '::' + ModelName +'_from_csv';
    #END
    #IF(~preSprayed)
    EXPORT inputFileSprayed := fiwn12103_0_ssn.FNSpray(landingZoneIP, lzFilePath, SprayCSVName, CSVSpraySeparator, CSVSprayQuote);
    #END
    /******************************************************************************\
    |**************************Step 1a - Load Input File***************************|
    \******************************************************************************/
    FNValidation.MAC_inputFile(SprayCSVName, RawInputSet0, Layouts.Input_Layout, CSVSprayHeaderLine, isCSVFile, CSVSpraySeparator, CSVSprayQuote, FALSE);
    EXPORT RawInputSet := PROJECT(RawInputSet0, TRANSFORM(Layouts.Input_Layouts, SELF.do_FIWN12103_0_SSN := TRUE, SELF := LEFT));
    EXPORT OutInputSet := OUTPUT(RawInputSet,,NAMED('RawInput'));

    /******************************************************************************\
    |**************************Step 2 - Score Model********************************|
    \******************************************************************************/
    #IF(fullDebugOutput)
    EXPORT LUCIresults := fiwn12103_0_ssn.AppendAll_Debug(RawInputSet,do_FIWN12103_0_SSN,ADDRCHANGEDISTANCE,ADDRCHANGEECONTRAJECTORY,ADDRESSTYPE,ASSOCCOUNT,ASSOCDISTANCECLOSEST,COMPONENTCHARRISKLEVEL,CORRELATIONADDRNAMECOUNT,CORRELATIONADDRPHONECOUNT,CORRELATIONPHONELASTNAMECOUNT,CORRELATIONSSNADDRCOUNT,CORRELATIONSSNNAMECOUNT,CURRADDRAGEOLDEST,CURRADDRLENOFRES,CURRADDRSTATUS,C_ID10_S1_UDOB,C_ID120_D1_UHP,C_ID1825_P1_NUMHPCELL,C_ID1825_S1_NUMHPCELL,C_ID3_S1_UDOB,C_N0_DX_AX_P0_ID1825_OD121_MR,C_N1_AX_PX_EX_ID120_LR,C_NX_A1_P1_EX_ID1825_OD121_MR,C_NX_A1_PX_EX_ID1825_OD121_LR,C_NX_AX_P0_EX_ID1095_OD121_MR,C_NX_AX_PX_E1_ID1825_OD121_LR,C_NX_AX_PX_EX_ID1095_OD121_LR,C_NX_AX_PX_EX_ID120_NUM,C_NX_AX_PX_EX_ID1825_OD121_NUM,C_NX_AX_PX_EX_ID365_OD121_LR,C_NX_D0_A0_PX_ID120_DEF,C_NX_D0_AX_P0_ID1095_OD121_LR,C_NX_D0_AX_PX_ID1095_OD121_MR,C_NX_D0_AX_PX_ID1825_OD121_LR,C_NX_D1_A1_PX_ID1825_OD121_LR,C_NX_DX_A0_PX_ID1095_OD121_LR,C_NX_DX_A0_PX_ID1095_OD121_MR,C_NX_DX_A0_PX_ID120_LR,C_NX_DX_A0_PX_ID1825_OD121_LR,C_NX_DX_A0_PX_ID1825_OD121_MR,C_NX_DX_AX_P0_ID1095_OD121_LR,C_NX_DX_AX_PX_ID1825_OD121_LR,C_NX_DX_AX_PX_ID1825_OD121_MR,C_S0_N0_AX_PX_ID1095_OD121_LR,C_S0_NX_AX_PX_ID120_MR,C_S0_NX_AX_PX_ID1825_OD121_MR,C_S0_NX_DX_P0_ID365_LR,C_S1_NX_AX_P0_ID1825_OD121_MR,C_S1_NX_AX_PX_ID1095_OD121_MR,C_S1_NX_D1_P1_IDANY_LR,C_S1_NX_D1_PX_ID730_LR,C_S1_NX_D1_PX_IDANY_LR,C_S1_NX_DX_P0_ID10_DEF,C_S1_NX_DX_P0_ID730_LR,C_S1_NX_DX_P1_ID730_LR,C_S1_NX_DX_P1_IDANY_LR,C_S1_NX_DX_PX_ID730_LR,C_SX_N0_AX_PX_ID1825_OD121_MR,C_SX_N0_DX_PX_ID730_LR,C_SX_N1_AX_PX_ID1095_OD121_LR,C_SX_N1_DX_PX_ID730_LR,C_SX_NX_A1_P1_ID1825_OD121_DEF,C_SX_NX_A1_PX_ID1095_OD121_LR,C_SX_NX_A1_PX_ID1095_OD121_MR,C_SX_NX_AX_P0_ID1825_OD121_MR,C_SX_NX_AX_PX_ID120_LR,C_SX_NX_AX_PX_ID120_MR,C_SX_NX_AX_PX_ID365_OD121_MR,C_SX_NX_D0_PX_ID365_LR,C_SX_NX_D1_P0_ID30_DEF,C_SX_NX_D1_P0_ID365_LR,C_SX_NX_D1_P1_IDANY_LR,C_SX_NX_D1_PX_IDANY_LR,C_SX_NX_DX_P0_ID730_LR,C_SX_NX_DX_P0_IDANY_LR,C_SX_NX_DX_P1_ID730_LR,C_SX_NX_DX_P1_IDANY_LR,C_SX_NX_DX_P1_IDANY_NUM,C_SX_NX_DX_PX_ID730_LR,C_SX_NX_DX_PX_ID730_NUM,C_SX_NX_DX_PX_IDANY_NUM,DIFFISYDOBNORMBYDEC,DIFFISYDOBNORMBYQUARTER,DIFFISYDOBNORMPERCENT,DIFFISYDOBVAL,DIVADDRIDENTITYCOUNT,DIVADDRIDENTITYMSOURCECOUNT,DIVADDRPHONECOUNT,DIVADDRSSNCOUNT,DIVSEARCHEMAILIDENTITYCT,DIVSSNADDRCOUNT,DIVSSNADDRMSOURCECOUNT,EMAILHOST,EMAILHOSTEXTENSION,EMAILLENGTH,EMAILNUMDIGIT,EMAILPERC2GRAMMATCHINLN,FRAUDA_CONFIRMEDFRAUD_NUM,FRAUDP_CONFIRMEDFRAUD_NUM,FRAUDS_CONFIRMEDFRAUD_NUM,HOMEPHONETYPE,IDENTITYAGEOLDEST,IDENTITYRECORDCOUNT,IDVERADDRCREDITBUREAUCOUNT,IDVERADDRESSASSOCCOUNT,IDVERADDRESSSOURCECOUNT,IDVERDOB,IDVERDOBSOURCECOUNT,IDVERRISKLEVEL,IDVERSSNBEST,IDVERSSNSOURCECOUNT,INPUTADDRAGENEWEST,INPUTADDRAGEOLDEST,INPUTADDRLENOFRES,INPUTPHONETYPE,IPAREACODE,NINPDISTHPHZIP,NINPHPHIPDIST,NINPHPHZIPFLAG,NINPZIPIPDISTDEF,PREVADDRAGEOLDEST,PREVADDRLENOFRES,PRIMARYPH3,PRIMARYPH4,SEARCHADDRSEARCHCOUNT,SEARCHBANKINGSEARCHCOUNT,SEARCHCOUNT,SEARCHFRAUDSEARCHCOUNT,SEARCHHIGHRISKSEARCHCOUNT,SEARCHNONBANKSEARCHCTRECENCY,SEARCHSSNBESTSEARCHCT,SEARCHSSNSEARCHCOUNT,SOURCECREDITBUREAU,SOURCECREDITBUREAUAGECHANGE,SOURCECREDITBUREAUAGEOLDEST,SOURCECREDITBUREAUFSAGE,SOURCEDRIVERSLICENSE,SOURCEPROPERTY,SOURCEPUBLICRECORDCOUNT,SOURCERISKLEVEL,SOURCETYPECREDENTIALAGEOLDEST,SOURCETYPEOTHERAGEOLDEST,SSN3,SSN5,SSNISSUESTATE,SSNISSUEYEAR,VALIDATIONPHONEPROBLEMS,VARIATIONADDRCHANGEAGE,VARIATIONLASTNAMECOUNT,ipaddr,ipaddrpop,iptype,phone_ver_bureau,rc_disthphoneaddr,truedid);
    #ELSE
    EXPORT LUCIresults := fiwn12103_0_ssn.AppendAll(RawInputSet,do_FIWN12103_0_SSN,ADDRCHANGEDISTANCE,ADDRCHANGEECONTRAJECTORY,ADDRESSTYPE,ASSOCCOUNT,ASSOCDISTANCECLOSEST,COMPONENTCHARRISKLEVEL,CORRELATIONADDRNAMECOUNT,CORRELATIONADDRPHONECOUNT,CORRELATIONPHONELASTNAMECOUNT,CORRELATIONSSNADDRCOUNT,CORRELATIONSSNNAMECOUNT,CURRADDRAGEOLDEST,CURRADDRLENOFRES,CURRADDRSTATUS,C_ID10_S1_UDOB,C_ID120_D1_UHP,C_ID1825_P1_NUMHPCELL,C_ID1825_S1_NUMHPCELL,C_ID3_S1_UDOB,C_N0_DX_AX_P0_ID1825_OD121_MR,C_N1_AX_PX_EX_ID120_LR,C_NX_A1_P1_EX_ID1825_OD121_MR,C_NX_A1_PX_EX_ID1825_OD121_LR,C_NX_AX_P0_EX_ID1095_OD121_MR,C_NX_AX_PX_E1_ID1825_OD121_LR,C_NX_AX_PX_EX_ID1095_OD121_LR,C_NX_AX_PX_EX_ID120_NUM,C_NX_AX_PX_EX_ID1825_OD121_NUM,C_NX_AX_PX_EX_ID365_OD121_LR,C_NX_D0_A0_PX_ID120_DEF,C_NX_D0_AX_P0_ID1095_OD121_LR,C_NX_D0_AX_PX_ID1095_OD121_MR,C_NX_D0_AX_PX_ID1825_OD121_LR,C_NX_D1_A1_PX_ID1825_OD121_LR,C_NX_DX_A0_PX_ID1095_OD121_LR,C_NX_DX_A0_PX_ID1095_OD121_MR,C_NX_DX_A0_PX_ID120_LR,C_NX_DX_A0_PX_ID1825_OD121_LR,C_NX_DX_A0_PX_ID1825_OD121_MR,C_NX_DX_AX_P0_ID1095_OD121_LR,C_NX_DX_AX_PX_ID1825_OD121_LR,C_NX_DX_AX_PX_ID1825_OD121_MR,C_S0_N0_AX_PX_ID1095_OD121_LR,C_S0_NX_AX_PX_ID120_MR,C_S0_NX_AX_PX_ID1825_OD121_MR,C_S0_NX_DX_P0_ID365_LR,C_S1_NX_AX_P0_ID1825_OD121_MR,C_S1_NX_AX_PX_ID1095_OD121_MR,C_S1_NX_D1_P1_IDANY_LR,C_S1_NX_D1_PX_ID730_LR,C_S1_NX_D1_PX_IDANY_LR,C_S1_NX_DX_P0_ID10_DEF,C_S1_NX_DX_P0_ID730_LR,C_S1_NX_DX_P1_ID730_LR,C_S1_NX_DX_P1_IDANY_LR,C_S1_NX_DX_PX_ID730_LR,C_SX_N0_AX_PX_ID1825_OD121_MR,C_SX_N0_DX_PX_ID730_LR,C_SX_N1_AX_PX_ID1095_OD121_LR,C_SX_N1_DX_PX_ID730_LR,C_SX_NX_A1_P1_ID1825_OD121_DEF,C_SX_NX_A1_PX_ID1095_OD121_LR,C_SX_NX_A1_PX_ID1095_OD121_MR,C_SX_NX_AX_P0_ID1825_OD121_MR,C_SX_NX_AX_PX_ID120_LR,C_SX_NX_AX_PX_ID120_MR,C_SX_NX_AX_PX_ID365_OD121_MR,C_SX_NX_D0_PX_ID365_LR,C_SX_NX_D1_P0_ID30_DEF,C_SX_NX_D1_P0_ID365_LR,C_SX_NX_D1_P1_IDANY_LR,C_SX_NX_D1_PX_IDANY_LR,C_SX_NX_DX_P0_ID730_LR,C_SX_NX_DX_P0_IDANY_LR,C_SX_NX_DX_P1_ID730_LR,C_SX_NX_DX_P1_IDANY_LR,C_SX_NX_DX_P1_IDANY_NUM,C_SX_NX_DX_PX_ID730_LR,C_SX_NX_DX_PX_ID730_NUM,C_SX_NX_DX_PX_IDANY_NUM,DIFFISYDOBNORMBYDEC,DIFFISYDOBNORMBYQUARTER,DIFFISYDOBNORMPERCENT,DIFFISYDOBVAL,DIVADDRIDENTITYCOUNT,DIVADDRIDENTITYMSOURCECOUNT,DIVADDRPHONECOUNT,DIVADDRSSNCOUNT,DIVSEARCHEMAILIDENTITYCT,DIVSSNADDRCOUNT,DIVSSNADDRMSOURCECOUNT,EMAILHOST,EMAILHOSTEXTENSION,EMAILLENGTH,EMAILNUMDIGIT,EMAILPERC2GRAMMATCHINLN,FRAUDA_CONFIRMEDFRAUD_NUM,FRAUDP_CONFIRMEDFRAUD_NUM,FRAUDS_CONFIRMEDFRAUD_NUM,HOMEPHONETYPE,IDENTITYAGEOLDEST,IDENTITYRECORDCOUNT,IDVERADDRCREDITBUREAUCOUNT,IDVERADDRESSASSOCCOUNT,IDVERADDRESSSOURCECOUNT,IDVERDOB,IDVERDOBSOURCECOUNT,IDVERRISKLEVEL,IDVERSSNBEST,IDVERSSNSOURCECOUNT,INPUTADDRAGENEWEST,INPUTADDRAGEOLDEST,INPUTADDRLENOFRES,INPUTPHONETYPE,IPAREACODE,NINPDISTHPHZIP,NINPHPHIPDIST,NINPHPHZIPFLAG,NINPZIPIPDISTDEF,PREVADDRAGEOLDEST,PREVADDRLENOFRES,PRIMARYPH3,PRIMARYPH4,SEARCHADDRSEARCHCOUNT,SEARCHBANKINGSEARCHCOUNT,SEARCHCOUNT,SEARCHFRAUDSEARCHCOUNT,SEARCHHIGHRISKSEARCHCOUNT,SEARCHNONBANKSEARCHCTRECENCY,SEARCHSSNBESTSEARCHCT,SEARCHSSNSEARCHCOUNT,SOURCECREDITBUREAU,SOURCECREDITBUREAUAGECHANGE,SOURCECREDITBUREAUAGEOLDEST,SOURCECREDITBUREAUFSAGE,SOURCEDRIVERSLICENSE,SOURCEPROPERTY,SOURCEPUBLICRECORDCOUNT,SOURCERISKLEVEL,SOURCETYPECREDENTIALAGEOLDEST,SOURCETYPEOTHERAGEOLDEST,SSN3,SSN5,SSNISSUESTATE,SSNISSUEYEAR,VALIDATIONPHONEPROBLEMS,VARIATIONADDRCHANGEAGE,VARIATIONLASTNAMECOUNT,ipaddr,ipaddrpop,iptype,phone_ver_bureau,rc_disthphoneaddr,truedid);
    #END
    EXPORT OutResultSet := OUTPUT(CHOOSEN(LUCIresults, 100), NAMED('LUCIResults'));

    /******************************************************************************\
    |**************************Step 3 - Transform Results**************************|
    \******************************************************************************/
    #IF(deSpray)
    flatRCLayout := RECORD
        RECORDOF(LUCIresults) AND NOT [FIWN12103_0_SSN_Reasons #IF(fullDebugOutput), FIWN12103_0_SSN_OVERALL_Reasons #END];
        #IF(fullDebugOutput)
        STRING5 FIWN12103_0_SSN_OVERALL_Reason_1;
        STRING5 FIWN12103_0_SSN_OVERALL_Reason_2;
        STRING5 FIWN12103_0_SSN_OVERALL_Reason_3;
        STRING5 FIWN12103_0_SSN_OVERALL_Reason_4;
        STRING5 FIWN12103_0_SSN_OVERALL_Reason_5;
        STRING5 FIWN12103_0_SSN_OVERALL_Reason_6;

        #END
        STRING5 FIWN12103_0_SSN_Reason_1;
        STRING5 FIWN12103_0_SSN_Reason_2;
        STRING5 FIWN12103_0_SSN_Reason_3;
        STRING5 FIWN12103_0_SSN_Reason_4;
        STRING5 FIWN12103_0_SSN_Reason_5;
        STRING5 FIWN12103_0_SSN_Reason_6;

    END;

    flatRCLayout flattenRCs(LUCIresults le) := TRANSFORM
        #IF(fullDebugOutput)
        SELF.FIWN12103_0_SSN_OVERALL_Reason_1 := le.FIWN12103_0_SSN_OVERALL_Reasons[1];
        SELF.FIWN12103_0_SSN_OVERALL_Reason_2 := le.FIWN12103_0_SSN_OVERALL_Reasons[2];
        SELF.FIWN12103_0_SSN_OVERALL_Reason_3 := le.FIWN12103_0_SSN_OVERALL_Reasons[3];
        SELF.FIWN12103_0_SSN_OVERALL_Reason_4 := le.FIWN12103_0_SSN_OVERALL_Reasons[4];
        SELF.FIWN12103_0_SSN_OVERALL_Reason_5 := le.FIWN12103_0_SSN_OVERALL_Reasons[5];
        SELF.FIWN12103_0_SSN_OVERALL_Reason_6 := le.FIWN12103_0_SSN_OVERALL_Reasons[6];

        #END
        SELF.FIWN12103_0_SSN_Reason_1 := le.FIWN12103_0_SSN_Reasons[1];
        SELF.FIWN12103_0_SSN_Reason_2 := le.FIWN12103_0_SSN_Reasons[2];
        SELF.FIWN12103_0_SSN_Reason_3 := le.FIWN12103_0_SSN_Reasons[3];
        SELF.FIWN12103_0_SSN_Reason_4 := le.FIWN12103_0_SSN_Reasons[4];
        SELF.FIWN12103_0_SSN_Reason_5 := le.FIWN12103_0_SSN_Reasons[5];
        SELF.FIWN12103_0_SSN_Reason_6 := le.FIWN12103_0_SSN_Reasons[6];

        SELF := le;
    END;

    EXPORT LUCIresultsFlat := PROJECT(LUCIresults, flattenRCs(LEFT));
    EXPORT OutResultFlatSet := OUTPUT(CHOOSEN(LUCIresultsFlat, 100), NAMED('LUCIResultsFlat'));
    #END
    #IF(deSpray)
    /******************************************************************************\
    |*************************Step5 - Despray the Results**************************|
    \******************************************************************************/
    dateString := (STRING)STD.Date.Today() + ''; //CYNDY: Using " + '' " to control version
    TempLogical(String LogicalName) := LogicalName + WORKUNIT;
    desprayName(STRING desprayNamePre) := desprayNamePre + dateString + deSpraySuffix + '.csv';
    lzDesprayFilePath(STRING desprayNamePre) := lzFilePathFolder + desprayName(desprayNamePre);
    DesprayLUCIResult := fiwn12103_0_ssn.FNDesprayCSV(LUCIresultsFlat, TempLogical('~LUCI::ScoreResultsFile::' + ModelName), LandingZoneIP, lzDesprayFilePath('LUCI_' + ModelName + '_ScoreResultsFile'));
    #END

    EXPORT runScore := SEQUENTIAL(
                                #IF(~preSprayed) inputFileSprayed, #END
    							OutInputSet
    							,OutResultSet
    							#IF(deSpray), OutResultFlatSet, DesprayLUCIResult #END);
 END;
 RETURN Score_Model;
ENDMACRO;
