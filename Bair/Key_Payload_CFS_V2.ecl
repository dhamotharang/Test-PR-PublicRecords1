import Data_Services;

r := RECORD
	string23 eid;
  string30 event_number;
  string30 report_number;
  unsigned4 initial_ucr_group;
  unsigned4 final_ucr_group;
  string100 address;
  string10 inc_prim_range;
  string2 inc_predir;
  string28 inc_prim_name;
  string4 inc_addr_suffix;
  string2 inc_postdir;
  string10 inc_unit_desig;
  string8 inc_sec_range;
  string25 inc_p_city_name;
  string2 inc_st;
  string5 inc_z5;
  string4 inc_zip4;
  string20 apartment_number;
  string25 city;
  real8 x_coordinate;
  real8 y_coordinate;
  string1 geocoded;
  unsigned1 accuracy_code;
  string20 accuracy;
  string65 place_name;
  string60 location_type;
  string30 district;
  string30 beat;
  string30 rd;
  string35 how_received;
  string50 initial_type;
  string50 final_type;
  string30 disposition;
  string30 priority1;
  string25 date_occurred;
  string25 date_time_received;
  string25 edit_date;
  string25 date_time_archived;
  string30 incident_code;
  string1 report_flag;
  string50 event_relationship;
  string30 call_taker;
  string35 contacting_officer;
  real8 total_minutes_on_call;
  string70 status;
  unsigned4 data_provider_id;
  string10 data_provider_ori;
  string70 data_provider_name;
  unsigned8 lexid;
  string50 complainant;
  string100 complainant_address;
  string100 caller_address;
  string30 current_phone;
  real8 complainant_x_coordinate;
  real8 complainant_y_coordinate;
  string1 complainant_geocoded;
  unsigned1 complainant_accuracy;
  string incident_progress;
END;

d:=dataset([],r);

EXPORT Key_Payload_CFS_V2(string v = 'qa', boolean isDelta = false) := index(d,{eid},{d},data_services.Data_location.Prefix('BAIR')+'thor_data400::key::bair::cfs::v2::' + if(isDelta, 'delta::', '') + v + '::eid', OPT);