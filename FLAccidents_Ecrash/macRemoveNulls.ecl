export macRemoveNulls(infile,outfile) := macro
import STD;
#uniquename(trecs)

infile %trecs%(infile L) := transform
self.Citation_ID:= if(STD.Str.ToUpperCase(trim(L.Citation_ID,left,right))='NULL','',L.Citation_ID);
self.Creation_Date:= if(STD.Str.ToUpperCase(trim(L.Creation_Date,left,right))='NULL','',L.Creation_Date);
self.Incident_ID:= if(STD.Str.ToUpperCase(trim(L.Incident_ID,left,right))='NULL','',L.Incident_ID);
self.Citation_Issued:= if(STD.Str.ToUpperCase(trim(L.Citation_Issued,left,right))='NULL','',L.Citation_Issued);
self.Citation_Number1:= if(STD.Str.ToUpperCase(trim(L.Citation_Number1,left,right))='NULL','',L.Citation_Number1);
self.Citation_Number2:= if(STD.Str.ToUpperCase(trim(L.Citation_Number2,left,right))='NULL','',L.Citation_Number2);
self.Section_Number1:= if(STD.Str.ToUpperCase(trim(L.Section_Number1,left,right))='NULL','',L.Section_Number1);
self.Court_Date:= if(STD.Str.ToUpperCase(trim(L.Court_Date,left,right))='NULL','',L.Court_Date);
self.Court_Time:= if(STD.Str.ToUpperCase(trim(L.Court_Time,left,right))='NULL','',L.Court_Time);
self.Citation_Detail1:= if(STD.Str.ToUpperCase(trim(L.Citation_Detail1,left,right))='NULL','',L.Citation_Detail1);
self.Local_Code:= map(STD.Str.ToUpperCase(trim(L.Local_Code,left,right))='NULL' => '',L.Local_Code='NUL' => '',L.Local_Code);
self.Violation_Code1:= if(STD.Str.ToUpperCase(trim(L.Violation_Code1,left,right))='NULL','',L.Violation_Code1);
self.Violation_Code2:= if(STD.Str.ToUpperCase(trim(L.Violation_Code2,left,right))='NULL','',L.Violation_Code2);
self.Multiple_Charges_Indicator:= if(STD.Str.ToUpperCase(trim(L.Multiple_Charges_Indicator,left,right))='NULL','',L.Multiple_Charges_Indicator);
self.DUI_Indicator:= if(STD.Str.ToUpperCase(trim(L.DUI_Indicator,left,right))='NULL','',L.DUI_Indicator);
self.Commercial_ID:= if(STD.Str.ToUpperCase(trim(L.Commercial_ID,left,right))='NULL','',L.Commercial_ID);
self.Vehicle_ID:= if(STD.Str.ToUpperCase(trim(L.Vehicle_ID,left,right))='NULL','',L.Vehicle_ID);
self.Commercial_Info_Source:= map(STD.Str.ToUpperCase(trim(L.Commercial_Info_Source))='Not Applicable' => '',L.Commercial_Info_Source='NULL' => '',L.Commercial_Info_Source);
self.Commercial_Vehicle_Type:= if(STD.Str.ToUpperCase(trim(L.Commercial_Vehicle_Type,left,right))='NULL','',L.Commercial_Vehicle_Type);
self.Motor_Carrier_ID_DOT_Number:= if(STD.Str.ToUpperCase(trim(L.Motor_Carrier_ID_DOT_Number,left,right))='NULL','',L.Motor_Carrier_ID_DOT_Number);
self.Motor_Carrier_ID_State_ID:= if(STD.Str.ToUpperCase(trim(L.Motor_Carrier_ID_State_ID,left,right))='NULL','',L.Motor_Carrier_ID_State_ID);
self.Motor_Carrier_ID_Carrier_Name:= if(STD.Str.ToUpperCase(trim(L.Motor_Carrier_ID_Carrier_Name,left,right))='NULL','',L.Motor_Carrier_ID_Carrier_Name);
self.Motor_Carrier_ID_Address:= if(STD.Str.ToUpperCase(trim(L.Motor_Carrier_ID_Address,left,right))='NULL','',L.Motor_Carrier_ID_Address);
self.Motor_Carrier_ID_City:= if(STD.Str.ToUpperCase(trim(L.Motor_Carrier_ID_City,left,right))='NULL','',L.Motor_Carrier_ID_City);
self.Motor_Carrier_ID_State:= if(STD.Str.ToUpperCase(trim(L.Motor_Carrier_ID_State,left,right))='NU','',L.Motor_Carrier_ID_State);
self.Motor_Carrier_ID_Zipcode:= if(STD.Str.ToUpperCase(trim(L.Motor_Carrier_ID_Zipcode,left,right))='NULL','',L.Motor_Carrier_ID_Zipcode);
self.Motor_Carrier_ID_Commercial_Indicator:= if(STD.Str.ToUpperCase(trim(L.Motor_Carrier_ID_Commercial_Indicator,left,right))='NULL','',L.Motor_Carrier_ID_Commercial_Indicator);
self.Carrier_ID_Type:= if(STD.Str.ToUpperCase(trim(L.Carrier_ID_Type,left,right))='NULL','',L.Carrier_ID_Type);
self.Carrier_Unit_Number:= if(STD.Str.ToUpperCase(trim(L.Carrier_Unit_Number,left,right))='NULL','',L.Carrier_Unit_Number);
self.DOT_Permit_Number:= if(STD.Str.ToUpperCase(trim(L.DOT_Permit_Number,left,right))='NULL','',L.DOT_Permit_Number);
self.ICCMC_Number:= if(STD.Str.ToUpperCase(trim(L.ICCMC_Number,left,right))='NULL','',L.ICCMC_Number);
self.MCS_Vehicle_Inspection:= if(STD.Str.ToUpperCase(trim(L.MCS_Vehicle_Inspection,left,right))='NULL','',L.MCS_Vehicle_Inspection);
self.MCS_Form_Number:= if(STD.Str.ToUpperCase(trim(L.MCS_Form_Number,left,right))='NULL','',L.MCS_Form_Number);
self.MCS_Out_of_Service:= if(STD.Str.ToUpperCase(trim(L.MCS_Out_of_Service,left,right))='NULL','',L.MCS_Out_of_Service);
self.MCS_Violation_Related:= if(STD.Str.ToUpperCase(trim(L.MCS_Violation_Related,left,right))='NULL','',L.MCS_Violation_Related);
self.Number_of_Axles:= if(STD.Str.ToUpperCase(trim(L.Number_of_Axles,left,right))='N','',L.Number_of_Axles);
self.Number_of_Tires:= if(STD.Str.ToUpperCase(trim(L.Number_of_Tires,left,right))='NU','',L.Number_of_Tires);
self.GVW_Over_10K_Pounds:= if(STD.Str.ToUpperCase(trim(L.GVW_Over_10K_Pounds,left,right))='NULL','',L.GVW_Over_10K_Pounds);
self.Weight_Rating:= if(STD.Str.ToUpperCase(trim(L.Weight_Rating,left,right))='NULL','',L.Weight_Rating);
self.Registered_Gross_Vehicle_Weight:= if(STD.Str.ToUpperCase(trim(L.Registered_Gross_Vehicle_Weight,left,right))='NULL','',L.Registered_Gross_Vehicle_Weight);
self.Vehicle_Length_Feet:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Length_Feet,left,right))='NUL','',L.Vehicle_Length_Feet);
self.Cargo_Body_Type:= if(STD.Str.ToUpperCase(trim(L.Cargo_Body_Type,left,right))='NULL','',L.Cargo_Body_Type);
self.Load_Type:= if(STD.Str.ToUpperCase(trim(L.Load_Type,left,right))='NULL','',L.Load_Type);
self.Oversize_Load:= if(STD.Str.ToUpperCase(trim(L.Oversize_Load,left,right))='NULL','',L.Oversize_Load);
self.Vehicle_Configuration:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Configuration,left,right))='NULL','',L.Vehicle_Configuration);
self.Trailer1_Type:= if(STD.Str.ToUpperCase(trim(L.Trailer1_Type,left,right))='NULL','',L.Trailer1_Type);
self.Trailer1_Length_Feet:= if(STD.Str.ToUpperCase(trim(L.Trailer1_Length_Feet,left,right))='NUL','',L.Trailer1_Length_Feet);
self.Trailer1_Width_Feet:= if(STD.Str.ToUpperCase(trim(L.Trailer1_Width_Feet,left,right))='NU','',L.Trailer1_Width_Feet);
self.Trailer2_Type:= if(STD.Str.ToUpperCase(trim(L.Trailer2_Type,left,right))='NULL','',L.Trailer2_Type);
self.Trailer2_Length_Feet:= if(STD.Str.ToUpperCase(trim(L.Trailer2_Length_Feet,left,right))='NUL','',L.Trailer2_Length_Feet);
self.Trailer2_Width_Feet:= if(STD.Str.ToUpperCase(trim(L.Trailer2_Width_Feet,left,right))='NU','',L.Trailer2_Width_Feet);
self.Federally_Reportable:= if(STD.Str.ToUpperCase(trim(L.Federally_Reportable,left,right))='NULL','',L.Federally_Reportable);
self.Vehicle_Inspection_Hazmat:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Inspection_Hazmat,left,right))='NULL','',L.Vehicle_Inspection_Hazmat);
self.Hazmat_Form_Number:= if(STD.Str.ToUpperCase(trim(L.Hazmat_Form_Number,left,right))='NULL','',L.Hazmat_Form_Number);
self.Hazmt_Out_of_Service:= if(STD.Str.ToUpperCase(trim(L.Hazmt_Out_of_Service,left,right))='NULL','',L.Hazmt_Out_of_Service);
self.Hazmat_Violation_Related:= if(STD.Str.ToUpperCase(trim(L.Hazmat_Violation_Related,left,right))='NULL','',L.Hazmat_Violation_Related);
self.Hazardous_Materials_Placard:= if(STD.Str.ToUpperCase(trim(L.Hazardous_Materials_Placard,left,right))='NULL','',L.Hazardous_Materials_Placard);
self.Hazardous_Materials_Class_Number1:= if(STD.Str.ToUpperCase(trim(L.Hazardous_Materials_Class_Number1,left,right))='N','',L.Hazardous_Materials_Class_Number1);
self.Hazardous_Materials_Class_Number2:= if(STD.Str.ToUpperCase(trim(L.Hazardous_Materials_Class_Number2,left,right))='N','',L.Hazardous_Materials_Class_Number2);
self.Hazmat_Placard_Name:= if(STD.Str.ToUpperCase(trim(L.Hazmat_Placard_Name,left,right))='NULL','',L.Hazmat_Placard_Name);
self.Hazardous_Materials_Released1:= if(STD.Str.ToUpperCase(trim(L.Hazardous_Materials_Released1,left,right))='NULL','',L.Hazardous_Materials_Released1);
self.Hazardous_Materials_Released2:= if(STD.Str.ToUpperCase(trim(L.Hazardous_Materials_Released2,left,right))='NULL','',L.Hazardous_Materials_Released2);
self.Hazardous_Materials_Released3:= if(STD.Str.ToUpperCase(trim(L.Hazardous_Materials_Released3,left,right))='NULL','',L.Hazardous_Materials_Released3);
self.Hazardous_Materials_Released4:= if(STD.Str.ToUpperCase(trim(L.Hazardous_Materials_Released4,left,right))='NULL','',L.Hazardous_Materials_Released4);
self.Commercial_Event1:= if(STD.Str.ToUpperCase(trim(L.Commercial_Event1,left,right))='NULL','',L.Commercial_Event1);
self.Commercial_Event2:= if(STD.Str.ToUpperCase(trim(L.Commercial_Event2,left,right))='NULL','',L.Commercial_Event2);
self.Commercial_Event3:= if(STD.Str.ToUpperCase(trim(L.Commercial_Event3,left,right))='NULL','',L.Commercial_Event3);
self.Commercial_Event4:= if(STD.Str.ToUpperCase(trim(L.Commercial_Event4,left,right))='NULL','',L.Commercial_Event4);
self.Recommended_Driver_Reexam:= if(STD.Str.ToUpperCase(trim(L.Recommended_Driver_Reexam,left,right))='NULL','',L.Recommended_Driver_Reexam);
self.Transporting_HazMat:= if(STD.Str.ToUpperCase(trim(L.Transporting_HazMat,left,right))='NUL','',L.Transporting_HazMat);
self.Liquid_HazMat_Volume:= if(STD.Str.ToUpperCase(trim(L.Liquid_HazMat_Volume,left,right))='NULL','',L.Liquid_HazMat_Volume);
self.Oversize_Vehicle:= if(STD.Str.ToUpperCase(trim(L.Oversize_Vehicle,left,right))='NUL','',L.Oversize_Vehicle);
self.Overlength_Vehicle:= if(STD.Str.ToUpperCase(trim(L.Overlength_Vehicle,left,right))='NUL','',L.Overlength_Vehicle);
self.Oversize_Vehicle_Permitted:= if(STD.Str.ToUpperCase(trim(L.Oversize_Vehicle_Permitted,left,right))='NUL','',L.Oversize_Vehicle_Permitted);
self.Overlength_Vehicle_Permitted:= if(STD.Str.ToUpperCase(trim(L.Overlength_Vehicle_Permitted,left,right))='NUL','',L.Overlength_Vehicle_Permitted);
self.Carrier_Phone_Number:= if(STD.Str.ToUpperCase(trim(L.Carrier_Phone_Number,left,right))='NULL','',L.Carrier_Phone_Number);
self.Commerce_Type:= if(STD.Str.ToUpperCase(trim(L.Commerce_Type,left,right))='NULL','',L.Commerce_Type);
self.Citation_Issued_to_Vehicle:= if(STD.Str.ToUpperCase(trim(L.Citation_Issued_to_Vehicle,left,right))='NUL','',L.Citation_Issued_to_Vehicle);
self.CDL_Class:= if(STD.Str.ToUpperCase(trim(L.CDL_Class,left,right))='NULL','',L.CDL_Class);
self.DOT_State:= if(STD.Str.ToUpperCase(trim(L.DOT_State,left,right))='NU','',L.DOT_State);
self.Fire_Hazardous_Materials_Involvement:= if(STD.Str.ToUpperCase(trim(L.Fire_Hazardous_Materials_Involvement,left,right))='NULL','',L.Fire_Hazardous_Materials_Involvement);
self.Commercial_Event_Description:= if(STD.Str.ToUpperCase(trim(L.Commercial_Event_Description,left,right))='NULL','',L.Commercial_Event_Description);
self.Supplment_Required_Hazmat_Placard:= if(STD.Str.ToUpperCase(trim(L.Supplment_Required_Hazmat_Placard,left,right))='NULL','',L.Supplment_Required_Hazmat_Placard);
self.Other_State_Number1:= if(STD.Str.ToUpperCase(trim(L.Other_State_Number1,left,right))='NULL','',L.Other_State_Number1);
self.Other_State_Number2:= if(STD.Str.ToUpperCase(trim(L.Other_State_Number2,left,right))='NULL','',L.Other_State_Number2);
self.Work_Type_ID:= if(STD.Str.ToUpperCase(trim(L.Work_Type_ID,left,right))='NULL','',L.Work_Type_ID);
self.Report_ID:= if(STD.Str.ToUpperCase(trim(L.Report_ID,left,right))='NULL','',L.Report_ID);
self.Agency_ID:= if(STD.Str.ToUpperCase(trim(L.Agency_ID,left,right))='NULL','',L.Agency_ID);
self.Sent_to_HPCC_DateTime:= if(STD.Str.ToUpperCase(trim(L.Sent_to_HPCC_DateTime,left,right))='NULL','',L.Sent_to_HPCC_DateTime);
self.Corrected_Incident:= if(STD.Str.ToUpperCase(trim(L.Corrected_Incident,left,right))='NULL','',L.Corrected_Incident);
self.CRU_Order_ID:= if(STD.Str.ToUpperCase(trim(L.CRU_Order_ID,left,right))='NULL','',L.CRU_Order_ID);
self.CRU_Sequence_Nbr:= if(STD.Str.ToUpperCase(trim(L.CRU_Sequence_Nbr,left,right))='N','',L.CRU_Sequence_Nbr);
self.Loss_State_Abbr:= if(STD.Str.ToUpperCase(trim(L.Loss_State_Abbr,left,right))='NU','',L.Loss_State_Abbr);
self.Report_Type_ID:= if(STD.Str.ToUpperCase(trim(L.Report_Type_ID,left,right))='NUL','',L.Report_Type_ID);
self.Hash_Key:= if(STD.Str.ToUpperCase(trim(L.Hash_Key,left,right))='NULL','',L.Hash_Key);
self.Case_Identifier:= if(STD.Str.ToUpperCase(trim(L.Case_Identifier,left,right))='NULL','',L.Case_Identifier);
self.Crash_County:= if(STD.Str.ToUpperCase(trim(L.Crash_County,left,right))='NULL','',L.Crash_County);
self.County_Cd:= if(STD.Str.ToUpperCase(trim(L.County_Cd,left,right))='NULL','',L.County_Cd);
self.Crash_CityPlace:= if(STD.Str.ToUpperCase(trim(L.Crash_CityPlace,left,right))='NULL','',L.Crash_CityPlace);
self.Crash_City:= if(STD.Str.ToUpperCase(trim(L.Crash_City,left,right))='NULL','',L.Crash_City);
self.City_Code:= if(STD.Str.ToUpperCase(trim(L.City_Code,left,right))='NULL','',L.City_Code);
self.First_Harmful_Event:= if(STD.Str.ToUpperCase(trim(L.First_Harmful_Event,left,right))='NULL','',L.First_Harmful_Event);
self.First_Harmful_Event_Location:= if(STD.Str.ToUpperCase(trim(L.First_Harmful_Event_Location,left,right))='NULL','',L.First_Harmful_Event_Location);
self.Manner_Crash_Impact1:= if(STD.Str.ToUpperCase(trim(L.Manner_Crash_Impact1,left,right))='NULL','',L.Manner_Crash_Impact1);
self.Weather_Condition1:= if(STD.Str.ToUpperCase(trim(L.Weather_Condition1,left,right))='NULL','',L.Weather_Condition1);
self.Weather_Condition2:= if(STD.Str.ToUpperCase(trim(L.Weather_Condition2,left,right))='NULL','',L.Weather_Condition2);
self.Light_Condition1:= if(STD.Str.ToUpperCase(trim(L.Light_Condition1,left,right))='NULL','',L.Light_Condition1);
self.Light_Condition2:= if(STD.Str.ToUpperCase(trim(L.Light_Condition2,left,right))='NULL','',L.Light_Condition2);
self.Road_Surface_Condition:= if(STD.Str.ToUpperCase(trim(L.Road_Surface_Condition,left,right))='NULL','',L.Road_Surface_Condition);
self.Contributing_Circumstances_Environmental1:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Environmental1,left,right))='NULL','',L.Contributing_Circumstances_Environmental1);
self.Contributing_Circumstances_Environmental2:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Environmental2,left,right))='NULL','',L.Contributing_Circumstances_Environmental2);
self.Contributing_Circumstances_Environmental3:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Environmental3,left,right))='NULL','',L.Contributing_Circumstances_Environmental3);
self.Contributing_Circumstances_Environmental4:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Environmental4,left,right))='NULL','',L.Contributing_Circumstances_Environmental4);
self.Contributing_Circumstances_Road1:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Road1,left,right))='NULL','',L.Contributing_Circumstances_Road1);
self.Contributing_Circumstances_Road2:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Road2,left,right))='NULL','',L.Contributing_Circumstances_Road2);
self.Contributing_Circumstances_Road3:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Road3,left,right))='NULL','',L.Contributing_Circumstances_Road3);
self.Contributing_Circumstances_Road4:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Road4,left,right))='NULL','',L.Contributing_Circumstances_Road4);
self.Relation_to_Junction:= if(STD.Str.ToUpperCase(trim(L.Relation_to_Junction,left,right))='NULL','',L.Relation_to_Junction);
self.Intersection_Type:= if(STD.Str.ToUpperCase(trim(L.Intersection_Type,left,right))='NULL','',L.Intersection_Type);
self.School_Bus_Related:= if(STD.Str.ToUpperCase(trim(L.School_Bus_Related,left,right))='NULL','',L.School_Bus_Related);
self.Work_Zone_Related:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Related,left,right))='NULL','',L.Work_Zone_Related);
self.Work_Zone_Location:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Location,left,right))='NULL','',L.Work_Zone_Location);
self.Work_Zone_Type:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Type,left,right))='NULL','',L.Work_Zone_Type);
self.Work_Zone_Workers_Present:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Workers_Present,left,right))='NULL','',L.Work_Zone_Workers_Present);
self.Work_Zone_Law_Enforcement_Present:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Law_Enforcement_Present,left,right))='NULL','',L.Work_Zone_Law_Enforcement_Present);
self.Crash_Severity:= if(STD.Str.ToUpperCase(trim(L.Crash_Severity,left,right))='NULL','',L.Crash_Severity);
self.Number_of_Vehicles:= if(STD.Str.ToUpperCase(trim(L.Number_of_Vehicles,left,right))='NUL','',L.Number_of_Vehicles);
self.Total_Nonfatal_Injuries:= if(STD.Str.ToUpperCase(trim(L.Total_Nonfatal_Injuries,left,right))='NUL','',L.Total_Nonfatal_Injuries);
self.Total_Fatal_Injuries:= if(STD.Str.ToUpperCase(trim(L.Total_Fatal_Injuries,left,right))='NUL','',L.Total_Fatal_Injuries);
self.Day_of_Week:= if(STD.Str.ToUpperCase(trim(L.Day_of_Week,left,right))='NULL','',L.Day_of_Week);
self.Roadway_Curvature:= if(STD.Str.ToUpperCase(trim(L.Roadway_Curvature,left,right))='NULL','',L.Roadway_Curvature);
self.Part_of_National_Highway_System:= if(STD.Str.ToUpperCase(trim(L.Part_of_National_Highway_System,left,right))='NULL','',L.Part_of_National_Highway_System);
self.Roadway_Functional_Class:= if(STD.Str.ToUpperCase(trim(L.Roadway_Functional_Class,left,right))='NULL','',L.Roadway_Functional_Class);
self.Access_Control:= if(STD.Str.ToUpperCase(trim(L.Access_Control,left,right))='NULL','',L.Access_Control);
self.RR_Crossing_ID:= if(STD.Str.ToUpperCase(trim(L.RR_Crossing_ID,left,right))='NULL','',L.RR_Crossing_ID);
self.Roadway_Lighting:= if(STD.Str.ToUpperCase(trim(L.Roadway_Lighting,left,right))='NULL','',L.Roadway_Lighting);
self.Traffic_Control_Type_at_Intersection1:= if(STD.Str.ToUpperCase(trim(L.Traffic_Control_Type_at_Intersection1,left,right))='NULL','',L.Traffic_Control_Type_at_Intersection1);
self.Traffic_Control_Type_at_Intersection2:= if(STD.Str.ToUpperCase(trim(L.Traffic_Control_Type_at_Intersection2,left,right))='NULL','',L.Traffic_Control_Type_at_Intersection2);
self.NCIC_Number:= if(STD.Str.ToUpperCase(trim(L.NCIC_Number,left,right))='NULL','',L.NCIC_Number);
self.State_Report_Number:= if(trim(L.State_Report_Number,left,right)='NULL','',L.State_Report_Number);
self.ORI_Number:= if(STD.Str.ToUpperCase(trim(L.ORI_Number,left,right))='NULL','',L.ORI_Number);
self.Crash_Date:= if(STD.Str.ToUpperCase(trim(L.Crash_Date,left,right))='NULL','',L.Crash_Date);
self.Crash_Time:= if(STD.Str.ToUpperCase(trim(L.Crash_Time,left,right))='NULL','',L.Crash_Time);
self.Lattitude:= if(STD.Str.ToUpperCase(trim(L.Lattitude,left,right))='NULL','',L.Lattitude);
self.Longitude:= if(STD.Str.ToUpperCase(trim(L.Longitude,left,right))='NULL','',L.Longitude);
self.Milepost1:= if(STD.Str.ToUpperCase(trim(L.Milepost1,left,right))='NULL','',L.Milepost1);
self.Milepost2:= if(STD.Str.ToUpperCase(trim(L.Milepost2,left,right))='NULL','',L.Milepost2);
self.Address_Number:= if(STD.Str.ToUpperCase(trim(L.Address_Number,left,right))='NULL','',L.Address_Number);
self.Loss_Street:= if(STD.Str.ToUpperCase(trim(L.Loss_Street,left,right))='NULL','',L.Loss_Street);
self.Loss_Street_Route_Number:= if(STD.Str.ToUpperCase(trim(L.Loss_Street_Route_Number,left,right))='NULL','',L.Loss_Street_Route_Number);
self.loss_street_type:= if(STD.Str.ToUpperCase(trim(L.loss_street_type,left,right))='NULL','',L.loss_street_type);
self.Loss_Street_Speed_Limit:= if(STD.Str.ToUpperCase(trim(L.Loss_Street_Speed_Limit,left,right))='NUL','',L.Loss_Street_Speed_Limit);
self.Incident_Location_Indicator:= if(STD.Str.ToUpperCase(trim(L.Incident_Location_Indicator,left,right))='NULL','',L.Incident_Location_Indicator);
self.Loss_Cross_Street:= if(STD.Str.ToUpperCase(trim(L.Loss_Cross_Street,left,right))='NULL','',L.Loss_Cross_Street);
self.Loss_Cross_Street_Route_Number:= if(STD.Str.ToUpperCase(trim(L.Loss_Cross_Street_Route_Number,left,right))='NULL','',L.Loss_Cross_Street_Route_Number);
self.Loss_Cross_Street_Intersecting_Route_Segment:= if(STD.Str.ToUpperCase(trim(L.Loss_Cross_Street_Intersecting_Route_Segment,left,right))='NULL','',L.Loss_Cross_Street_Intersecting_Route_Segment);
self.Loss_Cross_Street_Type:= if(STD.Str.ToUpperCase(trim(L.Loss_Cross_Street_Type,left,right))='NULL','',L.Loss_Cross_Street_Type);
self.Loss_Cross_Street_Speed_Limit:= if(STD.Str.ToUpperCase(trim(L.Loss_Cross_Street_Speed_Limit,left,right))='NU','',L.Loss_Cross_Street_Speed_Limit);
self.Loss_Cross_Street_Number_of_Lanes:= if(STD.Str.ToUpperCase(trim(L.Loss_Cross_Street_Number_of_Lanes,left,right))='NU','',L.Loss_Cross_Street_Number_of_Lanes);
self.Loss_Cross_Street_Orientation:= if(STD.Str.ToUpperCase(trim(L.Loss_Cross_Street_Orientation,left,right))='NULL','',L.Loss_Cross_Street_Orientation);
self.Loss_Cross_Street_Route_Sign:= if(STD.Str.ToUpperCase(trim(L.Loss_Cross_Street_Route_Sign,left,right))='NULL','',L.Loss_Cross_Street_Route_Sign);
self.At_Node_Number:= if(STD.Str.ToUpperCase(trim(L.At_Node_Number,left,right))='NULL','',L.At_Node_Number);
self.Distance_From_Node_Feet:= if(STD.Str.ToUpperCase(trim(L.Distance_From_Node_Feet,left,right))='NULL','',L.Distance_From_Node_Feet);
self.Distance_From_Node_Miles:= if(STD.Str.ToUpperCase(trim(L.Distance_From_Node_Miles,left,right))='NULL','',L.Distance_From_Node_Miles);
self.Next_Node_Number:= if(STD.Str.ToUpperCase(trim(L.Next_Node_Number,left,right))='NULL','',L.Next_Node_Number);
self.Next_Roadway_Node_Number:= if(STD.Str.ToUpperCase(trim(L.Next_Roadway_Node_Number,left,right))='NULL','',L.Next_Roadway_Node_Number);
self.Direction_of_Travel:= if(STD.Str.ToUpperCase(trim(L.Direction_of_Travel,left,right))='NULL','',L.Direction_of_Travel);
self.Next_Street:= if(STD.Str.ToUpperCase(trim(L.Next_Street,left,right))='NULL','',L.Next_Street);
self.Next_Street_Type:= if(STD.Str.ToUpperCase(trim(L.Next_Street_Type,left,right))='NULL','',L.Next_Street_Type);
self.Next_Street_Suffix:= if(STD.Str.ToUpperCase(trim(L.Next_Street_Suffix,left,right))='NULL','',L.Next_Street_Suffix);
self.Before_or_After_Next_Street:= if(STD.Str.ToUpperCase(trim(L.Before_or_After_Next_Street,left,right))='NULL','',L.Before_or_After_Next_Street);
self.Next_Street_Distance_Feet:= if(STD.Str.ToUpperCase(trim(L.Next_Street_Distance_Feet,left,right))='NULL','',L.Next_Street_Distance_Feet);
self.Next_Street_Distance_Miles:= if(STD.Str.ToUpperCase(trim(L.Next_Street_Distance_Miles,left,right))='NULL','',L.Next_Street_Distance_Miles);
self.Next_Street_Direction:= if(STD.Str.ToUpperCase(trim(L.Next_Street_Direction,left,right))='NULL','',L.Next_Street_Direction);
self.Next_Street_Route_Segment:= if(STD.Str.ToUpperCase(trim(L.Next_Street_Route_Segment,left,right))='NULL','',L.Next_Street_Route_Segment);
self.Continuing_Toward_Street:= if(STD.Str.ToUpperCase(trim(L.Continuing_Toward_Street,left,right))='NULL','',L.Continuing_Toward_Street);
self.Continuing_Street_Suffix:= if(STD.Str.ToUpperCase(trim(L.Continuing_Street_Suffix,left,right))='NULL','',L.Continuing_Street_Suffix);
self.Continuing_Street_Direction:= if(STD.Str.ToUpperCase(trim(L.Continuing_Street_Direction,left,right))='NULL','',L.Continuing_Street_Direction);
self.Continuting_Street_Route_Segment:= if(STD.Str.ToUpperCase(trim(L.Continuting_Street_Route_Segment,left,right))='NULL','',L.Continuting_Street_Route_Segment);
self.City_Type:= if(STD.Str.ToUpperCase(trim(L.City_Type,left,right))='NULL','',L.City_Type);
self.Outside_City_Indicator:= if(STD.Str.ToUpperCase(trim(L.Outside_City_Indicator,left,right))='NULL','',L.Outside_City_Indicator);
self.Outside_City_Direction:= if(STD.Str.ToUpperCase(trim(L.Outside_City_Direction,left,right))='NULL','',L.Outside_City_Direction);
self.Outside_City_Distance_Feet:= if(STD.Str.ToUpperCase(trim(L.Outside_City_Distance_Feet,left,right))='NULL','',L.Outside_City_Distance_Feet);
self.Outside_City_Distance_Miles:= if(STD.Str.ToUpperCase(trim(L.Outside_City_Distance_Miles,left,right))='NULL','',L.Outside_City_Distance_Miles);
self.Crash_Type:= if(STD.Str.ToUpperCase(trim(L.Crash_Type,left,right))='NULL','',L.Crash_Type);
self.Motor_Vehicle_Involved_With:= if(STD.Str.ToUpperCase(trim(L.Motor_Vehicle_Involved_With,left,right))='NULL','',L.Motor_Vehicle_Involved_With);
self.Report_Investigation_Type:= if(STD.Str.ToUpperCase(trim(L.Report_Investigation_Type,left,right))='NULL','',L.Report_Investigation_Type);
self.Incident_Hit_and_Run:= if(STD.Str.ToUpperCase(trim(L.Incident_Hit_and_Run,left,right))='NULL','',L.Incident_Hit_and_Run);
self.Tow_Away:= if(STD.Str.ToUpperCase(trim(L.Tow_Away,left,right))='NULL','',L.Tow_Away);
self.Date_Notified:= if(STD.Str.ToUpperCase(trim(L.Date_Notified,left,right))='NULL','',L.Date_Notified);
self.Time_Notified:= if(STD.Str.ToUpperCase(trim(L.Time_Notified,left,right))='NULL','',L.Time_Notified);
self.Notification_Method:= if(STD.Str.ToUpperCase(trim(L.Notification_Method,left,right))='NULL','',L.Notification_Method);
self.Officer_Arrival_Time:= if(STD.Str.ToUpperCase(trim(L.Officer_Arrival_Time,left,right))='NULL','',L.Officer_Arrival_Time);
self.Officer_Report_Date:= if(STD.Str.ToUpperCase(trim(L.Officer_Report_Date,left,right))='NULL','',L.Officer_Report_Date);
self.Officer_Report_Time:= if(STD.Str.ToUpperCase(trim(L.Officer_Report_Time,left,right))='NULL','',L.Officer_Report_Time);
self.Officer_ID:= if(STD.Str.ToUpperCase(trim(L.Officer_ID,left,right))='NULL','',L.Officer_ID);
self.Officer_Department:= if(STD.Str.ToUpperCase(trim(L.Officer_Department,left,right))='NULL','',L.Officer_Department);
self.Officer_Rank:= if(STD.Str.ToUpperCase(trim(L.Officer_Rank,left,right))='NULL','',L.Officer_Rank);
self.Officer_Command:= if(STD.Str.ToUpperCase(trim(L.Officer_Command,left,right))='NULL','',L.Officer_Command);
self.Officer_Tax_ID_Number:= if(STD.Str.ToUpperCase(trim(L.Officer_Tax_ID_Number,left,right))='NULL','',L.Officer_Tax_ID_Number);
self.Completed_Report_Date:= if(STD.Str.ToUpperCase(trim(L.Completed_Report_Date,left,right))='NULL','',L.Completed_Report_Date);
self.Supervisor_Check_Date:= if(STD.Str.ToUpperCase(trim(L.Supervisor_Check_Date,left,right))='NULL','',L.Supervisor_Check_Date);
self.Supervisor_Check_Time:= if(STD.Str.ToUpperCase(trim(L.Supervisor_Check_Time,left,right))='NULL','',L.Supervisor_Check_Time);
self.Supervisor_ID:= if(STD.Str.ToUpperCase(trim(L.Supervisor_ID,left,right))='NULL','',L.Supervisor_ID);
self.Supervisor_Rank:= if(STD.Str.ToUpperCase(trim(L.Supervisor_Rank,left,right))='NULL','',L.Supervisor_Rank);
self.Reviewers_Name:= if(STD.Str.ToUpperCase(trim(L.Reviewers_Name,left,right))='NULL','',L.Reviewers_Name);
self.Road_Surface:= if(STD.Str.ToUpperCase(trim(L.Road_Surface,left,right))='NULL','',L.Road_Surface);
self.Roadway_Alignment:= if(STD.Str.ToUpperCase(trim(L.Roadway_Alignment,left,right))='NULL','',L.Roadway_Alignment);
self.Traffic_Way_Description:= if(STD.Str.ToUpperCase(trim(L.Traffic_Way_Description,left,right))='NULL','',L.Traffic_Way_Description);
self.Traffic_Flow:= if(STD.Str.ToUpperCase(trim(L.Traffic_Flow,left,right))='NULL','',L.Traffic_Flow);
self.Property_Damage_Involved:= if(STD.Str.ToUpperCase(trim(L.Property_Damage_Involved,left,right))='NULL','',L.Property_Damage_Involved);
self.Property_Damage_Description1:= if(STD.Str.ToUpperCase(trim(L.Property_Damage_Description1,left,right))='NULL','',L.Property_Damage_Description1);
self.Property_Damage_Description2:= if(STD.Str.ToUpperCase(trim(L.Property_Damage_Description2,left,right))='NULL','',L.Property_Damage_Description2);
self.Property_Damage_Estimate1:= if(STD.Str.ToUpperCase(trim(L.Property_Damage_Estimate1,left,right))='NULL','',L.Property_Damage_Estimate1);
self.Property_Damage_Estimate2:= if(STD.Str.ToUpperCase(trim(L.Property_Damage_Estimate2,left,right))='NULL','',L.Property_Damage_Estimate2);
self.Incident_Damage_Over_Limit:= if(STD.Str.ToUpperCase(trim(L.Incident_Damage_Over_Limit,left,right))='NULL','',L.Incident_Damage_Over_Limit);
self.Property_Owner_Notified:= if(STD.Str.ToUpperCase(trim(L.Property_Owner_Notified,left,right))='NULL','',L.Property_Owner_Notified);
self.Government_Property:= if(STD.Str.ToUpperCase(trim(L.Government_Property,left,right))='NULL','',L.Government_Property);
self.Accident_Condition:= if(STD.Str.ToUpperCase(trim(L.Accident_Condition,left,right))='NULL','',L.Accident_Condition);
self.Unusual_Road_Condition1:= if(STD.Str.ToUpperCase(trim(L.Unusual_Road_Condition1,left,right))='NULL','',L.Unusual_Road_Condition1);
self.Unusual_Road_Condition2:= if(STD.Str.ToUpperCase(trim(L.Unusual_Road_Condition2,left,right))='NULL','',L.Unusual_Road_Condition2);
self.Number_of_Lanes:= if(STD.Str.ToUpperCase(trim(L.Number_of_Lanes,left,right))='NU','',L.Number_of_Lanes);
self.Divided_Highway:= if(STD.Str.ToUpperCase(trim(L.Divided_Highway,left,right))='NULL','',L.Divided_Highway);
self.Most_Harmful_Event:= if(STD.Str.ToUpperCase(trim(L.Most_Harmful_Event,left,right))='NULL','',L.Most_Harmful_Event);
self.Second_Harmful_Event:= if(STD.Str.ToUpperCase(trim(L.Second_Harmful_Event,left,right))='NULL','',L.Second_Harmful_Event);
self.EMS_Notified_Date:= if(STD.Str.ToUpperCase(trim(L.EMS_Notified_Date,left,right))='NULL','',L.EMS_Notified_Date);
self.EMS_Arrival_Date:= if(STD.Str.ToUpperCase(trim(L.EMS_Arrival_Date,left,right))='NULL','',L.EMS_Arrival_Date);
self.Hospital_Arrival_Date:= if(STD.Str.ToUpperCase(trim(L.Hospital_Arrival_Date,left,right))='NULL','',L.Hospital_Arrival_Date);
self.Injured_Taken_By:= if(STD.Str.ToUpperCase(trim(L.Injured_Taken_By,left,right))='NULL','',L.Injured_Taken_By);
self.Injured_Taken_To:= if(STD.Str.ToUpperCase(trim(L.Injured_Taken_To,left,right))='NULL','',L.Injured_Taken_To);
self.Incident_Transported_for_Medical_Care:= if(STD.Str.ToUpperCase(trim(L.Incident_Transported_for_Medical_Care,left,right))='NULL','',L.Incident_Transported_for_Medical_Care);
self.Photographs_Taken:= if(STD.Str.ToUpperCase(trim(L.Photographs_Taken,left,right))='NULL','',L.Photographs_Taken);
self.Photographed_By:= if(STD.Str.ToUpperCase(trim(L.Photographed_By,left,right))='NULL','',L.Photographed_By);
self.Photographer_ID:= if(STD.Str.ToUpperCase(trim(L.Photographer_ID,left,right))='NULL','',L.Photographer_ID);
self.Photography_Agency_Name:= if(STD.Str.ToUpperCase(trim(L.Photography_Agency_Name,left,right))='NULL','',L.Photography_Agency_Name);
self.Agency_Name:= if(STD.Str.ToUpperCase(trim(L.Agency_Name,left,right))='NULL','',L.Agency_Name);
self.Judicial_District:= if(STD.Str.ToUpperCase(trim(L.Judicial_District,left,right))='NULL','',L.Judicial_District);
self.Precinct:= if(STD.Str.ToUpperCase(trim(L.Precinct,left,right))='NULL','',L.Precinct);
self.Beat:= if(STD.Str.ToUpperCase(trim(L.Beat,left,right))='NULL','',L.Beat);
self.Location_Type:= if(STD.Str.ToUpperCase(trim(L.Location_Type,left,right))='NULL','',L.Location_Type);
self.Shoulder_Type:= if(STD.Str.ToUpperCase(trim(L.Shoulder_Type,left,right))='NULL','',L.Shoulder_Type);
self.Investigation_Complete:= if(STD.Str.ToUpperCase(trim(L.Investigation_Complete,left,right))='NULL','',L.Investigation_Complete);
self.Investigation_Not_Complete_Why:= if(STD.Str.ToUpperCase(trim(L.Investigation_Not_Complete_Why,left,right))='NULL','',L.Investigation_Not_Complete_Why);
self.Investigating_Officer_Name:= if(STD.Str.ToUpperCase(trim(L.Investigating_Officer_Name,left,right))='NULL','',L.Investigating_Officer_Name);
self.Investigation_Notification_Issued:= if(STD.Str.ToUpperCase(trim(L.Investigation_Notification_Issued,left,right))='NULL','',L.Investigation_Notification_Issued);
self.Agency_Type:= if(STD.Str.ToUpperCase(trim(L.Agency_Type,left,right))='NULL','',L.Agency_Type);
self.No_Injury_Tow_Involved:= if(STD.Str.ToUpperCase(trim(L.No_Injury_Tow_Involved,left,right))='NULL','',L.No_Injury_Tow_Involved);
self.Injury_Tow_Involved:= if(STD.Str.ToUpperCase(trim(L.Injury_Tow_Involved,left,right))='NULL','',L.Injury_Tow_Involved);
self.LARS_Code1:= if(STD.Str.ToUpperCase(trim(L.LARS_Code1,left,right))='NULL','',L.LARS_Code1);
self.LARS_Code2:= if(STD.Str.ToUpperCase(trim(L.LARS_Code2,left,right))='NULL','',L.LARS_Code2);
self.Private_Property_Incident:= if(STD.Str.ToUpperCase(trim(L.Private_Property_Incident,left,right))='NULL','',L.Private_Property_Incident);
self.Accident_Involvement:= if(STD.Str.ToUpperCase(trim(L.Accident_Involvement,left,right))='NULL','',L.Accident_Involvement);
self.Local_Use:= if(STD.Str.ToUpperCase(trim(L.Local_Use,left,right))='NULL','',L.Local_Use);
self.Street_Prefix:= if(STD.Str.ToUpperCase(trim(L.Street_Prefix,left,right))='NULL','',L.Street_Prefix);
self.Street_Suffix:= if(STD.Str.ToUpperCase(trim(L.Street_Suffix,left,right))='NULL','',L.Street_Suffix);
self.Toll_Road:= if(STD.Str.ToUpperCase(trim(L.Toll_Road,left,right))='NULL','',L.Toll_Road);
self.Street_Description:= if(STD.Str.ToUpperCase(trim(L.Street_Description,left,right))='NULL','',L.Street_Description);
self.Cross_Street_Address_Number:= if(STD.Str.ToUpperCase(trim(L.Cross_Street_Address_Number,left,right))='NULL','',L.Cross_Street_Address_Number);
self.Cross_Street_Prefix:= if(STD.Str.ToUpperCase(trim(L.Cross_Street_Prefix,left,right))='NULL','',L.Cross_Street_Prefix);
self.Cross_Street_Suffix:= if(STD.Str.ToUpperCase(trim(L.Cross_Street_Suffix,left,right))='NULL','',L.Cross_Street_Suffix);
self.Report_Complete:= if(STD.Str.ToUpperCase(trim(L.Report_Complete,left,right))='NUL','',L.Report_Complete);
self.Dispatch_Notified:= if(STD.Str.ToUpperCase(trim(L.Dispatch_Notified,left,right))='NULL','',L.Dispatch_Notified);
self.Counter_Report:= if(STD.Str.ToUpperCase(trim(L.Counter_Report,left,right))='NUL','',L.Counter_Report);
self.Road_Type:= if(STD.Str.ToUpperCase(trim(L.Road_Type,left,right))='NULL','',L.Road_Type);
self.Agency_Code:= if(STD.Str.ToUpperCase(trim(L.Agency_Code,left,right))='NULL','',L.Agency_Code);
self.Public_Property_Employee:= if(STD.Str.ToUpperCase(trim(L.Public_Property_Employee,left,right))='NUL','',L.Public_Property_Employee);
self.Bridge_Related:= if(STD.Str.ToUpperCase(trim(L.Bridge_Related,left,right))='NUL','',L.Bridge_Related);
self.Ramp_Indicator:= if(STD.Str.ToUpperCase(trim(L.Ramp_Indicator,left,right))='NUL','',L.Ramp_Indicator);
self.To_or_From_Location:= if(STD.Str.ToUpperCase(trim(L.To_or_From_Location,left,right))='NULL','',L.To_or_From_Location);
self.Complaint_Number:= if(STD.Str.ToUpperCase(trim(L.Complaint_Number,left,right))='NULL','',L.Complaint_Number);
self.School_Zone_Related:= if(STD.Str.ToUpperCase(trim(L.School_Zone_Related,left,right))='NULL','',L.School_Zone_Related);
self.Notify_DOT_Maintenance:= if(STD.Str.ToUpperCase(trim(L.Notify_DOT_Maintenance,left,right))='NULL','',L.Notify_DOT_Maintenance);
self.Special_Location:= if(STD.Str.ToUpperCase(trim(L.Special_Location,left,right))='NULL','',L.Special_Location);
self.Route_Segment:= if(STD.Str.ToUpperCase(trim(L.Route_Segment,left,right))='NULL','',L.Route_Segment);
self.Route_Sign:= if(STD.Str.ToUpperCase(trim(L.Route_Sign,left,right))='NULL','',L.Route_Sign);
self.Route_Category_Street:= if(STD.Str.ToUpperCase(trim(L.Route_Category_Street,left,right))='NULL','',L.Route_Category_Street);
self.Route_Category_Cross_Street:= if(STD.Str.ToUpperCase(trim(L.Route_Category_Cross_Street,left,right))='NULL','',L.Route_Category_Cross_Street);
self.Route_Category_Next_Street:= if(STD.Str.ToUpperCase(trim(L.Route_Category_Next_Street,left,right))='NULL','',L.Route_Category_Next_Street);
self.Lane_Closed:= if(STD.Str.ToUpperCase(trim(L.Lane_Closed,left,right))='NULL','',L.Lane_Closed);
self.Lane_Closure_Direction:= if(STD.Str.ToUpperCase(trim(L.Lane_Closure_Direction,left,right))='NULL','',L.Lane_Closure_Direction);
self.Lane_Direction:= if(STD.Str.ToUpperCase(trim(L.Lane_Direction,left,right))='NULL','',L.Lane_Direction);
self.Traffic_Detoured:= if(STD.Str.ToUpperCase(trim(L.Traffic_Detoured,left,right))='NULL','',L.Traffic_Detoured);
self.Time_Closed:= if(STD.Str.ToUpperCase(trim(L.Time_Closed,left,right))='NULL','',L.Time_Closed);
self.Pedestrian_Signals:= if(STD.Str.ToUpperCase(trim(L.Pedestrian_Signals,left,right))='NULL','',L.Pedestrian_Signals);
self.Work_Zone_Speed_Limit:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Speed_Limit,left,right))='NU','',L.Work_Zone_Speed_Limit);
self.Work_Zone_Shoulder_Median:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Shoulder_Median,left,right))='NULL','',L.Work_Zone_Shoulder_Median);
self.Work_Zone_Intermittent_Moving:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Intermittent_Moving,left,right))='NULL','',L.Work_Zone_Intermittent_Moving);
self.Work_Zone_Flagger_Control:= if(STD.Str.ToUpperCase(trim(L.Work_Zone_Flagger_Control,left,right))='NULL','',L.Work_Zone_Flagger_Control);
self.Special_Work_Zone_Characteristics:= if(STD.Str.ToUpperCase(trim(L.Special_Work_Zone_Characteristics,left,right))='NULL','',L.Special_Work_Zone_Characteristics);
self.Lane_Number:= if(STD.Str.ToUpperCase(trim(L.Lane_Number,left,right))='NULL','',L.Lane_Number);
self.Offset_Distance_Feet:= if(STD.Str.ToUpperCase(trim(L.Offset_Distance_Feet,left,right))='NUL','',L.Offset_Distance_Feet);
self.Offset_Distance_MIles:= if(STD.Str.ToUpperCase(trim(L.Offset_Distance_MIles,left,right))='NULL','',L.Offset_Distance_MIles);
self.Offset_Direction:= if(STD.Str.ToUpperCase(trim(L.Offset_Direction,left,right))='NULL','',L.Offset_Direction);
self.ASRU_Code:= if(STD.Str.ToUpperCase(trim(L.ASRU_Code,left,right))='NULL','',L.ASRU_Code);
self.MP_Grid:= if(STD.Str.ToUpperCase(trim(L.MP_Grid,left,right))='NULL','',L.MP_Grid);
self.Number_of_Qualifying_Units:= if(STD.Str.ToUpperCase(trim(L.Number_of_Qualifying_Units,left,right))='NU','',L.Number_of_Qualifying_Units);
self.Number_of_HazMat_Vehicles:= if(STD.Str.ToUpperCase(trim(L.Number_of_HazMat_Vehicles,left,right))='NU','',L.Number_of_HazMat_Vehicles);
self.Number_of_Buses_Involved:= if(STD.Str.ToUpperCase(trim(L.Number_of_Buses_Involved,left,right))='NU','',L.Number_of_Buses_Involved);
self.Number_Taken_to_Treatment:= if(STD.Str.ToUpperCase(trim(L.Number_Taken_to_Treatment,left,right))='NU','',L.Number_Taken_to_Treatment);
self.Number_Vehicles_Towed:= if(STD.Str.ToUpperCase(trim(L.Number_Vehicles_Towed,left,right))='NU','',L.Number_Vehicles_Towed);
self.Vehicle_at_Fault_Unit_Number:= if(STD.Str.ToUpperCase(trim(L.Vehicle_at_Fault_Unit_Number,left,right))='NU','',L.Vehicle_at_Fault_Unit_Number);
self.Time_Officer_Cleared_Scene:= if(STD.Str.ToUpperCase(trim(L.Time_Officer_Cleared_Scene,left,right))='NULL','',L.Time_Officer_Cleared_Scene);
self.Total_Minutes_on_Scene:= if(STD.Str.ToUpperCase(trim(L.Total_Minutes_on_Scene,left,right))='NULL','',L.Total_Minutes_on_Scene);
self.Motorists_Report:= if(STD.Str.ToUpperCase(trim(L.Motorists_Report,left,right))='NULL','',L.Motorists_Report);
self.Fatality_Involved:= if(STD.Str.ToUpperCase(trim(L.Fatality_Involved,left,right))='NULL','',L.Fatality_Involved);
self.Local_DOT_Index_Number:= if(STD.Str.ToUpperCase(trim(L.Local_DOT_Index_Number,left,right))='NULL','',L.Local_DOT_Index_Number);
self.DOR_Number:= if(STD.Str.ToUpperCase(trim(L.DOR_Number,left,right))='NULL','',L.DOR_Number);
self.Hospital_Code:= if(STD.Str.ToUpperCase(trim(L.Hospital_Code,left,right))='NULL','',L.Hospital_Code);
self.Special_Jurisdiction:= if(STD.Str.ToUpperCase(trim(L.Special_Jurisdiction,left,right))='NULL','',L.Special_Jurisdiction);
self.Document_Type:= if(STD.Str.ToUpperCase(trim(L.Document_Type,left,right))='NULL','',L.Document_Type);
self.Distance_Was_Measured:= if(STD.Str.ToUpperCase(trim(L.Distance_Was_Measured,left,right))='NULL','',L.Distance_Was_Measured);
self.Street_Orientation:= if(STD.Str.ToUpperCase(trim(L.Street_Orientation,left,right))='NULL','',L.Street_Orientation);
self.Intersecting_Route_Segment:= if(STD.Str.ToUpperCase(trim(L.Intersecting_Route_Segment,left,right))='NULL','',L.Intersecting_Route_Segment);
self.Primary_Fault_Indicator:= if(STD.Str.ToUpperCase(trim(L.Primary_Fault_Indicator,left,right))='NULL','',L.Primary_Fault_Indicator);
self.First_Harmful_Event_Pedestrian:= if(STD.Str.ToUpperCase(trim(L.First_Harmful_Event_Pedestrian,left,right))='NULL','',L.First_Harmful_Event_Pedestrian);
self.Reference_Markers:= if(STD.Str.ToUpperCase(trim(L.Reference_Markers,left,right))='NULL','',L.Reference_Markers);
self.Other_Officer_on_Scene:= if(STD.Str.ToUpperCase(trim(L.Other_Officer_on_Scene,left,right))='NULL','',L.Other_Officer_on_Scene);
self.Other_Officer_Badge_Number:= if(STD.Str.ToUpperCase(trim(L.Other_Officer_Badge_Number,left,right))='NULL','',L.Other_Officer_Badge_Number);
self.Supplemental_Report:= if(STD.Str.ToUpperCase(trim(L.Supplemental_Report,left,right))='NULL','',L.Supplemental_Report);
self.Supplemental_Type:= if(STD.Str.ToUpperCase(trim(L.Supplemental_Type,left,right))='NULL','',L.Supplemental_Type);
self.Amended_Report:= if(STD.Str.ToUpperCase(trim(L.Amended_Report,left,right))='NULL','',L.Amended_Report);
self.Corrected_Report:= if(STD.Str.ToUpperCase(trim(L.Corrected_Report,left,right))='NULL','',L.Corrected_Report);
self.State_Highway_Related:= if(STD.Str.ToUpperCase(trim(L.State_Highway_Related,left,right))='NULL','',L.State_Highway_Related);
self.Roadway_Lighting_Condition:= if(STD.Str.ToUpperCase(trim(L.Roadway_Lighting_Condition,left,right))='NULL','',L.Roadway_Lighting_Condition);
self.Vendor_Reference_Number:= if(STD.Str.ToUpperCase(trim(L.Vendor_Reference_Number,left,right))='NULL','',L.Vendor_Reference_Number);
self.Duplicate_Copy_Unit_Number:= if(STD.Str.ToUpperCase(trim(L.Duplicate_Copy_Unit_Number,left,right))='NULL','',L.Duplicate_Copy_Unit_Number);
self.Other_City_Agency_Description:= if(STD.Str.ToUpperCase(trim(L.Other_City_Agency_Description,left,right))='NULL','',L.Other_City_Agency_Description);
self.Notifcation_Description:= if(STD.Str.ToUpperCase(trim(L.Notifcation_Description,left,right))='NULL','',L.Notifcation_Description);
self.Primary_Collision_Improper_Driving_Description:= if(STD.Str.ToUpperCase(trim(L.Primary_Collision_Improper_Driving_Description,left,right))='NULL','',L.Primary_Collision_Improper_Driving_Description);
self.Weather_Other_Description:= if(STD.Str.ToUpperCase(trim(L.Weather_Other_Description,left,right))='NULL','',L.Weather_Other_Description);
self.Crash_Type_Description:= if(STD.Str.ToUpperCase(trim(L.Crash_Type_Description,left,right))='NULL','',L.Crash_Type_Description);
self.Motor_Vehicle_Involved_With_Animal_Description:= if(STD.Str.ToUpperCase(trim(L.Motor_Vehicle_Involved_With_Animal_Description,left,right))='NULL','',L.Motor_Vehicle_Involved_With_Animal_Description);
self.Motor_Vehicle_Involved_With_Fixed_Object_Description:= if(STD.Str.ToUpperCase(trim(L.Motor_Vehicle_Involved_With_Fixed_Object_Description,left,right))='NULL','',L.Motor_Vehicle_Involved_With_Fixed_Object_Description);
self.Motor_Vehicle_Involved_With_Other_Object_Description:= if(STD.Str.ToUpperCase(trim(L.Motor_Vehicle_Involved_With_Other_Object_Description,left,right))='NULL','',L.Motor_Vehicle_Involved_With_Other_Object_Description);
self.Other_Investigation_Time:= if(STD.Str.ToUpperCase(trim(L.Other_Investigation_Time,left,right))='NULL','',L.Other_Investigation_Time);
self.Milepost_Detail:= if(STD.Str.ToUpperCase(trim(L.Milepost_Detail,left,right))='NULL','',L.Milepost_Detail);
self.Utility_Pole_Number1:= if(STD.Str.ToUpperCase(trim(L.Utility_Pole_Number1,left,right))='NULL','',L.Utility_Pole_Number1);
self.Utility_Pole_Number2:= if(STD.Str.ToUpperCase(trim(L.Utility_Pole_Number2,left,right))='NULL','',L.Utility_Pole_Number2);
self.Utility_Pole_Number3:= if(STD.Str.ToUpperCase(trim(L.Utility_Pole_Number3,left,right))='NULL','',L.Utility_Pole_Number3);
self.Utility_Pole_Number4:= if(STD.Str.ToUpperCase(trim(L.Utility_Pole_Number4,left,right))='NULL','',L.Utility_Pole_Number4);
self.Incident_Special_Use:= if(STD.Str.ToUpperCase(trim(L.Incident_Special_Use,left,right))='NULL','',L.Incident_Special_Use);
self.Felony_Misdemeanor_Involved:= if(STD.Str.ToUpperCase(trim(L.Felony_Misdemeanor_Involved,left,right))='NULL','',L.Felony_Misdemeanor_Involved);
self.Duplicate_Copy_Required:= if(STD.Str.ToUpperCase(trim(L.Duplicate_Copy_Required,left,right))='NULL','',L.Duplicate_Copy_Required);
self.Highway_District_at_Scene:= if(STD.Str.ToUpperCase(trim(L.Highway_District_at_Scene,left,right))='NULL','',L.Highway_District_at_Scene);
self.Distance_Was_Approximated:= if(STD.Str.ToUpperCase(trim(L.Distance_Was_Approximated,left,right))='NULL','',L.Distance_Was_Approximated);
self.Avoidance_Maneuver:= if(STD.Str.ToUpperCase(trim(L.Avoidance_Maneuver,left,right))='NULL','',L.Avoidance_Maneuver);
self.Narrative_Continuance:= if(STD.Str.ToUpperCase(trim(L.Narrative_Continuance,left,right))='NULL','',L.Narrative_Continuance);
self.Narrative:= if(STD.Str.ToUpperCase(trim(L.Narrative,left,right))='NULL','',L.Narrative);
self.Person_ID:= if(STD.Str.ToUpperCase(trim(L.Person_ID,left,right))='NULL','',L.Person_ID);
self.Person_Number:= if(STD.Str.ToUpperCase(trim(L.Person_Number,left,right))='NUL','',L.Person_Number);
self.Vehicle_Unit_Number:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Unit_Number,left,right))='NUL','',L.Vehicle_Unit_Number);
self.Sex:= if(STD.Str.ToUpperCase(trim(L.Sex,left,right))='NULL','',L.Sex);
self.Person_Type:= if(STD.Str.ToUpperCase(trim(L.Person_Type,left,right))='NULL','',L.Person_Type);
self.Injury_Status:= if(STD.Str.ToUpperCase(trim(L.Injury_Status,left,right))='NULL','',L.Injury_Status);
//self.Occupant_Vehicle_Unit_Number:= if(L.Occupant_Vehicle_Unit_Number,left,right))='NULL','',L.Occupant_Vehicle_Unit_Number);
self.Seating_Position1:= if(STD.Str.ToUpperCase(trim(L.Seating_Position1,left,right))='NULL','',L.Seating_Position1);
self.Safety_Equipment_Restraint1:= if(STD.Str.ToUpperCase(trim(L.Safety_Equipment_Restraint1,left,right))='NULL','',L.Safety_Equipment_Restraint1);
self.Safety_Equipment_Restraint2:= if(STD.Str.ToUpperCase(trim(L.Safety_Equipment_Restraint2,left,right))='NULL','',L.Safety_Equipment_Restraint2);
self.Safety_Equipment_Helmet:= if(STD.Str.ToUpperCase(trim(L.Safety_Equipment_Helmet,left,right))='NULL','',L.Safety_Equipment_Helmet);
self.Air_Bag_Deployed:= if(STD.Str.ToUpperCase(trim(L.Air_Bag_Deployed,left,right))='NULL','',L.Air_Bag_Deployed);
self.Ejection:= if(STD.Str.ToUpperCase(trim(L.Ejection,left,right))='NULL','',L.Ejection);
self.Drivers_License_Jurisdiction:= if(STD.Str.ToUpperCase(trim(L.Drivers_License_Jurisdiction,left,right))='NULL','',L.Drivers_License_Jurisdiction);
self.DL_Number_Class:= if(STD.Str.ToUpperCase(trim(L.DL_Number_Class,left,right))='NULL','',L.DL_Number_Class);
self.DL_Number_CDL:= if(STD.Str.ToUpperCase(trim(L.DL_Number_CDL,left,right))='NUL','',L.DL_Number_CDL);
self.DL_Number_Endorsements:= if(STD.Str.ToUpperCase(trim(L.DL_Number_Endorsements,left,right))='NULL','',L.DL_Number_Endorsements);
self.Driver_Actions_at_Time_of_Crash1:= if(STD.Str.ToUpperCase(trim(L.Driver_Actions_at_Time_of_Crash1,left,right))='NULL','',L.Driver_Actions_at_Time_of_Crash1);
self.Driver_Actions_at_Time_of_Crash2:= if(STD.Str.ToUpperCase(trim(L.Driver_Actions_at_Time_of_Crash2,left,right))='NULL','',L.Driver_Actions_at_Time_of_Crash2);
self.Driver_Actions_at_Time_of_Crash3:= if(STD.Str.ToUpperCase(trim(L.Driver_Actions_at_Time_of_Crash3,left,right))='NULL','',L.Driver_Actions_at_Time_of_Crash3);
self.Driver_Actions_at_Time_of_Crash4:= if(STD.Str.ToUpperCase(trim(L.Driver_Actions_at_Time_of_Crash4,left,right))='NULL','',L.Driver_Actions_at_Time_of_Crash4);
self.Violation_Codes:= if(STD.Str.ToUpperCase(trim(L.Violation_Codes,left,right))='NULL','',L.Violation_Codes);
self.Condition_at_Time_of_Crash1:= if(STD.Str.ToUpperCase(trim(L.Condition_at_Time_of_Crash1,left,right))='NULL','',L.Condition_at_Time_of_Crash1);
self.Condition_at_Time_of_Crash2:= if(STD.Str.ToUpperCase(trim(L.Condition_at_Time_of_Crash2,left,right))='NULL','',L.Condition_at_Time_of_Crash2);
self.Law_Enforcement_Suspects_Alcohol_Use:= if(STD.Str.ToUpperCase(trim(L.Law_Enforcement_Suspects_Alcohol_Use,left,right))='NULL','',L.Law_Enforcement_Suspects_Alcohol_Use);
self.Alcohol_Test_Status:= if(STD.Str.ToUpperCase(trim(L.Alcohol_Test_Status,left,right))='NULL','',L.Alcohol_Test_Status);
self.Alcohol_Test_Type:= if(STD.Str.ToUpperCase(trim(L.Alcohol_Test_Type,left,right))='NULL','',L.Alcohol_Test_Type);
self.Alcohol_Test_Result:= if(STD.Str.ToUpperCase(trim(L.Alcohol_Test_Result,left,right))='NULL','',L.Alcohol_Test_Result);
self.Law_Enforcement_Suspects_Drug_Use:= if(STD.Str.ToUpperCase(trim(L.Law_Enforcement_Suspects_Drug_Use,left,right))='NULL','',L.Law_Enforcement_Suspects_Drug_Use);
self.Drug_Test_Given:= if(STD.Str.ToUpperCase(trim(L.Drug_Test_Given,left,right))='NULL','',L.Drug_Test_Given);
self.Non_Motorist_Actions_Prior_to_Crash1:= if(STD.Str.ToUpperCase(trim(L.Non_Motorist_Actions_Prior_to_Crash1,left,right))='NULL','',L.Non_Motorist_Actions_Prior_to_Crash1);
self.Non_Motorist_Actions_Prior_to_Crash2:= if(STD.Str.ToUpperCase(trim(L.Non_Motorist_Actions_Prior_to_Crash2,left,right))='NULL','',L.Non_Motorist_Actions_Prior_to_Crash2);
self.Non_Motorist_Actions_at_Time_of_Crash:= if(STD.Str.ToUpperCase(trim(L.Non_Motorist_Actions_at_Time_of_Crash,left,right))='NULL','',L.Non_Motorist_Actions_at_Time_of_Crash);
self.Non_Motorist_Location_at_Time_of_Crash:= if(STD.Str.ToUpperCase(trim(L.Non_Motorist_Location_at_Time_of_Crash,left,right))='NULL','',L.Non_Motorist_Location_at_Time_of_Crash);
self.Non_Motorist_Safety_Equipment1:= if(STD.Str.ToUpperCase(trim(L.Non_Motorist_Safety_Equipment1,left,right))='NULL','',L.Non_Motorist_Safety_Equipment1);
self.Age:= if(STD.Str.ToUpperCase(trim(L.Age,left,right))='NUL','',L.Age);
self.Driver_License_Restrictions1:= if(STD.Str.ToUpperCase(trim(L.Driver_License_Restrictions1,left,right))='NULL','',L.Driver_License_Restrictions1);
self.Drug_Test_Type:= if(STD.Str.ToUpperCase(trim(L.Drug_Test_Type,left,right))='NULL','',L.Drug_Test_Type);
self.Drug_Test_Result1:= if(STD.Str.ToUpperCase(trim(L.Drug_Test_Result1,left,right))='NULL','',L.Drug_Test_Result1);
self.Drug_Test_Result2:= if(STD.Str.ToUpperCase(trim(L.Drug_Test_Result2,left,right))='NULL','',L.Drug_Test_Result2);
self.Drug_Test_Result3:= if(STD.Str.ToUpperCase(trim(L.Drug_Test_Result3,left,right))='NULL','',L.Drug_Test_Result3);
self.Drug_Test_Result4:= if(STD.Str.ToUpperCase(trim(L.Drug_Test_Result4,left,right))='NULL','',L.Drug_Test_Result4);
self.Injury_Area:= if(STD.Str.ToUpperCase(trim(L.Injury_Area,left,right))='NULL','',L.Injury_Area);
self.Injury_Description:= if(STD.Str.ToUpperCase(trim(L.Injury_Description,left,right))='NULL','',L.Injury_Description);
self.Motorcyclist_Head_Injury:= if(STD.Str.ToUpperCase(trim(L.Motorcyclist_Head_Injury,left,right))='NULL','',L.Motorcyclist_Head_Injury);
self.Party_ID:= if(STD.Str.ToUpperCase(trim(L.Party_ID,left,right))in ['NULL','NUL'],'',L.Party_ID);
self.Same_as_Driver:= if(STD.Str.ToUpperCase(trim(L.Same_as_Driver,left,right))='NULL','',L.Same_as_Driver);
self.Address_Same_as_Driver:= if(STD.Str.ToUpperCase(trim(L.Address_Same_as_Driver,left,right))='NULL','',L.Address_Same_as_Driver);
self.Last_Name:= if(STD.Str.ToUpperCase(trim(L.Last_Name,left,right))='NULL','',L.Last_Name);
self.First_Name:= if(STD.Str.ToUpperCase(trim(L.First_Name,left,right))='NULL','',L.First_Name);
self.Middle_Name:= if(STD.Str.ToUpperCase(trim(L.Middle_Name,left,right))='NULL','',L.Middle_Name);
self.Name_Suffx:= if(STD.Str.ToUpperCase(trim(L.Name_Suffx,left,right))='NUL','',L.Name_Suffx);
self.Date_of_Birth:= if(STD.Str.ToUpperCase(trim(L.Date_of_Birth,left,right))='NULL','',L.Date_of_Birth);
self.Address:= if(STD.Str.ToUpperCase(trim(L.Address,left,right))='NULL','',L.Address);
self.City:= if(STD.Str.ToUpperCase(trim(L.City,left,right))='NULL','',L.City);
self.State:= if(STD.Str.ToUpperCase(trim(L.State,left,right))='NU','',L.State);
self.Zip_Code:= if(STD.Str.ToUpperCase(trim(L.Zip_Code,left,right))='NULL','',L.Zip_Code);
self.Home_Phone:= if(STD.Str.ToUpperCase(trim(L.Home_Phone,left,right))='NULL','',L.Home_Phone);
self.Business_Phone:= if(STD.Str.ToUpperCase(trim(L.Business_Phone,left,right))='NULL','',L.Business_Phone);
self.Insurance_Company:= if(STD.Str.ToUpperCase(trim(L.Insurance_Company,left,right))='NULL','',L.Insurance_Company);
self.Insurance_Company_Phone_Number:= if(STD.Str.ToUpperCase(trim(L.Insurance_Company_Phone_Number,left,right))='NULL','',L.Insurance_Company_Phone_Number);
self.Insurance_Policy_Number:= if(STD.Str.ToUpperCase(trim(L.Insurance_Policy_Number,left,right))='NULL','',L.Insurance_Policy_Number);
self.Insurance_Effective_Date:= if(STD.Str.ToUpperCase(trim(L.Insurance_Effective_Date,left,right))='NULL','',L.Insurance_Effective_Date);
self.SSN:= if(STD.Str.ToUpperCase(trim(L.SSN,left,right))='NULL','',L.SSN);
self.Drivers_License_Number:= if(STD.Str.ToUpperCase(trim(L.Drivers_License_Number,left,right))='NULL','',L.Drivers_License_Number);
self.Drivers_License_Expiration:= if(STD.Str.ToUpperCase(trim(L.Drivers_License_Expiration,left,right))='NULL','',L.Drivers_License_Expiration);
self.Eye_Color:= if(STD.Str.ToUpperCase(trim(L.Eye_Color,left,right))='NULL','',L.Eye_Color);
self.Hair_Color:= if(STD.Str.ToUpperCase(trim(L.Hair_Color,left,right))='NULL','',L.Hair_Color);
self.Height:= if(STD.Str.ToUpperCase(trim(L.Height,left,right))='NULL','',L.Height);
self.Weight:= if(STD.Str.ToUpperCase(trim(L.Weight,left,right))='NUL','',L.Weight);
self.Race:= if(STD.Str.ToUpperCase(trim(L.Race,left,right))='NULL','',L.Race);
self.Pedestrian_Cyclist_Visibility:= if(STD.Str.ToUpperCase(trim(L.Pedestrian_Cyclist_Visibility,left,right))='NULL','',L.Pedestrian_Cyclist_Visibility);
self.First_Aid_By:= if(STD.Str.ToUpperCase(trim(L.First_Aid_By,left,right))='NULL','',L.First_Aid_By);
self.Person_First_Aid_Party_Type:= if(STD.Str.ToUpperCase(trim(L.Person_First_Aid_Party_Type,left,right))='NULL','',L.Person_First_Aid_Party_Type);
self.Person_First_Aid_Party_Type_Description:= if(STD.Str.ToUpperCase(trim(L.Person_First_Aid_Party_Type_Description,left,right))='NULL','',L.Person_First_Aid_Party_Type_Description);
self.Deceased_At_Scene:= if(STD.Str.ToUpperCase(trim(L.Deceased_At_Scene,left,right))='NULL','',L.Deceased_At_Scene);
self.Death_Date:= if(STD.Str.ToUpperCase(trim(L.Death_Date,left,right))='NULL','',L.Death_Date);
self.Death_TIme:= if(STD.Str.ToUpperCase(trim(L.Death_TIme,left,right))='NULL','',L.Death_TIme);
self.Extricated:= if(STD.Str.ToUpperCase(trim(L.Extricated,left,right))='NULL','',L.Extricated);
self.Alcohol_Drug_Use:= if(STD.Str.ToUpperCase(trim(L.Alcohol_Drug_Use,left,right))='NULL','',L.Alcohol_Drug_Use);
self.Physical_Defects:= if(STD.Str.ToUpperCase(trim(L.Physical_Defects,left,right))='NULL','',L.Physical_Defects);
self.Driver_Residence:= if(STD.Str.ToUpperCase(trim(L.Driver_Residence,left,right))='NULL','',L.Driver_Residence);
self.ID_Type:= if(STD.Str.ToUpperCase(trim(L.ID_Type,left,right))='NULL','',L.ID_Type);
self.Proof_of_Insurance:= if(STD.Str.ToUpperCase(trim(L.Proof_of_Insurance,left,right))='NULL','',L.Proof_of_Insurance);
self.Insurance_Expired:= if(STD.Str.ToUpperCase(trim(L.Insurance_Expired,left,right))='NUL','',L.Insurance_Expired);
self.Insurance_Exempt:= if(STD.Str.ToUpperCase(trim(L.Insurance_Exempt,left,right))='NUL','',L.Insurance_Exempt);
self.Insurance_Type:= if(STD.Str.ToUpperCase(trim(L.Insurance_Type,left,right))='NULL','',L.Insurance_Type);
self.Violent_Crime_Victim_Notified:= if(STD.Str.ToUpperCase(trim(L.Violent_Crime_Victim_Notified,left,right))='NUL','',L.Violent_Crime_Victim_Notified);
self.Insurance_Company_Code:= if(STD.Str.ToUpperCase(trim(L.Insurance_Company_Code,left,right))='NULL','',L.Insurance_Company_Code);
self.Refused_Medical_Treatment:= if(STD.Str.ToUpperCase(trim(L.Refused_Medical_Treatment,left,right))='NUL','',L.Refused_Medical_Treatment);
self.Safety_Equipment_Available_or_Used:= if(STD.Str.ToUpperCase(trim(L.Safety_Equipment_Available_or_Used,left,right))='NULL','',L.Safety_Equipment_Available_or_Used);
self.Apartment_Number:= if(STD.Str.ToUpperCase(trim(L.Apartment_Number,left,right))='NULL','',L.Apartment_Number);
self.Licensed_Driver:= if(STD.Str.ToUpperCase(trim(L.Licensed_Driver,left,right))='NULL','',L.Licensed_Driver);
self.Physical_Emotional_Status:= if(STD.Str.ToUpperCase(trim(L.Physical_Emotional_Status,left,right))='NULL','',L.Physical_Emotional_Status);
self.Driver_Presence:= if(STD.Str.ToUpperCase(trim(L.Driver_Presence,left,right))='NULL','',L.Driver_Presence);
self.Ejection_Path:= if(STD.Str.ToUpperCase(trim(L.Ejection_Path,left,right))='NULL','',L.Ejection_Path);
self.State_Person_ID:= if(STD.Str.ToUpperCase(trim(L.State_Person_ID,left,right))='NULL','',L.State_Person_ID);
self.Contributed_to_Collision:= if(STD.Str.ToUpperCase(trim(L.Contributed_to_Collision,left,right))='NUL','',L.Contributed_to_Collision);
self.Person_Transported_for_Medical_Care:= if(STD.Str.ToUpperCase(trim(L.Person_Transported_for_Medical_Care,left,right))='NULL','',L.Person_Transported_for_Medical_Care);
self.Transported_by_Agency_Type:= if(STD.Str.ToUpperCase(trim(L.Transported_by_Agency_Type,left,right))='NULL','',L.Transported_by_Agency_Type);
self.Transported_To:= if(STD.Str.ToUpperCase(trim(L.Transported_To,left,right))='NULL','',L.Transported_To);
self.Non_Motorist_Driver_License_Number:= if(STD.Str.ToUpperCase(trim(L.Non_Motorist_Driver_License_Number,left,right))='NULL','',L.Non_Motorist_Driver_License_Number);
self.Air_Bag_Type:= if(STD.Str.ToUpperCase(trim(L.Air_Bag_Type,left,right))='NULL','',L.Air_Bag_Type);
self.Cell_Phone_Use:= if(STD.Str.ToUpperCase(trim(L.Cell_Phone_Use,left,right))='NULL','',L.Cell_Phone_Use);
self.Driver_License_Restriction_Compliance:= if(STD.Str.ToUpperCase(trim(L.Driver_License_Restriction_Compliance,left,right))='NULL','',L.Driver_License_Restriction_Compliance);
self.Driver_License_Endorsement_Compliance:= if(STD.Str.ToUpperCase(trim(L.Driver_License_Endorsement_Compliance,left,right))='NULL','',L.Driver_License_Endorsement_Compliance);
self.Driver_License_Compliance:= if(STD.Str.ToUpperCase(trim(L.Driver_License_Compliance,left,right))='NULL','',L.Driver_License_Compliance);
self.Contributing_Circumstances_p1:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_p1,left,right))='NULL','',L.Contributing_Circumstances_p1);
self.Contributing_Circumstances_p2:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_p2,left,right))='NULL','',L.Contributing_Circumstances_p2);
self.Contributing_Circumstances_p3:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_p3,left,right))='NULL','',L.Contributing_Circumstances_p3);
self.Contributing_Circumstances_p4:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_p4,left,right))='NULL','',L.Contributing_Circumstances_p4);
self.Passenger_Number:= if(STD.Str.ToUpperCase(trim(L.Passenger_Number,left,right))='NUL','',L.Passenger_Number);
self.Person_Deleted:= if(STD.Str.ToUpperCase(trim(L.Person_Deleted,left,right))='NULL','',L.Person_Deleted);
self.Owner_Lessee:= if(STD.Str.ToUpperCase(trim(L.Owner_Lessee,left,right))='NULL','',L.Owner_Lessee);
self.Driver_Charged:= if(STD.Str.ToUpperCase(trim(L.Driver_Charged,left,right))='NULL','',L.Driver_Charged);
self.Motorcycle_Eye_Protection:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Eye_Protection,left,right))='NULL','',L.Motorcycle_Eye_Protection);
self.Motorcycle_Long_Sleeves:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Long_Sleeves,left,right))='NULL','',L.Motorcycle_Long_Sleeves);
self.Motorcycle_Long_Pants:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Long_Pants,left,right))='NULL','',L.Motorcycle_Long_Pants);
self.Motorcycle_Over_Ankle_Boots:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Over_Ankle_Boots,left,right))='NULL','',L.Motorcycle_Over_Ankle_Boots);
self.Contributing_Circumstances_Environmental_Non_Incident1:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Environmental_Non_Incident1,left,right))='NULL','',L.Contributing_Circumstances_Environmental_Non_Incident1);
self.Contributing_Circumstances_Environmental_Non_Incident2:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Environmental_Non_Incident2,left,right))='NULL','',L.Contributing_Circumstances_Environmental_Non_Incident2);
self.Alcohol_Drug_Test_Given:= if(STD.Str.ToUpperCase(trim(L.Alcohol_Drug_Test_Given,left,right))='NULL','',L.Alcohol_Drug_Test_Given);
self.Alcohol_Drug_Test_Type:= if(STD.Str.ToUpperCase(trim(L.Alcohol_Drug_Test_Type,left,right))='NULL','',L.Alcohol_Drug_Test_Type);
self.Alcohol_Drug_Test_Result:= if(STD.Str.ToUpperCase(trim(L.Alcohol_Drug_Test_Result,left,right))='NULL','',L.Alcohol_Drug_Test_Result);
self.VIN:= if(STD.Str.ToUpperCase(trim(L.VIN,left,right))='NULL','',L.VIN);
self.VIN_Status:= if(STD.Str.ToUpperCase(trim(L.VIN_Status,left,right))='NULL','',L.VIN_Status);
self.Damaged_Areas_Derived1:= if(STD.Str.ToUpperCase(trim(L.Damaged_Areas_Derived1,left,right))='NULL','',L.Damaged_Areas_Derived1);
self.Damaged_Areas_Derived2:= if(STD.Str.ToUpperCase(trim(L.Damaged_Areas_Derived2,left,right))='NULL','',L.Damaged_Areas_Derived2);
self.Airbags_Deployed_Derived:= if(STD.Str.ToUpperCase(trim(L.Airbags_Deployed_Derived,left,right))='NULL','',L.Airbags_Deployed_Derived);
self.Vehicle_Towed_Derived:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Towed_Derived,left,right))='NULL','',L.Vehicle_Towed_Derived);
self.Unit_Type:= if(STD.Str.ToUpperCase(trim(L.Unit_Type,left,right))='NULL','',L.Unit_Type);
self.Unit_Number:= if(STD.Str.ToUpperCase(trim(L.Unit_Number,left,right))='NULL','',L.Unit_Number);
self.Registration_State:= if(STD.Str.ToUpperCase(trim(L.Registration_State,left,right))='NU','',L.Registration_State);
self.Registration_Year:= if(STD.Str.ToUpperCase(trim(L.Registration_Year,left,right))='NULL','',L.Registration_Year);
self.License_Plate:= if(STD.Str.ToUpperCase(trim(L.License_Plate,left,right))='NULL','',L.License_Plate);
self.Make:= if(STD.Str.ToUpperCase(trim(L.Make,left,right))='NULL','',L.Make);
self.Model_Yr:= if(STD.Str.ToUpperCase(trim(L.Model_Yr,left,right))='NULL','',L.Model_Yr);
self.Model:= if(STD.Str.ToUpperCase(trim(L.Model,left,right))='NULL','',L.Model);
self.Body_Type_Category:= if(STD.Str.ToUpperCase(trim(L.Body_Type_Category,left,right))='NULL','',L.Body_Type_Category);
self.Total_Occupants_in_Vehicle:= if(STD.Str.ToUpperCase(trim(L.Total_Occupants_in_Vehicle,left,right))='NUL','',L.Total_Occupants_in_Vehicle);
self.Special_Function_in_Transport:= if(STD.Str.ToUpperCase(trim(L.Special_Function_in_Transport,left,right))='NULL','',L.Special_Function_in_Transport);
self.Special_Function_in_Transport_Other_Unit:= if(STD.Str.ToUpperCase(trim(L.Special_Function_in_Transport_Other_Unit,left,right))='NULL','',L.Special_Function_in_Transport_Other_Unit);
self.Emergency_Use:= if(STD.Str.ToUpperCase(trim(L.Emergency_Use,left,right))='NULL','',L.Emergency_Use);
self.Posted_Satutory_Speed_Limit:= if(STD.Str.ToUpperCase(trim(L.Posted_Satutory_Speed_Limit,left,right))='NULL','',L.Posted_Satutory_Speed_Limit);
self.Direction_of_Travel_Before_Crash:= if(STD.Str.ToUpperCase(trim(L.Direction_of_Travel_Before_Crash,left,right))='NULL','',L.Direction_of_Travel_Before_Crash);
self.Trafficway_Description:= if(STD.Str.ToUpperCase(trim(L.Trafficway_Description,left,right))='NULL','',L.Trafficway_Description);
self.Traffic_Control_Device_Type:= if(STD.Str.ToUpperCase(trim(L.Traffic_Control_Device_Type,left,right))='NULL','',L.Traffic_Control_Device_Type);
self.Vehicle_Maneuver_Action_Prior1:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Maneuver_Action_Prior1,left,right))='NULL','',L.Vehicle_Maneuver_Action_Prior1);
self.Vehicle_Maneuver_Action_Prior2:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Maneuver_Action_Prior2,left,right))='NULL','',L.Vehicle_Maneuver_Action_Prior2);
self.Impact_Area1:= if(STD.Str.ToUpperCase(trim(L.Impact_Area1,left,right))='NULL','',L.Impact_Area1);
self.Impact_Area2:= if(STD.Str.ToUpperCase(trim(L.Impact_Area2,left,right))='NULL','',L.Impact_Area2);
self.Event_Sequence1:= if(STD.Str.ToUpperCase(trim(L.Event_Sequence1,left,right))='NULL','',L.Event_Sequence1);
self.Event_Sequence2:= if(STD.Str.ToUpperCase(trim(L.Event_Sequence2,left,right))='NULL','',L.Event_Sequence2);
self.Event_Sequence3:= if(STD.Str.ToUpperCase(trim(L.Event_Sequence3,left,right))='NULL','',L.Event_Sequence3);
self.Event_Sequence4:= if(STD.Str.ToUpperCase(trim(L.Event_Sequence4,left,right))='NULL','',L.Event_Sequence4);
self.Most_Harmful_Event_for_Vehicle:= if(STD.Str.ToUpperCase(trim(L.Most_Harmful_Event_for_Vehicle,left,right))='NULL','',L.Most_Harmful_Event_for_Vehicle);
self.Bus_Use:= if(STD.Str.ToUpperCase(trim(L.Bus_Use,left,right))='NULL','',L.Bus_Use);
self.Vehicle_Hit_and_Run:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Hit_and_Run,left,right))='NULL','',L.Vehicle_Hit_and_Run);
self.Vehicle_Towed:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Towed,left,right))='NULL','',L.Vehicle_Towed);
self.Contributing_Circumstances_v1:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_v1,left,right))='NULL','',L.Contributing_Circumstances_v1);
self.Contributing_Circumstances_v2:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_v2,left,right))='NULL','',L.Contributing_Circumstances_v2);
self.Contributing_Circumstances_v3:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_v3,left,right))='NULL','',L.Contributing_Circumstances_v3);
self.Contributing_Circumstances_v4:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_v4,left,right))='NULL','',L.Contributing_Circumstances_v4);
self.On_Street:= if(STD.Str.ToUpperCase(trim(L.On_Street,left,right))='NULL','',L.On_Street);
self.Vehicle_Color:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Color,left,right))='NUL','',L.Vehicle_Color);
self.Estimated_Speed:= if(STD.Str.ToUpperCase(trim(L.Estimated_Speed,left,right))='NULL','',L.Estimated_Speed);
self.Accident_Investigation_Site:= if(STD.Str.ToUpperCase(trim(L.Accident_Investigation_Site,left,right))='NULL','',L.Accident_Investigation_Site);
self.Car_Fire:= if(STD.Str.ToUpperCase(trim(L.Car_Fire,left,right))='NULL','',L.Car_Fire);
self.Vehicle_Damage_Amount:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Damage_Amount,left,right))='NULL','',L.Vehicle_Damage_Amount);
self.Contributing_Factors1:= if(STD.Str.ToUpperCase(trim(L.Contributing_Factors1,left,right))='NULL','',L.Contributing_Factors1);
self.Contributing_Factors2:= if(STD.Str.ToUpperCase(trim(L.Contributing_Factors2,left,right))='NULL','',L.Contributing_Factors2);
self.Contributing_Factors3:= if(STD.Str.ToUpperCase(trim(L.Contributing_Factors3,left,right))='NULL','',L.Contributing_Factors3);
self.Contributing_Factors4:= if(STD.Str.ToUpperCase(trim(L.Contributing_Factors4,left,right))='NULL','',L.Contributing_Factors4);
self.Other_Contributing_Factors1:= if(STD.Str.ToUpperCase(trim(L.Other_Contributing_Factors1,left,right))='NULL','',L.Other_Contributing_Factors1);
self.Other_Contributing_Factors2:= if(STD.Str.ToUpperCase(trim(L.Other_Contributing_Factors2,left,right))='NULL','',L.Other_Contributing_Factors2);
self.Other_Contributing_Factors3:= if(STD.Str.ToUpperCase(trim(L.Other_Contributing_Factors3,left,right))='NULL','',L.Other_Contributing_Factors3);
self.Vision_Obscured1:= if(STD.Str.ToUpperCase(trim(L.Vision_Obscured1,left,right))='NULL','',L.Vision_Obscured1);
self.Vision_Obscured2:= if(STD.Str.ToUpperCase(trim(L.Vision_Obscured2,left,right))='NULL','',L.Vision_Obscured2);
self.Vehicle_on_Road:= if(STD.Str.ToUpperCase(trim(L.Vehicle_on_Road,left,right))='NULL','',L.Vehicle_on_Road);
self.Ran_Off_Road:= if(STD.Str.ToUpperCase(trim(L.Ran_Off_Road,left,right))='NULL','',L.Ran_Off_Road);
self.Skidding_Occurred:= if(STD.Str.ToUpperCase(trim(L.Skidding_Occurred,left,right))='NULL','',L.Skidding_Occurred);
self.Vehicle_Incident_Location1:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Incident_Location1,left,right))='NULL','',L.Vehicle_Incident_Location1);
self.Vehicle_Incident_Location2:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Incident_Location2,left,right))='NULL','',L.Vehicle_Incident_Location2);
self.Vehicle_Incident_Location3:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Incident_Location3,left,right))='NULL','',L.Vehicle_Incident_Location3);
self.Vehicle_Disabled:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Disabled,left,right))='NULL','',L.Vehicle_Disabled);
self.Vehicle_Removed_To:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Removed_To,left,right))='NULL','',L.Vehicle_Removed_To);
self.Removed_By:= if(STD.Str.ToUpperCase(trim(L.Removed_By,left,right))='NULL','',L.Removed_By);
self.Tow_Requested_by_Driver:= if(STD.Str.ToUpperCase(trim(L.Tow_Requested_by_Driver,left,right))='NULL','',L.Tow_Requested_by_Driver);
self.Solicitation:= if(STD.Str.ToUpperCase(trim(L.Solicitation,left,right))='NULL','',L.Solicitation);
self.Other_Unit_Vehicle_Damage_Amount:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Vehicle_Damage_Amount,left,right))='0','',L.Other_Unit_Vehicle_Damage_Amount);
self.Other_Unit_Model_Year:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Model_Year,left,right))='NULL','',L.Other_Unit_Model_Year);
self.Other_Unit_Make:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Make,left,right))='NULL','',L.Other_Unit_Make);
self.Other_Unit_Model:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Model,left,right))='NULL','',L.Other_Unit_Model);
self.Other_Unit_VIN:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_VIN,left,right))='NULL','',L.Other_Unit_VIN);
self.Other_Unit_VIN_Status:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_VIN_Status,left,right))='NULL','',L.Other_Unit_VIN_Status);
self.Other_Unit_Body_Type_Category:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Body_Type_Category,left,right))='NULL','',L.Other_Unit_Body_Type_Category);
self.Other_Unit_Registration_State:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Registration_State,left,right))='NU','',L.Other_Unit_Registration_State);
self.Other_Unit_Registration_Year:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Registration_Year,left,right))='NULL','',L.Other_Unit_Registration_Year);
self.Other_Unit_License_Plate:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_License_Plate,left,right))='NULL','',L.Other_Unit_License_Plate);
self.Other_Unit_Color:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Color,left,right))='NULL','',L.Other_Unit_Color);
self.Other_Unit_Type:= if(STD.Str.ToUpperCase(trim(L.Other_Unit_Type,left,right))='NULL','',L.Other_Unit_Type);
self.Damaged_Areas1:= if(STD.Str.ToUpperCase(trim(L.Damaged_Areas1,left,right))='NULL','',L.Damaged_Areas1);
self.Damaged_Areas2:= if(STD.Str.ToUpperCase(trim(L.Damaged_Areas2,left,right))='NULL','',L.Damaged_Areas2);
self.Parked_Vehicle:= if(STD.Str.ToUpperCase(trim(L.Parked_Vehicle,left,right))='NULL','',L.Parked_Vehicle);
self.Damage_Rating1:= if(STD.Str.ToUpperCase(trim(L.Damage_Rating1,left,right))='NULL','',L.Damage_Rating1);
self.Damage_Rating2:= if(STD.Str.ToUpperCase(trim(L.Damage_Rating2,left,right))='NULL','',L.Damage_Rating2);
self.Vehicle_Inventoried:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Inventoried,left,right))='NUL','',L.Vehicle_Inventoried);
self.Vehicle_Defect_Apparent:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Defect_Apparent,left,right))='NULL','',L.Vehicle_Defect_Apparent);
self.Defect_May_Have_Contributed1:= if(STD.Str.ToUpperCase(trim(L.Defect_May_Have_Contributed1,left,right))='NULL','',L.Defect_May_Have_Contributed1);
self.Defect_May_Have_Contributed2:= if(STD.Str.ToUpperCase(trim(L.Defect_May_Have_Contributed2,left,right))='NULL','',L.Defect_May_Have_Contributed2);
self.Registration_Expiration:= if(STD.Str.ToUpperCase(trim(L.Registration_Expiration,left,right))='NULL','',L.Registration_Expiration);
self.Owner_Driver_Type:= if(STD.Str.ToUpperCase(trim(L.Owner_Driver_Type,left,right))='NULL','',L.Owner_Driver_Type);
self.Make_Code:= if(STD.Str.ToUpperCase(trim(L.Make_Code,left,right))='NULL','',L.Make_Code);
self.Number_Trailing_Units:= if(STD.Str.ToUpperCase(trim(L.Number_Trailing_Units,left,right))='NU','',L.Number_Trailing_Units);
self.Vehicle_Position:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Position,left,right))='NULL','',L.Vehicle_Position);
self.Vehicle_Type:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Type,left,right))='NULL','',L.Vehicle_Type);
self.Motorcycle_Engine_Size:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Engine_Size,left,right))='NULL','',L.Motorcycle_Engine_Size);
self.Motorcycle_Driver_Educated:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Driver_Educated,left,right))='NULL','',L.Motorcycle_Driver_Educated);
self.Motorcycle_Helmet_Type:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Helmet_Type,left,right))='NULL','',L.Motorcycle_Helmet_Type);
self.Motorcycle_Passenger:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Passenger,left,right))='NULL','',L.Motorcycle_Passenger);
self.Motorcycle_Helmet_Stayed_On:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Helmet_Stayed_On,left,right))='NULL','',L.Motorcycle_Helmet_Stayed_On);
self.Motorcycle_Helmet_DOT_Snell:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Helmet_DOT_Snell,left,right))='NULL','',L.Motorcycle_Helmet_DOT_Snell);
self.Motorcycle_Saddlebag_Trunk:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Saddlebag_Trunk,left,right))='NULL','',L.Motorcycle_Saddlebag_Trunk);
self.Motorcycle_Trailer:= if(STD.Str.ToUpperCase(trim(L.Motorcycle_Trailer,left,right))='NULL','',L.Motorcycle_Trailer);
self.Pedacycle_Passenger:= if(STD.Str.ToUpperCase(trim(L.Pedacycle_Passenger,left,right))='NULL','',L.Pedacycle_Passenger);
self.Pedacycle_Headlights:= if(STD.Str.ToUpperCase(trim(L.Pedacycle_Headlights,left,right))='NULL','',L.Pedacycle_Headlights);
self.Pedacycle_Helmet:= if(STD.Str.ToUpperCase(trim(L.Pedacycle_Helmet,left,right))='NULL','',L.Pedacycle_Helmet);
self.Pedacycle_Rear_Reflectors:= if(STD.Str.ToUpperCase(trim(L.Pedacycle_Rear_Reflectors,left,right))='NULL','',L.Pedacycle_Rear_Reflectors);
self.CDL_Required:= if(STD.Str.ToUpperCase(trim(L.CDL_Required,left,right))='NUL','',L.CDL_Required);
self.Truck_Bus_Supplement_Required:= if(STD.Str.ToUpperCase(trim(L.Truck_Bus_Supplement_Required,left,right))='NUL','',L.Truck_Bus_Supplement_Required);
self.Unit_Damage_Amount:= if(STD.Str.ToUpperCase(trim(L.Unit_Damage_Amount,left,right))='NULL','',L.Unit_Damage_Amount);
self.Airbag_Switch:= if(STD.Str.ToUpperCase(trim(L.Airbag_Switch,left,right))='NULL','',L.Airbag_Switch);
self.Underride_Override_Damage:= if(STD.Str.ToUpperCase(trim(L.Underride_Override_Damage,left,right))='NULL','',L.Underride_Override_Damage);
self.Vehicle_Attachment:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Attachment,left,right))='NULL','',L.Vehicle_Attachment);
self.Action_on_Impact:= if(STD.Str.ToUpperCase(trim(L.Action_on_Impact,left,right))='NULL','',L.Action_on_Impact);
self.Speed_Detection_Method:= if(STD.Str.ToUpperCase(trim(L.Speed_Detection_Method,left,right))='NULL','',L.Speed_Detection_Method);
self.Non_Motorist_Direction_of_Travel_From:= if(STD.Str.ToUpperCase(trim(L.Non_Motorist_Direction_of_Travel_From,left,right))='NULL','',L.Non_Motorist_Direction_of_Travel_From);
self.Non_Motorist_Direction_of_Travel_To:= if(STD.Str.ToUpperCase(trim(L.Non_Motorist_Direction_of_Travel_To,left,right))='NULL','',L.Non_Motorist_Direction_of_Travel_To);
self.Vehicle_Use:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Use,left,right))='NULL','',L.Vehicle_Use);
self.Department_Unit_Number:= if(STD.Str.ToUpperCase(trim(L.Department_Unit_Number,left,right))='NULL','',L.Department_Unit_Number);
self.Equipment_in_Use_at_Time_of_Accident:= if(STD.Str.ToUpperCase(trim(L.Equipment_in_Use_at_Time_of_Accident,left,right))='NULL','',L.Equipment_in_Use_at_Time_of_Accident);
self.Actions_of_Police_Vehicle:= if(STD.Str.ToUpperCase(trim(L.Actions_of_Police_Vehicle,left,right))='NULL','',L.Actions_of_Police_Vehicle);
self.Vehicle_Command_ID:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Command_ID,left,right))='NULL','',L.Vehicle_Command_ID);
self.Traffic_Control_Device_Inoperative:= if(STD.Str.ToUpperCase(trim(L.Traffic_Control_Device_Inoperative,left,right))='NULL','',L.Traffic_Control_Device_Inoperative);
self.Direction_of_Impact1:= if(STD.Str.ToUpperCase(trim(L.Direction_of_Impact1,left,right))='NULL','',L.Direction_of_Impact1);
self.Direction_of_Impact2:= if(STD.Str.ToUpperCase(trim(L.Direction_of_Impact2,left,right))='NULL','',L.Direction_of_Impact2);
self.Ran_Off_Road_Direction:= if(STD.Str.ToUpperCase(trim(L.Ran_Off_Road_Direction,left,right))='NULL','',L.Ran_Off_Road_Direction);
self.VIN_Other_Unit_Number:= if(STD.Str.ToUpperCase(trim(L.VIN_Other_Unit_Number,left,right))='NULL','',L.VIN_Other_Unit_Number);
self.Damaged_Area_Generic:= if(STD.Str.ToUpperCase(trim(L.Damaged_Area_Generic,left,right))='NULL','',L.Damaged_Area_Generic);
self.Vision_Obscured_Description:= if(STD.Str.ToUpperCase(trim(L.Vision_Obscured_Description,left,right))='NULL','',L.Vision_Obscured_Description);
self.Inattention_Description:= if(STD.Str.ToUpperCase(trim(L.Inattention_Description,left,right))='NULL','',L.Inattention_Description);
self.Contributing_Circumstances_Defect_Description:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Defect_Description,left,right))='NULL','',L.Contributing_Circumstances_Defect_Description);
self.Contributing_Circumstances_Other_Descriptioin:= if(STD.Str.ToUpperCase(trim(L.Contributing_Circumstances_Other_Descriptioin,left,right))='NULL','',L.Contributing_Circumstances_Other_Descriptioin);
self.Vehicle_Maneuver_Action_Prior_Other_Description:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Maneuver_Action_Prior_Other_Description,left,right))='NULL','',L.Vehicle_Maneuver_Action_Prior_Other_Description);
self.Vehicle_Special_Use:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Special_Use,left,right))='NULL','',L.Vehicle_Special_Use);
self.Vehicle_Type_Extended1:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Type_Extended1,left,right))='NULL','',L.Vehicle_Type_Extended1);
self.Vehicle_Type_Extended2:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Type_Extended2,left,right))='NULL','',L.Vehicle_Type_Extended2);
self.Fixed_Object_Direction1:= if(STD.Str.ToUpperCase(trim(L.Fixed_Object_Direction1,left,right))='NULL','',L.Fixed_Object_Direction1);
self.Fixed_Object_Direction2:= if(STD.Str.ToUpperCase(trim(L.Fixed_Object_Direction2,left,right))='NULL','',L.Fixed_Object_Direction2);
self.Fixed_Object_Direction3:= if(STD.Str.ToUpperCase(trim(L.Fixed_Object_Direction3,left,right))='NULL','',L.Fixed_Object_Direction3);
self.Fixed_Object_Direction4:= if(STD.Str.ToUpperCase(trim(L.Fixed_Object_Direction4,left,right))='NULL','',L.Fixed_Object_Direction4);
self.Vehicle_Left_at_Scene:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Left_at_Scene,left,right))='NULL','',L.Vehicle_Left_at_Scene);
self.Vehicle_Impounded:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Impounded,left,right))='NULL','',L.Vehicle_Impounded);
self.Vehicle_Driven_From_Scene:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Driven_From_Scene,left,right))='NULL','',L.Vehicle_Driven_From_Scene);
self.On_Cross_Street:= if(STD.Str.ToUpperCase(trim(L.On_Cross_Street,left,right))='NULL','',L.On_Cross_Street);
self.Actions_of_Police_Vehicle_Description:= if(STD.Str.ToUpperCase(trim(L.Actions_of_Police_Vehicle_Description,left,right))='NULL','',L.Actions_of_Police_Vehicle_Description);
//new fields
self.law_enforcement_suspects_alcohol_use1 := if(STD.Str.ToUpperCase(trim(L.law_enforcement_suspects_alcohol_use1,left,right))='NULL','',L.law_enforcement_suspects_alcohol_use1);
self.law_enforcement_suspects_drug_use1 := if(STD.Str.ToUpperCase(trim(L.law_enforcement_suspects_drug_use1,left,right))='NULL','',L.law_enforcement_suspects_drug_use1) ;
self.Avoidance_Maneuver2 := if(STD.Str.ToUpperCase(trim(L.Avoidance_Maneuver2,left,right))='NULL','',L.Avoidance_Maneuver2);
self.Avoidance_Maneuver3 := if(STD.Str.ToUpperCase(trim(L.Avoidance_Maneuver3,left,right))='NULL','',L.Avoidance_Maneuver3);
self.Avoidance_Maneuver4 := if(STD.Str.ToUpperCase(trim(L.Avoidance_Maneuver4,left,right))='NULL','',L.Avoidance_Maneuver4);
self.Damaged_Areas_Severity1:= if(STD.Str.ToUpperCase(trim(L.Damaged_Areas_Severity1 ,left,right))='NULL','',L.Damaged_Areas_Severity1);
self.Damaged_Areas_Severity2 := if(STD.Str.ToUpperCase(trim(L.Damaged_Areas_Severity2,left,right))='NULL','',L.Damaged_Areas_Severity2);
self.Vehicle_Outside_City_Indicator:= if(STD.Str.ToUpperCase(trim(L.Vehicle_Outside_City_Indicator,left,right))='NULL','', L.Vehicle_Outside_City_Indicator);
self.Vehicle_Outside_City_Distance_Miles := if(STD.Str.ToUpperCase(trim(L.Vehicle_Outside_City_Distance_Miles,left,right))='NULL','',L.Vehicle_Outside_City_Distance_Miles);
self.Vehicle_Outside_City_Direction := if(STD.Str.ToUpperCase(trim(L.Vehicle_Outside_City_Direction,left,right))='NULL','',L.Vehicle_Outside_City_Direction);
self.Vehicle_Crash_Cityplace := if(STD.Str.ToUpperCase(trim(L.Vehicle_Crash_Cityplace,left,right))='NULL','',L.Vehicle_Crash_Cityplace);
self.Insurance_Company_Standardized := if(STD.Str.ToUpperCase(trim(L.Insurance_Company_Standardized,left,right))='NULL','',L.Insurance_Company_Standardized);
self.EMS_Notified_Time  := if(STD.Str.ToUpperCase(trim(L.EMS_Notified_Time,left,right))='NULL','',L.EMS_Notified_Time);
self.EMS_Arrival_Time  := if(STD.Str.ToUpperCase(trim(L.EMS_Arrival_Time,left,right))='NULL','',L.EMS_Arrival_Time);

self.Insurance_Expiration_Date := if(STD.Str.ToUpperCase(trim(l.Insurance_Expiration_Date,left,right))='NULL','',l.Insurance_Expiration_Date); 
self.Insurance_Policy_Holder:= if( STD.Str.ToUpperCase(trim(l.Insurance_Policy_Holder,left,right))='N','',l.Insurance_Policy_Holder); 
self.Is_Tag_Converted:= if(STD.Str.ToUpperCase(trim(l.Is_Tag_Converted,left,right))='NULL','',l.Is_Tag_Converted); 
self.VIN_Original := if(STD.Str.ToUpperCase(trim(l.VIN_Original,left,right))='NULL','',l.VIN_Original); 
self.Make_Original := if(STD.Str.ToUpperCase(trim(l.Make_Original,left,right))='NULL','',l.Make_Original); 
self.Model_Original := if(STD.Str.ToUpperCase(trim(l.Model_Original,left,right))='NULL','',l.Model_Original); 
self.Model_Year_Original := if(STD.Str.ToUpperCase(trim(l.Model_Year_Original,left,right))='NULL','',l.Model_Year_Original); 
self.Other_Unit_VIN_Original := if(STD.Str.ToUpperCase(trim(l.Other_Unit_VIN_Original,left,right))='NULL','',l.Other_Unit_VIN_Original); 
self.Other_Unit_Make_Original := if(STD.Str.ToUpperCase(trim(l.Other_Unit_Make_Original,left,right))='NULL','',l.Other_Unit_Make_Original); 
self.Other_Unit_Model_Original := if( STD.Str.ToUpperCase(trim(l.Other_Unit_Model_Original,left,right))='NULL','',l.Other_Unit_Model_Original); 
self.Other_Unit_Model_Year_Original:= if(STD.Str.ToUpperCase(trim(l.Other_Unit_Model_Year_Original,left,right))='NULL','',l.Other_Unit_Model_Year_Original); 


self.initial_point_of_contact	:=if(STD.Str.ToUpperCase(trim(l.initial_point_of_contact,left,right))='NULL','',l.initial_point_of_contact); 
self.vehicle_driveable:=if(STD.Str.ToUpperCase(trim(l.vehicle_driveable,left,right))='NULL','',l.vehicle_driveable); 
self.drivers_license_type	:=if(STD.Str.ToUpperCase(trim(l.drivers_license_type,left,right))='NULL','',l.drivers_license_type); 
self.alcohol_test_type_refused:=if(STD.Str.ToUpperCase(trim(l.alcohol_test_type_refused	,left,right))='NULL','',l.alcohol_test_type_refused); 
self.alcohol_test_type_not_offered	:=if(STD.Str.ToUpperCase(trim(l.alcohol_test_type_not_offered,left,right))='NULL','',l.alcohol_test_type_not_offered); 
self.alcohol_test_type_field:=if(STD.Str.ToUpperCase(trim(l.alcohol_test_type_field,left,right))='NULL','',l.alcohol_test_type_field); 
self.alcohol_test_type_pbt	:=if(STD.Str.ToUpperCase(trim(l.alcohol_test_type_pbt,left,right))='NULL','',l.alcohol_test_type_pbt); 
self.alcohol_test_type_breath	:=if(STD.Str.ToUpperCase(trim(l.alcohol_test_type_breath,left,right))='NULL','',l.alcohol_test_type_breath); 
self.alcohol_test_type_blood	:=if(STD.Str.ToUpperCase(trim(l.alcohol_test_type_blood,left,right))='NULL','',l.alcohol_test_type_blood); 
self.alcohol_test_type_urine	:=if(STD.Str.ToUpperCase(trim(l.alcohol_test_type_urine	,left,right))='NULL','',l.alcohol_test_type_urine); 
self.trapped	:=if(STD.Str.ToUpperCase(trim(l.trapped,left,right))='NULL','',l.trapped); 
self.dl_number_cdl_endorsements:=if(STD.Str.ToUpperCase(trim(l.dl_number_cdl_endorsements,left,right))='NULL','',l.dl_number_cdl_endorsements); 
self.dl_number_cdl_restrictions	:=if(STD.Str.ToUpperCase(trim(l.dl_number_cdl_restrictions,left,right))='NULL','',l.dl_number_cdl_restrictions); 	
self.dl_number_cdl_exempt	:=if(STD.Str.ToUpperCase(trim(l.dl_number_cdl_exempt,left,right))='NULL','',l.dl_number_cdl_exempt); 
self.dl_number_cdl_medical_card	:=if(STD.Str.ToUpperCase(trim(l.dl_number_cdl_medical_card,left,right))='NULL','',l.dl_number_cdl_medical_card); 
self.interlock_device_in_use	:=if(STD.Str.ToUpperCase(trim(l.interlock_device_in_use,left,right))='NULL','',l.interlock_device_in_use); 
self.drug_test_type_blood	:=if(STD.Str.ToUpperCase(trim(l.drug_test_type_blood,left,right))='NULL','',l.drug_test_type_blood); 
self.drug_test_type_urine:=if(STD.Str.ToUpperCase(trim(l.drug_test_type_urine,left,right))='NULL','',l.drug_test_type_urine); 
self.traffic_control_condition:=if(STD.Str.ToUpperCase(trim(l.traffic_control_condition,left,right))='NULL','',l.traffic_control_condition); 
self.intersection_related	:=if(STD.Str.ToUpperCase(trim(l.intersection_related	,left,right))='NULL','',l.intersection_related); 
self.special_study_local	:=if(STD.Str.ToUpperCase(trim(l.special_study_local,left,right))='NULL','',l.special_study_local); 
self.special_study_state	:=if(STD.Str.ToUpperCase(trim(l.special_study_state,left,right))='NULL','',l.special_study_state); 
self.off_road_vehicle_involved	:=if(STD.Str.ToUpperCase(trim(l.off_road_vehicle_involved,left,right))='NULL','',l.off_road_vehicle_involved); 
self.location_type2	:=if(STD.Str.ToUpperCase(trim(l.location_type2,left,right))='NULL','',l.location_type2); 
self.speed_limit_posted	:=if(STD.Str.ToUpperCase(trim(l.speed_limit_posted,left,right))='NULL','',l.speed_limit_posted); 
self.traffic_control_damage_notify_date:=if(STD.Str.ToUpperCase(trim(l.traffic_control_damage_notify_date,left,right))='NULL','',l.traffic_control_damage_notify_date); 
self.traffic_control_damage_notify_time	:=if(STD.Str.ToUpperCase(trim(l.traffic_control_damage_notify_time,left,right))='NULL','',l.traffic_control_damage_notify_time); 
self.traffic_control_damage_notify_name	:=if(STD.Str.ToUpperCase(trim( l.traffic_control_damage_notify_name,left,right))='NULL','',l.traffic_control_damage_notify_name); 
self.public_property_damaged :=if(STD.Str.ToUpperCase(trim(l.public_property_damaged ,left,right))='NULL','',l.public_property_damaged); 
self.replacement_report	:=if(STD.Str.ToUpperCase(trim(l.replacement_report	,left,right))='NULL','',l.replacement_report); 
self.deleted_report	:=if(STD.Str.ToUpperCase(trim(l.deleted_report,left,right))='NULL','',l.deleted_report); 
self.next_street_prefix	:=if(STD.Str.ToUpperCase(trim(l.next_street_prefix,left,right))='NULL','',l.next_street_prefix); 
self.Violator_Name:=if(STD.Str.ToUpperCase(trim(l.Violator_Name,left,right))='NULL','',l.Violator_Name); 
self.Type_Hazardous:=if(STD.Str.ToUpperCase(trim(l.Type_Hazardous,left,right))='NULL','',l.Type_Hazardous); 
self.Type_Other:=if(STD.Str.ToUpperCase(trim(l.Type_Other,left,right))='NULL','',l.Type_Other); 
self.Unit_Type_And_Axles1:=if(STD.Str.ToUpperCase(trim(l.Unit_Type_And_Axles1,left,right))='NULL','',l.Unit_Type_And_Axles1); 
self.Unit_Type_And_Axles2:=if(STD.Str.ToUpperCase(trim(l.Unit_Type_And_Axles2,left,right))='NULL','',l.Unit_Type_And_Axles2); 
self.Unit_Type_And_Axles3:=if(STD.Str.ToUpperCase(trim(l.Unit_Type_And_Axles3,left,right))='NULL','',l.Unit_Type_And_Axles3); 
self.Unit_Type_And_Axles4:=if(STD.Str.ToUpperCase(trim(l.Unit_Type_And_Axles4,left,right))='NULL','',l.Unit_Type_And_Axles4); 

self.incident_damage_amount :=if(STD.Str.ToUpperCase(trim(l.incident_damage_amount,left,right))='NULL','',l.incident_damage_amount); 
// silverlight
self.dot_use  := if(STD.Str.ToUpperCase(trim(l.dot_use,left,right))='NULL','',l.dot_use); 
self.number_of_persons_involved	:= if(STD.Str.ToUpperCase(trim(l.number_of_persons_involved,left,right))='NULL','',l.number_of_persons_involved); 
self.unusual_road_condition_other_description :=	if(STD.Str.ToUpperCase(trim(l.unusual_road_condition_other_description,left,right))='NULL','',l.unusual_road_condition_other_description); 
self.number_of_narrative_sections	:= if(STD.Str.ToUpperCase(trim(l.number_of_narrative_sections,left,right))='NULL','',l.number_of_narrative_sections); 
self.CAD_number	:= if(STD.Str.ToUpperCase(trim(l.CAD_number,left,right))='NULL','',l.CAD_number); 
self.visibility	:=if(STD.Str.ToUpperCase(trim(l.visibility,left,right))='NULL','',l.visibility); 
self.accident_at_intersection := 	if(STD.Str.ToUpperCase(trim(l.accident_at_intersection,left,right))='NULL','',l.accident_at_intersection); 
self.accident_not_at_intersection	:= if(STD.Str.ToUpperCase(trim(l.accident_not_at_intersection,left,right))='NULL','',l.accident_not_at_intersection); 
self.first_harmful_event_within_interchange := if(STD.Str.ToUpperCase(trim(l.first_harmful_event_within_interchange,left,right))='NULL','',l.first_harmful_event_within_interchange); 	
self.injury_involved := if(STD.Str.ToUpperCase(trim(l.injury_involved,left,right))='NULL','',l.injury_involved); 	
self.Citation_Status := if(STD.Str.ToUpperCase(trim(l.Citation_Status,left,right))='NULL','',l.Citation_Status); 	
self.commercial_vehicle	:= if(STD.Str.ToUpperCase(trim(l.commercial_vehicle,left,right))='NULL','',l.commercial_vehicle); 	
self.not_in_transport	:= if(STD.Str.ToUpperCase(trim(l.not_in_transport,left,right))='NULL','',l.not_in_transport); 	
self.other_unit_number := if(STD.Str.ToUpperCase(trim(l.other_unit_number,left,right))='NULL','',l.other_unit_number); 	
self.other_unit_length := if(STD.Str.ToUpperCase(trim(l.other_unit_length,left,right))='NULL','',l.other_unit_length); 	
self.other_unit_axles:= if(STD.Str.ToUpperCase(trim(l.other_unit_axles,left,right))='NULL','',l.other_unit_axles); 	
self.other_unit_plate_expiration	:= if(STD.Str.ToUpperCase(trim(l.other_unit_plate_expiration,left,right))='NULL','',l.other_unit_plate_expiration); 	
self.other_unit_permanent_registration	:= if(STD.Str.ToUpperCase(trim(l.other_unit_permanent_registration,left,right))='NULL','',l.other_unit_permanent_registration); 	
self.other_unit_model_year2:= if(STD.Str.ToUpperCase(trim(l.other_unit_model_year2,left,right))='NULL','',l.other_unit_model_year2); 	
self.other_unit_make2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_make2,left,right))='NULL','',l.other_unit_make2); 	
self.other_unit_vin2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_vin2,left,right))='NULL','',l.other_unit_vin2); 	
self.other_unit_registration_state2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_registration_state2,left,right))='NULL','',l.other_unit_registration_state2); 	
self.other_unit_registration_year2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_registration_year2,left,right))='NULL','',l.other_unit_registration_year2); 	
self.other_unit_license_plate2 := if(STD.Str.ToUpperCase(trim(l.other_unit_license_plate2,left,right))='NULL','',l.other_unit_license_plate2); 	
self.other_unit_number2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_number2,left,right))='NULL','',l.other_unit_number2); 	
self.other_unit_length2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_length2,left,right))='NULL','',l.other_unit_length2); 	
self.other_unit_axles2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_axles2,left,right))='NULL','',l.other_unit_axles2); 	
self.other_unit_plate_expiration2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_plate_expiration2,left,right))='NULL','',l.other_unit_plate_expiration2); 	
self.other_unit_permanent_registration2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_permanent_registration2,left,right))='NULL','',l.other_unit_permanent_registration2); 	
self.other_unit_type2	:= if(STD.Str.ToUpperCase(trim(l.other_unit_type2,left,right))='NULL','',l.other_unit_type2); 	
self.other_unit_model_year3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_model_year3,left,right))='NULL','',l.other_unit_model_year3); 	
self.other_unit_make3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_make3,left,right))='NULL','',l.other_unit_make3); 	
self.other_unit_vin3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_vin3,left,right))='NULL','',l.other_unit_vin3); 	
self.other_unit_registration_state3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_registration_state3,left,right))='NULL','',l.other_unit_registration_state3); 	
self.other_unit_registration_year3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_registration_year3,left,right))='NULL','',l.other_unit_registration_year3); 	
self.other_unit_license_plate3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_license_plate3,left,right))='NULL','',l.other_unit_license_plate3); 	
self.other_unit_number3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_number3,left,right))='NULL','',l.other_unit_number3); 	
self.other_unit_length3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_length3,left,right))='NULL','',l.other_unit_length3); 	
self.other_unit_axles3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_axles3,left,right))='NULL','',l.other_unit_axles3); 	
self.other_unit_plate_expiration3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_plate_expiration3,left,right))='NULL','',l.other_unit_plate_expiration3); 	
self.other_unit_permanent_registration3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_permanent_registration3,left,right))='NULL','',l.other_unit_permanent_registration3); 	
self.other_unit_type3	:= if(STD.Str.ToUpperCase(trim(l.other_unit_type3,left,right))='NULL','',l.other_unit_type3); 	
self.damaged_areas3	:= if(STD.Str.ToUpperCase(trim(l.damaged_areas3,left,right))='NULL','',l.damaged_areas3); 	
self.driver_distracted_by := if(STD.Str.ToUpperCase(trim(l.driver_distracted_by,left,right))='NULL','',l.driver_distracted_by); 		
self.non_motorist_type:= if(STD.Str.ToUpperCase(trim(l.non_motorist_type,left,right))='NULL','',l.non_motorist_type); 	
self.seating_position_row:= if(STD.Str.ToUpperCase(trim(l.seating_position_row,left,right))='NULL','',l.seating_position_row); 		
self.seating_position_seat	:= if(STD.Str.ToUpperCase(trim(l.seating_position_seat,left,right))='NULL','',l.seating_position_seat); 	
self.seating_position_description:= if(STD.Str.ToUpperCase(trim(l.seating_position_description,left,right))='NULL','',l.seating_position_description); 	
self.transported_id_number:= if(STD.Str.ToUpperCase(trim(l.transported_id_number,left,right))='NULL','',l.transported_id_number); 		
self.witness_number	:= if(STD.Str.ToUpperCase(trim(l.witness_number,left,right))='NULL','',l.witness_number); 	
self.date_of_birth_derived:= if(STD.Str.ToUpperCase(trim(l.date_of_birth_derived,left,right))='NULL','',l.date_of_birth_derived); 	
self.Property_Damage_ID:= if(STD.Str.ToUpperCase(trim(l.Property_Damage_ID,left,right))='NULL','',l.Property_Damage_ID); 	
self.property_owner_name:= if(STD.Str.ToUpperCase(trim(l.property_owner_name,left,right))='NULL','',l.property_owner_name); 	
self.damage_description	:= if(STD.Str.ToUpperCase(trim(l.damage_description,left,right))='NULL','',l.damage_description); 	
self.damage_estimate	:= if(STD.Str.ToUpperCase(trim(l.damage_estimate,left,right))='NULL','',l.damage_estimate); 	
self.Hazardous_Materials_Hazmat_Placard_Number1 := if(STD.Str.ToUpperCase(trim(l.Hazardous_Materials_Hazmat_Placard_Number1,left,right))='NULL','',l.Hazardous_Materials_Hazmat_Placard_Number1); 	
self.Hazardous_Materials_Hazmat_Placard_Number2 := if(STD.Str.ToUpperCase(trim(l.Hazardous_Materials_Hazmat_Placard_Number2,left,right))='NULL','',l.Hazardous_Materials_Hazmat_Placard_Number2); 	
self := L;
end;

outfile := project(infile,%trecs%(left));
endmacro;
