/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from motorvehicle.xml. ***/
/*===================================================*/

import iesp;

export motorvehicle := MODULE
			
export t_MVSearchBy := record
	string SSN {xpath('SSN')};
	string CompanyName {xpath('CompanyName')};
	string VIN {xpath('VIN')};
	string TagNumber {xpath('TagNumber')};
	string LicenseNumber {xpath('LicenseNumber')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string PhoneNumber {xpath('PhoneNumber')};//hidden[internal]
end;
		
export t_MVOption := record (iesp.share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	boolean UsePhonetics {xpath('UsePhonetics')};
	boolean IncludeNonRegulatedVehicleSources {xpath('IncludeNonRegulatedVehicleSources')};
end;
		
export t_MVSearchPerson := record (iesp.share.t_CriminalIndicators)
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string CompanyName {xpath('CompanyName')};
	string SSN {xpath('SSN')};
	string UniqueId {xpath('UniqueId')};
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string Sex {xpath('Sex')};
	iesp.share.t_Date SourceDateFirstSeen {xpath('SourceDateFirstSeen')};
	iesp.share.t_Date SourceDateLastSeen {xpath('SourceDateLastSeen')};
end;
		
export t_MVSearchVehicle := record
	string VIN {xpath('VIN')};
	string BodyStyle {xpath('BodyStyle')};
	string MajorColor {xpath('MajorColor')};
	string MinorColor {xpath('MinorColor')};
	string Series {xpath('Series')};
end;
		
export t_MVSearchVessel := record
	string HullId {xpath('HullId')};
	integer LengthFeet {xpath('LengthFeet')};
	string HullMaterialType {xpath('HullMaterialType')};
	string VesselType {xpath('VesselType')};
end;
		
export t_MVSearchRecord := record
	string VID {xpath('VID')};
	string RecordType {xpath('RecordType')};
	string VehicleType {xpath('VehicleType')};
	string Make {xpath('Make')};
	string Model {xpath('Model')};
	integer YearMake {xpath('YearMake')};
	t_MVSearchVehicle Vehicle {xpath('Vehicle')};
	t_MVSearchVessel Vessel {xpath('Vessel')};
	string TagNumber {xpath('TagNumber')};
	string VehicleNumber {xpath('VehicleNumber')};
	string StateOfOrigin {xpath('StateOfOrigin')};
	string StateNameOfOrigin {xpath('StateNameOfOrigin')};
	t_MVSearchPerson BestInfo {xpath('BestInfo')};//hidden[internal]
	dataset(t_MVSearchPerson) Owners {xpath('Owners/Owner'), MAXCOUNT(Constants.MV.MaxCountOwners)};
	dataset(t_MVSearchPerson) Registrants {xpath('Registrants/Registrant'), MAXCOUNT(Constants.MV.MaxCountRegistrants)};
	iesp.share.t_Date RegistrationDate {xpath('RegistrationDate')};
	boolean IsAccurintData {xpath('IsAccurintData')};//hidden[internal]
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')} := ROW({0,0,0},iesp.share.t_Date);
	boolean NonDMVSource {xpath('NonDMVSource')};
end;
		
export t_MVSearchResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_MVSearchRecord) Records {xpath('Records/Record'), MAXCOUNT(1)};
end;
		
export t_MotorVehicleSearch2By := record (iesp.share.t_BaseSearchBy)
	string VIN {xpath('VIN')};
	integer YearMake {xpath('YearMake')};
	string Make {xpath('Make')};
	string Model {xpath('Model')};
	string TagNumber {xpath('TagNumber')};
	string SSN {xpath('SSN')};
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string CompanyName {xpath('CompanyName')};
	string TitleNumber {xpath('TitleNumber')};
	iesp.share.t_Date TitleIssueDate {xpath('TitleIssueDate')};
	iesp.share.t_Date PreTitleIssueDate {xpath('PreTitleIssueDate')};
	boolean ExcludeLessors {xpath('ExcludeLessors')};
	string UniqueId {xpath('UniqueId')};
	string VehicleKey {xpath('VehicleKey')};//hidden[internal]
	string IterationKey {xpath('IterationKey')};//hidden[internal]
	string SequenceKey {xpath('SequenceKey')};//hidden[internal]
end;
		
export t_MotorVehicleSearch2Option := record (iesp.share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	boolean UsePhonetics {xpath('UsePhonetics')};
	boolean UseNicknames {xpath('UseNicknames')};
	boolean IncludeAlsoFound {xpath('IncludeAlsoFound')};
	boolean UseTagBlur {xpath('UseTagBlur')};
	string DataSource {xpath('DataSource')}; //values['All','Local','RealTime','']
	string RealTimePermissibleUse {xpath('RealTimePermissibleUse')}; //values['','Government','LawEnforcement','Parking','VerifyFraudOrDebt','Litigation','InsuranceClaims','InsuranceUnderwriting','TowedAndImpounded','PrivateToll','PrivateInvestigative','PrivateInvestigativeLitigation','EmployerVerify','']
	boolean DoCombined {xpath('DoCombined')};//hidden[internal]
	boolean IncludeCriminalIndicators {xpath('IncludeCriminalIndicators')};//hidden[internal]
	boolean UseExperian {xpath('UseExperian')};//hidden[internal]
	boolean InsuranceUsage {xpath('InsuranceUsage')};//hidden[internal]
	boolean IncludeDevelopedVehicles {xpath('IncludeDevelopedVehicles')};//hidden[internal]
	boolean AuthenticationUsage {xpath('AuthenticationUsage')};//hidden[internal]
	boolean IncludeNonRegulatedVehicleSources {xpath('IncludeNonRegulatedVehicleSources')};
	boolean MultiFamilyDwelling {xpath('MultiFamilyDwelling')};
	integer RegistrationType {xpath('RegistrationType')};
end;
		
export t_MotorVehicleSearchPersonOrBusiness := record (iesp.share.t_CriminalIndicators)
	string12 UniqueId {xpath('UniqueId')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string9 SSN {xpath('SSN')};
	string9 AppendSSN {xpath('AppendSSN')};
	string20 DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string10 Gender {xpath('Gender')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string70 BusinessName {xpath('BusinessName')};
	string12 BusinessId {xpath('BusinessId')};
	boolean SurnameMatch {xpath('SurnameMatch')};//hidden[internal]
	boolean FullNameMatch {xpath('FullNameMatch')};//hidden[internal]
	boolean AddressMatch {xpath('AddressMatch')};//hidden[internal]
	string30 NameSource {xpath('NameSource')};
end;
		
export t_MotorVehicleSearchRegistrationInfo := record
	string10 TrueLicensePlate {xpath('TrueLicensePlate')};
	string2 LicenseState {xpath('LicenseState')};
	iesp.share.t_Date FirstDate {xpath('FirstDate')};
	iesp.share.t_Date EarliestEffectiveDate {xpath('EarliestEffectiveDate')};
	iesp.share.t_Date LatestEffectiveDate {xpath('LatestEffectiveDate')};
	iesp.share.t_Date LatestExpirationDate {xpath('LatestExpirationDate')};
	string LicensePlate {xpath('LicensePlate')};
	string LicensePlateTypeCode {xpath('LicensePlateTypeCode')};
	string LicensePlateTypeDesc {xpath('LicensePlateTypeDesc')};
	string10 PreviousLicensePlate {xpath('PreviousLicensePlate')};
	string2 PreviousLicenseState {xpath('PreviousLicenseState')};
end;
		
export t_MotorVehicleSearchTitleInfo := record
	string20 Number {xpath('Number')};
	iesp.share.t_Date EarliestIssueDate {xpath('EarliestIssueDate')};
end;
		
export t_VendorInfo := record
	iesp.share.t_Date FirstReportedDate {xpath('FirstReportedDate')};
	iesp.share.t_Date LastReportedDate {xpath('LastReportedDate')};
end;
		
export t_MotorVehicleSearchRegistrant := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleSearchPersonOrBusiness RegistrantInfo {xpath('RegistrantInfo')};
	t_MotorVehicleSearchRegistrationInfo RegistrationInfo {xpath('RegistrationInfo')};
	t_VendorInfo VendorInfo {xpath('VendorInfo')};
	iesp.share.t_Date TitleIssueDate {xpath('TitleIssueDate')};
end;
		
export t_MotorVehicleSearchOwner := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleSearchPersonOrBusiness OwnerInfo {xpath('OwnerInfo')};
	t_MotorVehicleSearchTitleInfo TitleInfo {xpath('TitleInfo')};
	t_VendorInfo VendorInfo {xpath('VendorInfo')};
	iesp.share.t_Date SourceDateFirstSeen {xpath('SourceDateFirstSeen')};
	iesp.share.t_Date SourceDateLastSeen {xpath('SourceDateLastSeen')};
end;
		
export t_MotorVehicleSearchLienHolder := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleSearchPersonOrBusiness LienHolderInfo {xpath('LienHolderInfo')};
	iesp.share.t_Date LienDate {xpath('LienDate')};
	string70 StandardizedName {xpath('StandardizedName')};
end;
		
export t_MotorVehicleSearchLessee := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleSearchPersonOrBusiness LesseeInfo {xpath('LesseeInfo')};
end;
		
export t_MotorVehicleSearchLessor := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleSearchPersonOrBusiness LessorInfo {xpath('LessorInfo')};
end;
		
export t_MotorVehicleSearchBrand := record
	iesp.share.t_Date Date {xpath('Date')};
	string2 State {xpath('State')};
	string3 Code {xpath('Code')};
	string50 _Type {xpath('Type')};
end;
		
export t_MotorVehicleSearchVehicleInfo := record
	string30 VehicleRecordId {xpath('VehicleRecordId')};
	string15 IterationKey {xpath('IterationKey')};
	string15 SequenceKey {xpath('SequenceKey')};
	string25 VIN {xpath('VIN')};
	integer YearMake {xpath('YearMake')};
	string36 Make {xpath('Make')};
	string36 Model {xpath('Model')};
	string25 Series {xpath('Series')};
	string15 MajorColor {xpath('MajorColor')};
	string15 MinorColor {xpath('MinorColor')};
	string40 _Type {xpath('Type')};
	string25 Style {xpath('Style')};
	string25 StateOfOrigin {xpath('StateOfOrigin')};
	string1 MatchCode {xpath('MatchCode')};//hidden[internal]
end;
		
export t_MotorVehicleSearchMatchedParty := record
	string12 UniqueId {xpath('UniqueId')};
	string70 OriginName {xpath('OriginName')};
	string1 OriginNameType {xpath('OriginNameType')};
	string9 SSN {xpath('SSN')};
	string9 AppendSSN {xpath('AppendSSN')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string20 DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string10 Gender {xpath('Gender')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string70 BusinessName {xpath('BusinessName')};
	string12 BusinessId {xpath('BusinessId')};
end;
		
export t_MotorVehicleSearch2Record := record
	boolean AlsoFound {xpath('AlsoFound')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')} := ROW({0,0,0},iesp.share.t_Date);
	string DataSource {xpath('DataSource')}; //values['All','Local','RealTime','']
	boolean NonDMVSource {xpath('NonDMVSource')};
	t_MotorVehicleSearchVehicleInfo VehicleInfo {xpath('VehicleInfo')};
	t_MotorVehicleSearchMatchedParty MatchedParty {xpath('MatchedParty')};
	dataset(t_MotorVehicleSearchRegistrant) Registrants {xpath('Registrants/Registrant'), MAXCOUNT(Constants.MV.MaxCountRegistrants)};
	dataset(t_MotorVehicleSearchOwner) Owners {xpath('Owners/Owner'), MAXCOUNT(Constants.MV.MaxCountOwners)};
	dataset(t_MotorVehicleSearchLienHolder) LienHolders {xpath('LienHolders/LienHolder'), MAXCOUNT(Constants.MV.MaxCountLienHolders)};
	dataset(t_MotorVehicleSearchLessee) Lessees {xpath('Lessees/Lessee'), MAXCOUNT(Constants.MV.MaxCountLessees)};
	dataset(t_MotorVehicleSearchLessor) Lessors {xpath('Lessors/Lessor'), MAXCOUNT(Constants.MV.MaxCountLessors)};
	string255 ExternalKey {xpath('ExternalKey')};//hidden[lndayton]
	boolean RealTimeDataSearched {xpath('RealTimeDataSearched')};//hidden[internal]
	boolean IsAccurintData {xpath('IsAccurintData')};//hidden[internal]
	dataset(t_MotorVehicleSearchBrand) Brands {xpath('Brands/Brand'), MAXCOUNT(Constants.MV.MaxCountBrands)};
end;
		
export t_MotorVehicleSearch2Response := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_MotorVehicleSearch2Record) Records {xpath('Records/Record'), MAXCOUNT(Constants.MV.MAX_COUNT_SEARCH_RESPONSE_RECORDS)};
end;
		
export t_MVReportBy := record
	iesp.share.t_Name Name {xpath('Name')};//hidden[internal]
	string StateCode {xpath('StateCode')};
	string VehicleNumber {xpath('VehicleNumber')};
	string UniqueId {xpath('UniqueId')};
	string VID {xpath('VID')};
end;
		
export t_MVReportOption := record (iesp.share.t_BaseReportOption)
end;
		
export t_MVReportPerson := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string12 UniqudId {xpath('UniqudId')};
	string12 UniqueId {xpath('UniqueId')};
	string13 DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string12 DealerLicenseNumber {xpath('DealerLicenseNumber')};
	iesp.share.t_Date DOB {xpath('DOB')};
	integer Age {xpath('Age')};
	string1 Sex {xpath('Sex')};
	string9 SSN {xpath('SSN')};
end;
		
export t_MVReportOwner := record
	string1 OwnerType {xpath('OwnerType')};
	t_MVReportPerson PersonInfo {xpath('PersonInfo')};
	iesp.share.t_Date SourceDateFirstSeen {xpath('SourceDateFirstSeen')};
	iesp.share.t_Date SourceDateLastSeen {xpath('SourceDateLastSeen')};
end;
		
export t_MVReportRegistrant := record
	string1 RegistrantType {xpath('RegistrantType')};
	t_MVReportPerson PersonInfo {xpath('PersonInfo')};
end;
		
export t_MVReportLienHolder := record
	string1 LienHolderType {xpath('LienHolderType')};
	t_MVReportPerson PersonInfo {xpath('PersonInfo')};
	string9 FEID_SSN {xpath('FEID_SSN')};
	iesp.share.t_Date LienDate {xpath('LienDate')};
	string BusinessName {xpath('BusinessName')};
end;
		
export t_MVReportLicensePlate := record
	string4 PlateCode {xpath('PlateCode')};
	string65 PlateType {xpath('PlateType')};
	string10 PlateNumber {xpath('PlateNumber')};
	string10 TruePlateNumber {xpath('TruePlateNumber')};
end;
		
export t_MVReportTitle := record
	string20 TitleNumber {xpath('TitleNumber')};
	iesp.share.t_Date TitleIssueDate {xpath('TitleIssueDate')};
	string2 TitleStatusCode {xpath('TitleStatusCode')};
	string30 TitleStatus {xpath('TitleStatus')};
end;
		
export t_MVReportVessel := record
	string12 HullId {xpath('HullId')};
	string2 VesselPropulsionTypeCode {xpath('VesselPropulsionTypeCode')};
	string30 VesselPropulsionType {xpath('VesselPropulsionType')};
	string1 BoatDescription {xpath('BoatDescription')};
	string5 HullMaterialTypeCode {xpath('HullMaterialTypeCode')};
	string30 HullMaterialType {xpath('HullMaterialType')};
	integer LengthFeet {xpath('LengthFeet')};
	string30 VesselType {xpath('VesselType')};
	string3 VesselTypeCode {xpath('VesselTypeCode')};
end;
		
export t_MVReportVehicle := record
	string25 VIN {xpath('VIN')};
	string3 MajorColorCode {xpath('MajorColorCode')};
	string30 MajorColor {xpath('MajorColor')};
	string3 MinorColorCode {xpath('MinorColorCode')};
	string30 MinorColor {xpath('MinorColor')};
	string5 BodyCode {xpath('BodyCode')};
	string25 BodyStyle {xpath('BodyStyle')};
	string3 Series {xpath('Series')};
	string2 NumberOfCylinders {xpath('NumberOfCylinders')};
	string4 EngineSize {xpath('EngineSize')};
	string1 FuelTypeCode {xpath('FuelTypeCode')};
	string30 FuelType {xpath('FuelType')};
	string1 VehicleUseCode {xpath('VehicleUseCode')};
	string30 VehicleUse {xpath('VehicleUse')};
	string7 OdometerMileage {xpath('OdometerMileage')};
end;
		
export t_VINAData := record
	string120 Restraint {xpath('Restraint')};
	string20 AirConditioning {xpath('AirConditioning')};
	string20 PowerSteering {xpath('PowerSteering')};
	string20 PowerBrakes {xpath('PowerBrakes')};
	string20 PowerWindows {xpath('PowerWindows')};
	string20 SecuritySystem {xpath('SecuritySystem')};
	string30 Roof {xpath('Roof')};
	string20 Radio {xpath('Radio')};
	string20 TiltWheel {xpath('TiltWheel')};
	string40 AntiLockBrakes {xpath('AntiLockBrakes')};
	string20 DaytimeRunningLights {xpath('DaytimeRunningLights')};
	string30 FrontWheelDrive {xpath('FrontWheelDrive')};
	string30 FourWheelDrive {xpath('FourWheelDrive')};
	string6 BasePrice {xpath('BasePrice')};
end;
		
export t_MVReportBrand := record
	share.t_Date Date {xpath('Date')};
	string State {xpath('State')};
	string Code {xpath('Code')};
	string _Type {xpath('Type')};
end;

export t_MVReportRecord := record
	string2 StateOfOrigin {xpath('StateOfOrigin')};
	string20 VID {xpath('VID')};
	string25 VehicleNumber {xpath('VehicleNumber')};
	string10 HistoryFlag {xpath('HistoryFlag')};
	string1 RecordType {xpath('RecordType')};
	string25 StateName {xpath('StateName')};
	integer YearMake {xpath('YearMake')};
	string5 MakeCode {xpath('MakeCode')};
	string36 Make {xpath('Make')};
	string36 Model {xpath('Model')};
	string30 VehicleType {xpath('VehicleType')};
	string5 VehicleTypeCode {xpath('VehicleTypeCode')};
	boolean NonDMVSource {xpath('NonDMVSource')};
	t_MVReportVehicle VehicleSpecification {xpath('VehicleSpecification')};
	t_MVReportVessel Vessel {xpath('Vessel')};
	t_MVReportLicensePlate LicensePlate {xpath('LicensePlate')};
	t_MVReportTitle Title {xpath('Title')};
	dataset(t_MVReportOwner) Owners {xpath('Owners/Owner'), MAXCOUNT(Constants.MV.MaxCountOwners)};
	dataset(t_MVReportRegistrant) Registrants {xpath('Registrants/Registrant'), MAXCOUNT(Constants.MV.MaxCountRegistrants)};
	dataset(t_MVReportLienHolder) LienHolders {xpath('LienHolders/LienHolder'), MAXCOUNT(Constants.MV.MaxCountLienHolders)};
	dataset(t_MVReportBrand) Brands {xpath('Brands/Brand'), MAXCOUNT(Constants.MV.MaxCountBrands)};
	iesp.share.t_Date RegistrationExpirationDate {xpath('RegistrationExpirationDate')};
	integer DecalYear {xpath('DecalYear')};
	string1 RegistrationStatusCode {xpath('RegistrationStatusCode')};
	t_VINAData VINAData {xpath('VINAData')};
	iesp.share.t_Date OriginalRegistrationDate {xpath('OriginalRegistrationDate')};
	iesp.share.t_Date RegistrationDate {xpath('RegistrationDate')};
	iesp.share.t_Date FirstRegistrationDate {xpath('FirstRegistrationDate')};
	iesp.share.t_Date RegistrationEffectiveDate {xpath('RegistrationEffectiveDate')};
	string25 SeriesName {xpath('SeriesName')};
	string50 ExternalKey {xpath('ExternalKey')};
end;
		
export t_MVReportResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	dataset(t_MVReportRecord) Vehicles {xpath('Vehicles/Vehicle'), MAXCOUNT(1)};
end;
		
export t_MotorVehicleReport2By := record
	string VehicleNumber {xpath('VehicleNumber')};
	string VehicleRecordId {xpath('VehicleRecordId')};
	string IterationKey {xpath('IterationKey')};
	string SequenceKey {xpath('SequenceKey')};
	string UniqueId {xpath('UniqueId')};
	string BusinessId {xpath('BusinessId')};
	string VIN {xpath('VIN')};
	string DataSource {xpath('DataSource')}; //values['All','Local','RealTime','']
end;
		
export t_MotorVehicleReport2Option := record (iesp.share.t_BaseReportOption)
	boolean IncludeNonRegulatedVehicleSources {xpath('IncludeNonRegulatedVehicleSources')};
end;
		
export t_MVR2VinaData := record
	integer Year {xpath('Year')};
	string3 Series {xpath('Series')};
	string25 SeriesName {xpath('SeriesName')};
	string3 Model {xpath('Model')};
	string120 Restraint {xpath('Restraint')};
	string20 AirConditioning {xpath('AirConditioning')};
	string20 PowerSteering {xpath('PowerSteering')};
	string20 PowerBrakes {xpath('PowerBrakes')};
	string20 PowerWindows {xpath('PowerWindows')};
	string20 TiltWheel {xpath('TiltWheel')};
	string30 Roof {xpath('Roof')};
	string30 OptionalRoof1 {xpath('OptionalRoof1')};
	string30 OptionalRoof2 {xpath('OptionalRoof2')};
	string20 Radio {xpath('Radio')};
	string20 OptionalRadio1 {xpath('OptionalRadio1')};
	string20 OptionalRadio2 {xpath('OptionalRadio2')};
	string1 Transmission {xpath('Transmission')};
	string50 TransmissionDesc {xpath('TransmissionDesc')};
	string40 AntiLockBrakes {xpath('AntiLockBrakes')};
	string30 FrontWheelDrive {xpath('FrontWheelDrive')};
	string30 FourWheelDrive {xpath('FourWheelDrive')};
	string50 SecuritySystem {xpath('SecuritySystem')};
	string20 DaytimeRunningLights {xpath('DaytimeRunningLights')};
	integer NumberOfCylinders {xpath('NumberOfCylinders')};
	integer EngineSize {xpath('EngineSize')};
	string60 FuelType {xpath('FuelType')};
	string6 Price {xpath('Price')};
end;
		
export t_MotorVehicleReportPersonOrBusiness := record
	iesp.share.t_BusinessIdentity BusinessIds {xpath('BusinessIds')};
	string100 IdValue {xpath('IdValue')};
	string12 UniqueId {xpath('UniqueId')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string9 SSN {xpath('SSN')};
	string9 AppendSSN {xpath('AppendSSN')};
	string12 FEIN {xpath('FEIN')};
	string12 AppendedFEIN {xpath('AppendedFEIN')};
	string20 DriverLicenseNumber {xpath('DriverLicenseNumber')};
	iesp.share.t_Date DOB {xpath('DOB')};
	integer Age {xpath('Age')};
	string10 Gender {xpath('Gender')};
	string70 BusinessName {xpath('BusinessName')};
	string12 BusinessId {xpath('BusinessId')};
	string30 NameSource {xpath('NameSource')};
end;
		
export t_MotorVehicleReportRegistrationInfo := record
	string10 TrueLicensePlate {xpath('TrueLicensePlate')};
	string2 LicenseState {xpath('LicenseState')};
	iesp.share.t_Date FirstDate {xpath('FirstDate')};
	iesp.share.t_Date EarliestEffectiveDate {xpath('EarliestEffectiveDate')};
	iesp.share.t_Date LatestEffectiveDate {xpath('LatestEffectiveDate')};
	iesp.share.t_Date LatestExpirationDate {xpath('LatestExpirationDate')};
	string10 DecalNumber {xpath('DecalNumber')};
	string4 DecalYear {xpath('DecalYear')};
	string20 StatusDesc {xpath('StatusDesc')};
	string10 LicensePlate {xpath('LicensePlate')};
	string4 LicensePlateTypeCode {xpath('LicensePlateTypeCode')};
	string65 LicensePlateTypeDesc {xpath('LicensePlateTypeDesc')};
	string10 PreviousLicensePlate {xpath('PreviousLicensePlate')};
	string2 PreviousLicenseState {xpath('PreviousLicenseState')};
end;
		
export t_MotorVehicleReportTitleInfo := record
	string20 Number {xpath('Number')};
	iesp.share.t_Date EarliestIssueDate {xpath('EarliestIssueDate')};
	iesp.share.t_Date LatestIssueDate {xpath('LatestIssueDate')};
	iesp.share.t_Date PreviousIssueDate {xpath('PreviousIssueDate')};
	string1 StatusCode {xpath('StatusCode')};
	string42 StatusDesc {xpath('StatusDesc')};
	integer OdometerMileage {xpath('OdometerMileage')};
end;
		
export t_MotorVehicleReportRegistrant := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleReportPersonOrBusiness RegistrantInfo {xpath('RegistrantInfo')};
	t_MotorVehicleReportRegistrationInfo RegistrationInfo {xpath('RegistrationInfo')};
	iesp.share.t_Date TitleIssueDate {xpath('TitleIssueDate')};
end;
		
export t_MotorVehicleReportOwner := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleReportPersonOrBusiness OwnerInfo {xpath('OwnerInfo')};
	t_MotorVehicleReportTitleInfo TitleInfo {xpath('TitleInfo')};
	iesp.share.t_Date SourceDateFirstSeen {xpath('SourceDateFirstSeen')};
	iesp.share.t_Date SourceDateLastSeen {xpath('SourceDateLastSeen')};
end;
		
export t_MotorVehicleReportLienHolder := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleReportPersonOrBusiness LienHolderInfo {xpath('LienHolderInfo')};
	iesp.share.t_Date LienDate {xpath('LienDate')};
	string70 StandardizedName {xpath('StandardizedName')};
end;
		
export t_MotorVehicleReportLessee := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleReportPersonOrBusiness LesseeInfo {xpath('LesseeInfo')};
end;
		
export t_MotorVehicleReportLessor := record
	string30 HistoryDescription {xpath('HistoryDescription')};
	t_MotorVehicleReportPersonOrBusiness LessorInfo {xpath('LessorInfo')};
end;
		
export t_MotorVehicleReportVehicleInfo := record
	string15 IterationKey {xpath('IterationKey')};//hidden[internal]
	string15 SequenceKey {xpath('SequenceKey')};//hidden[internal]
	string30 VehicleRecordId {xpath('VehicleRecordId')};
	string25 VIN {xpath('VIN')};
	string1 TransferOnDeath {xpath('TransferOnDeath')};
	integer YearMake {xpath('YearMake')};
	string25 Series {xpath('Series')};
	string36 Make {xpath('Make')};
	string36 Model {xpath('Model')};
	string15 MajorColor {xpath('MajorColor')};
	string15 MinorColor {xpath('MinorColor')};
	string40 _Type {xpath('Type')};
	string25 Style {xpath('Style')};
	string6 NetWeight {xpath('NetWeight')};
	integer NumberOfAxles {xpath('NumberOfAxles')};
	string30 VehicleUse {xpath('VehicleUse')};
	string2 StateOfOrigin {xpath('StateOfOrigin')};
end;
		
export t_MotorVehicleReport2Record := record
	iesp.share.t_BusinessIdentity BusinessIds {xpath('BusinessIds')};
	string100 IdValue {xpath('IdValue')};
	boolean IsCurrent {xpath('IsCurrent')};
	boolean NonDMVSource {xpath('NonDMVSource')};
	t_MotorVehicleReportVehicleInfo VehicleInfo {xpath('VehicleInfo')};
	t_MVR2VinaData VinaData {xpath('VinaData')};
	string15 DataSource {xpath('DataSource')}; //values['All','Local','RealTime','']
	dataset(t_MotorVehicleReportRegistrant) Registrants {xpath('Registrants/Registrant'), MAXCOUNT(Constants.MV.MaxCountRegistrants)};
	dataset(t_MotorVehicleReportOwner) Owners {xpath('Owners/Owner'), MAXCOUNT(Constants.MV.MaxCountOwners)};
	dataset(t_MotorVehicleReportLienHolder) LienHolders {xpath('LienHolders/LienHolder'), MAXCOUNT(Constants.MV.MaxCountLienHolders)};
	dataset(t_MotorVehicleReportLessee) Lessees {xpath('Lessees/Lessee'), MAXCOUNT(Constants.MV.MaxCountLessees)};
	dataset(t_MotorVehicleReportLessor) Lessors {xpath('Lessors/Lessor'), MAXCOUNT(Constants.MV.MaxCountLessors)};
	dataset(t_MotorVehicleSearchBrand) Brands {xpath('Brands/Brand'), MAXCOUNT(Constants.MV.MaxCountBrands)};
	string15 IterationKey {xpath('IterationKey')};//hidden[internal]
	string15 SequenceKey {xpath('SequenceKey')};//hidden[internal]
end;
		
export t_MotorVehicleReport2Response := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	dataset(t_MotorVehicleReport2Record) MotorVehicleRecords {xpath('MotorVehicleRecords/MotorVehicleRecord'), MAXCOUNT(Constants.MV.MAX_COUNT_REPORT_RESPONSE_RECORDS)};
end;
		
export t_MVSearchRequest := record (iesp.share.t_BaseRequest)
	t_MVSearchBy SearchBy {xpath('SearchBy')};
	t_MVOption Options {xpath('Options')};
end;
		
export t_MotorVehicleSearch2Request := record (iesp.share.t_BaseRequest)
	t_MotorVehicleSearch2By SearchBy {xpath('SearchBy')};
	t_MotorVehicleSearch2Option Options {xpath('Options')};
end;
		
export t_MVReportRequest := record (iesp.share.t_BaseRequest)
	t_MVReportBy ReportBy {xpath('ReportBy')};
	t_MVReportOption Options {xpath('Options')};
end;
		
export t_MotorVehicleReport2Request := record (iesp.share.t_BaseRequest)
	t_MotorVehicleReport2By ReportBy {xpath('ReportBy')};
	t_MotorVehicleReport2Option Options {xpath('Options')};
end;
		
export t_MVSearchResponseEx := record
	t_MVSearchResponse response {xpath('response')};
end;
		
export t_MotorVehicleSearch2ResponseEx := record
	t_MotorVehicleSearch2Response response {xpath('response')};
end;
		
export t_MVReportResponseEx := record
	t_MVReportResponse response {xpath('response')};
end;
		
export t_MotorVehicleReport2ResponseEx := record
	t_MotorVehicleReport2Response response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from motorvehicle.xml. ***/
/*===================================================*/

