/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from fraudgovreport.xml. ***/
/*===================================================*/

import iesp;

export fraudgovreport := MODULE
			
export t_UInt2ArrayItem := record
	unsigned2 Value {xpath('Value')};
end;
		
export t_FraudGovReportOption := record (iesp.share.t_BaseReportOption)
	boolean AppendBest {xpath('AppendBest')};
	unsigned3 DIDScoreThreshold {xpath('DIDScoreThreshold')};
	boolean IsOnline {xpath('IsOnline')};//hidden[internal]
	integer MaxVelocities {xpath('MaxVelocities')};
	integer MaxKnownFrauds {xpath('MaxKnownFrauds')};
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	string Platform {xpath('Platform')};
	string AgencyVerticalType {xpath('AgencyVerticalType')};
	string18 AgencyCounty {xpath('AgencyCounty')};
	string2 AgencyState {xpath('AgencyState')};
	dataset(t_UInt2ArrayItem) ExcludedIndTypes {xpath('ExcludedIndTypes/ExcludedIndType'), MAXCOUNT(iesp.Constants.FDN.MAX_COUNT_EXCLUDE_IND_TYPES)};
	dataset(t_UInt2ArrayItem) FileTypes {xpath('FileTypes/FileType'), MAXCOUNT(iesp.Constants.FDN.MAX_COUNT_FILE_TYPES)};
	integer DeltaUse {xpath('DeltaUse')};//hidden[internal]
	integer DeltaStrict {xpath('DeltaStrict')};//hidden[internal]
end;
		
export t_FraudGovReportBy := record
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Name Name {xpath('Name')};
	string12 UniqueId {xpath('UniqueId')};
	string15 Phone10 {xpath('Phone10')};
	string11 SSN {xpath('SSN')};
	iesp.share.t_Date DOB {xpath('DOB')};
	unsigned6 AppendedProviderId {xpath('AppendedProviderId')};
	unsigned6 LNPID {xpath('LNPID')};
	string10 TIN {xpath('TIN')};
	string10 NPI {xpath('NPI')};
	string50 EmailAddress {xpath('EmailAddress')};
	string25 IpAddress {xpath('IpAddress')};
	string50 DeviceId {xpath('DeviceId')};
	string12 ProfessionalId {xpath('ProfessionalId')};
	string10 BankRoutingNumber {xpath('BankRoutingNumber')};
	string30 BankAccountNumber {xpath('BankAccountNumber')};
	string2 DriversLicenseState {xpath('DriversLicenseState')};
	string25 DriversLicenseNumber {xpath('DriversLicenseNumber')};
	iesp.share.t_GeoLocation GeoLocation {xpath('GeoLocation')};
	dataset(iesp.share.t_BusinessIdentity) BusinessLinkIds {xpath('BusinessLinkIds/BusinessLinkId'), MAXCOUNT(iesp.Constants.FraudGov.MAX_COUNT_BUSINESS_LINKIDS)};
	iesp.share.t_Address MailingAddress {xpath('MailingAddress')};
end;
		
export t_FraudGovDeceased := record
	string9 SSN {xpath('SSN')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DOB {xpath('DOB')};
	iesp.share.t_Date DOD {xpath('DOD')};
	string1 VorPCode {xpath('VorPCode')};
	string30 MatchCode {xpath('MatchCode')};
	string3 Source {xpath('Source')};
end;
		
export t_FraudGovOffense := record
	string31 Offense {xpath('Offense')};
	string75 OffenseDescription {xpath('OffenseDescription')};
	string20 OffenseCode {xpath('OffenseCode')};
	string1 OffenseType {xpath('OffenseType')};
	string2 OffenseLevel {xpath('OffenseLevel')};
	iesp.share.t_Date OffenseDate {xpath('OffenseDate')};
end;
		
export t_FraudGovCase := record
	dataset(t_FraudGovOffense) Offenses {xpath('Offenses/Offense'), MAXCOUNT(iesp.constants.FraudGov.MAX_COUNT_OFFENSES)};
	string35 CaseNumber {xpath('CaseNumber')};
	string3 NumberOfCounts {xpath('NumberOfCounts')};
	string30 County {xpath('County')};
	iesp.share.t_Date SentenceDate {xpath('SentenceDate')};
end;
		
export t_FraudGovCriminal := record
	string1 MatchType {xpath('MatchType')};
	string2 StateOrigin {xpath('StateOrigin')};
	string12 UniqueId {xpath('UniqueId')};
	string60 OffenderKey {xpath('OffenderKey')};
	string9 SSN {xpath('SSN')};
	iesp.share.t_Name Name {xpath('Name')};
	string10 DocNumber {xpath('DocNumber')};
	iesp.share.t_Date DOB {xpath('DOB')};
	iesp.share.t_Address Address {xpath('Address')};
	string1 CurrentIncarceratedFlag {xpath('CurrentIncarceratedFlag')};
	string45 DataSource {xpath('DataSource')};
	dataset(t_FraudGovCase) Cases {xpath('Cases/Case'), MAXCOUNT(iesp.constants.FraudGov.MAX_COUNT_CRIMINAL_CASES)};
end;
		
export t_FraudGovVelocityCount := record
	integer FoundCount {xpath('FoundCount')};
	string Description {xpath('Description')};
end;
		
export t_FraudGovKnownRisk := record
	integer KnownRiskCount {xpath('KnownRiskCount')};
	dataset(iesp.share.t_StringArrayItem) KnownRiskReasons {xpath('KnownRiskReasons/KnownRiskReason'), MAXCOUNT(iesp.Constants.FraudGov.MAX_COUNT_KNOWN_RISK)};
end;
		
export t_FraudGovGlobalWatchlist := record
	string3 HitNum {xpath('HitNum')};
	string5 Score {xpath('Score')};
	string20 PartyKey {xpath('PartyKey')};
	string60 Source {xpath('Source')};
	string350 OriginalPartyName {xpath('OriginalPartyName')};
	string100 BlockedCountry {xpath('BlockedCountry')};
	dataset(iesp.share.t_StringArrayItem) Addresses {xpath('Addresses/Address50'), MAXCOUNT(iesp.constants.fraudgov.MAX_COUNT_ADDRESS)};
	dataset(iesp.share.t_StringArrayItem) Remarks {xpath('Remarks/Remark75'), MAXCOUNT(iesp.constants.FraudGov.MAX_COUNT_REMARKS)};
end;
		
export t_FraudGovIndDescPlusSequence := record
	unsigned1 seq {xpath('Sequence')};
	string5 hri {xpath('HRI')};
	string150 desc {xpath('Description')};
end;
		
export t_FraudGovRedFlag := record
	dataset(t_FraudGovIndDescPlusSequence) AddressDiscrepancyCodes {xpath('AddressDiscrepancyCodes/AddressDiscrepancyCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) SuspiciousDocumentsCodes {xpath('SuspiciousDocumentsCodes/SuspiciousDocumentsCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) SuspiciousAddressCodes {xpath('SuspiciousAddressCodes/SuspiciousAddressCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) SuspiciousSSNCodes {xpath('SuspiciousSSNCodes/SuspiciousSSNCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) SuspiciousDOBCodes {xpath('SuspiciousDOBCodes/SuspiciousDOBCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) HighRiskAddressCodes {xpath('HighRiskAddressCodes/HighRiskAddressCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) SuspiciousPhoneCodes {xpath('SuspiciousPhoneCodes/SuspiciousPhoneCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) SSNMultipleLastCodes {xpath('SSNMultipleLastCodes/SSNMultipleLastCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) MissingInputCodes {xpath('MissingInputCodes/MissingInputCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) FraudAlertCodes {xpath('FraudAlertCodes/FraudAlertCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) CreditFreezeCodes {xpath('CreditFreezeCodes/CreditFreezeCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
	dataset(t_FraudGovIndDescPlusSequence) IdentityTheftCodes {xpath('IdentityTheftCodes/IdentityTheftCode'), MAXCOUNT(iesp.Constants.fraudgov.MAX_ALERT)};
end;
		
export t_FraudGovRecord := record
	unsigned2 RiskScore {xpath('RiskScore')};
	string6 RiskLevel {xpath('RiskLevel')};
	string1 IdentityResolved {xpath('IdentityResolved')};
	unsigned6 LexID {xpath('LexID')};
	t_FraudGovDeceased Deceased {xpath('Deceased')};//hidden[internal]
	dataset(t_FraudGovCriminal) Criminals {xpath('Criminals/Criminal'), MAXCOUNT(iesp.Constants.FraudGov.MAX_COUNT_CRIMINAL)};//hidden[internal]
	dataset(t_FraudGovRedFlag) RedFlags {xpath('RedFlags/RedFlag'), MAXCOUNT(iesp.Constants.FraudGov.MAX_COUNT_RED_FLAG)};//hidden[internal]
	dataset(t_FraudGovGlobalWatchlist) GlobalWatchlists {xpath('GlobalWatchlists/GlobalWatchlist'), MAXCOUNT(iesp.Constants.FraudGov.MAX_COUNT_GLOBAL_WATCHLIST)};//hidden[internal]
	dataset(t_FraudGovVelocityCount) VelocityCounts {xpath('VelocityCounts/VelocityCount'), MAXCOUNT(iesp.Constants.FraudGov.MAX_COUNT_VELOCITY)};
	dataset(t_FraudGovKnownRisk) KnownRisks {xpath('KnownRisks/KnownRisk'), MAXCOUNT(iesp.Constants.FraudGov.MAX_COUNT_KNOWN_RISK)};
end;
		
export t_FraudGovHeader := record
	integer Status {xpath('Status')};
	string Message {xpath('Message')};
	string QueryId {xpath('QueryId')};
	string TransactionId {xpath('TransactionId')};
end;
		
export t_FraudGovReportResponse := record
	t_FraudGovHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_FraudGovRecord) Records {xpath('Records/Record'), MAXCOUNT(1)};
end;
		
export t_FraudGovReportRequest := record (iesp.fraudgovplatform.t_FraudGovBaseRequest)
	t_FraudGovReportBy ReportBy {xpath('ReportBy')};
	t_FraudGovReportOption Options {xpath('Options')};
end;
		
export t_FraudGovReportResponseEx := record
	t_FraudGovReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from fraudgovreport.xml. ***/
/*===================================================*/

