/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from experian_vin.xml. ***/
/*===================================================*/

import iesp;

export experian_vin := MODULE
			
export t_ExperianVinOptions := record (iesp.share.t_BaseOption)
	string20 SidexClientID {xpath('SidexClientID')};//hidden[sidex]
end;
		
export t_VinVerifyPlusStruct := record
	string id {xpath('id')};
	string password {xpath('password')};
	string quoteback {xpath('quoteback')};
	string dppaUseCode {xpath('dppaUseCode')};
	string dppaSubCategoryCode {xpath('dppaSubCategoryCode')};
	string subCustomerId {xpath('subCustomerId')};
	string processType {xpath('processType')};
	string inquiryType {xpath('inquiryType')};
	string firstName {xpath('firstName')};
	string middleName {xpath('middleName')};
	string lastName {xpath('lastName')};
	string nameSuffix {xpath('nameSuffix')};
	string firmBusinessName {xpath('firmBusinessName')};
	string addressType {xpath('addressType')};
	string range {xpath('range')};
	string preDirectional {xpath('preDirectional')};
	string streetName {xpath('streetName')};
	string addressSuffix {xpath('addressSuffix')};
	string postDirectional {xpath('postDirectional')};
	string pob {xpath('pob')};
	string ruralRouteNumber {xpath('ruralRouteNumber')};
	string ruralRouteBox {xpath('ruralRouteBox')};
	string apartmentNumber {xpath('apartmentNumber')};
	string city {xpath('city')};
	string state {xpath('state')};
	string zipCode {xpath('zipCode')};
	string zipFour {xpath('zipFour')};
	string vin {xpath('vin')};
	string year {xpath('year')};
	string make {xpath('make')};
	string model {xpath('model')};
	string plateNumber {xpath('plateNumber')};
	string plateState {xpath('plateState')};
end;
		
export t_AddressStruct := record
	string cityName {xpath('cityName')};
	string POB {xpath('POB')};
	string postDirectional {xpath('postDirectional')};
	string preDirectional {xpath('preDirectional')};
	string range {xpath('range')};
	string ruralRouteBox {xpath('ruralRouteBox')};
	string ruralRouteNumber {xpath('ruralRouteNumber')};
	string secondDesignation {xpath('secondDesignation')};
	string secondRange {xpath('secondRange')};
	string state {xpath('state')};
	string streetName {xpath('streetName')};
	string suffix {xpath('suffix')};
	string zip {xpath('zip')};
	string zipFour {xpath('zipFour')};
end;
		
export t_VehicleBrandsStruct := record
	string brandCode {xpath('brandCode')};
	string brandDate {xpath('brandDate')};
	string brandState {xpath('brandState')};
end;
		
export t_RegisteredOwnerStruct := record
	string firstName {xpath('firstName')};
	string fullNameFlag {xpath('fullNameFlag')};
	string lastName {xpath('lastName')};
	string middleName {xpath('middleName')};
	string nameRole {xpath('nameRole')};
	string nameSuffix {xpath('nameSuffix')};
	string orgName {xpath('orgName')};
	string surnameFlag {xpath('surnameFlag')};
	string nameSourceCd {xpath('nameSourceCd')};
	string reportedName {xpath('reportedName')};
end;
		
export t_VehicleStruct := record
	t_AddressStruct address {xpath('address')};
	string addressMatchFlag {xpath('addressMatchFlag')};
	string airbag {xpath('airbag')};
	string bodyCode {xpath('bodyCode')};
	string bodyStyle {xpath('bodyStyle')};
	string brand {xpath('brand')};
	string documentTypeCode {xpath('documentTypeCode')};
	string doorCount {xpath('doorCount')};
	string driverAirbag {xpath('driverAirbag')};
	string frontDriverSideAirbag {xpath('frontDriverSideAirbag')};
	string frontHeadCurtainAirbag {xpath('frontHeadCurtainAirbag')};
	string frontPassengerAirbag {xpath('frontPassengerAirbag')};
	string frontPassengerSideAirbag {xpath('frontPassengerSideAirbag')};
	string lastTitleRegDate {xpath('lastTitleRegDate')};
	string lease {xpath('lease')};
	string lien {xpath('lien')};
	string makeCode {xpath('makeCode')};
	string makeText {xpath('makeText')};
	string matchCode {xpath('matchCode')};
	string modelClassCode {xpath('modelClassCode')};
	string modelClassText {xpath('modelClassText')};
	string modelCode {xpath('modelCode')};
	string modelText {xpath('modelText')};
	string modelYear {xpath('modelYear')};
	string plateNumber {xpath('plateNumber')};
	string plateState {xpath('plateState')};
	string plateTypeCode {xpath('plateTypeCode')};
	string primaryColor {xpath('primaryColor')};
	string secondaryColor {xpath('secondaryColor')};
	dataset(t_RegisteredOwnerStruct) RegisteredOwners {xpath('RegisteredOwners/RegisteredOwner'), MAXCOUNT(20)};
	dataset(t_VehicleBrandsStruct) VehicleBrands {xpath('VehicleBrands/VehicleBrand'), MAXCOUNT(Constants.MV.MaxCountBrands)};
	string registrationExpireDate {xpath('registrationExpireDate')};
	string restrictedStateFlag {xpath('restrictedStateFlag')};
	string safetyCode {xpath('safetyCode')};
	string safetyType {xpath('safetyType')};
	string sequenceNumber {xpath('sequenceNumber')};
	string sourceState {xpath('sourceState')};
	string vin {xpath('vin')};
	string TOD {xpath('TOD')};
	string titleIssueDate {xpath('titleIssueDate')};
	string titleNumber {xpath('titleNumber')};
end;
		
export t_getVinVerifyPlusResponse := record
	string dppaSubCategoryCode {xpath('dppaSubCategoryCode')};
	string dppaUseCode {xpath('dppaUseCode')};
	string errorIndicator {xpath('errorIndicator')};
	string noDataCode {xpath('noDataCode')};
	string processingType {xpath('processingType')};
	string quoteback {xpath('quoteback')};
	string subCustomerId {xpath('subCustomerId')};
	string vehicleCount {xpath('vehicleCount')};
	dataset(t_VehicleStruct) Vehicles {xpath('Vehicles/Vehicle'), MAXCOUNT(100)};
end;
		
export t_ExperianVinResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	t_getVinVerifyPlusResponse Response {xpath('Response')};
end;
		
export t_ExperianVinRequest := record (iesp.share.t_BaseRequest)
	iesp.share.t_GatewayParams GatewayParams {xpath('GatewayParams')};
	t_ExperianVinOptions Options {xpath('Options')};
	t_VinVerifyPlusStruct getVinVerifyPlus {xpath('getVinVerifyPlus')};
end;
		
export t_ExperianVinResponseEx := record
	t_ExperianVinResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from experian_vin.xml. ***/
/*===================================================*/

