/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from sexualoffender.xml. ***/
/*===================================================*/

import iesp;

export sexualoffender := MODULE
			
export t_OffenderSearchBy := record
	string12 UniqueId {xpath('UniqueId')};
	string11 SSN {xpath('SSN')};
	integer2 Radius {xpath('Radius')};
	string10 Phone10 {xpath('Phone10')};//hidden[ecldev]
	iesp.share.t_Date DOB {xpath('DOB')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_GeoLocation Location {xpath('Location')};
	iesp.share.t_IntRange AgeRange {xpath('AgeRange')};
	string20 OffenseCategory {xpath('OffenseCategory')};//hidden[internal]
	string200 ScarsMarksTattoos {xpath('ScarsMarksTattoos')};//hidden[internal]
end;
		
export t_OffenderOption := record (iesp.share.t_BaseSearchOption)
	boolean UseNicknames {xpath('UseNicknames')};
	boolean IncludeAlsoFound {xpath('IncludeAlsoFound')};
	boolean UsePhonetics {xpath('UsePhonetics')};
	integer PenaltyThreshold {xpath('PenaltyThreshold')};//hidden[ecldev]
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	boolean IncludeRegisteredAddresses {xpath('IncludeRegisteredAddresses')};//hidden[internal]
	boolean IncludeUnregisteredAddresses {xpath('IncludeUnregisteredAddresses')};//hidden[internal]
	boolean IncludeHistoricalAddresses {xpath('IncludeHistoricalAddresses')};//hidden[internal]
	boolean IncludeAssociatedAddresses {xpath('IncludeAssociatedAddresses')};//hidden[internal]
	boolean IncludeOffenses {xpath('IncludeOffenses')};//hidden[internal]
	boolean IncludeBestAddress {xpath('IncludeBestAddress')};//hidden[internal]
	boolean IncludeWeAlsoFound {xpath('IncludeWeAlsoFound')};//hidden[internal]
	boolean SearchAroundAddress {xpath('SearchAroundAddress')};
	boolean FilterRecsByAltAddresses {xpath('FilterRecsByAltAddresses')};//hidden[ecldev]
end;
		
export t_OffenderAddress := record
	string5 AddressType {xpath('AddressType')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	iesp.share.t_Address Address {xpath('Address')};
end;
		
export t_OffenderBestAddress := record (t_OffenderAddress)
	boolean BestAddressIsNewer {xpath('BestAddressIsNewer')};
	boolean BestAddressIsDifferent {xpath('BestAddressIsDifferent')};
end;
		
export t_OffenderAlsoFound := record
	integer1 MotorVehicle {xpath('MotorVehicle')};
	integer1 DriversLicense {xpath('DriversLicense')};
	integer1 EmploymentRelated {xpath('EmploymentRelated')};
	integer1 PossibleAssociates {xpath('PossibleAssociates')};
	integer1 PossibleRelatives {xpath('PossibleRelatives')};
	integer1 Phones {xpath('Phones')};
	integer1 ProfessionalLicense {xpath('ProfessionalLicense')};
end;
		
export t_SexOffReportConviction := record
	string80 ConvictionJurisdiction {xpath('ConvictionJurisdiction')};
	iesp.share.t_Date ConvictionDate {xpath('ConvictionDate')};
	string30 CourtName {xpath('CourtName')};
	string25 CourtCaseNumber {xpath('CourtCaseNumber')};
	iesp.share.t_Date OffenseDate {xpath('OffenseDate')};
	string20 OffenseCodeOrStatute {xpath('OffenseCodeOrStatute')};
	string500 OffenseDescription {xpath('OffenseDescription')};
	string20 OffenseCategory {xpath('OffenseCategory')};//hidden[internal]
	boolean VictimIsMinor {xpath('VictimIsMinor')};
	string1 VictimIsMinor2 {xpath('VictimIsMinor2')}; //values['U','Y','N','']
	integer1 VictimAge {xpath('VictimAge')};
	string10 VictimGender {xpath('VictimGender')};
	string30 VictimRelationship {xpath('VictimRelationship')};
	string360 SentenceDescription {xpath('SentenceDescription')};
end;
		
export t_PhysicalCharacteristics := record
	string3 Age {xpath('Age')};
	string30 Race {xpath('Race')};
	string30 Ethnicity {xpath('Ethnicity')};
	string3 Height {xpath('Height')};
	string3 Weight {xpath('Weight')};
	string200 ScarsMarksTattoos {xpath('ScarsMarksTattoos')};
end;
		
export t_BaseOffenderRecord := record
	integer _Penalty {xpath('Penalty')};//hidden[ecldev]
	integer SecondaryPenalty {xpath('SecondaryPenalty')};//hidden[ecldev]
	boolean AlsoFound {xpath('AlsoFound')};
	string60 PrimaryKey {xpath('PrimaryKey')};
	string12 UniqueId {xpath('UniqueId')};
	string9 SSN {xpath('SSN')};
	string2 RecordType {xpath('RecordType')};
	string50 OffenderStatus {xpath('OffenderStatus')};
	string30 OriginalState {xpath('OriginalState')};
	string2 OriginStateCode {xpath('OriginStateCode')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	iesp.share.t_Date DateOffenderLastUpdated {xpath('DateOffenderLastUpdated')};//hidden[internal]
	iesp.share.t_Date DOB {xpath('DOB')};
	string3 Age {xpath('Age')};//hidden[internal]
	string200 ScarsMarksTattoos {xpath('ScarsMarksTattoos')};//hidden[internal]
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string150 ImageLink {xpath('ImageLink')};//hidden[internal]
	string5 AddressType {xpath('AddressType')};//hidden[internal]
	dataset(iesp.share.t_Name) AKAs {xpath('AKAs/Name'), MAXCOUNT(iesp.Constants.SEXOFF_MAX_COUNT_AKAS)};
	dataset(t_OffenderAddress) AlternativeAddresses {xpath('AlternativeAddresses/AlternativeAddress'), MAXCOUNT(iesp.Constants.SEXOFF_MAX_COUNT_ALT_ADDRESSES)};//hidden[internal]
	iesp.share.t_GeoLocationMatch Location {xpath('Location')};
	string7 SearchAroundDistance {xpath('SearchAroundDistance')};
	t_OffenderBestAddress BestAddress {xpath('BestAddress')};//hidden[internal]
	iesp.share.t_GeoLocationMatch BestAddrLocation {xpath('BestAddrLocation')};//hidden[internal]
	t_OffenderAlsoFound WeAlsoFound {xpath('WeAlsoFound')};//hidden[internal]
	t_PhysicalCharacteristics PhysicalCharacteristics {xpath('PhysicalCharacteristics')};//hidden[internal]
end;
		
export t_OffenderRecord := record (t_BaseOffenderRecord)
	dataset(t_SexOffReportConviction) Convictions {xpath('Convictions/Conviction'), MAXCOUNT(iesp.Constants.SEXOFF_MAX_COUNT_CONVICTIONS)};//hidden[internal]
end;
		
export t_OffenderSearchResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(iesp.share.t_GeoLocationMatch) SearchAroundInput {xpath('SearchAroundInput/Location'), MAXCOUNT(1)};
	dataset(t_OffenderRecord) Records {xpath('Records/Record'), MAXCOUNT(iesp.Constants.SEXOFF_MAX_COUNT_SEARCH_RESPONSE_RECORDS)};
end;
		
export t_AdvancedSexualOffenderSearchResponse := record (t_OffenderSearchResponse)
end;
		
export t_SexOffReportBy := record
	iesp.share.t_Name Name {xpath('Name')};
	string60 PrimaryKey {xpath('PrimaryKey')};
	string12 UniqueId {xpath('UniqueId')};
	boolean AllowGraphicDescription {xpath('AllowGraphicDescription')};
end;
		
export t_SexOffReportOption := record (iesp.share.t_BaseReportOption)
	boolean AllowGraphicDescription {xpath('AllowGraphicDescription')};
	boolean IncludeBestAddress {xpath('IncludeBestAddress')};//hidden[internal]
end;
		
export t_SexOffReportPoliceAgency := record
	string50 Name {xpath('Name')};
	string35 ContactName {xpath('ContactName')};
	iesp.share.t_Address Address {xpath('Address')};
	string10 Phone {xpath('Phone')};
end;
		
export t_SexOffReportRegistration := record
	string25 _Type {xpath('Type')};
	iesp.share.t_Date Date1 {xpath('Date1')};
	string28 Date1Type {xpath('Date1Type')};
	iesp.share.t_Date Date2 {xpath('Date2')};
	string28 Date2Type {xpath('Date2Type')};
	iesp.share.t_Date Date3 {xpath('Date3')};
	string28 Date3Type {xpath('Date3Type')};
	string125 Address1 {xpath('Address1')};
	string45 Address2 {xpath('Address2')};
	string35 Address3 {xpath('Address3')};
	string35 Address4 {xpath('Address4')};
	string35 Address5 {xpath('Address5')};
	string35 County {xpath('County')};
end;
		
export t_SexOffReportEmployer := record
	string55 Name {xpath('Name')};
	string55 Address1 {xpath('Address1')};
	string35 Address2 {xpath('Address2')};
	string35 Address3 {xpath('Address3')};
	string35 Address4 {xpath('Address4')};
	string35 Address5 {xpath('Address5')};
	string35 County {xpath('County')};
end;
		
export t_SexOffReportSchool := record
	string55 Name {xpath('Name')};
	string55 Address1 {xpath('Address1')};
	string35 Address2 {xpath('Address2')};
	string35 Address3 {xpath('Address3')};
	string35 Address4 {xpath('Address4')};
	string35 Address5 {xpath('Address5')};
	string35 County {xpath('County')};
end;
		
export t_SexOffReportVehicle := record
	integer2 Year {xpath('Year')};
	string40 Color {xpath('Color')};
	string40 MakeModel {xpath('MakeModel')};
	string40 Plate {xpath('Plate')};
	string30 State {xpath('State')};
end;
		
export t_SexOffRecordIdNumbers := record
	string30 OffenderId {xpath('OffenderId')};
	string30 DocNumber {xpath('DocNumber')};
	string30 SORNumber {xpath('SORNumber')};
	string30 StateIdNumber {xpath('StateIdNumber')};
	string30 FBINumber {xpath('FBINumber')};
	string30 NCICNumber {xpath('NCICNumber')};
end;
		
export t_SexOffRecordPhysicalCharacteristics := record
	string3 Age {xpath('Age')};
	string30 Race {xpath('Race')};
	string30 Ethnicity {xpath('Ethnicity')};
	string10 Sex {xpath('Sex')};
	string40 HairColor {xpath('HairColor')};
	string40 EyeColor {xpath('EyeColor')};
	string3 Height {xpath('Height')};
	string3 Weight {xpath('Weight')};
	string20 SkinTone {xpath('SkinTone')};
	string30 BuildType {xpath('BuildType')};
	string200 ScarsMarksTattoos {xpath('ScarsMarksTattoos')};
	string6 ShoeSize {xpath('ShoeSize')};
	boolean CorrectiveLenseFlag {xpath('CorrectiveLenseFlag')};
end;
		
export t_BaseSexOffReportRecord := record
	string60 PrimaryKey {xpath('PrimaryKey')};
	string10 RecordType {xpath('RecordType')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string9 SSN {xpath('SSN')};
	string9 OrigSSN {xpath('OrigSSN')};
	string12 UniqueId {xpath('UniqueId')};
	iesp.share.t_Date DOB {xpath('DOB')};
	iesp.share.t_Date DOB2 {xpath('DOB2')};
	string3 Age {xpath('Age')};//hidden[internal]
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	iesp.share.t_Date DateOffenderLastUpdated {xpath('DateOffenderLastUpdated')};//hidden[internal]
	string30 StateOfOrigin {xpath('StateOfOrigin')};
	string2 OriginStateCode {xpath('OriginStateCode')};
	string50 OffenderStatus {xpath('OffenderStatus')};
	string40 OffenderCategory {xpath('OffenderCategory')};
	string10 RiskLevelCode {xpath('RiskLevelCode')};
	string50 RiskDescription {xpath('RiskDescription')};
	t_SexOffReportPoliceAgency PoliceAgency {xpath('PoliceAgency')};
	t_SexOffReportSchool School {xpath('School')};
	t_SexOffReportEmployer Employer {xpath('Employer')};
	t_SexOffReportRegistration Registration {xpath('Registration')};
	t_SexOffReportVehicle Vehicle1 {xpath('Vehicle1')};
	t_SexOffReportVehicle Vehicle2 {xpath('Vehicle2')};
	t_SexOffRecordPhysicalCharacteristics PhysicalCharacteristics {xpath('PhysicalCharacteristics')};
	t_SexOffRecordIdNumbers IdNumbers {xpath('IdNumbers')};
	string30 DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string30 DriverLicenseState {xpath('DriverLicenseState')};
	string140 AdditionalComment1 {xpath('AdditionalComment1')};
	string140 AdditionalComment2 {xpath('AdditionalComment2')};
	dataset(iesp.share.t_Name) AKAs {xpath('AKAs/AKA'), MAXCOUNT(iesp.Constants.SEXOFF_MAX_COUNT_AKAS)};
	string150 ImageLink {xpath('ImageLink')};//hidden[internal]
	t_OffenderBestAddress BestAddress {xpath('BestAddress')};//hidden[internal]
end;
		
export t_SexOffReportRecord := record (t_BaseSexOffReportRecord)
	dataset(t_SexOffReportConviction) Convictions {xpath('Convictions/Conviction'), MAXCOUNT(iesp.Constants.SEXOFF_MAX_COUNT_CONVICTIONS)};
end;
		
export t_SexOffReportResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	dataset(t_SexOffReportRecord) SexualOffenses {xpath('SexualOffenses/SexualOffense'), MAXCOUNT(iesp.Constants.SEXOFF_MAX_COUNT_REPORT_RESPONSE_RECORDS)};
end;
		
export t_OffenderSearchRequest := record (iesp.share.t_BaseRequest)
	t_OffenderSearchBy SearchBy {xpath('SearchBy')};
	t_OffenderOption Options {xpath('Options')};
end;
		
export t_AdvancedSexualOffenderSearchRequest := record (t_OffenderSearchRequest)
end;
		
export t_SexOffReportRequest := record (iesp.share.t_BaseRequest)
	t_SexOffReportOption Options {xpath('Options')};
	t_SexOffReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_OffenderSearchResponseEx := record
	t_OffenderSearchResponse response {xpath('response')};
end;
		
export t_AdvancedSexualOffenderSearchResponseEx := record
	t_AdvancedSexualOffenderSearchResponse response {xpath('response')};
end;
		
export t_SexOffReportResponseEx := record
	t_SexOffReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from sexualoffender.xml. ***/
/*===================================================*/

