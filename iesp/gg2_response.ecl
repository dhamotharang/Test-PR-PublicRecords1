/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from gg2_response.xml. ***/
/*===================================================*/

export gg2_response := MODULE
			
export t_GG2ResponseHeader := record (share.t_ResponseHeader)
	string TransactionRecordId {xpath('TransactionRecordId')};
	string TimeStamp {xpath('TimeStamp')};
	string GeneralErrorCode {xpath('GeneralErrorCode')};
	string GeneralErrorDescription {xpath('GeneralErrorDescription')};
end;
		
export t_ServiceError := record
	string Code {xpath('Code')}; //values['1000','1001','1002','1003','1004','1005','1006','1007','1008','1009','1010','1011','2000','']
	string Message {xpath('Message')};
end;
		
export t_FieldGroup := record
	string nil {xpath('@nil')};
	string GroupName {xpath('GroupName')};
end;
		
export t_AppendedField := record
	string FieldName {xpath('FieldName')}; //values['watchliststate','watchlistdata','JPEGImage','CanadaSixMonthResidency','IsDeceased','']
	varstring Value {xpath('Value'), maxlength(25000)}; // Xsd type: string
end;
		
export t_DatasourceField := record
	t_FieldGroup FieldGroup {xpath('FieldGroup')};
	string FieldName {xpath('FieldName')}; //values['Address1','Address2','AreaNumbers','Aza','BirthCertificateNumber','BirthRegistrationNumber','BirthRegistrationState','BirthRegistrationYear','BlockNumber','BuildingName','BuildingNumber','CellNumber','City','CityOfIssue','CivicNumber','CountryOfBirth','CountryOfIssue','County','CURPIDNumber','DayOfBirth','DayOfExpiry','DayOfPrint','District','DistrictOfIssue','DriverLicenceNumber','DriverLicenceState','DriverLicenceVersionNumber','FamilyNameAtBirth','FamilyNameAtCitizenship','FirstInitial','FirstName','FirstSurname','FloorNumber','Gender','GivenNames','HomeTelephoneNumber','HongKongIDNumber','HouseExtension','HouseNumber','LastName','MaidenName','MedicareNumber','MedicareReference','MiddleName','MonthOfBirth','MonthOfExpiry','MonthOfPrint','Municipality','NationalIDNumber','NHSNumber','NricNumber','PassportCountry','PassportDayOfExpiry','PassportFullName','PassportMRZLine1','PassportMRZLine2','PassportMonthOfExpiry','PassportNumber','PassportYearOfExpiry','PersonalPublicServiceNumber','PlaceOfBirth','PostalCode','Prefecture','Province','ProvinceOfIssue','RegistrationNumber','RegistrationState','RegistrationYear','RoomNumber','RTACardNumber','SecondPostalCode','SecondSurname','SocialInsuranceNumber','State','StateOfBirth','StreetName','StreetNumber','StreetType','Suburb','Surname','TaxFileNumber','Telephone','UnitNumber','WorkTelephone','WorkTelephoneNumber','YearOfBirth','YearOfExpiry','YearOfPrint','']
	string Status {xpath('Status')}; //values['match','nomatch','missing','']
end;
		
export t_DatasourceResponse := record
	string FirstName {xpath('FirstName')};
	string MiddleName {xpath('MiddleName')};
	string LastName {xpath('LastName')};
	string GivenNames {xpath('GivenNames')};
	string Surname {xpath('Surname')};
	string FirstSurname {xpath('FirstSurname')};
	string SecondSurname {xpath('SecondSurname')};
	string MaidenName {xpath('MaidenName')};
	string FirstInitial {xpath('FirstInitial')};
	string MiddleInitial {xpath('MiddleInitial')};
	string GivenInitials {xpath('GivenInitials')};
	string Gender {xpath('Gender')};
	string YearOfBirth {xpath('YearOfBirth')};
	string MonthOfBirth {xpath('MonthOfBirth')};
	string DayOfBirth {xpath('DayOfBirth')};
	string Address1 {xpath('Address1')};
	string Address2 {xpath('Address2')};
	string StreetNumber {xpath('StreetNumber')};
	string HouseNumber {xpath('HouseNumber')};
	string CivicNumber {xpath('CivicNumber')};
	string AreaNumbers {xpath('AreaNumbers')};
	string StreetName {xpath('StreetName')};
	string StreetType {xpath('StreetType')};
	string BuildingName {xpath('BuildingName')};
	string BuildingNumber {xpath('BuildingNumber')};
	string BlockNumber {xpath('BlockNumber')};
	string UnitNumber {xpath('UnitNumber')};
	string RoomNumber {xpath('RoomNumber')};
	string HouseExtension {xpath('HouseExtension')};
	string FloorNumber {xpath('FloorNumber')};
	string Suburb {xpath('Suburb')};
	string Aza {xpath('Aza')};
	string City {xpath('City')};
	string Municipality {xpath('Municipality')};
	string Province {xpath('Province')};
	string County {xpath('County')};
	string State {xpath('State')};
	string District {xpath('District')};
	string Prefecture {xpath('Prefecture')};
	string PostalCode {xpath('PostalCode')};
	string CountryCode {xpath('CountryCode')};
	string Telephone {xpath('Telephone')};
	string CellNumber {xpath('CellNumber')};
	string WorkTelephone {xpath('WorkTelephone')};
	string RTACardNumber {xpath('RTACardNumber')};
	string SocialInsuranceNumber {xpath('SocialInsuranceNumber')};
	string NationalIDNumber {xpath('NationalIDNumber')};
	string HongKongIDNumber {xpath('HongKongIDNumber')};
	string PersonalPublicServiceNumber {xpath('PersonalPublicServiceNumber')};
	string CURPIDNumber {xpath('CURPIDNumber')};
	string StateOfBirth {xpath('StateOfBirth')};
	string NricNumber {xpath('NricNumber')};
	string NHSNumber {xpath('NHSNumber')};
	string CityOfIssue {xpath('CityOfIssue')};
	string CountyOfIssue {xpath('CountyOfIssue')};
	string DistrictOfIssue {xpath('DistrictOfIssue')};
	string ProvinceOfIssue {xpath('ProvinceOfIssue')};
	string DriverLicenceNumber {xpath('DriverLicenceNumber')};
	string DriverLicenceVersionNumber {xpath('DriverLicenceVersionNumber')};
	string DriverLicenceState {xpath('DriverLicenceState')};
	string YearOfExpiry {xpath('YearOfExpiry')};
	string MonthOfExpiry {xpath('MonthOfExpiry')};
	string DayOfExpiry {xpath('DayOfExpiry')};
	string PassportNumber {xpath('PassportNumber')};
	string PassportFullName {xpath('PassportFullName')};
	string PassportMRZLine1 {xpath('PassportMRZLine1')};
	string PassportMRZLine2 {xpath('PassportMRZLine2')};
	string PassportCountry {xpath('PassportCountry')};
	string PlaceOfBirth {xpath('PlaceOfBirth')};
	string CountryOfBirth {xpath('CountryOfBirth')};
	string FamilyNameAtBirth {xpath('FamilyNameAtBirth')};
	string FamilyNameAtCitizenship {xpath('FamilyNameAtCitizenship')};
	string PassportYearOfExpiry {xpath('PassportYearOfExpiry')};
	string PassportMonthOfExpiry {xpath('PassportMonthOfExpiry')};
	string PassportDayOfExpiry {xpath('PassportDayOfExpiry')};
	string MedicareNumber {xpath('MedicareNumber')};
	string MedicareReference {xpath('MedicareReference')};
end;
		
export t_DatasourceResult := record
	string DatasourceName {xpath('DatasourceName')};
	string DatasourceStatus {xpath('DatasourceStatus')}; //values['match','nomatch','missing','']
	dataset(t_ServiceError) Errors {xpath('Errors/ServiceError'), MAXCOUNT(1)};
	t_DatasourceResponse DatasourceFields {xpath('DatasourceFields')};
	dataset(t_AppendedField) AppendedFields {xpath('AppendedFields/AppendedField'), MAXCOUNT(1)};
	dataset(t_FieldGroup) FieldGroups {xpath('FieldGroups/FieldGroup'), MAXCOUNT(1)};
end;
		
export t_GDCRecord := record
	dataset(t_DatasourceResult) DatasourceResults {xpath('DatasourceResults/DatasourceResult'), MAXCOUNT(15)};
	dataset(t_ServiceError) Errors {xpath('Errors/ServiceError'), MAXCOUNT(1)};
	string RecordStatus {xpath('RecordStatus')}; //values['match','nomatch','missing','']
	string TransactionRecordID {xpath('TransactionRecordID')};
end;
		
export t_VerifyResult := record
	string TransactionID {xpath('TransactionID')};
	dataset(t_ServiceError) Errors {xpath('Errors/ServiceError'), MAXCOUNT(1)};
	t_GDCRecord _Record {xpath('Record')};
end;
		
export t_GG2VerificationResponse := record
	t_GG2ResponseHeader _Header {xpath('Header')};
	t_VerifyResult VerifyResult {xpath('VerifyResult')};
end;
		
export t_GG2VerificationResponseEx := record
	t_GG2VerificationResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from gg2_response.xml. ***/
/*===================================================*/

