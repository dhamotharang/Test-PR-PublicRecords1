/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from ca_avm_response.xml. ***/
/*===================================================*/

import iesp;

export ca_avm_response := MODULE

export t_GeocodeType := record
	boolean IsUserDefined {xpath('IsUserDefined')};
	real8 Latitude {xpath('Latitude')};
	real8 Longitude {xpath('Longitude')};
	integer GeoQualityCode {xpath('GeoQualityCode')};
end;

export t_SearchCriteriaType := record
	integer MaxComps {xpath('MaxComps')};
	real8 MaxDistance {xpath('MaxDistance')};
	integer CompsTarget {xpath('CompsTarget')};
	boolean RealEstateOwned {xpath('RealEstateOwned')};
	boolean Foreclosure {xpath('Foreclosure')};
	boolean ShortSale {xpath('ShortSale')};
	boolean RegularSale {xpath('RegularSale')};
	boolean Sold {xpath('Sold')};
	iesp.ca_avm_share.t_RangeType LivingAreaRange {xpath('LivingAreaRange')};
	iesp.ca_avm_share.t_RangeType LandAreaRange {xpath('LandAreaRange')};
	iesp.ca_avm_share.t_RangeType BedRoomRange {xpath('BedRoomRange')};
	iesp.ca_avm_share.t_RangeType BathRange {xpath('BathRange')};
	iesp.ca_avm_share.t_RangeType AgeRange {xpath('AgeRange')};
	iesp.ca_avm_share.t_RangeType SalePriceRange {xpath('SalePriceRange')};
	iesp.ca_avm_share.t_RangeType ListPriceRange {xpath('ListPriceRange')};
	iesp.ca_avm_share.t_RangeType CompLookupRange {xpath('CompLookupRange')};
	iesp.ca_avm_share.t_RangeType YearBuiltRange {xpath('YearBuiltRange')};
	string SponsorId {xpath('SponsorId')};
end;

export t_ImageType := record
	string Src {xpath('Src')};
	string Contents {xpath('Contents')};
	string ImageContent {xpath('ImageContent')};
end;

export t_InfoGridValueType := record
	string Source {xpath('Source')};
	boolean Highlight {xpath('Highlight')};
	string Value {xpath('Value')};
end;

export t_InfoGridElementType := record
	string Label {xpath('Label')};
	dataset(t_InfoGridValueType) ValueArray {xpath('ValueArray/Value'), MAXCOUNT(1)};
end;

export t_InfoGridType := record
	dataset(t_InfoGridElementType) RowArray {xpath('RowArray/Row'), MAXCOUNT(1)};
end;

export t_OwnerInfoType := record
	dataset(iesp.share.t_StringArrayItem) BuyerArray {xpath('BuyerArray/Buyer'), MAXCOUNT(1)};
	dataset(iesp.share.t_StringArrayItem) SellerArray {xpath('SellerArray/Seller'), MAXCOUNT(1)};
end;

export t_PropertyLoanInfoType := record
	string LoanType {xpath('LoanType')};
	string FirstLenderName {xpath('FirstLenderName')};
	string FirstLoanAmt {xpath('FirstLoanAmt')};
	string FirstLoanType {xpath('FirstLoanType')};
	string FirstLoanRateType {xpath('FirstLoanRateType')};
	string SecondLenderName {xpath('SecondLenderName')};
	string SecondLoanAmt {xpath('SecondLoanAmt')};
	string SecondLoanType {xpath('SecondLoanType')};
	string SecondLoanRateType {xpath('SecondLoanRateType')};
	string LastRefiDate {xpath('LastRefiDate')};
	real8 LastRefiLoanVal1 {xpath('LastRefiLoanVal1')};
	string LastRefiLenderName1 {xpath('LastRefiLenderName1')};
	real8 LastRefiLoanval2 {xpath('LastRefiLoanval2')};
	string LastRefiLenderName2 {xpath('LastRefiLenderName2')};
	string LastRefiLoan1Type {xpath('LastRefiLoan1Type')};
	string LastRefiLoan2Type {xpath('LastRefiLoan2Type')};
end;

export t_HistoricalTransactionType := record
	string Datasource {xpath('Datasource')};
	string _Type {xpath('Type')};
	string Date {xpath('Date')};
	real8 Amount {xpath('Amount')};
	string DeedType {xpath('DeedType')};
	string ArmsLength {xpath('ArmsLength')};
	string TransactionType {xpath('TransactionType')};
	string DocumentType {xpath('DocumentType')};
	t_PropertyLoanInfoType LoanInfo {xpath('LoanInfo')};
	t_OwnerInfoType OwnerInfo {xpath('OwnerInfo')};
end;

export t_HistoricalTransactionListType := record
	dataset(t_HistoricalTransactionType) TransactionArray {xpath('TransactionArray/Transaction'), MAXCOUNT(1)};
end;

export t_AmountDateType := record
	string _Type {xpath('Type')};
	real8 Variance {xpath('Variance')};
	integer Confidence {xpath('Confidence')};
	string Level {xpath('Level')};
	integer Amount {xpath('Amount')};
	string Date {xpath('Date')};
end;

export t_AmountDateListType := record
	string ReportDate {xpath('ReportDate')};
	dataset(t_AmountDateType) AmountDateArray {xpath('AmountDateArray/AmountDate'), MAXCOUNT(1)};
end;

export t_PropertyTransferInfoType := record
	string SoldDate {xpath('SoldDate')};
	real8 SoldPrice {xpath('SoldPrice')};
	t_OwnerInfoType OwnerInfo {xpath('OwnerInfo')};
end;

export t_AddressType := record
	string DocumentId {xpath('DocumentId')};
	string Number {xpath('Number')};
	string Directional {xpath('Directional')};
	string Street {xpath('Street')};
	string Suffix {xpath('Suffix')};
	string PostDirectional {xpath('PostDirectional')};
	string Unit {xpath('Unit')};
	string City {xpath('City')};
	string State {xpath('State')};
	string County {xpath('County')};
	string Zip {xpath('Zip')};
	string ZipPlus4 {xpath('ZipPlus4')};
	string FullAddress {xpath('FullAddress')};
end;

export t_PropertyInfoType := record
	string _Type {xpath('Type')};
	string Fips {xpath('Fips')};
	string County {xpath('County')};
	integer BedRooms {xpath('BedRooms')};
	real4 BathRooms {xpath('BathRooms')};
	integer PartialBathRooms {xpath('PartialBathRooms')};
	integer FullBathrooms {xpath('FullBathrooms')};
	string10 TotalRooms {xpath('TotalRooms')}; // Xsd type: float
	integer LivingArea {xpath('LivingArea')};
	integer TotalLivingArea {xpath('TotalLivingArea')};
	unsigned6 LandArea {xpath('LandArea')}; // Xsd type: long
	string Pool {xpath('Pool')};
	real8 LandValue {xpath('LandValue')};
	real8 ImprovementValue {xpath('ImprovementValue')};
	real8 AssessedValue {xpath('AssessedValue')};
	integer AssessedYear {xpath('AssessedYear')};
	real8 MarketValue {xpath('MarketValue')};
	real8 TaxValue {xpath('TaxValue')};
	integer TaxYear {xpath('TaxYear')};
	integer YearBuilt {xpath('YearBuilt')};
	real8 PropertyTax {xpath('PropertyTax')};
	integer ApproxAge {xpath('ApproxAge')};
	string ParcelNumber {xpath('ParcelNumber')};
	string DeedType {xpath('DeedType')};
	t_GeocodeType GeoCode {xpath('GeoCode')};
	string CarrierRoute {xpath('CarrierRoute')};
	string CensusBlockGroup {xpath('CensusBlockGroup')};
	string CensusBlock {xpath('CensusBlock')};
	string CensusTract {xpath('CensusTract')};
	string SoldDate {xpath('SoldDate')};
	real8 SoldPrice {xpath('SoldPrice')};
	string ListDate {xpath('ListDate')};
	real8 ListPrice {xpath('ListPrice')};
	real8 OriginalListPrice {xpath('OriginalListPrice')};
	string OffMktDate {xpath('OffMktDate')};
	integer BuildingArea {xpath('BuildingArea')};
	integer NumOfUnits {xpath('NumOfUnits')};
	string Zoning {xpath('Zoning')};
	integer PropertyId {xpath('PropertyId')};
	string MlsId {xpath('MlsId')};
	string MlsBoardId {xpath('MlsBoardId')};
	string ForeclosureCode {xpath('ForeclosureCode')};
	string RealEstateOwnedCode {xpath('RealEstateOwnedCode')};
	string ShortSaleCode {xpath('ShortSaleCode')};
	string View {xpath('View')};
	string Floors {xpath('Floors')};
	string Basement {xpath('Basement')};
	integer BasementArea {xpath('BasementArea')};
	string UnfinishedBasement {xpath('UnfinishedBasement')};
	string Legal {xpath('Legal')};
	t_OwnerInfoType OwnerInfo {xpath('OwnerInfo')};
	string OwnerName {xpath('OwnerName')};
	string OwnerOccupied {xpath('OwnerOccupied')};
	t_PropertyLoanInfoType Loan {xpath('Loan')};
	string Condition {xpath('Condition')};
	string FeatureList {xpath('FeatureList')};
	string WaterFront {xpath('WaterFront')};
	string Subdivision {xpath('Subdivision')};
	string Fireplace {xpath('Fireplace')};
	string SchoolDistrict {xpath('SchoolDistrict')};
	string Garage {xpath('Garage')};
	real8 HomeOwnerAssociationDue1 {xpath('HomeOwnerAssociationDue1')};
	real8 HomeOwnerAssociationDue2 {xpath('HomeOwnerAssociationDue2')};
	string Structure {xpath('Structure')};
	string MlsExternalId {xpath('MlsExternalId')};
end;

export t_PropertyType := record
	string Source {xpath('Source')}; //values['mls10','mls20','mls20dq','mls10mls20','mls10dq','mls','dataquick','mlsdq','mls10mls20dq','']
	string _Type {xpath('Type')}; //values['sold','list','offmkt','exp','withdrn','pnd','cnt','rental','rented','']
	real8 Score {xpath('Score')};
	string AddressType {xpath('AddressType')};
	real8 AdjustedSalePrice {xpath('AdjustedSalePrice')};
	real8 AdjustedListPrice {xpath('AdjustedListPrice')};
	real8 TimeAdjustedPrice {xpath('TimeAdjustedPrice')};
	real8 TimeAdjustedFactor {xpath('TimeAdjustedFactor')};
	real8 Distance {xpath('Distance')};
	real8 AfAge {xpath('AfAge')};
	real8 AfAv {xpath('AfAv')};
	real8 AfDistance {xpath('AfDistance')};
	real8 AfBaths {xpath('AfBaths')};
	real8 AfBeds {xpath('AfBeds')};
	real8 AfLand {xpath('AfLand')};
	real8 AfLiving {xpath('AfLiving')};
	real8 AfPricePerSqFt {xpath('AfPricePerSqFt')};
	real8 AfPrice {xpath('AfPrice')};
	integer DaysOnMarket {xpath('DaysOnMarket')};
	integer DaysOnMarketM {xpath('DaysOnMarketM')};
	integer Index {xpath('Index')};
	integer IndexOriginal {xpath('IndexOriginal')};
	integer Rank {xpath('Rank')};
	string RankDisplay {xpath('RankDisplay')};
	string PropertyType {xpath('PropertyType')};
	integer ProblemUnit {xpath('ProblemUnit')};
	t_AddressType Address {xpath('Address')};
	t_PropertyInfoType Info {xpath('Info')};
	dataset(t_PropertyTransferInfoType) TransferInfoArray {xpath('TransferInfoArray/TransferInfo'), MAXCOUNT(1)};
	t_HistoricalTransactionListType HistoricalTransactions {xpath('HistoricalTransactions')};
	t_HistoricalTransactionListType PropertyTransactions {xpath('PropertyTransactions')};
	t_InfoGridType InfoGrid {xpath('InfoGrid')};
end;

export t_PropertyListType := record
	string _Type {xpath('Type')}; //values['mls10','mls20','mls20dq','mls10mls20','mls10dq','mls','dataquick','mlsdq','mls10mls20dq','']
	string StatusType {xpath('StatusType')}; //values['sold','list','offmkt','exp','withdrn','pnd','cnt','rental','rented','']
	dataset(t_PropertyType) PropertyArray {xpath('PropertyArray/Property'), MAXCOUNT(1)};
end;

export t_ComparablesType := record
	real8 MedianPrice {xpath('MedianPrice')};
	real8 MedianPriceSqft {xpath('MedianPriceSqft')};
	real8 MedianBeds {xpath('MedianBeds')};
	real8 MedianBaths {xpath('MedianBaths')};
	real8 MedianLiving {xpath('MedianLiving')};
	real8 MedianLand {xpath('MedianLand')};
	real8 MedianAsmt {xpath('MedianAsmt')};
	real8 MinPriceSqft {xpath('MinPriceSqft')};
	real8 MaxPriceSqFt {xpath('MaxPriceSqFt')};
	real8 MinPriceAsmt {xpath('MinPriceAsmt')};
	real8 MaxPriceAsmt {xpath('MaxPriceAsmt')};
	real8 MedianNumBeds {xpath('MedianNumBeds')};
	real8 MedianNumBaths {xpath('MedianNumBaths')};
	real8 MedianLotSize {xpath('MedianLotSize')};
	real8 MedianYearBuilt {xpath('MedianYearBuilt')};
	real8 MedianSqft {xpath('MedianSqft')};
	real8 MedianDistance {xpath('MedianDistance')};
	real8 PriceStDev {xpath('PriceStDev')};
	real8 PricePerListingStDev {xpath('PricePerListingStDev')};
	integer Count {xpath('Count')};
	t_PropertyListType PropertyList {xpath('PropertyList')};
end;

export t_MlsCopyRightType := record
	string MlsBoardId {xpath('MlsBoardId')};
	string MlsBoardDesc {xpath('MlsBoardDesc')};
	string MlsCopyright {xpath('MlsCopyright')};
end;

export t_SponsorLogoType := record
	string LogoLink {xpath('LogoLink')};
end;

export t_SponsorType := record
	integer SponsorId {xpath('SponsorId')};
	string SponsorName {xpath('SponsorName')};
	string SponsorDisplayName1 {xpath('SponsorDisplayName1')};
	string SponsorDisplayName2 {xpath('SponsorDisplayName2')};
	string SponsorPrivacyText1 {xpath('SponsorPrivacyText1')};
	string SponsorPrivacyText2 {xpath('SponsorPrivacyText2')};
	t_SponsorLogoType SponsorLogo {xpath('SponsorLogo')};
end;

export t_MarketConditionsAnalysisType := record
	real8 To3Months {xpath('To3Months')};
	real8 Prior4to6 {xpath('Prior4to6')};
	real8 Prior7to12 {xpath('Prior7to12')};
	string Trend {xpath('Trend')}; //values['increasing','declining','stable','undefined','']
	real8 TrendValue {xpath('TrendValue')};
end;

export t_MarketForeclosureAnalysisType := record
	t_MarketConditionsAnalysisType ForeclosureCount {xpath('ForeclosureCount')};
	t_MarketConditionsAnalysisType RealEstateOwnedCount {xpath('RealEstateOwnedCount')};
	t_MarketConditionsAnalysisType ForeclosureComparison {xpath('ForeclosureComparison')};
	t_MarketConditionsAnalysisType ShortSaleCount {xpath('ShortSaleCount')};
end;

export t_MarketInventoryAnalysisType := record
	integer RealEstateOwnedCount {xpath('RealEstateOwnedCount')};
	integer ForeclosureCount {xpath('ForeclosureCount')};
	t_MarketConditionsAnalysisType TotalSoldComps {xpath('TotalSoldComps')};
	t_MarketConditionsAnalysisType AbsorptionRate {xpath('AbsorptionRate')};
	t_MarketConditionsAnalysisType TotalActiveComps {xpath('TotalActiveComps')};
	t_MarketConditionsAnalysisType Supply {xpath('Supply')};
	t_MarketConditionsAnalysisType Mri {xpath('Mri')};
end;

export t_MarketMedianAnalysisType := record
	t_MarketConditionsAnalysisType MedianCompSalePrice {xpath('MedianCompSalePrice')};
	t_MarketConditionsAnalysisType MedianCompSalesDaysOnMarket {xpath('MedianCompSalesDaysOnMarket')};
	t_MarketConditionsAnalysisType MedianCompListPrice {xpath('MedianCompListPrice')};
	t_MarketConditionsAnalysisType MedianCompListDaysOnMarket {xpath('MedianCompListDaysOnMarket')};
	t_MarketConditionsAnalysisType MedianSaleAsPercentOfList {xpath('MedianSaleAsPercentOfList')};
	t_MarketConditionsAnalysisType MedianPricePerLiving {xpath('MedianPricePerLiving')};
end;

export t_MarketConditionsType := record
	string Condition {xpath('Condition')}; //values['distressed','veryweak','weak','soft','normal','good','strong','hot','']
	t_MarketInventoryAnalysisType Inventory {xpath('Inventory')};
	t_MarketMedianAnalysisType Median {xpath('Median')};
	t_MarketInventoryAnalysisType Condo {xpath('Condo')};
	t_MarketForeclosureAnalysisType Foreclosure {xpath('Foreclosure')};
end;

export t_RelatedValuesType := record
	real8 Variance {xpath('Variance')};
	boolean Typical {xpath('Typical')};
	string Unit {xpath('Unit')};
	real8 BenchmarkValue {xpath('BenchmarkValue')};
	real8 Value {xpath('Value')};
end;

export t_SimilarityType := record
	real8 IndexRating {xpath('IndexRating')};
	t_RelatedValuesType Value {xpath('Value')};
	t_RelatedValuesType LivingAreaPricePerSqFt {xpath('LivingAreaPricePerSqFt')};
	t_RelatedValuesType LivingArea {xpath('LivingArea')};
	t_RelatedValuesType Age {xpath('Age')};
	t_RelatedValuesType LotSize {xpath('LotSize')};
	t_RelatedValuesType HistoricalBrokerPriceOpinion {xpath('HistoricalBrokerPriceOpinion')};
end;

export t_InventoryType := record
	real8 Amount {xpath('Amount')};
	string Duration {xpath('Duration')};
end;

export t_RiskType := record
	integer MarketSize {xpath('MarketSize')};
	real8 RiskScore {xpath('RiskScore')};
	string Risk {xpath('Risk')};
	real8 PricePerformance {xpath('PricePerformance')};
	real8 PriceForecast {xpath('PriceForecast')};
	t_InventoryType Inventory {xpath('Inventory')};
	string ForeclosureActivity {xpath('ForeclosureActivity')};
	string RiskSource {xpath('RiskSource')};
end;

export t_MarketRiskType := record (t_AmountDateListType)
	t_RiskType Risk {xpath('Risk')};
	t_SimilarityType Similarity {xpath('Similarity')};
	t_AmountDateType CaValue {xpath('CaValue')};
	t_AmountDateType AsIsValue {xpath('AsIsValue')};
	t_AmountDateType AsRepairedValue {xpath('AsRepairedValue')};
	t_AmountDateType LoanBalance {xpath('LoanBalance')};
	t_AmountDateType OriginationAppraisal {xpath('OriginationAppraisal')};
end;

export t_PdfSectionType := record
	string Name {xpath('Name')};
	string PdfLink {xpath('PdfLink')};
	string PdfContent {xpath('PdfContent')};
end;

export t_PdfType := record
	string PdfLink {xpath('PdfLink')};
	string PdfContent {xpath('PdfContent')};
	dataset(t_PdfSectionType) PdfSectionsArray {xpath('PdfSectionsArray/PdfSections'), MAXCOUNT(1)};
end;

export t_RiskGradeDetailType := record
	string DisplayName {xpath('DisplayName')};
	string Grade {xpath('Grade')}; //values['pass','fail','n/a','autopass','autofail','']
end;

export t_RiskGradeType := record
	string Level {xpath('Level')};
	dataset(t_RiskGradeDetailType) DetailArray {xpath('DetailArray/Detail'), MAXCOUNT(1)};
end;

export t_DataPointType := record
	string X {xpath('X')};
	string Y {xpath('Y')};
end;

export t_ChartSeriesType := record
	string Label {xpath('Label')};
	string Name {xpath('Name')};
	string Xunit {xpath('Xunit')};
	string Yunit {xpath('Yunit')};
	string Des {xpath('Des')};
	dataset(t_DataPointType) DataPointArray {xpath('DataPointArray/DataPoint'), MAXCOUNT(1)};
end;

export t_ChartType := record
	string Name {xpath('Name')};
	string _Header {xpath('Header')};
	string _Type {xpath('Type')};
	string Description {xpath('Description')};
	string Id {xpath('Id')};
	string PropertyType {xpath('PropertyType')};
	string TimePeriod {xpath('TimePeriod')};
	t_ImageType Image {xpath('Image')};
	dataset(t_ChartSeriesType) SeriesArray {xpath('SeriesArray/Series'), MAXCOUNT(1)};
	string SupplementalText {xpath('SupplementalText')};
end;

export t_ChartGroupType := record
	string Id {xpath('Id')};
	string Name {xpath('Name')};
	string _Type {xpath('Type')};
	dataset(t_ChartType) ChartArray {xpath('ChartArray/Chart'), MAXCOUNT(1)};
end;

export t_ChartsType := record
	dataset(t_ChartGroupType) ChartGroupArray {xpath('ChartGroupArray/ChartGroup'), MAXCOUNT(1)};
end;

export t_PropertyValueType := record
	string _Type {xpath('Type')}; //values['express','regression','regression2','timeadjust','composite','affinity','ppsqft','ppland','ppasv','ppbed','ppbath','mppcr','mliving','mland','mbeds','mbaths','masmt','weightedmedian','medianprice','lnregression','lnregression2','mcomposite','allstatusregression','top3','list','offmkt','withdrn','exp','rental','retro','']
	real8 Estimated {xpath('Estimated')};
	real8 Low {xpath('Low')};
	real8 High {xpath('High')};
	integer ConfidenceScore {xpath('ConfidenceScore')};
	real8 ForecastStdDeviation {xpath('ForecastStdDeviation')};
end;

export t_ReportDataType := record
	t_PropertyType Property {xpath('Property')};
	t_PropertyListType PropertyList {xpath('PropertyList')};
	dataset(t_PropertyValueType) SummaryArray {xpath('SummaryArray/Summary'), MAXCOUNT(1)};
	t_ComparablesType Comparables {xpath('Comparables')};
	t_ChartsType Charts {xpath('Charts')};
	dataset(t_RiskGradeType) RiskGradeGroupArray {xpath('RiskGradeGroupArray/RiskGradeGroup'), MAXCOUNT(1)};
	t_PdfType Pdf {xpath('Pdf')};
	t_MarketRiskType Values {xpath('Values')};
	t_MarketConditionsType MarketConditions {xpath('MarketConditions')};
	t_SponsorType Sponsor {xpath('Sponsor')};
	dataset(t_MlsCopyRightType) MlsCopyrightArray {xpath('MlsCopyrightArray/MlsCopyright'), MAXCOUNT(1)};
end;

export t_UadValidationErrorType := record
	string RuleId {xpath('RuleId')};
	string FieldRefNo {xpath('FieldRefNo')};
	boolean IsFatal {xpath('IsFatal')};
	string Description {xpath('Description')};
	string FieldName {xpath('FieldName')};
	string FieldValue {xpath('FieldValue')};
	string Message {xpath('Message')};
end;

export t_UadValidationSectionType := record
	string Name {xpath('Name')};
	integer NonFatalCount {xpath('NonFatalCount')};
	integer FatalCount {xpath('FatalCount')};
	dataset(t_UadValidationErrorType) ErrorArray {xpath('ErrorArray/Error'), MAXCOUNT(1)};
end;

export t_UadValidationErrorGroupType := record
	string FormName {xpath('FormName')};
	integer CheckRef {xpath('CheckRef')};
	integer NonFatalCount {xpath('NonFatalCount')};
	integer FatalCount {xpath('FatalCount')};
	string Description {xpath('Description')};
	string Version {xpath('Version')};
	dataset(t_UadValidationSectionType) SectionArray {xpath('SectionArray/Section'), MAXCOUNT(1)};
end;

export t_ErrorType := record
	string Code {xpath('Code')};
	string Message {xpath('Message')};
end;

export t_TransactionHeaderType := record
	string Timestamp {xpath('Timestamp')};
	dataset(iesp.ca_avm_share.t_MetaInfoType) MetaInfoArray {xpath('MetaInfoArray/MetaInfo'), MAXCOUNT(1)};
	t_ErrorType Error {xpath('Error')};
	iesp.ca_avm_share.t_AccountType Account {xpath('Account')};
	t_UadValidationErrorGroupType UadValidationErrors {xpath('UadValidationErrors')};
end;

export t_AvmResponseType := record
	string Id {xpath('Id')};
	string _Type {xpath('Type')}; //values['complexityprofiler','riskprofiler','express','quick','basic','valuerange','marketconditions','']
	integer MaxComps {xpath('MaxComps')};
	integer MinComps {xpath('MinComps')};
	boolean TransferInfo {xpath('TransferInfo')};
	string ValuationDate {xpath('ValuationDate')};
	string DataSource {xpath('DataSource')}; //values['mls10','mls20','mls20dq','mls10mls20','mls10dq','mls','dataquick','mlsdq','mls10mls20dq','']
	string CompsType {xpath('CompsType')}; //values['carrier','zip','distance','distancenozip','geofence','fullzip','cbsa','city','polygon','fips','']
	t_TransactionHeaderType ResponseHeader {xpath('ResponseHeader')};
	t_ReportDataType ReportData {xpath('ReportData')};
	t_SearchCriteriaType SearchCriteria {xpath('SearchCriteria')};
end;

export t_CaAvmResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	t_AvmResponseType CaAvmResponse {xpath('CaAvmResponse')};
end;

export t_CaAvmReportResponseEx := record
	t_CaAvmResponse response {xpath('response')};
end;


end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from ca_avm_response.xml. ***/
/*===================================================*/

