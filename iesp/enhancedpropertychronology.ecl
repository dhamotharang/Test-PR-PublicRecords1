/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from enhancedpropertychronology.xml. ***/
/*===================================================*/

export enhancedpropertychronology := MODULE
			
export t_EnhPropertyChronologyReportOption := record (share.t_BaseReportOption)
end;
		
export t_EnhPropertyChronologyReportBy := record
	string ParcelId {xpath('ParcelId')};
	share.t_Address Address {xpath('Address')};
end;
		
export t_EnhChronologyPropertyRecord := record
	string ParcelNumber {xpath('ParcelNumber')};
	string AlternateParcelNumber {xpath('AlternateParcelNumber')};
	string SubdivisionName {xpath('SubdivisionName')};
	string LandUse {xpath('LandUse')};
	integer YearBuilt {xpath('YearBuilt')};
	string LandValue {xpath('LandValue')};
	string ImprovementValue {xpath('ImprovementValue')};
	string TotalValue {xpath('TotalValue')};
	string AssessedValue {xpath('AssessedValue')};
	string TaxAmount {xpath('TaxAmount')};
	string MarketLandValue {xpath('MarketLandValue')};
	string MarketImprovementValue {xpath('MarketImprovementValue')};
	string TotalMarketValue {xpath('TotalMarketValue')};
	integer TaxYear {xpath('TaxYear')};
	integer LivingSize {xpath('LivingSize')};
	integer LandSize {xpath('LandSize')};
	integer Stories {xpath('Stories')};
	integer Bedrooms {xpath('Bedrooms')};
	integer FullBaths {xpath('FullBaths')};
	string Condition {xpath('Condition')};
	boolean Fireplace {xpath('Fireplace')};
	boolean Pool {xpath('Pool')};
	string AirConditioning {xpath('AirConditioning')};
	string Heating {xpath('Heating')};
	string Fuel {xpath('Fuel')};
	string Sewer {xpath('Sewer')};
	string Water {xpath('Water')};
	string Electric {xpath('Electric')};
	string Frame {xpath('Frame')};
	string Roof {xpath('Roof')};
	string LegalDescription {xpath('LegalDescription')};
	string Style {xpath('Style')};
end;
		
export t_EnhPropertyChronologyIndividual := record
	share.t_Name Name {xpath('Name')};
	string UniqueId {xpath('UniqueId')};
	dataset(share.t_RiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(Constants.EnhancedPropertyChronologyReport.MaxCountHRI)};
end;
		
export t_EnhPropertyChronologyResident := record
	share.t_Name Name {xpath('Name')};
	string SSN {xpath('SSN')};
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
	string UniqueId {xpath('UniqueId')};
end;
		
export t_EnhPropertyChronologyDeedRecord := record
	string LenderName {xpath('LenderName')};
	string MortgageAmount {xpath('MortgageAmount')};
	string DocumentType {xpath('DocumentType')};
	share.t_Date RecordingDate {xpath('RecordingDate')};
end;
		
export t_BuyerSellerRelationship := record
	string12 BuyerUniqueId {xpath('BuyerUniqueId')};
	string12 SellerUniqueId {xpath('SellerUniqueId')};
	string50 Relationship {xpath('Relationship')};
end;
		
export t_EnhPropertyChronologySaleRecord := record
	string TitleCompanyName {xpath('TitleCompanyName')};
	share.t_Date SaleDate {xpath('SaleDate')};
	integer MonthsSinceSaleDate {xpath('MonthsSinceSaleDate')};
	string SalePrice {xpath('SalePrice')};
	integer DaysBetweenSales {xpath('DaysBetweenSales')};
	integer PricePercentChange {xpath('PricePercentChange')};
	dataset(t_EnhPropertyChronologyIndividual) Buyers {xpath('Buyers/Buyer'), MAXCOUNT(Constants.EnhancedPropertyChronologyReport.MaxCountIndividual)};
	dataset(t_EnhPropertyChronologyIndividual) Sellers {xpath('Sellers/Seller'), MAXCOUNT(Constants.EnhancedPropertyChronologyReport.MaxCountIndividual)};
	dataset(t_BuyerSellerRelationship) BuyerSellerRelationships {xpath('BuyerSellerRelationships/BuyerSellerRelationship'), MAXCOUNT(Constants.EnhancedPropertyChronologyReport.MaxCountRelationships)};
end;
		
export t_EnhPropertyChronologyTransaction := record
	string SourcePropertyRecordId {xpath('SourcePropertyRecordId')};
	string VendorSourceFlag {xpath('VendorSourceFlag')};
	t_EnhPropertyChronologyDeedRecord Deed {xpath('Deed')};
	t_EnhPropertyChronologySaleRecord Sale {xpath('Sale')};
	dataset(share.t_RiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(Constants.EnhancedPropertyChronologyReport.MaxCountHRI)};
end;
		
export t_EnhancedPropertyChronologyReportResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	share.t_AddressEx Address {xpath('Address')};
	t_EnhChronologyPropertyRecord PropertyRecord {xpath('PropertyRecord')};
	dataset(t_EnhPropertyChronologyTransaction) Transactions {xpath('Transactions/Transaction'), MAXCOUNT(Constants.EnhancedPropertyChronologyReport.MaxCountTransactions)};
	dataset(t_EnhPropertyChronologyResident) Residents {xpath('Residents/Resident'), MAXCOUNT(Constants.EnhancedPropertyChronologyReport.MaxCountResidents)};
end;
		
export t_EnhancedPropertyChronologyReportRequest := record (share.t_BaseRequest)
	t_EnhPropertyChronologyReportOption Options {xpath('Options')};
	t_EnhPropertyChronologyReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_EnhancedPropertyChronologyReportResponseEx := record
	t_EnhancedPropertyChronologyReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from enhancedpropertychronology.xml. ***/
/*===================================================*/

