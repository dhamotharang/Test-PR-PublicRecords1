/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from income_risk.xml. ***/
/*===================================================*/

export income_risk := MODULE
			
export t_EmployerIn := record
	string CompanyName {xpath('CompanyName')};
	string DBA {xpath('DBA')};
	share.t_Address Address {xpath('Address')};
	string10 PhoneNumber {xpath('PhoneNumber')};
	string11 TaxId {xpath('TaxId')};
end;
		
export t_Employment := record
	string JobTitle {xpath('JobTitle')};
	string AnnualIncome {xpath('AnnualIncome')};
	integer YearsInJob {xpath('YearsInJob')};
	integer YearsInProfession {xpath('YearsInProfession')};
	t_EmployerIn Employer {xpath('Employer')};
end;
		
export t_IncomeRiskReportBy := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	share.t_Date DOB {xpath('DOB')};
	string11 SSN {xpath('SSN')};
	string12 UniqueId {xpath('UniqueId')};
	string10 PhoneNumber {xpath('PhoneNumber')};
	string15 DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string2 DriverLicenseState {xpath('DriverLicenseState')};
	t_Employment Employment {xpath('Employment')};
end;
		
export t_IncomeRiskReportOption := record (share.t_BaseReportOption)
	boolean EmployerMatch {xpath('EmployerMatch')};
	boolean PoBoxCompliance {xpath('PoBoxCompliance')};
	boolean IncludeMSOverride {xpath('IncludeMSOverride')};
	boolean IncludeDLVerification {xpath('IncludeDLVerification')};
	boolean DisallowTargusEID3220 {xpath('DisallowTargusEID3220')};//hidden[internal]
	dataset(share.t_StringArrayItem) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(Constants.MaxCountWatchLists)};
	string GlobalWatchlistThreshold {xpath('GlobalWatchlistThreshold')};
	string SIC {xpath('SIC')};
	string NAICS {xpath('NAICS')};
	string SOC {xpath('SOC')};
end;
		
export t_EmployerOut := record (t_EmployerIn)
	integer EstRevenueThousands {xpath('EstRevenueThousands')};
	integer EstEmployees {xpath('EstEmployees')};
	share.t_CompanyVerificationIndicators EmployerVerificationIndicators {xpath('EmployerVerificationIndicators')};
end;
		
export t_IncomeStatistics := record
	string PercentileLow {xpath('PercentileLow')};
	string Percentile10 {xpath('Percentile10')};
	string Percentile25 {xpath('Percentile25')};
	string Percentile75 {xpath('Percentile75')};
	string Percentile90 {xpath('Percentile90')};
	string PercentileHigh {xpath('PercentileHigh')};
	string Mean {xpath('Mean')};
	string Median {xpath('Median')};
	string TotalCompensation {xpath('TotalCompensation')};
	string StandardOfError {xpath('StandardOfError')};
	string JobFamilyMin {xpath('JobFamilyMin')};
	string JobFamilyMax {xpath('JobFamilyMax')};
end;
		
export t_LocalIncomeStatistics := record (t_IncomeStatistics)
	string BonusPercentage {xpath('BonusPercentage')};
	string BenefitsPercentage {xpath('BenefitsPercentage')};
end;
		
export t_EmployerWatchList := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	string TableName {xpath('TableName')};
	string RecordNumber {xpath('RecordNumber')};
	string Country {xpath('Country')};
	string EntityName {xpath('EntityName')};
	integer Sequence {xpath('Sequence')};
end;
		
export t_VerificationIndicators := record
	boolean Name {xpath('Name')};
	boolean Address {xpath('Address')};
	boolean City {xpath('City')};
	boolean State {xpath('State')};
	boolean Zip {xpath('Zip')};
	boolean Zip4 {xpath('Zip4')};
	boolean Phone10 {xpath('Phone10')};
	boolean SSN {xpath('SSN')};
	boolean DOB {xpath('DOB')};
end;
		
export t_IncomeRiskAssessmentReportResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_EmployerOut Employer {xpath('Employer')};
	t_LocalIncomeStatistics LocalStats {xpath('LocalStats')};
	t_IncomeStatistics NationalStats {xpath('NationalStats')};
	t_VerificationIndicators VerificationIndicators {xpath('VerificationIndicators')};
	real4 PositionPercentile {xpath('PositionPercentile')};
	string JobTitle {xpath('JobTitle')};
	string JobFamily {xpath('JobFamily')};
	string StdIndustryClass {xpath('StdIndustryClass')};
	integer EmploymentMiles {xpath('EmploymentMiles')};
	boolean CompanySizeSensitiveIncome {xpath('CompanySizeSensitiveIncome')};
	dataset(proflicense.t_ProfessionalLicenseRecord) ProfessionalLicenses {xpath('ProfessionalLicenses/ProfessionalLicense'), MAXCOUNT(Constants.BR.MaxProfLicenses)};
	dataset(share.t_RiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(Constants.MaxCountIncomeRiskHRI)};
	dataset(t_EmployerWatchList) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(Constants.MaxCountWatchLists)};
	dataset(share.t_CodeMap) Messages {xpath('Messages/Message'), MAXCOUNT(1)};
end;
		
export t_IncomeRiskAssessmentReportRequest := record (share.t_BaseRequest)
	t_IncomeRiskReportBy ReportBy {xpath('ReportBy')};
	t_IncomeRiskReportOption Options {xpath('Options')};
end;
		
export t_IncomeRiskAssessmentReportResponseEx := record
	t_IncomeRiskAssessmentReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from income_risk.xml. ***/
/*===================================================*/

