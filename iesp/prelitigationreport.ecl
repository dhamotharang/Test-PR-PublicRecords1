/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from prelitigationreport.xml. ***/
/*===================================================*/

export prelitigationreport := MODULE
			
export t_PreLitigationReportOption := record (share.t_BaseReportOption)
	boolean ReturnAlsoFound {xpath('ReturnAlsoFound')};
	boolean IncludeRelatives {xpath('IncludeRelatives')};
	boolean IncludeAssociates {xpath('IncludeAssociates')};
	boolean IncludeDriversLicenses {xpath('IncludeDriversLicenses')};
	boolean IncludePhonesPlus {xpath('IncludePhonesPlus')};
	boolean IncludeCriminalIndicators {xpath('IncludeCriminalIndicators')};//hidden[internal]	
end;
		
export t_PreLitigationReportBy := record (bpsreport.t_BpsReportBy)
end;
		
export t_PreLitigationReportAlsoFound := record
	boolean HasRelative {xpath('HasRelative')};
	boolean HasAssociate {xpath('HasAssociate')};
	boolean HasPhonesPlus {xpath('HasPhonesPlus')};
	boolean HasDriversLicense {xpath('HasDriversLicense')};
end;
		
export t_PreLitigationReportIndividual := record, MAXLENGTH (300000001)
	string12 UniqueId {xpath('UniqueId')};
	string3 Probability {xpath('Probability')};
	boolean HasBankruptcy {xpath('HasBankruptcy')};
	boolean HasProperty {xpath('HasProperty')};
	boolean HasCorporateAffiliation {xpath('HasCorporateAffiliation')};
	t_PreLitigationReportAlsoFound AlsoFound {xpath('AlsoFound')};
	dataset(bpsreport.t_BpsReportRelativeSlim) Relatives {xpath('Relatives/Relative'), MAXCOUNT(iesp.constants.BR.MaxRelatives)};
	dataset(bpsreport.t_BpsReportAssociateSlim) Associates {xpath('Associates/Associate'), MAXCOUNT(iesp.constants.BR.MaxAssociates)};
	dataset(dirassistwireless.t_PhonesPlusRecord) PhonesPluses {xpath('PhonesPluses/PhonesPlus'), MAXCOUNT(iesp.constants.BR.MaxPhonesPlus)};
	dataset(motorvehicle.t_MVReportRecord) Vehicles {xpath('Vehicles/Vehicle'), MAXCOUNT(iesp.constants.BR.MaxVehicles)};
	dataset(ucc.t_UCCReport2Record) UCCFilings {xpath('UCCFilings/UCCFiling'), MAXCOUNT(iesp.constants.BR.MaxUCCFilings)};
	dataset(bps_share.t_BpsReportImposter) Imposters {xpath('Imposters/Imposter'), MAXCOUNT(iesp.constants.BR.MaxImposters)};
	dataset(bps_share.t_BpsReportIdentity) AKAs {xpath('AKAs/Identity'), MAXCOUNT(iesp.constants.BR.MaxAKA)};
	dataset(bpsreport.t_BpsReportAddressSlim) BpsReportAddresses2 {xpath('BpsReportAddresses2/BpsReportAddress'), MAXCOUNT(iesp.constants.BR.MaxAddress)};
	dataset(watercraft.t_WaterCraftReportRecord) WaterCrafts {xpath('WaterCrafts/WaterCraft'), MAXCOUNT(iesp.constants.BR.MaxWatercrafts)};
	dataset(propassess.t_AssessReportRecord) AssessRecords {xpath('AssessRecords/AssessRecord'), MAXCOUNT(iesp.constants.BR.MaxAssessments)};
	dataset(propdeed.t_DeedReportRecord) DeedRecords {xpath('DeedRecords/DeedRecord'), MAXCOUNT(iesp.constants.BR.MaxDeeds)};
	dataset(peopleatwork.t_PeopleAtWorkRecord) PeopleAtWorks {xpath('PeopleAtWorks/PeopleAtWork'), MAXCOUNT(iesp.constants.BR.MaxPeopleAtWork)};
	dataset(bankruptcy.t_BankruptcyReportRecord) Bankruptcies {xpath('Bankruptcies/Bankruptcy'), MAXCOUNT(iesp.constants.BR.MaxBankruptcies)};
	dataset(proflicense.t_ProfessionalLicenseRecord) ProfessionalLicenses {xpath('ProfessionalLicenses/ProfessionalLicense'), MAXCOUNT(iesp.constants.BR.MaxProfLicenses)};
	dataset(bpsreport.t_BpsReportLienJudgment) LiensJudgments {xpath('LiensJudgments/LienJudgment'), MAXCOUNT(iesp.constants.BR.MaxLiensJudgments)};
end;
		
export t_PreLitigationReportResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_PreLitigationReportIndividual Individual {xpath('Individual')};
end;
		
export t_PreLitigationReportRequest := record (share.t_BaseRequest)
	t_PreLitigationReportOption Options {xpath('Options')};
	t_PreLitigationReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_PreLitigationReportResponseEx := record
	t_PreLitigationReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from prelitigationreport.xml. ***/
/*===================================================*/

