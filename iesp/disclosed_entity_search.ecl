/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from disclosed_entity_search.xml. ***/
/*===================================================*/

export disclosed_entity_search := MODULE
			
export t_DisclosedEntitySearchOption := record (share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	boolean IsShowAllDoDs {xpath('IsShowAllDoDs')};
end;
		
export t_DisclosedEntityBaseInfo := record
	share.t_Address Address {xpath('Address')};
	string10 Phone10 {xpath('Phone10')};
end;
		
export t_DisclosedEntityIndividualInfo := record (t_DisclosedEntityBaseInfo)
	share.t_Name Name {xpath('Name')};
end;
		
export t_DisclosedEntityCompanyInfo := record (t_DisclosedEntityBaseInfo)
	string CompanyName {xpath('CompanyName')};
end;
		
export t_DisclosedEntitySearchByIndividual := record
	t_DisclosedEntityIndividualInfo Individual {xpath('Individual')};
	share.t_Date DOB {xpath('DOB')};
	string9 SSN {xpath('SSN')};
end;
		
export t_DisclosedEntitySearchByBusiness := record
	t_DisclosedEntityCompanyInfo Company {xpath('Company')};
	string FEIN {xpath('FEIN')};
end;
		
export t_DisclosedEntitySearchBy := record
	string AccountNumber {xpath('AccountNumber')};
	string CustomerKey {xpath('CustomerKey')};
	string10 NPINumber {xpath('NPINumber')};
	t_DisclosedEntitySearchByBusiness Subject {xpath('Subject')};
	dataset(t_DisclosedEntitySearchByIndividual) AssociatedIndividuals {xpath('AssociatedIndividuals/AssociatedIndividual'), MAXCOUNT(iesp.Constants.BR.MaxIndividualInput)};
	dataset(t_DisclosedEntitySearchByBusiness) AssociatedCompanies {xpath('AssociatedCompanies/AssociatedCompany'), MAXCOUNT(iesp.Constants.BR.MaxCompanyInput)};
end;
		
export t_DisclosedEntityCorporateOfficer := record
	share.t_Name Name {xpath('Name')};
	string TitleDescription {xpath('TitleDescription')};
end;
		
export t_DisclosedEntityAssociatedIndividual := record
	t_DisclosedEntitySearchByIndividual SearchedIndividual {xpath('SearchedIndividual')};
	string UniqueId {xpath('UniqueId')};
	boolean IsDeceased {xpath('IsDeceased')};
	share.t_Date DOD {xpath('DOD')};
	boolean SSNExists {xpath('SSNExists')};
	boolean SSNVerified {xpath('SSNVerified')};
	boolean HasLEIESanctions {xpath('HasLEIESanctions')};
	boolean HasEPLSSanctions {xpath('HasEPLSSanctions')};
	dataset(healthcare.t_HealthCareSanctionConsolidatedReport) Sanctions {xpath('Sanctions/Sanction'), MAXCOUNT(iesp.constants.HPR.MAX_SANCTIONS)};
	boolean IsAssociated {xpath('IsAssociated')};
	boolean IsPossibleRelative {xpath('IsPossibleRelative')};
end;
		
export t_DisclosedEntityAssociatedCompany := record
	t_DisclosedEntitySearchByBusiness SearchedBusiness {xpath('SearchedBusiness')};
	string BusinessId {xpath('BusinessId')};
	boolean IsActive {xpath('IsActive')};
	boolean IsFEINExists {xpath('IsFEINExists')};
	boolean IsFEINVerified {xpath('IsFEINVerified')};
	boolean IsNPIExists {xpath('IsNPIExists')};
	boolean IsNPIVerified {xpath('IsNPIVerified')};
	boolean HasLEIESanctions {xpath('HasLEIESanctions')};
	boolean HasEPLSSanctions {xpath('HasEPLSSanctions')};
	dataset(healthcare.t_HealthCareSanctionConsolidatedReport) Sanctions {xpath('Sanctions/Sanction'), MAXCOUNT(iesp.constants.HPR.MAX_SANCTIONS)};
	boolean IsAssociated {xpath('IsAssociated')};
end;
		
export t_DisclosedEntityCompanyResult := record (t_DisclosedEntitySearchByBusiness)
	string SICCode {xpath('SICCode')};
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
	share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
end;
		
export t_DisclosedEntitySubject := record (t_DisclosedEntityCompanyResult)
	string Status {xpath('Status')};
	string URL {xpath('URL')};
	string Email {xpath('Email')};
	string NBREmployees {xpath('NBREmployees')};
	string Sales {xpath('Sales')};
	boolean PropertyFlag {xpath('PropertyFlag')};
	boolean JudgementLienFlag {xpath('JudgementLienFlag')};
	boolean UCCFlag {xpath('UCCFlag')};
	boolean IsFEINExists {xpath('IsFEINExists')};
	boolean IsFEINVerified {xpath('IsFEINVerified')};
	boolean IsNPIExists {xpath('IsNPIExists')};
	boolean IsNPIVerified {xpath('IsNPIVerified')};
end;
		
export t_DisclosedEntityRegisteredAgent := record
	string CompanyName {xpath('CompanyName')};
	share.t_Name Name {xpath('Name')};
	string10 Phone10 {xpath('Phone10')};
end;
		
export t_DisclosedEntityResults := record
	string AccountNumber {xpath('AccountNumber')};
	string CustomerKey {xpath('CustomerKey')};
	string GroupId {xpath('GroupId')};
	t_DisclosedEntitySubject Subject {xpath('Subject')};
	t_DisclosedEntityRegisteredAgent RegisteredAgent {xpath('RegisteredAgent')};
	boolean IsParentCompany {xpath('IsParentCompany')};
	t_DisclosedEntityCompanyInfo ParentCompany {xpath('ParentCompany')};
	dataset(t_DisclosedEntityCompanyResult) DBAs {xpath('DBAs/DBA'), MAXCOUNT(iesp.Constants.BR.MaxDBAandOfficersResult)};
	dataset(t_DisclosedEntityCorporateOfficer) Officers {xpath('Officers/Officer'), MAXCOUNT(iesp.Constants.BR.MaxDBAandOfficersResult)};
	dataset(t_DisclosedEntityAssociatedIndividual) AssociatedIndividuals {xpath('AssociatedIndividuals/AssociatedIndividual'), MAXCOUNT(iesp.Constants.BR.MaxIndividualInput)};
	dataset(t_DisclosedEntityAssociatedCompany) AssociatedCompanies {xpath('AssociatedCompanies/AssociatedCompany'), MAXCOUNT(iesp.Constants.BR.MaxCompanyResult)};
end;
		
export t_DisclosedEntitySearchResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	t_DisclosedEntitySearchBy SearchBy {xpath('SearchBy')};
	dataset(t_DisclosedEntityResults) Records {xpath('Records/Record'), MAXCOUNT(1)};
end;
		
export t_DisclosedEntitySearchRequest := record (share.t_BaseRequest)
	t_DisclosedEntitySearchOption Options {xpath('Options')};
	t_DisclosedEntitySearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_DisclosedEntitySearchResponseEx := record
	t_DisclosedEntitySearchResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from disclosed_entity_search.xml. ***/
/*===================================================*/

