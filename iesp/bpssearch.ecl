/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from bpssearch.xml. ***/
/*===================================================*/

import iesp;
export bpssearch := MODULE
			
export t_BpsSearchOption := record (iesp.share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	boolean UsePhonetics {xpath('UsePhonetics')};
	boolean CheckNameVariants {xpath('CheckNameVariants')};
	boolean UseNicknames {xpath('UseNicknames')};
	boolean IncludeBankruptcy {xpath('IncludeBankruptcy')};
	boolean BlanksFilledIn {xpath('BlanksFilledIn')};
	boolean ReturnAlsoFound {xpath('ReturnAlsoFound')};//hidden[internal]
	boolean IncludePriorAddresses {xpath('IncludePriorAddresses')};
	boolean IncludeSourceDocCounts {xpath('IncludeSourceDocCounts')};//hidden[internal]
	boolean UsePartialSSNMatch {xpath('UsePartialSSNMatch')};
	boolean IncludePhonesPlus {xpath('IncludePhonesPlus')};//hidden[internal]
	boolean IncludeAlternatePhonesCount {xpath('IncludeAlternatePhonesCount')};//hidden[internal]
	boolean IncludeAllUniqueIdRecords {xpath('IncludeAllUniqueIdRecords')};
	boolean IncludeCriminalIndicators {xpath('IncludeCriminalIndicators')};//hidden[internal]
	boolean EnhancedSort {xpath('EnhancedSort')};
	boolean IncludePhonesFeedback {xpath('IncludePhonesFeedback')};//hidden[internal]
	boolean IncludeAddressFeedback {xpath('IncludeAddressFeedback')};//hidden[internal]
	dataset(iesp.share.t_StringArrayItem) IncludeSourceList {xpath('IncludeSourceList/Item'), MAXCOUNT(10)};//hidden[internal]
	boolean IncludeFraudDefenseNetwork {xpath('IncludeFraudDefenseNetwork')};
end;
		
export t_BpsRelatedInfo := record
	string OtherLastName {xpath('OtherLastName')};
	dataset(iesp.share.t_StringArrayItem) RelativeFirstNames {xpath('RelativeFirstNames/Item'), MAXCOUNT(1)};
	dataset(iesp.share.t_StringArrayItem) PreviousCities {xpath('PreviousCities/Item'), MAXCOUNT(1)};
	dataset(iesp.share.t_StringArrayItem) PreviousStates {xpath('PreviousStates/Item'), MAXCOUNT(1)};
end;
		
export t_BpsSearchBy := record
	string11 SSN {xpath('SSN')};
	string4 SSNLast4 {xpath('SSNLast4')};
	string5 SSNFirst5 {xpath('SSNFirst5')};
	string15 Phone10 {xpath('Phone10')};
	string12 UniqueId {xpath('UniqueId')};
	integer Radius {xpath('Radius')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	iesp.share.t_Date DOB {xpath('DOB')};
	iesp.share.t_IntRange AgeRange {xpath('AgeRange')};
end;
		
export t_BpsRecordCounts := record
	integer Vehicles {xpath('Vehicles')};
	integer DriverLicenses {xpath('DriverLicenses')};
	integer Headers {xpath('Headers')};
	integer Criminals {xpath('Criminals')};
	integer SexualOffenses {xpath('SexualOffenses')};
	integer ConcealedWeapons {xpath('ConcealedWeapons')};
	integer Relatives {xpath('Relatives')};
	integer Firearms {xpath('Firearms')};
	integer FAAPilots {xpath('FAAPilots')};
	integer ProfessionalLicenses {xpath('ProfessionalLicenses')};
	integer MerchantVessels {xpath('MerchantVessels')};
	integer Businesses {xpath('Businesses')};
	integer _PeopleAtWork {xpath('PeopleAtWork')};
	integer BusinessContact {xpath('BusinessContact')};
	integer Properties {xpath('Properties')};
	integer PropertyAssessment {xpath('PropertyAssessment')};
	integer PropertyDeeds {xpath('PropertyDeeds')};
	integer Bankruptcies {xpath('Bankruptcies')};
	integer CorporateAffiliations {xpath('CorporateAffiliations')};
	integer CurrentlyOwnedProperties {xpath('CurrentlyOwnedProperties')};
	integer PhonesPlus {xpath('PhonesPlus')};
	integer Emails {xpath('Emails')};
	integer AlternatePhonesCount {xpath('AlternatePhonesCount')};//hidden[internal]
	integer Accidents {xpath('Accidents')};
end;
		
export t_BpsSearchAlsoFound := record
	boolean Properties {xpath('Properties')};
	boolean MotorVehicles {xpath('MotorVehicles')};
	boolean ProfessionalLicenses {xpath('ProfessionalLicenses')};
	boolean BusinessAffiliations {xpath('BusinessAffiliations')};
	boolean PhonesPluses {xpath('PhonesPluses')};
	boolean EmailAddresses {xpath('EmailAddresses')};
	integer AlternatePhonesCount {xpath('AlternatePhonesCount')};//hidden[internal]
	boolean Accidents {xpath('Accidents')};
end;
		
export t_BpsSearchPhoneInfo := record (iesp.share.t_PhoneInfo)
	iesp.share.t_Name ListName {xpath('ListName')};
	string ListCompany {xpath('ListCompany')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Date PhoneFirstSeen {xpath('PhoneFirstSeen')};
	iesp.share.t_Date PhoneLastSeen {xpath('PhoneLastSeen')};
	iesp.phonesfeedback.t_PhonesFeedback PhoneFeedback {xpath('PhoneFeedback')};//hidden[internal]
	integer2 FDNPhoneInd {xpath('FDNPhoneInd')};
	integer2 FDNListingPhoneInd {xpath('FDNListingPhoneInd')};
end;
		
export t_BpsSearchPhone := record
	string10 Phone10 {xpath('Phone10')};
	string50 ListingName {xpath('ListingName')};
	boolean IsActive {xpath('IsActive')};
	string3 TimeZone {xpath('TimeZone')};
	string12 UniqueId {xpath('UniqueId')};
	string1 TypeCell {xpath('TypeCell')};
	string1 TypeResidence {xpath('TypeResidence')};
	integer MatchType {xpath('MatchType')};
	integer GongScore {xpath('GongScore')};
	string30 NewType {xpath('NewType')};
	string30 Carrier {xpath('Carrier')};
	string30 CarrierCity {xpath('CarrierCity')};
	string2 CarrierState {xpath('CarrierState')};
	iesp.share.t_Date PhoneFirstSeen {xpath('PhoneFirstSeen')};
	iesp.share.t_Date PhoneLastSeen {xpath('PhoneLastSeen')};
	iesp.phonesfeedback.t_PhonesFeedback PhoneFeedback {xpath('PhoneFeedback')};//hidden[internal]
	integer2 FDNPhoneInd {xpath('FDNPhoneInd')};
end;
		
export t_BpsSearchRecord := record (iesp.share.t_CriminalIndicators)
	integer _Penalty {xpath('Penalty')};//hidden[ecldev]
	string _Type {xpath('Type')};
	boolean Verified {xpath('Verified')};
	string AddressVerification {xpath('AddressVerification')};
	string UniqueId {xpath('UniqueId')};
	integer Age {xpath('Age')};
	integer AgeAtDeath {xpath('AgeAtDeath')};
	string1 DeathVerificationCode {xpath('DeathVerificationCode')};
	iesp.share.t_Name Name {xpath('Name')};
	string Gender {xpath('Gender')};
	iesp.share.t_AddressEx AddressEx {xpath('AddressEx')};
	iesp.addressfeedback.t_AddressFeedback AddressFeedback {xpath('AddressFeedback')};//hidden[internal]
	iesp.share.t_Date DOB {xpath('DOB')};
	iesp.share.t_Date DOD {xpath('DOD')};
	string1 Deceased {xpath('Deceased')}; //values['U','Y','N','']
	t_BpsSearchPhoneInfo PhoneInfo2 {xpath('PhoneInfo2')};
	dataset(t_BpsSearchPhone) Phones {xpath('Phones/Phone'), MAXCOUNT(iesp.Constants.BPS.ROLLUP_MAX_COUNT_PHONES)};//hidden[internal]
	iesp.share.t_SSNInfo SSNInfo {xpath('SSNInfo')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	iesp.bankruptcy.t_BankruptcyInfo Bankruptcy {xpath('Bankruptcy')};
	t_BpsSearchAlsoFound AlsoFound {xpath('AlsoFound')};//hidden[internal]
	iesp.share.t_SourceCounts SourceCounts {xpath('SourceCounts')};//hidden[internal]
	dataset(iesp.share.t_SourceDocInfo) SourceDocIds {xpath('SourceDocIds/SourceDocInfo'), MAXCOUNT(iesp.Constants.BPS.SOURCE_DOC_MAX_IDS)};//hidden[internal]
	string SubjectSSNIndicator {xpath('SubjectSSNIndicator')}; //values['yes','no','close','relative','']
	integer2 FDNUniqueIdInd {xpath('FDNUniqueIdInd')};
	integer2 FDNAddressInd {xpath('FDNAddressInd')};
	integer2 FDNSsnInd {xpath('FDNSsnInd')};
	boolean FDNWafContribData {xpath('FDNWafContribData')};
	boolean FDNResultsFound {xpath('FDNResultsFound')};
	boolean FDNIndicatorsReturned {xpath('FDNIndicatorsReturned')};
  boolean IsCurrent {xpath('IsCurrent')};
end;
		
export t_BpsSearchResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer SubjectTotalCount {xpath('SubjectTotalCount')};
	dataset(t_BpsSearchRecord) Records {xpath('Records/Record'), MAXCOUNT(iesp.Constants.BPS.SEARCH_MAX_COUNT_RESPONSE_RECORDS)};
end;
		
export t_BpsSearchRequest := record (iesp.fdn_share.t_FDNBaseRequest)
	t_BpsSearchOption Options {xpath('Options')};
	t_BpsSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_BpsSearchResponseEx := record
	t_BpsSearchResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from bpssearch.xml. ***/
/*===================================================*/

