/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from voter.xml. ***/
/*===================================================*/

export voter := MODULE
			
export t_VoterSearchBy := record
	string11 SSN {xpath('SSN')};
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
end;
		
export t_VoterOption := record (share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
end;
		
export t_VoterRecord := record
	share.t_Name Name {xpath('Name')};
	string30 MaidenName {xpath('MaidenName')};
	share.t_Address Address {xpath('Address')};
	string13 RegistrationId {xpath('RegistrationId')};
	string2 StateCode {xpath('StateCode')};
	string20 StateName {xpath('StateName')};
	string30 Occupation {xpath('Occupation')};
	string10 Sex {xpath('Sex')};
	string9 SSN {xpath('SSN')};
	string12 UniqueId {xpath('UniqueId')};
	string10 Race {xpath('Race')};
	share.t_Date DOB {xpath('DOB')};
	string25 PoliticalParty {xpath('PoliticalParty')};
	string20 Status {xpath('Status')};
	share.t_Date LastDateVote {xpath('LastDateVote')};
	share.t_Date RegistrationDate {xpath('RegistrationDate')};
end;
		
export t_VoterSearchResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_VoterRecord) Records {xpath('Records/Record'), MAXCOUNT(iesp.Constants.BR.MaxVoterRegistrations)};
end;
		
export t_VoterSearch2By := record (share.t_BaseSearchBy)
	string11 SSN {xpath('SSN')};
	share.t_Name Name {xpath('Name')};
	string30 MaidenName {xpath('MaidenName')};
	share.t_Date DOB {xpath('DOB')};
	string10 HomePhone {xpath('HomePhone')};
	string10 WorkPhone {xpath('WorkPhone')};
	share.t_Address Address {xpath('Address')};
end;
		
export t_VoterSearch2Option := record (share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	boolean UseNicknames {xpath('UseNicknames')};
	boolean UsePhonetics {xpath('UsePhonetics')};
	boolean IncludeAlsoFound {xpath('IncludeAlsoFound')};
end;
		
export t_VoterBaseRecord2 := record
	boolean AlsoFound {xpath('AlsoFound')};
	string12 VoterRecordId {xpath('VoterRecordId')};
	string12 UniqueId {xpath('UniqueId')};
	string9 SSN {xpath('SSN')};
	share.t_Name Name {xpath('Name')};
	share.t_Date DOB {xpath('DOB')};
	string30 Occupation {xpath('Occupation')};
	string25 Race {xpath('Race')};
	string7 Gender {xpath('Gender')};
	share.t_Date RegistrationDate {xpath('RegistrationDate')};
	share.t_Date LastVoteDate {xpath('LastVoteDate')};
	string25 PoliticalParty {xpath('PoliticalParty')};
	string50 VoterStatus {xpath('VoterStatus')};
	string20 ActiveOrInactive {xpath('ActiveOrInactive')};
	string1 ActiveOrInactiveFlag {xpath('ActiveOrInactiveFlag')};
	string2 RegistrateState {xpath('RegistrateState')};
	string35 RegistrateStateName {xpath('RegistrateStateName')};
	share.t_Address ResidentAddress {xpath('ResidentAddress')};
	share.t_Address MailingAddress {xpath('MailingAddress')};
end;
		
export t_VoterSearch2Record := record (t_VoterBaseRecord2)
	string255 ExternalKey {xpath('ExternalKey')};
end;
		
export t_VoterSearch2Response := record
	share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_VoterSearch2Record) Records {xpath('Records/Record'), MAXCOUNT(iesp.Constants.BR.MaxVoterRegistrations)};
end;
		
export t_VoterReport2By := record
	string12 UniqueId {xpath('UniqueId')};
	string12 VoterRecordId {xpath('VoterRecordId')};
end;
		
export t_VoterReport2Option := record (share.t_BaseReportOption)
end;
		
export t_VotingHistory := record
	string4 VotedYear {xpath('VotedYear')};
	string2 Primary {xpath('Primary')};
	string2 Special1 {xpath('Special1')};
	string2 Special2 {xpath('Special2')};
	string2 General {xpath('General')};
	string2 PresidentialPrimary {xpath('PresidentialPrimary')};
	string2 Other {xpath('Other')};
end;
		
export t_VoterDistrictInfo := record
	string5 TownCode {xpath('TownCode')};
	string5 DistrictCode {xpath('DistrictCode')};
	string5 CountyCode {xpath('CountyCode')};
	string5 SchoolCode {xpath('SchoolCode')};
	string1 PrecinctType {xpath('PrecinctType')};
	string20 SpecialDistrict1 {xpath('SpecialDistrict1')};
	string20 SpecialDistrict2 {xpath('SpecialDistrict2')};
	string7 Precinct1 {xpath('Precinct1')};
	string7 Precinct2 {xpath('Precinct2')};
	string7 Precinct3 {xpath('Precinct3')};
	string7 VillagePrecinct {xpath('VillagePrecinct')};
	string7 SchoolPrecinct {xpath('SchoolPrecinct')};
	string7 Ward {xpath('Ward')};
	string7 PrecinctCityOrTown {xpath('PrecinctCityOrTown')};
	string7 AdvisoryNeigborCommissioner {xpath('AdvisoryNeigborCommissioner')};
	string4 CityConcilDistrict {xpath('CityConcilDistrict')};
	string4 CountCommonDistric {xpath('CountCommonDistric')};
	string3 StateHouseInfo {xpath('StateHouseInfo')};
	string3 StateSenateInfo {xpath('StateSenateInfo')};
	string3 USHouseOfRepresentativesInfo {xpath('USHouseOfRepresentativesInfo')};
	string4 ElementarySchoolDistrict {xpath('ElementarySchoolDistrict')};
	string4 SchoolDistrict {xpath('SchoolDistrict')};
	string4 CommunityCollegeDistrict {xpath('CommunityCollegeDistrict')};
	string4 Municipal {xpath('Municipal')};
	string4 VillageDistrict {xpath('VillageDistrict')};
	string4 PoliceJurisdiction {xpath('PoliceJurisdiction')};
	string4 PoliceDistrict {xpath('PoliceDistrict')};
	string4 PublicServiceCommission {xpath('PublicServiceCommission')};
	string4 RescureSquad {xpath('RescureSquad')};
	string4 FireDepartment {xpath('FireDepartment')};
	string4 SanitaryDepartment {xpath('SanitaryDepartment')};
	string4 SewerDistrict {xpath('SewerDistrict')};
	string4 WaterDistrict {xpath('WaterDistrict')};
	string4 MosquitoDistrict {xpath('MosquitoDistrict')};
	string4 TaxationDistrict {xpath('TaxationDistrict')};
	string4 SupremeCourt {xpath('SupremeCourt')};
	string4 JusticeOfPeace {xpath('JusticeOfPeace')};
	string4 JudicialDistrict {xpath('JudicialDistrict')};
	string4 SuperiorCourtDistrict {xpath('SuperiorCourtDistrict')};
	string4 CourtOfAppeals {xpath('CourtOfAppeals')};
	string3 CongressionalDistrict {xpath('CongressionalDistrict')};
end;
		
export t_VoterReport2Record := record (t_VoterBaseRecord2)
	string30 MaidenName {xpath('MaidenName')};
	integer AgeCategory {xpath('AgeCategory')};
	string10 AgeRange {xpath('AgeRange')};
	string10 HomePhone {xpath('HomePhone')};
	string10 WorkPhone {xpath('WorkPhone')};
	string1 HeadHouseHold {xpath('HeadHouseHold')};
	string18 PlaceOfBirth {xpath('PlaceOfBirth')};
	t_VoterDistrictInfo VoterDistrictInfo {xpath('VoterDistrictInfo')};
	dataset(t_VotingHistory) VotingHistories {xpath('VotingHistories/VotingHistory'), MAXCOUNT(iesp.Constants.BR.MaxVoterHistory)};
end;
		
export t_VoterReport2Response := record
	share.t_ResponseHeader _Header {xpath('Header')};
	dataset(t_VoterReport2Record) VoterRegistrations {xpath('VoterRegistrations/VoterRegistration'), MAXCOUNT(iesp.Constants.BR.MaxVoterRegistrations)};
end;
		
export t_VoterSearchRequest := record (share.t_BaseRequest)
	t_VoterSearchBy SearchBy {xpath('SearchBy')};
	t_VoterOption Options {xpath('Options')};
end;
		
export t_VoterSearch2Request := record (share.t_BaseRequest)
	t_VoterSearch2By SearchBy {xpath('SearchBy')};
	t_VoterSearch2Option Options {xpath('Options')};
end;
		
export t_VoterReport2Request := record (share.t_BaseRequest)
	t_VoterReport2By ReportBy {xpath('ReportBy')};
	t_VoterReport2Option Options {xpath('Options')};
end;
		
export t_VoterSearchResponseEx := record
	t_VoterSearchResponse response {xpath('response')};
end;
		
export t_VoterSearch2ResponseEx := record
	t_VoterSearch2Response response {xpath('response')};
end;
		
export t_VoterReport2ResponseEx := record
	t_VoterReport2Response response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from voter.xml. ***/
/*===================================================*/

