/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from duediligencereport.xml. ***/
/*===================================================*/

import iesp;

export duediligencereport := MODULE
			
export t_DDRMatchSummary := record
	integer2 Sequence {xpath('Sequence')};
	iesp.share.t_Name Name {xpath('Name')};
	string LexID {xpath('LexID')};
	iesp.share.t_Date SourceDate {xpath('SourceDate')};
	string EntityType {xpath('EntityType')};
	iesp.share.t_Date EntityDate {xpath('EntityDate')};
	integer2 Number {xpath('Number')};
	string ReasonListed {xpath('ReasonListed')};
	string ProprietaryUID {xpath('ProprietaryUID')};
	iesp.share.t_Address Address {xpath('Address')};
	string AdditionalInformation {xpath('AdditionalInformation')};
end;
		
export t_DDRHighRiskNewsProfiles := record
	integer2 Sequence {xpath('Sequence')};
	integer2 Score {xpath('Score')};
	iesp.share.t_Name IndividualName {xpath('IndividualName')};
	string Category {xpath('Category')};
	iesp.share.t_Date Date {xpath('Date')};
	dataset(t_DDRMatchSummary) MatchSummaries {xpath('MatchSummaries/MatchSummary'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxRecords)};
end;
		
export t_DDRAdverseMediaDataDetails := record
	integer2 NumberOfBusinesses {xpath('NumberOfBusinesses')};
	integer2 NumberOfBusinessExecutiveOfficers {xpath('NumberOfBusinessExecutiveOfficers')};
	dataset(t_DDRHighRiskNewsProfiles) HighRiskNewsProfiles {xpath('HighRiskNewsProfiles/HighRiskNewsProfile'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxRecords)};
end;
		
export t_DDRComponentsOfBusiness := record
	integer2 Sequence {xpath('Sequence')};
	string Name {xpath('Name')};
	string LexID {xpath('LexID')};
end;
		
export t_DDRTaxAssessmentValues := record
	iesp.share.t_Date TaxYear {xpath('TaxYear')};
	integer2 TaxPrice {xpath('TaxPrice')};
end;
		
export t_DDROwnershipDetails := record
	iesp.share.t_Date PurchaseDate {xpath('PurchaseDate')};
	integer2 LengthofOwnership {xpath('LengthofOwnership')};
	integer4 PurchasePrice {xpath('PurchasePrice')};
end;
		
export t_DDRYearMakeModel := record
	string4 Year {xpath('Year')};
	string Make {xpath('Make')};
	string Model {xpath('Model')};
end;
		
export t_DDRVINNumber := record
	string VIN {xpath('VIN')};
end;
		
export t_DDRAdditionalDetails := record
	string4 DetailType {xpath('DetailType')};
end;
		
export t_DDRTitleInfo := record
	string2 State {xpath('State')};
	iesp.share.t_Date Date {xpath('Date')};
end;
		
export t_DDRRegistration := record
	string2 State {xpath('State')};
	iesp.share.t_Date Date {xpath('Date')};
end;
		
export t_DDRMotorVehicle := record
	integer2 Sequence {xpath('Sequence')};
	t_DDRYearMakeModel Vehicle {xpath('Vehicle')};
	t_DDRAdditionalDetails LicensePlateType {xpath('LicensePlateType')};
	t_DDRAdditionalDetails ClassType {xpath('ClassType')};
	integer3 BasePrice {xpath('BasePrice')};
	t_DDRVINNumber VIN {xpath('VIN')};
	t_DDRTitleInfo Title {xpath('Title')};
	t_DDRRegistration Registration {xpath('Registration')};
end;
		
export t_DDRAreaRisk := record
	boolean Hifca {xpath('Hifca')};
	boolean Hidta {xpath('Hidta')};
	string CrimeIndex {xpath('CrimeIndex')};
	integer2 NumberOfNeighborhoodFelons {xpath('NumberOfNeighborhoodFelons')};
	integer2 NumberOfHighRiskBusinesses {xpath('NumberOfHighRiskBusinesses')};
	integer2 NumberOfVacantProperties {xpath('NumberOfVacantProperties')};
end;
		
export t_DDRProperty := record
	integer2 Sequence {xpath('Sequence')};
	iesp.share.t_Address Address {xpath('Address')};
	string2 BusinessAddressType {xpath('BusinessAddressType')};
	iesp.share.t_Name OwnerName {xpath('OwnerName')};
	boolean OwnerOccupied {xpath('OwnerOccupied')};
	t_DDROwnershipDetails PurchaseDetails {xpath('PurchaseDetails')};
	t_DDRTaxAssessmentValues MostRecentTax {xpath('MostRecentTax')};
	t_DDRAreaRisk AreaRisk {xpath('AreaRisk')};
	string ResidentTennant {xpath('ResidentTennant')};
end;
		
export t_DDRAircraft := record
	integer2 Sequence {xpath('Sequence')};
	t_DDRYearMakeModel Aircraft {xpath('Aircraft')};
	t_DDRAdditionalDetails _Type {xpath('Type')};
	t_DDRVINNumber VIN {xpath('VIN')};
	t_DDRTitleInfo Title {xpath('Title')};
	t_DDRRegistration Registration {xpath('Registration')};
end;
		
export t_DDRWatercraft := record
	integer2 Sequence {xpath('Sequence')};
	t_DDRYearMakeModel Watercraft {xpath('Watercraft')};
	t_DDRAdditionalDetails VesselType {xpath('VesselType')};
	integer2 VesselLength {xpath('VesselLength')};
	t_DDRTitleInfo Title {xpath('Title')};
	t_DDRRegistration Registration {xpath('Registration')};
end;
		
export t_DDRSOSActions := record
	integer2 Sequence {xpath('Sequence')};
	string Action {xpath('Action')};
	iesp.share.t_Date SOSActionDate {xpath('SOSActionDate')};
end;
		
export t_DDRCountyCityRisk := record
	string CountyName {xpath('CountyName')};
	boolean BoardersForeignJurisdiction {xpath('BoardersForeignJurisdiction')};
	boolean BoardersOceanWithin150ForeignJurisdiction {xpath('BoardersOceanWithin150ForeignJurisdiction')};
	boolean CityHasAccessViaStationOrCrossing {xpath('CityHasAccessViaStationOrCrossing')};
end;
		
export t_DDRBusinessInformation := record
	string Name {xpath('Name')};
	iesp.share.t_Address InputAddress {xpath('InputAddress')};
	iesp.share.t_Address BestAddress {xpath('BestAddress')};
	string Phone {xpath('Phone')};
	string LexID {xpath('LexID')};
	iesp.share.t_Date EstablishedDate {xpath('EstablishedDate')};
	string InputFEIN {xpath('InputFEIN')};
	string BestFEIN {xpath('BestFEIN')};
	string NaicsCode {xpath('NaicsCode')};
	string NaicsDescription {xpath('NaicsDescription')};
	string SicCode {xpath('SicCode')};
	string SicDescription {xpath('SicDescription')};
end;
		
export t_DDRBusinessAttributeDescription := record
	dataset(iesp.share.t_StringArrayItem) AttributeDescriptions {xpath('AttributeDescriptions/AttributeDescription'), MAXCOUNT(iesp.Constants.DDRAttributesConst.MaxDescriptions)};
end;
		
export t_DDRBusinessPropertyOwnership := record
	integer2 PropertyCurrentCount {xpath('PropertyCurrentCount')};
	string2 TaxAssessedValue {xpath('TaxAssessedValue')};
	dataset(t_DDRProperty) Properties {xpath('Properties/Property'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAssets)};
end;
		
export t_DDRBusinessAircraftOwnership := record
	integer2 AircraftCount {xpath('AircraftCount')};
	dataset(t_DDRAircraft) Aircrafts {xpath('Aircrafts/Aircraft'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAssets)};
end;
		
export t_DDRBusinessWatercraftOwnership := record
	integer2 WatercraftCount {xpath('WatercraftCount')};
	dataset(t_DDRWatercraft) Watercrafts {xpath('Watercrafts/Watercraft'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAssets)};
end;
		
export t_DDRBusinessMotorVehicleOwnership := record
	integer2 MotorVehicleCount {xpath('MotorVehicleCount')};
	dataset(t_DDRMotorVehicle) MotorVehicles {xpath('MotorVehicles/MotorVehicle'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAssets)};
end;
		
export t_DDREconomicAttributeDataDetails := record
	t_DDRBusinessPropertyOwnership PropertyOwnership {xpath('PropertyOwnership')};
	t_DDRBusinessAircraftOwnership AircraftOwnership {xpath('AircraftOwnership')};
	t_DDRBusinessWatercraftOwnership WatercraftOwnership {xpath('WatercraftOwnership')};
	t_DDRBusinessMotorVehicleOwnership MotorVehicleOwnership {xpath('MotorVehicleOwnership')};
end;
		
export t_DDRBusinessAddressRisk := record
	integer2 Sequence {xpath('Sequence')};
	iesp.share.t_Address Address {xpath('Address')};
	string AddressType {xpath('AddressType')};
	boolean InputAddressVerified {xpath('InputAddressVerified')};
	iesp.share.t_Date AddressFirstReported {xpath('AddressFirstReported')};
	iesp.share.t_Date AddressLastReported {xpath('AddressLastReported')};
	boolean IsVacant {xpath('IsVacant')};
	boolean Cmra {xpath('Cmra')};
	t_DDRCountyCityRisk CountyCityRisk {xpath('CountyCityRisk')};
	t_DDRAreaRisk AreaRisk {xpath('AreaRisk')};
end;
		
export t_DDRBusinessOperatingLocations := record
	integer2 OperatingLocationCount {xpath('OperatingLocationCount')};
	dataset(t_DDRBusinessAddressRisk) OperatingLocations {xpath('OperatingLocations/OperatingLocation'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAssets)};
end;
		
export t_DDRBusinessOperatingInformation := record
	iesp.share.t_Date FirstReported {xpath('FirstReported')};
	iesp.share.t_Date LastReported {xpath('LastReported')};
	integer2 NumberOfBureauReporting {xpath('NumberOfBureauReporting')};
	boolean RegisteredBusiness {xpath('RegisteredBusiness')};
	integer2 NumberOfSourcesReporting {xpath('NumberOfSourcesReporting')};
	string SOSFilingStatus {xpath('SOSFilingStatus')};
	iesp.share.t_Date SOSIncorporationDate {xpath('SOSIncorporationDate')};
	string SOSIncorporationState {xpath('SOSIncorporationState')};
	iesp.share.t_Date SOSLastUpdated {xpath('SOSLastUpdated')};
	dataset(t_DDRSOSActions) SOSActions {xpath('SOSActions/SOSAction'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxActions)};
	string SICCode {xpath('SICCode')};
	string SICDescription {xpath('SICDescription')};
	string NAICSCode {xpath('NAICSCode')};
	string NAICSDescription {xpath('NAICSDescription')};
	string NAICSIndustryRisk {xpath('NAICSIndustryRisk')};
	string SICIndustryRisk {xpath('SICIndustryRisk')};
	boolean CashIntensive {xpath('CashIntensive')};
	boolean MoneyServiceBusiness {xpath('MoneyServiceBusiness')};
	boolean NonBankFinancialInstituion {xpath('NonBankFinancialInstituion')};
	boolean CasinoOrGamblingRelated {xpath('CasinoOrGamblingRelated')};
	boolean LegalAccountantTelemarketerFlightOrTravel {xpath('LegalAccountantTelemarketerFlightOrTravel')};
	boolean Automotive {xpath('Automotive')};
	dataset(t_DDRComponentsOfBusiness) BusinessNameVariations {xpath('BusinessNameVariations/Variation'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxBusinesses)};
	string FEIN {xpath('FEIN')};
	boolean FEINIsSSN {xpath('FEINIsSSN')};
	dataset(iesp.share.t_Name) SSNAssociatedWith {xpath('SSNAssociatedWith/Name'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxBusinesses)};
	boolean OperatesOutOfAHomeOffice {xpath('OperatesOutOfAHomeOffice')};
	string Filing {xpath('Filing')};
	string StructureType {xpath('StructureType')};
	string ParentCompany {xpath('ParentCompany')};
end;
		
export t_DDRBusinessShellShelfCharacteristics := record
	boolean IncorporatedInStateWithLooseIncorpLaws {xpath('IncorporatedInStateWithLooseIncorpLaws')};
	string IncoporationState {xpath('IncoporationState')};
	boolean BetterBusinessBureau {xpath('BetterBusinessBureau')};
	boolean YellowPages {xpath('YellowPages')};
	boolean BureauSources {xpath('BureauSources')};
	boolean GovernmentSources {xpath('GovernmentSources')};
	boolean UtilitySources {xpath('UtilitySources')};
	integer2 NumberOfBusinessesFoundAtAddress {xpath('NumberOfBusinessesFoundAtAddress')};
	integer2 NumberOfIncorporatedInStateWithLooseIncorpLaws {xpath('NumberOfIncorporatedInStateWithLooseIncorpLaws')};
	integer2 NumberOfBusinessWithNoFEIN {xpath('NumberOfBusinessWithNoFEIN')};
	boolean AddressPrivatePostMailDropRemailerStorageFacilityOrUndeliverable {xpath('AddressPrivatePostMailDropRemailerStorageFacilityOrUndeliverable')};
	boolean IncludesRegisteredAgent {xpath('IncludesRegisteredAgent')};
	dataset(iesp.share.t_Name) RegisteredAgents {xpath('RegisteredAgents/Agent'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxPersonNames)};
	boolean AppearsAtAddressContainingNISOrBusIncubator {xpath('AppearsAtAddressContainingNISOrBusIncubator')};
	integer2 Years {xpath('Years')};
	integer1 Months {xpath('Months')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	integer4 TimeBetweenSOSIncorporationDateDateFirstSeen {xpath('TimeBetweenSOSIncorporationDateDateFirstSeen')};
end;
		
export t_DDROperatingAttributeDataDetails := record
	t_DDRBusinessOperatingLocations BusinessLocations {xpath('BusinessLocations')};
	t_DDRBusinessOperatingInformation BusinessInformation {xpath('BusinessInformation')};
	t_DDRBusinessShellShelfCharacteristics ShellShelfCharacteristics {xpath('ShellShelfCharacteristics')};
end;
		
export t_DDRLegalEventIndividual := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string SSN {xpath('SSN')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string LexID {xpath('LexID')};
end;
		
export t_DDRLegalEventDetails := record
	string CaseNumber {xpath('CaseNumber')};
	string TypeOfOffense {xpath('TypeOfOffense')};
	string Charge {xpath('Charge')};
	string LevelDegree {xpath('LevelDegree')};
end;
		
export t_DDRCriminalRecords := record
	integer2 Sequence {xpath('Sequence')};
	t_DDRLegalEventIndividual IndividualFelon {xpath('IndividualFelon')};
	t_DDRLegalEventDetails OffenseDetails {xpath('OffenseDetails')};
	string OffenseLocationState {xpath('OffenseLocationState')};
	iesp.share.t_Date OffenseLocationDate {xpath('OffenseLocationDate')};
	boolean Incarcerated {xpath('Incarcerated')};
	iesp.share.t_Date IncarcerationDate {xpath('IncarcerationDate')};
	iesp.share.t_Date ReleaseDate {xpath('ReleaseDate')};
end;
		
export t_DDRNonCriminalRecords := record
	integer2 Sequence {xpath('Sequence')};
	t_DDRLegalEventIndividual IndividualFelon {xpath('IndividualFelon')};
	t_DDRLegalEventDetails OffenseDetails {xpath('OffenseDetails')};
	iesp.share.t_Date FilingDate {xpath('FilingDate')};
	iesp.share.t_Date ActionDate {xpath('ActionDate')};
end;
		
export t_DDRLegalEventAttributeDataDetails := record
	integer2 NumberOfFelonies {xpath('NumberOfFelonies')};
	integer2 NumberOfNonFelonies {xpath('NumberOfNonFelonies')};
	integer2 NumberOfLiends {xpath('NumberOfLiends')};
	integer2 NumberOfEvictions {xpath('NumberOfEvictions')};
	integer2 NumberOfJudgements {xpath('NumberOfJudgements')};
	dataset(t_DDRCriminalRecords) PossibleCriminalRecords {xpath('PossibleCriminalRecords/Record'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxRecords)};
	dataset(t_DDRNonCriminalRecords) NonCrimialRecords {xpath('NonCrimialRecords/Record'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxRecords)};
	dataset(iesp.share.t_Name) AssociatedBusExecutiveOfficers {xpath('AssociatedBusExecutiveOfficers/Record'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxRecords)};
end;
		
export t_DDRAttributeDetails := record
	t_DDREconomicAttributeDataDetails EconomicAttributeDataDetails {xpath('EconomicAttributeDataDetails')};
	t_DDROperatingAttributeDataDetails OperatingAttributeDataDetails {xpath('OperatingAttributeDataDetails')};
	t_DDRLegalEventAttributeDataDetails LegalEventAttributeDataDetails {xpath('LegalEventAttributeDataDetails')};
	t_DDRAdverseMediaDataDetails AdverseMediaDataDetails {xpath('AdverseMediaDataDetails')};
end;
		
export t_DDRBusinessReport := record
	t_DDRBusinessInformation BusinessInformation {xpath('BusinessInformation')};
	t_DDRBusinessAttributeDescription BusinessAttributeDescription {xpath('BusinessAttributeDescription')};
	t_DDRAttributeDetails BusinessAttributeDetails {xpath('BusinessAttributeDetails')};
end;
		
export t_DDRAttributesBase := record
	string LexID {xpath('LexID')};
	string15 Phone {xpath('Phone')};
	iesp.share.t_Address Address {xpath('Address')};
end;
		
export t_DDRAttributesIndividual := record (t_DDRAttributesBase)
	string11 SSN {xpath('SSN')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Date DOB {xpath('DOB')};
end;
		
export t_DDRAttributesBusiness := record (t_DDRAttributesBase)
	string100 CompanyName {xpath('CompanyName')};
	string100 AlternateCompanyName {xpath('AlternateCompanyName')};
	string11 FEIN {xpath('FEIN')};
end;
		
export t_DDRAttributesReportBy := record
	t_DDRAttributesIndividual Individual {xpath('Individual')};
	t_DDRAttributesBusiness Business {xpath('Business')};
end;
		
export t_DDRAttributesOptions := record (iesp.share.t_BaseOption)
	string32 AttributesVersionRequest {xpath('AttributesVersionRequest')};
	iesp.share.t_Date HistoryDate {xpath('HistoryDate')};
	boolean IncludeNews {xpath('IncludeNews')};
	boolean IncludeReport {xpath('IncludeReport')};
end;
		
export t_DDRAttributesGroup := record
	string32 Name {xpath('Name')};
	dataset(iesp.share.t_NameValuePair) Attributes {xpath('Attributes/Attribute'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAttributes)};
	dataset(iesp.share.t_NameValuePair) AttributeLevelHits {xpath('AttributeLevelHits/Attribute'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAttributes)};
end;
		
export t_DDRAttributesResult := record
	string12 UniqueId {xpath('UniqueId')};
	string12 BusinessId {xpath('BusinessId')};
	t_DDRAttributesReportBy InputEcho {xpath('InputEcho')};
	t_DDRAttributesGroup AttributeGroup {xpath('AttributeGroup')};
	t_DDRBusinessReport BusinessReport {xpath('BusinessReport')};
end;
		
export t_DueDiligenceReportResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	t_DDRAttributesResult Result {xpath('Result')};
end;
		
export t_DueDiligenceReportRequest := record (iesp.share.t_BaseRequest)
	t_DDRAttributesOptions Options {xpath('Options')};
	t_DDRAttributesReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_DueDiligenceReportResponseEx := record
	t_DueDiligenceReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from duediligencereport.xml. ***/
/*===================================================*/

