/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from duediligencereport.xml. ***/
/*===================================================*/

import iesp;

export duediligencereport := MODULE
			
export t_DDRMatchSummary := record
	integer2 Sequence {xpath('Sequence')};
	iesp.share.t_Name Name {xpath('Name')};
	string LexID {xpath('LexID')};
	iesp.share.t_Date SourceDate {xpath('SourceDate')};
	string EntityType {xpath('EntityType')};
	iesp.share.t_Date EntityDate {xpath('EntityDate')};
	integer2 Number {xpath('Number')};
	string ReasonListed {xpath('ReasonListed')};
	string ProprietaryUID {xpath('ProprietaryUID')};
	iesp.share.t_Address Address {xpath('Address')};
	string AdditionalInformation {xpath('AdditionalInformation')};
end;
		
export t_DDRHighRiskNewsProfiles := record
	integer2 Sequence {xpath('Sequence')};
	integer2 Score {xpath('Score')};
	iesp.share.t_Name IndividualName {xpath('IndividualName')};
	string Category {xpath('Category')};
	iesp.share.t_Date Date {xpath('Date')};
	dataset(t_DDRMatchSummary) MatchSummaries {xpath('MatchSummaries/MatchSummary'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxMatchSummaries)};
end;
		
export t_DDRAdverseMediaDataDetails := record
	integer2 NumberOfBusinesses {xpath('NumberOfBusinesses')};
	integer2 NumberOfBusinessExecutiveOfficers {xpath('NumberOfBusinessExecutiveOfficers')};
	dataset(t_DDRHighRiskNewsProfiles) HighRiskNewsProfiles {xpath('HighRiskNewsProfiles/HighRiskNewsProfile'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxNewsProfiles)};
end;
		
export t_DDRComponentsOfBusiness := record
	integer2 Sequence {xpath('Sequence')};
	string Name {xpath('Name')};
	string LexID {xpath('LexID')};
end;
		
export t_DDRTaxAssessmentValues := record
	iesp.share.t_Date TaxYear {xpath('TaxYear')};
	integer8 TaxPrice {xpath('TaxPrice')};
end;
		
export t_DDROwnershipDetails := record
	iesp.share.t_Date PurchaseDate {xpath('PurchaseDate')};
	integer2 LengthofOwnership {xpath('LengthofOwnership')};
	integer8 PurchasePrice {xpath('PurchasePrice')};
end;
		
export t_DDRYearMakeModel := record
	string4 Year {xpath('Year')};
	string Make {xpath('Make')};
	string Model {xpath('Model')};
end;
		
export t_DDRVINNumber := record
	string VIN {xpath('VIN')};
end;
		
export t_DDRAdditionalDetails := record
	string50 DetailType {xpath('DetailType')};
end;
		
export t_DDRTitleInfo := record
	string2 State {xpath('State')};
	iesp.share.t_Date Date {xpath('Date')};
end;
		
export t_DDRRegistration := record
	string2 State {xpath('State')};
	iesp.share.t_Date Date {xpath('Date')};
end;
		
export t_DDRMotorVehicle := record
	integer2 Sequence {xpath('Sequence')};
	t_DDRYearMakeModel Vehicle {xpath('Vehicle')};
	t_DDRAdditionalDetails LicensePlateType {xpath('LicensePlateType')};
	t_DDRAdditionalDetails ClassType {xpath('ClassType')};
	integer3 BasePrice {xpath('BasePrice')};
	t_DDRVINNumber VIN {xpath('VIN')};
	t_DDRTitleInfo Title {xpath('Title')};
	t_DDRRegistration Registration {xpath('Registration')};
end;
		
export t_DDRAreaRisk := record
	boolean Hifca {xpath('Hifca')};
	boolean Hidta {xpath('Hidta')};
	string CrimeIndex {xpath('CrimeIndex')};
end;
		
export t_DDRCountyCityRisk := record
	string CountyName {xpath('CountyName')};
	boolean BoardersForeignJurisdiction {xpath('BoardersForeignJurisdiction')};
	boolean BoardersOceanWithin150ForeignJurisdiction {xpath('BoardersOceanWithin150ForeignJurisdiction')};
	boolean AccessThroughBoarderStation {xpath('AccessThroughBoarderStation')};
	boolean AccessThroughRailCrossing {xpath('AccessThroughRailCrossing')};
	boolean AccessThroughFerryCrossing {xpath('AccessThroughFerryCrossing')};
end;
		
export t_DDRTenant := record
	string LexID {xpath('LexID')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Date DateOfBirth {xpath('DateOfBirth')};
end;
		
export t_DDRProperty := record
	integer2 Sequence {xpath('Sequence')};
	iesp.share.t_Address Address {xpath('Address')};
	string45 BusinessAddressType {xpath('BusinessAddressType')};
	iesp.share.t_Name OwnerName {xpath('OwnerName')};
	string1 OwnerOccupied {xpath('OwnerOccupied')};
	t_DDROwnershipDetails PurchaseDetails {xpath('PurchaseDetails')};
	t_DDRTaxAssessmentValues MostRecentTax {xpath('MostRecentTax')};
	t_DDRAreaRisk AreaRisk {xpath('AreaRisk')};
	t_DDRCountyCityRisk CountyRisk {xpath('CountyRisk')};
	dataset(t_DDRTenant) ResidentTennants {xpath('ResidentTennants/ResidentTennant'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxTennants)};
end;
		
export t_DDRAircraft := record
	integer2 Sequence {xpath('Sequence')};
	t_DDRYearMakeModel Aircraft {xpath('Aircraft')};
	t_DDRAdditionalDetails _Type {xpath('Type')};
	integer1 NumberOfEngines {xpath('NumberOfEngines')};
	string50 TailNumber {xpath('TailNumber')};
	t_DDRVINNumber VIN {xpath('VIN')};
	iesp.share.t_Date RegistrationDate {xpath('RegistrationDate')};
end;
		
export t_DDRWatercraft := record
	integer2 Sequence {xpath('Sequence')};
	t_DDRYearMakeModel Watercraft {xpath('Watercraft')};
	t_DDRAdditionalDetails VesselType {xpath('VesselType')};
	t_DDRTitleInfo Title {xpath('Title')};
	t_DDRRegistration Registration {xpath('Registration')};
	integer2 LengthInches {xpath('LengthInches')};
	integer2 Lengthfeet {xpath('Lengthfeet')};
	t_DDRVINNumber VIN {xpath('VIN')};
	string25 Propulsion {xpath('Propulsion')};
end;
		
export t_DDRSOSActions := record
	integer2 Sequence {xpath('Sequence')};
	string Action {xpath('Action')};
	iesp.share.t_Date SOSActionDate {xpath('SOSActionDate')};
end;
		
export t_DDRBusinessInformation := record
	string Name {xpath('Name')};
	iesp.share.t_Address InputAddress {xpath('InputAddress')};
	iesp.share.t_Address BestAddress {xpath('BestAddress')};
	string Phone {xpath('Phone')};
	string LexID {xpath('LexID')};
	iesp.share.t_Date EstablishedDate {xpath('EstablishedDate')};
	string InputFEIN {xpath('InputFEIN')};
	string BestFEIN {xpath('BestFEIN')};
	string NaicsCode {xpath('NaicsCode')};
	string NaicsDescription {xpath('NaicsDescription')};
	string SicCode {xpath('SicCode')};
	string SicDescription {xpath('SicDescription')};
end;
		
export t_DDRBusinessAttributeDescription := record
	dataset(iesp.share.t_StringArrayItem) AttributeDescriptions {xpath('AttributeDescriptions/AttributeDescription'), MAXCOUNT(iesp.Constants.DDRAttributesConst.MaxDescriptions)};
end;
		
export t_DDRBusinessPropertyOwnership := record
	integer2 PropertyCurrentCount {xpath('PropertyCurrentCount')};
	integer8 TaxAssessedValue {xpath('TaxAssessedValue')};
	dataset(t_DDRProperty) Properties {xpath('Properties/Property'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxProperties)};
end;
		
export t_DDRBusinessAircraftOwnership := record
	integer2 AircraftCount {xpath('AircraftCount')};
	dataset(t_DDRAircraft) Aircrafts {xpath('Aircrafts/Aircraft'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAircraft)};
end;
		
export t_DDRBusinessWatercraftOwnership := record
	integer2 WatercraftCount {xpath('WatercraftCount')};
	dataset(t_DDRWatercraft) Watercrafts {xpath('Watercrafts/Watercraft'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxWatercraft)};
end;
		
export t_DDRBusinessMotorVehicleOwnership := record
	integer2 MotorVehicleCount {xpath('MotorVehicleCount')};
	dataset(t_DDRMotorVehicle) MotorVehicles {xpath('MotorVehicles/MotorVehicle'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxVehicles)};
end;
		
export t_DDREconomicAttributeDataDetails := record
	t_DDRBusinessPropertyOwnership PropertyOwnership {xpath('PropertyOwnership')};
	t_DDRBusinessAircraftOwnership AircraftOwnership {xpath('AircraftOwnership')};
	t_DDRBusinessWatercraftOwnership WatercraftOwnership {xpath('WatercraftOwnership')};
	t_DDRBusinessMotorVehicleOwnership MotorVehicleOwnership {xpath('MotorVehicleOwnership')};
end;
		
export t_DDRBusinessAddressRisk := record
	integer2 Sequence {xpath('Sequence')};
	iesp.share.t_Address Address {xpath('Address')};
	string AddressType {xpath('AddressType')};
	boolean InputAddressVerified {xpath('InputAddressVerified')};
	iesp.share.t_Date AddressFirstReported {xpath('AddressFirstReported')};
	iesp.share.t_Date AddressLastReported {xpath('AddressLastReported')};
	boolean IsVacant {xpath('IsVacant')};
	boolean Cmra {xpath('Cmra')};
	t_DDRCountyCityRisk CountyCityRisk {xpath('CountyCityRisk')};
	t_DDRAreaRisk AreaRisk {xpath('AreaRisk')};
end;
		
export t_DDRBusinessOperatingLocations := record
	integer2 OperatingLocationCount {xpath('OperatingLocationCount')};
	dataset(t_DDRBusinessAddressRisk) OperatingLocations {xpath('OperatingLocations/OperatingLocation'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxOperatingLocations)};
end;
		
export t_DDRReportingSources := record
	string50 SourceName {xpath('SourceName')};
	string25 SourceType {xpath('SourceType')};
	iesp.share.t_Date FirstReported {xpath('FirstReported')};
	iesp.share.t_Date LastReported {xpath('LastReported')};
end;
		
export t_DDRSICNAIC := record
	string8 SICCode {xpath('SICCode')};
	string8 NAICSCode {xpath('NAICSCode')};
	string50 Description {xpath('Description')};
	iesp.share.t_Date FirstReported {xpath('FirstReported')};
	iesp.share.t_Date LastReported {xpath('LastReported')};
	string10 IndustryRisk {xpath('IndustryRisk')};
	boolean CashIntensiveRetail {xpath('CashIntensiveRetail')};
	boolean CashIntensiveNonRetail {xpath('CashIntensiveNonRetail')};
	boolean MoneyServiceBusiness {xpath('MoneyServiceBusiness')};
	boolean NonBankFinancialInstituion {xpath('NonBankFinancialInstituion')};
	boolean CasinoOrGamblingRelated {xpath('CasinoOrGamblingRelated')};
	boolean LegalAccountantTelemarketerFlightOrTravel {xpath('LegalAccountantTelemarketerFlightOrTravel')};
	boolean Automotive {xpath('Automotive')};
end;
		
// export t_SOSFiling := record
	// string SOSFilingStatus {xpath('SOSFilingStatus')};
	// iesp.share.t_Date SOSIncorporationDate {xpath('SOSIncorporationDate')};
	// string SOSIncorporationState {xpath('SOSIncorporationState')};
	// iesp.share.t_Date SOSLastUpdated {xpath('SOSLastUpdated')};
	// dataset(t_DDRSOSActions) SOSActions {xpath('SOSActions/SOSAction'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxActions)};
// end;

//*****begin temporary layout for SOS Filing
export t_DDRSOSFiling := record
	//integer2 ActiveCount {xpath('ActiveCount')};
	//integer2 OtherCount {xpath('OtherCount')};
	string BusinessName {xpath('BusinessName')};
	string FilingType {xpath('FilingType')};
	string SOSFilingStatus {xpath('SOSFilingStatus')};
	iesp.share.t_Date FilingDate {xpath('FilingDate')};
	string FilingNumber {xpath('FilingNumber')};
	iesp.share.t_Date SOSIncorporationDate {xpath('SOSIncorporationDate')};
	string SOSIncorporationState {xpath('SOSIncorporationState')};
	iesp.share.t_Date SOSLastUpdated {xpath('SOSLastUpdated')};
	dataset(t_DDRSOSActions) SOSActions {xpath('SOSActions/SOSAction'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxActions)};
end;
//***end of temporary code for SOS Filing 
		
export t_DDRBusinessOperatingInformation := record
	iesp.share.t_Date FirstReported {xpath('FirstReported')};
	iesp.share.t_Date LastReported {xpath('LastReported')};
	integer2 NumberOfBureauReporting {xpath('NumberOfBureauReporting')};
	dataset(t_DDRReportingSources) ReportingBureaus {xpath('ReportingBureaus/ReportingBureau'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxReportingBureaus)};
	boolean RegisteredBusiness {xpath('RegisteredBusiness')};
	integer2 NumberOfSourcesReporting {xpath('NumberOfSourcesReporting')};
	dataset(t_DDRReportingSources) ReportingSources {xpath('ReportingSources/ReportingSource'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxReportingSources)};
	/*  */ integer2 SOSActiveCount {xpath('SOSActiveCount')};
	/*  */ integer2 SOSOtherCount {xpath('SOSOtherCount')};
	/*  */ dataset(t_DDRSOSFiling) SOSFilingStatuses {xpath('SOSFilingStatuses/SOSFilingStatus'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxSOSFilingStatuses)};
	dataset(t_DDRSICNAIC) SICNAICs {xpath('SICNAICs/SICNAIC'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxSICNAICs)};
	dataset(t_DDRComponentsOfBusiness) BusinessNameVariations {xpath('BusinessNameVariations/Variation'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxBusinesses)};
	string FEIN {xpath('FEIN')};
	boolean FEINIsSSN {xpath('FEINIsSSN')};
	dataset(iesp.share.t_Name) SSNAssociatedWith {xpath('SSNAssociatedWith/Name'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxSSNAssociations)};
	boolean OperatesOutOfAHomeOffice {xpath('OperatesOutOfAHomeOffice')};
	string Filing {xpath('Filing')};
	string StructureType {xpath('StructureType')};
	string ParentCompany {xpath('ParentCompany')};
end;
		
export t_DDRRegisteredAgent := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	boolean AgentAndBusinessShareAddress {xpath('AgentAndBusinessShareAddress')};
end;
		
export t_DDRBusinessShellShelfCharacteristics := record
	boolean IncorporatedInStateWithLooseIncorpLaws {xpath('IncorporatedInStateWithLooseIncorpLaws')};
	string IncoporationState {xpath('IncoporationState')};
	string20 FEINReported {xpath('FEINReported')};
	integer2 NumberOfSourcesReporting {xpath('NumberOfSourcesReporting')};
	string SourcesReporting {xpath('SourcesReporting')};
	boolean BetterBusinessBureau {xpath('BetterBusinessBureau')};
	boolean YellowPages {xpath('YellowPages')};
	integer2 NumberOfBureauReporting {xpath('NumberOfBureauReporting')};
	t_DDRReportingSources BureauSources {xpath('BureauSources')};
	integer2 NumberOfGovernmentSources {xpath('NumberOfGovernmentSources')};
	t_DDRReportingSources GovernmentSources {xpath('GovernmentSources')};
	integer2 NumberOfUtilitySources {xpath('NumberOfUtilitySources')};
	t_DDRReportingSources UtilitySources {xpath('UtilitySources')};
	integer2 NumberOfBusinessesFoundAtAddress {xpath('NumberOfBusinessesFoundAtAddress')};
	integer2 NumberOfIncorporatedInStateWithLooseIncorpLaws {xpath('NumberOfIncorporatedInStateWithLooseIncorpLaws')};
	integer2 NumberOfBusinessWithNoFEIN {xpath('NumberOfBusinessWithNoFEIN')};
	boolean AddressPrivatePost {xpath('AddressPrivatePost')};
	boolean AddressMailDrop {xpath('AddressMailDrop')};
	boolean AddressRemailer {xpath('AddressRemailer')};
	boolean AddressStorageFacility {xpath('AddressStorageFacility')};
	boolean AddressUndeliverableSecondaryRange {xpath('AddressUndeliverableSecondaryRange')};
	string25 AgentSource {xpath('AgentSource')};
	dataset(iesp.share.t_Name) RegisteredAgents {xpath('RegisteredAgents/Agent'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAgents)};
	boolean AppearsAtAddressContainingNISOrBusIncubator {xpath('AppearsAtAddressContainingNISOrBusIncubator')};
	iesp.share.t_Date SOSIncorporationDate {xpath('SOSIncorporationDate')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	integer4 TimeBetweenSOSIncorporationDateDateFirstSeen {xpath('TimeBetweenSOSIncorporationDateDateFirstSeen')};
end;
		
export t_DDROperatingAttributeDataDetails := record
	t_DDRBusinessOperatingLocations BusinessLocations {xpath('BusinessLocations')};
	t_DDRBusinessOperatingInformation BusinessInformation {xpath('BusinessInformation')};
	t_DDRBusinessShellShelfCharacteristics ShellShelfCharacteristics {xpath('ShellShelfCharacteristics')};
end;
		
export t_DDRLegalEventIndividual := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string SSN {xpath('SSN')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string LexID {xpath('LexID')};
end;
		
export t_DDRCreditorDebtor := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string TaxID {xpath('TaxID')};
end;
		
export t_DDRLiensJudgmentsEvictionRecords := record
	string FilingType {xpath('FilingType')};
	integer8 FilingAmount {xpath('FilingAmount')};
	iesp.share.t_Date FilingDate {xpath('FilingDate')};
	string FilingNumber {xpath('FilingNumber')};
	string FilingJurisdiction {xpath('FilingJurisdiction')};
	iesp.share.t_Date ReleaseDate {xpath('ReleaseDate')};
	boolean Eviction {xpath('Eviction')};
	string Agency {xpath('Agency')};
	string2 AgencyState {xpath('AgencyState')};
	string AgencyCounty {xpath('AgencyCounty')};
	dataset(t_DDRCreditorDebtor) Creditors {xpath('Creditors/Creditor'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxCreditors)};
	dataset(t_DDRCreditorDebtor) Debtors {xpath('Debtors/Debtor'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxCreditors)};
end;
		
export t_DDRLegalEventRecords := record
	t_DDRLegalEventIndividual ExecutiveOfficer {xpath('ExecutiveOfficer')};
	string ExecutiveOfficerTitle {xpath('ExecutiveOfficerTitle')};
	iesp.share.t_Date ExecutiveOfficerDate {xpath('ExecutiveOfficerDate')};
	string1 Conviction {xpath('Conviction')};
	string1 TrafficRelated {xpath('TrafficRelated')};
	string CaseNumber {xpath('CaseNumber')};
	string CourtType {xpath('CourtType')};
	string CaseTypeDescription {xpath('CaseTypeDescription')};
	string1 OffenseScore {xpath('OffenseScore')};
	string OffenseScoreDescription {xpath('OffenseScoreDescription')};
	string OffenseLevel {xpath('OffenseLevel')};
	string OffenseLevelDescription {xpath('OffenseLevelDescription')};
	string ArrestLevelDescription {xpath('ArrestLevelDescription')};
	string CourtStatute {xpath('CourtStatute')};
	string CourtStatuteDescription {xpath('CourtStatuteDescription')};
	string Charge {xpath('Charge')};
	string3 NumberOfCounts {xpath('NumberOfCounts')};
	string DispositionDescription1 {xpath('DispositionDescription1')};
	string DispositionDescription2 {xpath('DispositionDescription2')};
	string ProbationSentence {xpath('ProbationSentence')};
	boolean Incarceration {xpath('Incarceration')};
	boolean CurrentIncarceration {xpath('CurrentIncarceration')};
	boolean CurrentParole {xpath('CurrentParole')};
	boolean CurrentProbation {xpath('CurrentProbation')};
	iesp.share.t_Date EarliestOffenseDate {xpath('EarliestOffenseDate')};
	iesp.share.t_Date OffenseDate {xpath('OffenseDate')};
	iesp.share.t_Date ArrestDate {xpath('ArrestDate')};
	iesp.share.t_Date CourtDispositionDate {xpath('CourtDispositionDate')};
	iesp.share.t_Date SentenceDate {xpath('SentenceDate')};
	iesp.share.t_Date AppealDate {xpath('AppealDate')};
	iesp.share.t_Date IncarcerationDate {xpath('IncarcerationDate')};
	iesp.share.t_Date IncarcerationReleaseDate {xpath('IncarcerationReleaseDate')};
	string50 AgencyDescription {xpath('AgencyDescription')};
	string2 StateOrigin {xpath('StateOrigin')};
	string30 CountyOfOrigin {xpath('CountyOfOrigin')};
	string40 CourtCounty {xpath('CourtCounty')};
	string40 OffenseTown {xpath('OffenseTown')};
	string2 Citizenship {xpath('Citizenship')};
	string30 RaceDescription {xpath('RaceDescription')};
	string7 Sex {xpath('Sex')};
	string15 HairColor {xpath('HairColor')};
	string15 EyeColor {xpath('EyeColor')};
	string3 Height {xpath('Height')};
	string3 Weight {xpath('Weight')};
end;
		
export t_DDRLegalEventAttributeDataDetails := record
	integer2 NumberOfEvictions {xpath('NumberOfEvictions')};
	integer2 NumberOfFelonyConvictions {xpath('NumberOfFelonyConvictions')};
	integer2 NumberOfFelonyNonConvictions {xpath('NumberOfFelonyNonConvictions')};
	integer2 NumberOfMisdemeanorConvictions {xpath('NumberOfMisdemeanorConvictions')};
	integer2 NumberOfMisdemeanorNonConcivtions {xpath('NumberOfMisdemeanorNonConcivtions')};
	integer2 NumberOfTrafficConvictions {xpath('NumberOfTrafficConvictions')};
	integer2 NumberOfTrafficNonConvictions {xpath('NumberOfTrafficNonConvictions')};
	integer2 NumberOfInfractionConvictions {xpath('NumberOfInfractionConvictions')};
	integer2 NumberOfInfractionNonConvictions {xpath('NumberOfInfractionNonConvictions')};
	integer2 NumberOfUnknownConvictions {xpath('NumberOfUnknownConvictions')};
	integer2 NumberOfUnknownNonConvictions {xpath('NumberOfUnknownNonConvictions')};
	integer2 NumberOfJudgmentsLeans {xpath('NumberOfJudgmentsLeans')};
	dataset(t_DDRLiensJudgmentsEvictionRecords) PossibleLiensJudgmentsEvictions {xpath('PossibleLiensJudgmentsEvictions/Eviction'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxLienJudgementsEvictions)};
	dataset(t_DDRLegalEventRecords) PossibleLegalEvents {xpath('PossibleLegalEvents/Event'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxLegalEvents)};
end;
		
export t_DDRPositionTitles := record
	string Title {xpath('Title')};
	iesp.share.t_Date FirstReported {xpath('FirstReported')};
	iesp.share.t_Date LastReported {xpath('LastReported')};
end;
		
export t_DDRProfessionalLicenses := record
	string Status {xpath('Status')};
	string IssuingAgency {xpath('IssuingAgency')};
	iesp.share.t_Date IssueDate {xpath('IssueDate')};
	iesp.share.t_Date ExpirationDate {xpath('ExpirationDate')};
	boolean LawAccounting {xpath('LawAccounting')};
	boolean FinanceRealEstate {xpath('FinanceRealEstate')};
	boolean MedicalDoctor {xpath('MedicalDoctor')};
	boolean PilotMarinePilotHarborPilotExplosives {xpath('PilotMarinePilotHarborPilotExplosives')};
end;
		
export t_DDRBusinessExecutives := record
	iesp.share.t_Name Name {xpath('Name')};
	boolean Deceased {xpath('Deceased')};
	boolean MoreThanTwoIndvsAssociatedWithSSN {xpath('MoreThanTwoIndvsAssociatedWithSSN')};
	string LexID {xpath('LexID')};
	iesp.share.t_Date DOB {xpath('DOB')};
	dataset(t_DDRPositionTitles) Titles {xpath('Titles/Title'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxTitles)};
	boolean AssociatedWithOtherCompanies {xpath('AssociatedWithOtherCompanies')};
	integer2 BusinessScore {xpath('BusinessScore')};
	dataset(t_DDRProfessionalLicenses) ProfessionalLicenses {xpath('ProfessionalLicenses/ProfessionalLicense'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxLicenses)};
	string1 USResidency {xpath('USResidency')};
	integer1 IdentityRisk {xpath('IdentityRisk')};
	integer1 AssociatesRisk {xpath('AssociatesRisk')};
	integer1 CriminalLegalEvents {xpath('CriminalLegalEvents')};
	integer1 CivilLegalEvents {xpath('CivilLegalEvents')};
	integer1 LegalTypes {xpath('LegalTypes')};
end;
		
export t_DDRRegisteredAgents := record
	iesp.share.t_Name Name {xpath('Name')};
	string LexID {xpath('LexID')};
	iesp.share.t_Address Address {xpath('Address')};
	boolean AddressMatchesInputBusiness {xpath('AddressMatchesInputBusiness')};
	integer1 NumberOfBusinessesAtAddress {xpath('NumberOfBusinessesAtAddress')};
	integer1 NumberOfBusinessesWithNoFEIN {xpath('NumberOfBusinessesWithNoFEIN')};
	integer1 NumberOfBusinessesIncorpStateWithLooseIncorpLaws {xpath('NumberOfBusinessesIncorpStateWithLooseIncorpLaws')};
end;
		
export t_DDRNetworkDetails := record
	dataset(t_DDRBusinessExecutives) BusinessExecutives {xpath('BusinessExecutives/BusinessExecutive'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxBusinessExecs)};
	dataset(t_DDRRegisteredAgents) RegisteredAgents {xpath('RegisteredAgents/RegisteredAgent'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxRegisteredAgents)};
end;
		
export t_DDRAttributeDetails := record
	t_DDREconomicAttributeDataDetails EconomicAttributeDataDetails {xpath('EconomicAttributeDataDetails')};
	t_DDROperatingAttributeDataDetails OperatingAttributeDataDetails {xpath('OperatingAttributeDataDetails')};
	t_DDRLegalEventAttributeDataDetails LegalEventAttributeDataDetails {xpath('LegalEventAttributeDataDetails')};
	t_DDRAdverseMediaDataDetails AdverseMediaDataDetails {xpath('AdverseMediaDataDetails')};
	t_DDRNetworkDetails NetworkDataDetails {xpath('NetworkDataDetails')};
end;
		
export t_DDRBusinessReport := record
	t_DDRBusinessInformation BusinessInformation {xpath('BusinessInformation')};
	t_DDRBusinessAttributeDescription BusinessAttributeDescription {xpath('BusinessAttributeDescription')};
	t_DDRAttributeDetails BusinessAttributeDetails {xpath('BusinessAttributeDetails')};
end;
		
export t_DDRAttributesBase := record
	string LexID {xpath('LexID')};
	string15 Phone {xpath('Phone')};
	iesp.share.t_Address Address {xpath('Address')};
end;
		
export t_DDRAttributesIndividual := record (t_DDRAttributesBase)
	string11 SSN {xpath('SSN')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Date DOB {xpath('DOB')};
end;
		
export t_DDRAttributesBusiness := record (t_DDRAttributesBase)
	string100 CompanyName {xpath('CompanyName')};
	string100 AlternateCompanyName {xpath('AlternateCompanyName')};
	string11 FEIN {xpath('FEIN')};
end;
		
export t_DDRAttributesReportBy := record
	t_DDRAttributesIndividual Individual {xpath('Individual')};
	t_DDRAttributesBusiness Business {xpath('Business')};
end;
		
export t_DDRAttributesOptions := record (iesp.share.t_BaseOption)
	string32 AttributesVersionRequest {xpath('AttributesVersionRequest')};
	iesp.share.t_Date HistoryDate {xpath('HistoryDate')};
	boolean IncludeNews {xpath('IncludeNews')};
	boolean IncludeReport {xpath('IncludeReport')};
	boolean DisplayText {xpath('DisplayText')};
end;
		
export t_DDRAttributesGroup := record
	string32 Name {xpath('Name')};
	dataset(iesp.share.t_NameValuePair) Attributes {xpath('Attributes/Attribute'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAttributes)};
	dataset(iesp.share.t_NameValuePair) AttributeLevelHits {xpath('AttributeLevelHits/Attribute'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAttributes)};
end;
		
export t_DDRAttributesResult := record
	string12 UniqueId {xpath('UniqueId')};
	string12 BusinessId {xpath('BusinessId')};
	t_DDRAttributesReportBy InputEcho {xpath('InputEcho')};
	t_DDRAttributesGroup AttributeGroup {xpath('AttributeGroup')};
	t_DDRBusinessReport BusinessReport {xpath('BusinessReport')};
end;
		
export t_DueDiligenceReportResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	t_DDRAttributesResult Result {xpath('Result')};
end;
		
export t_DueDiligenceReportRequest := record (iesp.share.t_BaseRequest)
	t_DDRAttributesOptions Options {xpath('Options')};
	t_DDRAttributesReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_DueDiligenceReportResponseEx := record
	t_DueDiligenceReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from duediligencereport.xml. ***/
/*===================================================*/

