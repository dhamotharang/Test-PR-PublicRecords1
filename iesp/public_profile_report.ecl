/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from public_profile_report.xml. ***/
/*===================================================*/

export public_profile_report := MODULE
			
export t_PublicProfileReportBy := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	share.t_Date DOB {xpath('DOB')};
	string11 SSN {xpath('SSN')};
	string12 UniqueId {xpath('UniqueId')};
end;
		
export t_PublicProfileReportOption := record (share.t_BaseReportOption)
	boolean IncludeSSN {xpath('IncludeSSN')};
	boolean IncludeNameSSN {xpath('IncludeNameSSN')};
	boolean IncludeNameDOB {xpath('IncludeNameDOB')};
	boolean IncludeAddress {xpath('IncludeAddress')};
	boolean IncludeNameAddress {xpath('IncludeNameAddress')};
	boolean IncludeCombination {xpath('IncludeCombination')};
	boolean IncludeFootPrint {xpath('IncludeFootPrint')};
	boolean UseTestData {xpath('UseTestData')};
end;
		
export t_PublicProfileSource := record
	string64 Name {xpath('Name')};
end;
		
export t_PublicProfileAddress := record (share.t_Address)
	share.t_Date FirstSeen {xpath('FirstSeen')};
	share.t_Date LastSeen {xpath('LastSeen')};
end;
		
export t_PublicProfileSubject := record
	string12 UniqueId {xpath('UniqueId')};
	share.t_Date FirstSeen {xpath('FirstSeen')};
	share.t_Date LastSeen {xpath('LastSeen')};
	integer SSNCount {xpath('SSNCount')};
	integer DOBCount {xpath('DOBCount')};
	integer SourceCount {xpath('SourceCount')};
	dataset(t_PublicProfileSource) Sources {xpath('Sources/Source'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_SOURCE_RECORDS)};
end;
		
export t_PublicProfileResults := record
	share.t_Date FirstSeen {xpath('FirstSeen')};
	share.t_Date LastSeen {xpath('LastSeen')};
	integer SubjectCount {xpath('SubjectCount')};
	integer SourceCount {xpath('SourceCount')};
end;
		
export t_PublicProileBirthInfo := record
	share.t_Date DOB {xpath('DOB')};
end;
		
export t_PublicProileDeathInfo := record
	share.t_Date DOD {xpath('DOD')};
	integer AgeAtDeath {xpath('AgeAtDeath')};
	string1 Deceased {xpath('Deceased')}; //values['U','Y','N','']
end;
		
export t_SSNSubject := record (t_PublicProfileSubject)
	dataset(share.t_SSNInfo) SSNInformation {xpath('SSNInformation/SSNInfo'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_SSN_RECORDS)};
	dataset(t_PublicProileDeathInfo) DeathInformation {xpath('DeathInformation/DeathInfo'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_DOD_RECORDS)};
	dataset(share.t_Name) Names {xpath('Names/Name'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_NAME_RECORDS)};
end;
		
export t_SSNResults := record (t_PublicProfileResults)
	dataset(t_SSNSubject) Subjects {xpath('Subjects/Subject'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_SUBJECT_RECORDS)};
end;
		
export t_NameSSNSubject := record (t_SSNSubject)
end;
		
export t_NameSSNResults := record (t_PublicProfileResults)
	dataset(t_NameSSNSubject) Subjects {xpath('Subjects/Subject'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_SUBJECT_RECORDS)};
end;
		
export t_NameDOBSubject := record (t_PublicProfileSubject)
	dataset(t_PublicProileBirthInfo) BirthInformation {xpath('BirthInformation/BirthInfo'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_DOB_RECORDS)};
	dataset(t_PublicProileDeathInfo) DeathInformation {xpath('DeathInformation/DeathInfo'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_DOD_RECORDS)};
	dataset(share.t_Name) Names {xpath('Names/Name'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_NAME_RECORDS)};
end;
		
export t_NameDOBResults := record (t_PublicProfileResults)
	dataset(t_NameDOBSubject) Subjects {xpath('Subjects/Subject'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_SUBJECT_RECORDS)};
end;
		
export t_AddressSubject := record (t_PublicProfileSubject)
	dataset(share.t_Name) Names {xpath('Names/Name'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_NAME_RECORDS)};
	dataset(t_PublicProfileAddress) Addresses {xpath('Addresses/Address'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_ADDRESS_RECORDS)};
end;
		
export t_AddressResults := record (t_PublicProfileResults)
	dataset(t_AddressSubject) Subjects {xpath('Subjects/Subject'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_SUBJECT_RECORDS)};
end;
		
export t_NameAddressSubject := record (t_AddressSubject)
end;
		
export t_NameAddressResults := record (t_PublicProfileResults)
	dataset(t_NameAddressSubject) Subjects {xpath('Subjects/Subject'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_SUBJECT_RECORDS)};
end;
		
export t_CombinationSubject := record (t_NameSSNSubject)
	string16 Key {xpath('Key')};
	dataset(t_PublicProileBirthInfo) BirthInformation {xpath('BirthInformation/BirthInfo'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_DOB_RECORDS)};
	dataset(t_PublicProfileAddress) Addresses {xpath('Addresses/Address'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_ADDRESS_RECORDS)};
end;
		
export t_CombinationResults := record (t_PublicProfileResults)
	dataset(t_CombinationSubject) Subjects {xpath('Subjects/Subject'), MAXCOUNT(iesp.Constants.PublicProfile.MAX_SUBJECT_RECORDS*4)};
end;
		
export t_PublicProfileIdentity := record (share.t_Identity)
end;
		
export t_PublicProfileIndividual := record
	string12 UniqueId {xpath('UniqueId')};
	boolean HasCriminalConviction {xpath('HasCriminalConviction')};
	string60 CriminalConvictionId {xpath('CriminalConvictionId')};
	boolean IsSexualOffender {xpath('IsSexualOffender')};
	string30 SexualOffenderId {xpath('SexualOffenderId')};
	boolean HasConcealedWeapon {xpath('HasConcealedWeapon')};
	string15 ConcealedWeaponId {xpath('ConcealedWeaponId')};
	boolean HasBankruptcy {xpath('HasBankruptcy')};
	boolean HasProperty {xpath('HasProperty')};
	boolean HasCorporateAffiliation {xpath('HasCorporateAffiliation')};
	dataset(sexualoffender.t_SexOffReportRecord) SexualOffenses {xpath('SexualOffenses/SexualOffense'), MAXCOUNT(iesp.Constants.BR.MaxSexualOffenses)};
	dataset(accident.t_AccidentReportRecord) Accidents {xpath('Accidents/Accident'), MAXCOUNT(iesp.Constants.BR.MaxAccidents)};
	dataset(motorvehicle.t_MotorVehicleReport2Record) Vehicles {xpath('Vehicles/Vehicle'), MAXCOUNT(iesp.Constants.BR.MaxVehicles)};
	dataset(fictitiousbusinesssearch.t_FictitiousBusinessSearchRecord) FictitiousBusinesses {xpath('FictitiousBusinesses/FictitiousBusiness'), MAXCOUNT(iesp.Constants.BR.MaxFictitiousBusinesses)};
	dataset(foreclosure.t_ForeclosureSearchRecord) NoticesOfDefaults {xpath('NoticesOfDefaults/NoticeOfDefaults'), MAXCOUNT(iesp.Constants.PublicProfile.Max_Notice_Of_Defaults)};
	dataset(ucc.t_UCCReport2Record) UCCFilings {xpath('UCCFilings/UCCFiling'), MAXCOUNT(iesp.Constants.BR.MaxUCCFilings)};
	dataset(internetdomain.t_InetDomainRecord) InternetDomains {xpath('InternetDomains/InternetDomain'), MAXCOUNT(iesp.Constants.BR.MaxInternetDomains)};
	dataset(criminal.t_CrimReportRecord) CriminalRecords {xpath('CriminalRecords/Criminal'), MAXCOUNT(iesp.Constants.PublicProfile.Max_Criminal_Records)};
	dataset(t_PublicProfileIdentity) AKAs {xpath('AKAs/Identity'), MAXCOUNT(iesp.Constants.BR.MaxAKA)};
	dataset(driverlicense2.t_DLEmbeddedReport2Record) DriverLicenses {xpath('DriverLicenses/DriverLicense'), MAXCOUNT(iesp.Constants.DL.MaxCountDL)};
	dataset(bankruptcy.t_BankruptcyReport2Record) Bankruptcies {xpath('Bankruptcies/Bankruptcy'), MAXCOUNT(iesp.Constants.BR.MaxBankruptcies)};
	dataset(bpsreport.t_BpsCorpAffiliation) CorporateAffiliations {xpath('CorporateAffiliations/Affiliation'), MAXCOUNT(iesp.Constants.BR.MaxCorpAffiliations)};
	dataset(bpsreport.t_BpsFAACertification) FAACertifications {xpath('FAACertifications/Certification'), MAXCOUNT(iesp.Constants.BR.MaxFaaCertificates)};
	dataset(faaaircraft.t_AircraftReportRecord) Aircrafts {xpath('Aircrafts/Aircraft'), MAXCOUNT(iesp.constants.PublicProfile.Max_Aircrafts)};
	dataset(property.t_PropertyReport2Record) Properties {xpath('Properties/Property'), MAXCOUNT(iesp.Constants.BR.MaxProperties)};
	dataset(lienjudgement.t_LienJudgmentReportRecord) LiensJudgments {xpath('LiensJudgments/LienJudgment'), MAXCOUNT(iesp.Constants.BR.MaxLiensJudgments)};
	dataset(proflicense.t_ProfessionalLicenseRecord) ProfessionalLicenses {xpath('ProfessionalLicenses/ProfessionalLicense'), MAXCOUNT(iesp.Constants.BR.MaxProfLicenses)};
	dataset(proflicense.t_ProviderRecord) Providers {xpath('Providers/Provider'), MAXCOUNT(iesp.Constants.BR.MaxProviders)};
	dataset(proflicense.t_SanctionRecord) Sanctions {xpath('Sanctions/Sanction'), MAXCOUNT(iesp.Constants.BR.MaxSanctions)};
	dataset(deacontrolledsubstance.t_DEAControlledSubstanceSearch2Record) ControlledSubstances {xpath('ControlledSubstances/ControlledSubstance'), MAXCOUNT(iesp.Constants.BR.MaxDEASubstances)};
	dataset(voter.t_VoterReport2Record) VoterRegistrations {xpath('VoterRegistrations/VoterRegistration'), MAXCOUNT(iesp.Constants.BR.MaxVoterRegistrations)};
	dataset(huntingfishing.t_HuntFishRecord) HuntingFishingLicenses {xpath('HuntingFishingLicenses/HuntingFishingLicense'), MAXCOUNT(iesp.Constants.BR.MaxHFLicenses)};
	dataset(concealedweapon.t_WeaponRecord) WeaponPermits {xpath('WeaponPermits/WeaponPermit'), MAXCOUNT(iesp.Constants.BR.MaxWeaponPermits)};
	dataset(firearm.t_FirearmRecord) FirearmExplosives {xpath('FirearmExplosives/FirearmExplosive'), MAXCOUNT(iesp.Constants.BR.MaxFirearmsExplosives)};
	dataset(watercraft.t_WaterCraftReport2Record) WaterCrafts {xpath('WaterCrafts/WaterCraft'), MAXCOUNT(iesp.Constants.BR.MaxWatercrafts)};
	dataset(foreclosure.t_ForeclosureReportRecord) Foreclosures {xpath('Foreclosures/Foreclosure'), MAXCOUNT(iesp.Constants.PublicProfile.Max_Foreclosures)};
	dataset(bpsreport.t_BpsReportPhonesPlusRecord) PhonesPluses {xpath('PhonesPluses/PhonesPlus'), MAXCOUNT(iesp.Constants.BR.MaxPhonesPlus)};
	dataset(emailsearch.t_EmailSearchRecord) EmailAddresses {xpath('EmailAddresses/EmailAddress'), MAXCOUNT(iesp.Constants.BR.MaxEmails)};
end;
		
export t_PublicProfileReportResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	dataset(share.t_CodeMap) Messages {xpath('Messages/Message'), MAXCOUNT(1)};
	t_PublicProfileReportBy UserInput {xpath('UserInput')};
	share.t_Date RunDate {xpath('RunDate')};
	t_SSNResults SSNResults {xpath('SSNResults')};
	t_NameSSNResults NameSSNResults {xpath('NameSSNResults')};
	t_NameDOBResults NameDOBResults {xpath('NameDOBResults')};
	t_AddressResults AddressResults {xpath('AddressResults')};
	t_NameAddressResults NameAddressResults {xpath('NameAddressResults')};
	t_CombinationResults CombinationResults {xpath('CombinationResults')};
	t_PublicProfileIndividual Individual {xpath('Individual')};
end;
		
export t_PublicProfileReportRequest := record (share.t_BaseRequest)
	t_PublicProfileReportBy ReportBy {xpath('ReportBy')};
	t_PublicProfileReportOption Options {xpath('Options')};
end;
		
export t_PublicProfileReportResponseEx := record
	t_PublicProfileReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from public_profile_report.xml. ***/
/*===================================================*/

