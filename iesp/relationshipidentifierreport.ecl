/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from relationshipidentifierreport.xml. ***/
/*===================================================*/

import iesp;
export relationshipidentifierreport := MODULE
			
export t_RelationshipIdentifierReportPrimaryEntity := record
	string15 UniqueId {xpath('UniqueId')};
	string50 Role {xpath('Role')};
	string120 CompanyName {xpath('CompanyName')};
	string9 TIN {xpath('TIN')};
	iesp.share.t_BusinessIdentity BusinessIds {xpath('BusinessIds')};
	iesp.share.t_AddressEx Address {xpath('Address')};
	iesp.share.t_Identity Identity {xpath('Identity')};
	iesp.share.t_PhoneInfoEx Phone {xpath('Phone')};
	string1 ListingType {xpath('ListingType')};
	boolean ActiveEDA {xpath('ActiveEDA')};
	boolean Disconnected {xpath('Disconnected')};
	string1 WirelessIndicator {xpath('WirelessIndicator')};
	dataset(iesp.share.t_StringArrayItem) MidexLicenseTypes {xpath('MidexLicenseTypes/MidexLicenseType'), MAXCOUNT(iesp.constants.RelationshipIdentifier.MAX_COUNT_RELATIONSHIP_MIDEX_LICENSES)};
	unsigned2 TotalRelationshipCount {xpath('TotalRelationshipCount')};
end;
		
export t_RelationshipIdentifierReportRelationshipType := record
	string50 RelationshipType {xpath('RelationshipType')};
	iesp.share.t_Date RelationshipFirstSeenDate {xpath('RelationshipFirstSeenDate')};
	iesp.share.t_Date RelationshipLastSeenDate {xpath('RelationshipLastSeenDate')};
end;
		
export t_RelationshipIdentifierReportSecondaryEntity := record
	string15 UniqueId {xpath('UniqueId')};
	integer CountRelTypes {xpath('CountRelTypes')};
	string50 Role {xpath('Role')};
	string120 CompanyName {xpath('CompanyName')};
	string9 TIN {xpath('TIN')};
	iesp.share.t_BusinessIdentity BusinessIds {xpath('BusinessIds')};
	iesp.share.t_Identity Identity {xpath('Identity')};
	dataset(t_RelationshipIdentifierReportRelationshipType) RelationshipTypes {xpath('RelationshipTypes/RelationshipType'), MAXCOUNT(iesp.constants.RelationshipIdentifier.MAX_COUNT_RELATIONSHIP_TYPES)};
	unsigned2 NumberOfSources {xpath('NumberOfSources')};
	string20 RelationshipStrength {xpath('RelationshipStrength')};
end;
		
export t_RelationshipIdentifierReportRecord := record
	t_RelationshipIdentifierReportPrimaryEntity PrimaryEntity {xpath('PrimaryEntity')};
	dataset(t_RelationshipIdentifierReportSecondaryEntity) SecondaryEntities {xpath('SecondaryEntities/SecondaryEntity'), MAXCOUNT(iesp.constants.RelationshipIdentifier.MAX_COUNT_SEARCH_MATCH_RECORDS)};
end;
		
export t_RelationshipIdentifierReportBy := record
	string15 UniqueId {xpath('UniqueId')};
	iesp.share.t_BusinessIdentity BusinessIds {xpath('BusinessIds')};
	string50 Role {xpath('Role')};
end;
		
export t_RelationshipIdentifierReportOption := record (iesp.share.t_BaseReportOption)
	boolean IncludeNeighbors {xpath('IncludeNeighbors')};
	iesp.share.t_Date AsOfDate {xpath('AsOfDate')};
end;
		
export t_RelationshipIdentifierReportResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	dataset(t_RelationshipIdentifierReportRecord) Records {xpath('Records/Record'), MAXCOUNT(iesp.Constants.RelationshipIdentifier.MAX_COUNT_SEARCH_MATCH_RECORDS)};
end;
		
export t_RelationshipIdentifierReportRequest := record (iesp.share.t_BaseRequest)
	t_RelationshipIdentifierReportOption Options {xpath('Options')};
	dataset(t_RelationshipIdentifierReportBy) ReportBy {xpath('ReportBy/Item'), MAXCOUNT(iesp.Constants.RelationshipIdentifier.MAX_COUNT_SEARCH_MATCH_RECORDS)};
end;
		
export t_RelationshipIdentifierReportResponseEx := record
	t_RelationshipIdentifierReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from relationshipidentifierreport.xml. ***/
/*===================================================*/

