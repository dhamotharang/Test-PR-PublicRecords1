/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from homestead_exemption_search.xml. ***/
/*===================================================*/

import iesp;

export homestead_exemption_search := MODULE

export t_HEOwner := record
	iesp.share.t_Name Name {xpath('Name')};
	string11 SSN {xpath('SSN')};
	iesp.share.t_Date DOB {xpath('DOB')};
end;

export t_HomesteadExemptionSearchOption := record (iesp.share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	integer DidScoreThreshold {xpath('DidScoreThreshold')};
	integer MaxProperties {xpath('MaxProperties')};
	boolean IncludeRealTimeVehicles {xpath('IncludeRealTimeVehicles')};
	string RealTimePermissibleUse {xpath('RealTimePermissibleUse')}; //values['','Government','LawEnforcement','Parking','VerifyFraudOrDebt','Litigation','InsuranceClaims','InsuranceUnderwriting','TowedAndImpounded','PrivateToll','PrivateInvestigative','PrivateInvestigativeLitigation','EmployerVerify','']
end;

export t_HomesteadExemptionSearchBy := record
	string4 TaxYear {xpath('TaxYear')};
	string2 TaxState {xpath('TaxState')};
	iesp.share.t_Address Address {xpath('Address')};
	dataset(t_HEOwner) Owners {xpath('Owners/Owner'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_OWNERS)};
end;

export t_HEBestRecord := record
	iesp.share.t_Name Name {xpath('Name')};
	string11 SSN {xpath('SSN')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string10 Phone {xpath('Phone')};
	integer Age {xpath('Age')};
	iesp.share.t_Address Address {xpath('Address')};
	string1 AddressConfidence {xpath('AddressConfidence')};
end;

export t_HEDeceasedRecord := record
	iesp.share.t_Date DOD {xpath('DOD')};
	iesp.share.t_Date DOB {xpath('DOB')};
	iesp.share.t_Name Name {xpath('Name')};
	string11 SSN {xpath('SSN')};
	string2 State {xpath('State')};
	string3 Source {xpath('Source')};
	string8 Confirmed {xpath('Confirmed')};
end;

export t_HEInputAddress := record
	string12 LexId {xpath('LexId')};
	string12 BusinessID {xpath('BusinessID')};
	iesp.share.t_NameAndCompany Name {xpath('Name')};
	iesp.share.t_Date SaleDate {xpath('SaleDate')};
	iesp.share.t_Date ContractDate {xpath('ContractDate')};
	string1 IsSubjectOwner {xpath('IsSubjectOwner')};
end;

export t_HEDriver := record
	string2 State {xpath('State')};
end;

export t_HEVoter := record
	string2 State {xpath('State')};
	string4 Year {xpath('Year')};
end;

export t_HEPropertyAddress := record
	string60 StreetAddress1 {xpath('StreetAddress1')};
	string60 StreetAddress2 {xpath('StreetAddress2')};
	string25 City {xpath('City')};
	string2 State {xpath('State')};
	string5 Zip5 {xpath('Zip5')};
	string4 Zip4 {xpath('Zip4')};
	string50 StateCityZip {xpath('StateCityZip')};
	string18 County {xpath('County')};
end;

export t_HEProperty := record
	dataset(iesp.share.t_NameAndCompany) Owners {xpath('Owners/Owner'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_OWNERS)};
	t_HEPropertyAddress Address {xpath('Address')};
	string5 FipsCode {xpath('FipsCode')};
	string45 ParcelNumber {xpath('ParcelNumber')};
end;

export t_HEDeed := record
	dataset(iesp.share.t_NameAndCompany) Owners {xpath('Owners/Owner'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_OWNERS)};
	t_HEPropertyAddress Address {xpath('Address')};
	string5 FipsCode {xpath('FipsCode')};
	string45 ParcelNumber {xpath('ParcelNumber')};
	iesp.share.t_Date ContractDate {xpath('ContractDate')};
	iesp.share.t_Date RecordingDate {xpath('RecordingDate')};
	iesp.share.t_Date MortgageDate {xpath('MortgageDate')};
end;

export t_HEAssessment := record
	dataset(iesp.share.t_NameAndCompany) Owners {xpath('Owners/Owner'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_OWNERS)};
	t_HEPropertyAddress PropertyAddress {xpath('PropertyAddress')};
	t_HEPropertyAddress MailingAddress {xpath('MailingAddress')};
	string5 FipsCode {xpath('FipsCode')};
	string45 ParcelNumber {xpath('ParcelNumber')};
	iesp.share.t_Date RecordingDate {xpath('RecordingDate')};
	iesp.share.t_Date SaleDate {xpath('SaleDate')};
	string1 OwnerOccupied {xpath('OwnerOccupied')};
	string3 LandUsage {xpath('LandUsage')};
	string4 TaxYear {xpath('TaxYear')};
	string1 ExemptionFlag {xpath('ExemptionFlag')};
	dataset(iesp.share.t_StringArrayItem) Exemptions {xpath('Exemptions/Exemption'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_EXMPTN)};
	string1 ExemptionClaimed {xpath('ExemptionClaimed')};
end;

export t_HEForeclosure := record
	dataset(iesp.share.t_NameAndCompany) Buyers {xpath('Buyers/Buyer'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_OWNERS)};
	iesp.share.t_Date RecordingDate {xpath('RecordingDate')};
end;

export t_HEAdditionalPerson := record
	string12 LexId {xpath('LexId')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
end;

export t_HEPropertyRecord := record
	integer PropertyRank {xpath('PropertyRank')};
	t_HEProperty Property {xpath('Property')};
	t_HEDeed Deed {xpath('Deed')};
	t_HEAssessment Assessment {xpath('Assessment')};
	string2 RecordType {xpath('RecordType')};
	string1 PossibleBusinessOwned {xpath('PossibleBusinessOwned')};
	string1 BestAddressMatch {xpath('BestAddressMatch')};
	integer CountExemptionYears {xpath('CountExemptionYears')};
	string4 RecentExemptionYear {xpath('RecentExemptionYear')};
	t_HEForeclosure Foreclosure {xpath('Foreclosure')};
	dataset(t_HEAdditionalPerson) AdditionalPersons {xpath('AdditionalPersons/AdditionalPerson'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_PERSONS)};
	string1 RelativeAddressMatch {xpath('RelativeAddressMatch')};
	string7 VehicleAddressMatch {xpath('VehicleAddressMatch')};
	integer VehicleRegistrationCount {xpath('VehicleRegistrationCount')};
	string7 DriverAddressMatch {xpath('DriverAddressMatch')};
	string7 VoterAddressMatch {xpath('VoterAddressMatch')};
end;

export t_HomesteadExemptionRecord := record
	string12 LexId {xpath('LexId')};
	string4 LexIdScore {xpath('LexIdScore')};
	string1 ExceptionOccured {xpath('ExceptionOccured')};
	string12 ExceptionCode {xpath('ExceptionCode')};
	t_HEBestRecord BestRecord {xpath('BestRecord')};
	t_HEDeceasedRecord DeceasedRecord {xpath('DeceasedRecord')};
	t_HEInputAddress InputAddress {xpath('InputAddress')};
	t_HEDriver Driver {xpath('Driver')};
	t_HEVoter Voter {xpath('Voter')};
	dataset(t_HEPropertyRecord) Properties {xpath('Properties/Property'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_PROPERTIES)};
end;

export t_HomesteadExemptionSearchResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	t_HomesteadExemptionSearchBy InputEcho {xpath('InputEcho')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_HomesteadExemptionRecord) Records {xpath('Records/Record'), MAXCOUNT(iesp.constants.hmstdExmptn.MAX_OWNERS)};
end;

export t_HomesteadExemptionSearchRequest := record (iesp.share.t_BaseRequest)
	t_HomesteadExemptionSearchOption Options {xpath('Options')};
	t_HomesteadExemptionSearchBy SearchBy {xpath('SearchBy')};
end;

export t_HomesteadExemptionSearchResponseEx := record
	t_HomesteadExemptionSearchResponse response {xpath('response')};
end;


end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from homestead_exemption_search.xml. ***/
/*===================================================*/

