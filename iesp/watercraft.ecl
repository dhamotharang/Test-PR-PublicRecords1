/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from watercraft.xml. ***/
/*===================================================*/

import iesp;

export watercraft := MODULE
			
export t_WaterCraftOwner := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	string9 SSN {xpath('SSN')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string60 CompanyName {xpath('CompanyName')};
	string12 UniqueId {xpath('UniqueId')};
end;
		
export t_WaterCraftDescription := record
	integer Length {xpath('Length')};
	integer Width {xpath('Width')};
	integer Weight {xpath('Weight')};
	string30 Make {xpath('Make')};
	string30 Model {xpath('Model')};
	integer YearMake {xpath('YearMake')};
	string20 HullType {xpath('HullType')};
	string20 Use {xpath('Use')};
	string20 MajorColor {xpath('MajorColor')};
	string20 MinorColor {xpath('MinorColor')};
	string20 PropulsionType {xpath('PropulsionType')};
	string20 FuelType {xpath('FuelType')};
end;
		
export t_WaterCraftDescriptionEx := record (t_WaterCraftDescription)
	string6 Breadth {xpath('Breadth')};
	string6 Depth {xpath('Depth')};
	string7 GrossTons {xpath('GrossTons')};
	string7 NetTons {xpath('NetTons')};
end;
		
export t_WaterCraftRegistration := record
	string40 Status {xpath('Status')};
	string20 Number {xpath('Number')};
	iesp.share.t_Date IssueDate {xpath('IssueDate')};
	iesp.share.t_Date ExpirationDate {xpath('ExpirationDate')};
end;
		
export t_WaterCraftTitle := record
	string2 State {xpath('State')};
	string40 Status {xpath('Status')};
	string20 Number {xpath('Number')};
	string20 _Type {xpath('Type')};
	iesp.share.t_Date IssueDate {xpath('IssueDate')};
end;
		
export t_WaterCraftEngine := record
	integer HorsePower {xpath('HorsePower')};
	string20 Make {xpath('Make')};
	string20 Model {xpath('Model')};
end;
		
export t_WaterCraftPurchase := record
	iesp.share.t_Date Date {xpath('Date')};
	integer Price {xpath('Price')};
	string40 Dealer {xpath('Dealer')};
	string2 StatePurchased {xpath('StatePurchased')};
end;
		
export t_WaterCraftLienHolder := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
end;
		
export t_WaterCraftSearchOption := record (iesp.share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	boolean UsePhonetics {xpath('UsePhonetics')};
end;
		
export t_WaterCraftSearchBy := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string9 SSN {xpath('SSN')};
	string60 CompanyName {xpath('CompanyName')};
	string10 OfficialNumber {xpath('OfficialNumber')};
	string30 HullNumber {xpath('HullNumber')};
	string50 VesselName {xpath('VesselName')};
end;
		
export t_WaterCraftKey := record
	string2 StateOfOrigin {xpath('StateOfOrigin')};
	string30 WaterCraftId {xpath('WaterCraftId')};
end;
		
export t_WaterCraftSearchRecord := record
	string10 RecordType {xpath('RecordType')};
	t_WaterCraftOwner Owner {xpath('Owner')};
	t_WaterCraftDescription Description {xpath('Description')};
	string30 HullNumber {xpath('HullNumber')};
	string50 VesselName {xpath('VesselName')};
	t_WaterCraftKey WaterCraftKey {xpath('WaterCraftKey')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
end;
		
export t_WaterCraftSearchResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_WaterCraftSearchRecord) Records {xpath('Records/Record'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxCountSearch)};
end;
		
export t_WaterCraftSearch2Owner := record
	string12 UniqueId {xpath('UniqueId')};
	string9 SSN {xpath('SSN')};
	iesp.share.t_Name Name {xpath('Name')};
	string20 NameType {xpath('NameType')};
	iesp.share.t_Address Address {xpath('Address')};
	string60 CompanyName {xpath('CompanyName')};
end;
		
export t_WaterCraftSearch2Option := record (iesp.share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
	boolean UsePhonetics {xpath('UsePhonetics')};
	boolean UseNicknames {xpath('UseNicknames')};
	boolean IncludeAlsoFound {xpath('IncludeAlsoFound')};
	boolean IncludeNonRegulatedWatercraftSources {xpath('IncludeNonRegulatedWatercraftSources')};
end;
		
export t_WaterCraftSearch2By := record (iesp.share.t_BaseSearchBy)
	string12 UniqueId {xpath('UniqueId')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string9 SSN {xpath('SSN')};
	string30 HullNumber {xpath('HullNumber')};
	string60 CompanyName {xpath('CompanyName')};
	string50 VesselName {xpath('VesselName')};
end;
		
export t_BaseWaterCraftSearch2Record := record
	boolean AlsoFound {xpath('AlsoFound')};
	string30 WaterCraftKey {xpath('WaterCraftKey')};
	string2 StateOrigin {xpath('StateOrigin')};
	string20 RegistrationNumber {xpath('RegistrationNumber')};
	iesp.share.t_Date RegistrationDate {xpath('RegistrationDate')};
	string30 HullNumber {xpath('HullNumber')};
	string50 VesselName {xpath('VesselName')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	string50 ExternalKey {xpath('ExternalKey')};
	boolean NonDMVSource {xpath('NonDMVSource')};
end;
		
export t_WaterCraftSearch2Record := record (t_BaseWaterCraftSearch2Record)
	dataset(t_WaterCraftSearch2Owner) Owners {xpath('Owners/Owner'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxOwners)};
end;
		
export t_WaterCraftSearch2Response := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_WaterCraftSearch2Record) Records {xpath('Records/Record'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxCountSearch)};
end;
		
export t_WaterCraftReportOption := record (iesp.share.t_BaseReportOption)
end;
		
export t_WaterCraftReportBy := record
	t_WaterCraftKey WaterCraftKey {xpath('WaterCraftKey')};
end;
		
export t_WaterCraftAddress := record
	string50 City {xpath('City')};
	string2 State {xpath('State')};
	string50 Province {xpath('Province')};
	string64 Country {xpath('Country')};
end;
		
export t_WaterCraftManufacture := record
	string50 ShipYard {xpath('ShipYard')};
	integer YearBuilt {xpath('YearBuilt')};
	string50 HailingPort {xpath('HailingPort')};
	t_WaterCraftAddress HailingPortAddress {xpath('HailingPortAddress')};
	t_WaterCraftAddress HullBuildAddress {xpath('HullBuildAddress')};
	t_WaterCraftAddress CompleteBuildAddress {xpath('CompleteBuildAddress')};
end;
		
export t_BaseWaterCraftReportRecord := record
	t_WaterCraftDescriptionEx Description {xpath('Description')};
	t_WaterCraftRegistration Registration {xpath('Registration')};
	t_WaterCraftTitle Title {xpath('Title')};
	t_WaterCraftPurchase Purchase {xpath('Purchase')};
	t_WaterCraftManufacture Manufacture {xpath('Manufacture')};
	string2 StateOfOrigin {xpath('StateOfOrigin')};
	string25 StateOfOriginName {xpath('StateOfOriginName')};
	string30 HullNumber {xpath('HullNumber')};
	string50 VesselName {xpath('VesselName')};
	string10 RecordType {xpath('RecordType')};
	string10 VesselNumber {xpath('VesselNumber')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	boolean NonDMVSource {xpath('NonDMVSource')};
	dataset(t_WaterCraftLienHolder) LienHolders {xpath('LienHolders/LienHolder'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxLienholders)};
	dataset(t_WaterCraftEngine) Engines {xpath('Engines/Engine'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxEngines)};
end;
		
export t_WaterCraftReportRecord := record (t_BaseWaterCraftReportRecord)
	dataset(t_WaterCraftOwner) Owners {xpath('Owners/Owner'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxOwners)};
end;
		
export t_WaterCraftReportResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	dataset(t_WaterCraftReportRecord) WaterCraftReports {xpath('WaterCraftReports/WaterCraftReport'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxCountReport)};
end;
		
export t_WaterCraftReport2Option := record (iesp.share.t_BaseReportOption)
	boolean UseNicknames {xpath('UseNicknames')};//hidden[internal]
	boolean UsePhonetics {xpath('UsePhonetics')};//hidden[internal]
	boolean IncludeAlsoFound {xpath('IncludeAlsoFound')};//hidden[internal]
	boolean Summarize {xpath('Summarize')};//hidden[internal]
	boolean IncludeNonRegulatedWatercraftSources {xpath('IncludeNonRegulatedWatercraftSources')};
end;
		
export t_WaterCraftReport2By := record
	string30 WaterCraftKey {xpath('WaterCraftKey')};
	string2 State {xpath('State')};
	string30 HullNumber {xpath('HullNumber')};
	string50 VesselName {xpath('VesselName')};
	string12 UniqueId {xpath('UniqueId')};
	string12 BusinessId {xpath('BusinessId')};
	iesp.share.t_Name Name {xpath('Name')};//hidden[internal]
	iesp.share.t_Address Address {xpath('Address')};//hidden[internal]
	iesp.share.t_Date DOB {xpath('DOB')};//hidden[internal]
	integer ZipRadius {xpath('ZipRadius')};//hidden[internal]
	string CompanyName {xpath('CompanyName')};//hidden[internal]
	string FEIN {xpath('FEIN')};//hidden[internal]
end;
		
export t_WaterCraftReport2Owner := record
	string12 UniqueId {xpath('UniqueId')};
	iesp.share.t_Name Name {xpath('Name')};
	string20 NameType {xpath('NameType')};
	string60 CompanyName {xpath('CompanyName')};
	iesp.share.t_UniversalAddress Address {xpath('Address')};
	string6 Gender {xpath('Gender')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string9 SSN {xpath('SSN')};
	string9 FEIN {xpath('FEIN')};
	string10 Phone1 {xpath('Phone1')};
	string10 Phone2 {xpath('Phone2')};
end;
		
export t_WaterCraftReport2Registration := record
	string2 StateOrigin {xpath('StateOrigin')};
	string25 StateOriginName {xpath('StateOriginName')};
	string20 Number {xpath('Number')};
	iesp.share.t_Date RegistrateDate {xpath('RegistrateDate')};
	iesp.share.t_Date ExpirationDate {xpath('ExpirationDate')};
	string40 Status {xpath('Status')};
	iesp.share.t_Date RenewDate {xpath('RenewDate')};
	string20 DecalNumber {xpath('DecalNumber')};
	string2 PrevPlateState {xpath('PrevPlateState')};
end;
		
export t_WaterCraftReport2Measurements := record
	string7 GrossTons {xpath('GrossTons')};
	string7 NetTons {xpath('NetTons')};
	string7 Length {xpath('Length')};
	string6 Breadth {xpath('Breadth')};
	string6 Depth {xpath('Depth')};
end;
		
export t_WaterCraftReport2Port := record
	string50 Name {xpath('Name')};
	string2 State {xpath('State')};
	string50 Province {xpath('Province')};
end;
		
export t_WaterCraftReport2Address := record
	string50 City {xpath('City')};
	string2 State {xpath('State')};
	string50 Province {xpath('Province')};
	string64 Country {xpath('Country')};
end;
		
export t_WaterCraftReport2Manufacture := record
	string50 ShipYard {xpath('ShipYard')};
	integer YearBuilt {xpath('YearBuilt')};
	t_WaterCraftReport2Address HullBuildAddress {xpath('HullBuildAddress')};
	t_WaterCraftReport2Address CompleteBuildAddress {xpath('CompleteBuildAddress')};
end;
		
export t_WaterCraftReport2Description := record
	string30 HullNumber {xpath('HullNumber')};
	string10 VesselId {xpath('VesselId')};
	string10 VesselDatabaseKey {xpath('VesselDatabaseKey')};
	string10 PartyIdNumber {xpath('PartyIdNumber')};
	string30 IMONumber {xpath('IMONumber')};
	string8 CallSign {xpath('CallSign')};
	string20 Propulsion {xpath('Propulsion')};
	string20 VesselType {xpath('VesselType')};
	string20 Fuel {xpath('Fuel')};
	string20 HullType {xpath('HullType')};
	string20 Use {xpath('Use')};
	integer ModelYear {xpath('ModelYear')};
	string50 VesselName {xpath('VesselName')};
	string35 Class {xpath('Class')};
	string30 Make {xpath('Make')};
	string30 Model {xpath('Model')};
	string7 Length {xpath('Length')};
	string6 Width {xpath('Width')};
	string10 Weight {xpath('Weight')};
	string20 Color1 {xpath('Color1')};
	string20 Color2 {xpath('Color2')};
	string40 Toilet {xpath('Toilet')};
	string30 CoastGuardNumber {xpath('CoastGuardNumber')};
	string2 StatePurchased {xpath('StatePurchased')};
	iesp.share.t_Date PurchaseDate {xpath('PurchaseDate')};
	string40 Dealer {xpath('Dealer')};
	string10 PurchasePrice {xpath('PurchasePrice')};
	boolean NewOrUsed {xpath('NewOrUsed')};
	t_WaterCraftReport2Measurements RegisteredMeasurements {xpath('RegisteredMeasurements')};
	t_WaterCraftReport2Measurements InternationalTonnageConvention {xpath('InternationalTonnageConvention')};
	t_WaterCraftReport2Port HailingPort {xpath('HailingPort')};
	t_WaterCraftReport2Port HomePort {xpath('HomePort')};
	t_WaterCraftReport2Manufacture Manufacture {xpath('Manufacture')};
	string7 HPAstern {xpath('HPAstern')};
	string7 HPAhead {xpath('HPAhead')};
	string10 FleetId {xpath('FleetId')};
end;
		
export t_WaterCraftReport2Title := record
	string40 TransactionType {xpath('TransactionType')};
	string2 State {xpath('State')};
	string40 Status {xpath('Status')};
	string20 Number {xpath('Number')};
	iesp.share.t_Date IssueDate {xpath('IssueDate')};
	string20 _Type {xpath('Type')};
	string4 Signatory {xpath('Signatory')};
end;
		
export t_WaterCraftReport2Engine := record
	string20 Number {xpath('Number')};
	string5 HorsePower {xpath('HorsePower')};
	string20 Make {xpath('Make')};
	string20 Model {xpath('Model')};
	integer Year {xpath('Year')};
end;
		
export t_WaterCraftReport2LienHolder := record
	string40 Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date LienDate {xpath('LienDate')};
end;
		
export t_BaseWaterCraftReport2Record := record
	iesp.share.t_BusinessIdentity BusinessIds {xpath('BusinessIds')};
	string100 IdValue {xpath('IdValue')};
	boolean IsCurrent {xpath('IsCurrent')};
	string10 RecordType {xpath('RecordType')};
	string30 WaterCraftKey {xpath('WaterCraftKey')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	boolean NonDMVSource {xpath('NonDMVSource')};
	t_WaterCraftReport2Registration Registration {xpath('Registration')};
	t_WaterCraftReport2Description Description {xpath('Description')};
	t_WaterCraftReport2Title Title {xpath('Title')};
	dataset(t_WaterCraftReport2LienHolder) LienHolders {xpath('LienHolders/LienHolder'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxLienholders)};
	dataset(t_WaterCraftReport2Engine) Engines {xpath('Engines/Engine'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxEngines)};
end;
		
export t_WaterCraftReport2Record := record (t_BaseWaterCraftReport2Record)
	dataset(t_WaterCraftReport2Owner) Owners {xpath('Owners/Owner'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxOwners)};
end;
		
export t_WaterCraftReport2Response := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	dataset(t_WaterCraftReport2Record) WaterCrafts {xpath('WaterCrafts/WaterCraft'), MAXCOUNT(iesp.Constants.WATERCRAFTS.MaxCountReport)};
end;
		
export t_WaterCraftSearchRequest := record (iesp.share.t_BaseRequest)
	t_WaterCraftSearchOption Options {xpath('Options')};
	t_WaterCraftSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_WaterCraftSearch2Request := record (iesp.share.t_BaseRequest)
	t_WaterCraftSearch2Option Options {xpath('Options')};
	t_WaterCraftSearch2By SearchBy {xpath('SearchBy')};
end;
		
export t_WaterCraftReportRequest := record (iesp.share.t_BaseRequest)
	t_WaterCraftReportOption Options {xpath('Options')};
	t_WaterCraftReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_WaterCraftReport2Request := record (iesp.share.t_BaseRequest)
	t_WaterCraftReport2Option Options {xpath('Options')};
	t_WaterCraftReport2By ReportBy {xpath('ReportBy')};
end;
		
export t_WaterCraftSearchResponseEx := record
	t_WaterCraftSearchResponse response {xpath('response')};
end;
		
export t_WaterCraftSearch2ResponseEx := record
	t_WaterCraftSearch2Response response {xpath('response')};
end;
		
export t_WaterCraftReportResponseEx := record
	t_WaterCraftReportResponse response {xpath('response')};
end;
		
export t_WaterCraftReport2ResponseEx := record
	t_WaterCraftReport2Response response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from watercraft.xml. ***/
/*===================================================*/

