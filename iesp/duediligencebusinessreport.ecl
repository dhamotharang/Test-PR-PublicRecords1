/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from duediligencebusinessreport.xml. ***/
/*===================================================*/

import iesp;

export duediligencebusinessreport := MODULE
			
export t_DDRBusinessNameWithLexID := record
	string BusinessName {xpath('BusinessName')};
	string LexID {xpath('LexID')};
end;
		
export t_DDRComponentsOfBusiness := record
	integer2 Sequence {xpath('Sequence')};
	string Name {xpath('Name')};
	string LexID {xpath('LexID')};
end;
		
export t_DDRSOSActions := record
	string Action {xpath('Action')};
	iesp.share.t_Date SOSActionDate {xpath('SOSActionDate')};
end;
		
export t_DDRSICNAICSDetails := record
	string8 Code {xpath('Code')};
	string50 Description {xpath('Description')};
	string10 Risk {xpath('Risk')};
end;
		
export t_DDRLinkedBusinesses := record
	t_DDRBusinessNameWithLexID BusinessName {xpath('BusinessName')};
	iesp.share.t_Address Address {xpath('Address')};
	t_DDRSICNAICSDetails BestSIC {xpath('BestSIC')};
	t_DDRSICNAICSDetails BestNAICS {xpath('BestNAICS')};
	iesp.share.t_Date SosDateFirstSeen {xpath('SosDateFirstSeen')};
	string MostRecentFilingStatus {xpath('MostRecentFilingStatus')};
	string FEIN {xpath('FEIN')};
	boolean CivilLegalEventHit {xpath('CivilLegalEventHit')};
	boolean StateLegalEventHit {xpath('StateLegalEventHit')};
	boolean OffenseTypeHit {xpath('OffenseTypeHit')};
	boolean HasMoreThanOneOperatingLocation {xpath('HasMoreThanOneOperatingLocation')};
	boolean AllSOSFilingsActive {xpath('AllSOSFilingsActive')};
end;
		
export t_DDRBusinessInformation := record
	string Name {xpath('Name')};
	iesp.share.t_Address InputAddress {xpath('InputAddress')};
	iesp.share.t_Address BestAddress {xpath('BestAddress')};
	string Phone {xpath('Phone')};
	string ListingType {xpath('ListingType')};
	iesp.share.t_Date DateSeenFrom {xpath('DateSeenFrom')};
	iesp.share.t_Date DateSeenTo {xpath('DateSeenTo')};
	string LexID {xpath('LexID')};
	iesp.share.t_Date EstablishedDate {xpath('EstablishedDate')};
	string InputFEIN {xpath('InputFEIN')};
	string2 TINSource {xpath('TINSource')};
	string BestFEIN {xpath('BestFEIN')};
	string NaicsCode {xpath('NaicsCode')};
	string NaicsDescription {xpath('NaicsDescription')};
	string SicCode {xpath('SicCode')};
	string SicDescription {xpath('SicDescription')};
end;
		
export t_DDRBusinessAttributeDescription := record
	dataset(iesp.share.t_StringArrayItem) AttributeDescriptions {xpath('AttributeDescriptions/AttributeDescription'), MAXCOUNT(iesp.Constants.DDRAttributesConst.MaxDescriptions)};
end;
		
export t_DDRBusinessProperty := record (iesp.duediligenceshared.t_DDRProperty)
	iesp.share.t_Name OwnerName {xpath('OwnerName')};
end;
		
export t_DDRBusinessPropertyOwnership := record
	integer2 PropertyCurrentCount {xpath('PropertyCurrentCount')};
	integer8 TaxAssessedValue {xpath('TaxAssessedValue')};
	dataset(t_DDRBusinessProperty) Properties {xpath('Properties/Property'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxProperties)};
end;
		
export t_DDRBusinessAircraftOwnership := record
	integer2 AircraftCount {xpath('AircraftCount')};
	dataset(iesp.duediligenceshared.t_DDRAircraft) Aircrafts {xpath('Aircrafts/Aircraft'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAircraft)};
end;
		
export t_DDRBusinessWatercraftOwnership := record
	integer2 WatercraftCount {xpath('WatercraftCount')};
	dataset(iesp.duediligenceshared.t_DDRWatercraft) Watercrafts {xpath('Watercrafts/Watercraft'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxWatercraft)};
end;
		
export t_DDRBusinessMotorVehicleOwnership := record
	integer2 MotorVehicleCount {xpath('MotorVehicleCount')};
	dataset(iesp.duediligenceshared.t_DDRMotorVehicle) MotorVehicles {xpath('MotorVehicles/MotorVehicle'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxVehicles)};
end;
		
export t_DDRBusinessEconomicAttributeDetails := record
	t_DDRBusinessPropertyOwnership Property {xpath('Property')};
	t_DDRBusinessAircraftOwnership Aircraft {xpath('Aircraft')};
	t_DDRBusinessWatercraftOwnership Watercraft {xpath('Watercraft')};
	t_DDRBusinessMotorVehicleOwnership MotorVehicle {xpath('MotorVehicle')};
end;
		
export t_DDRBusinessAddressRisk := record
	boolean AddressVerified {xpath('AddressVerified')};
	iesp.share.t_Address Address {xpath('Address')};
	string AddressType {xpath('AddressType')};
	boolean InputAddressVerified {xpath('InputAddressVerified')};
	iesp.share.t_Date AddressFirstReported {xpath('AddressFirstReported')};
	iesp.share.t_Date AddressLastReported {xpath('AddressLastReported')};
	boolean IsVacant {xpath('IsVacant')};
	boolean Cmra {xpath('Cmra')};
	iesp.duediligenceshared.t_DDRCountyCityRisk CountyCityRisk {xpath('CountyCityRisk')};
	iesp.duediligenceshared.t_DDRAreaRisk AreaRisk {xpath('AreaRisk')};
end;
		
export t_DDRBusinessOperatingLocations := record
	integer2 OperatingLocationCount {xpath('OperatingLocationCount')};
	dataset(t_DDRBusinessAddressRisk) OperatingLocations {xpath('OperatingLocations/OperatingLocation'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxOperatingLocations)};
end;
		
export t_DDRReportingSources := record
	string50 SourceName {xpath('SourceName')};
	string50 SourceType {xpath('SourceType')};
	iesp.share.t_Date FirstReported {xpath('FirstReported')};
	iesp.share.t_Date LastReported {xpath('LastReported')};
end;
		
export t_DDRSICNAIC := record
	string8 SICCode {xpath('SICCode')};
	string8 NAICSCode {xpath('NAICSCode')};
	string50 Description {xpath('Description')};
	iesp.share.t_Date FirstReported {xpath('FirstReported')};
	iesp.share.t_Date LastReported {xpath('LastReported')};
	string10 IndustryRisk {xpath('IndustryRisk')};
	boolean CashIntensiveRetail {xpath('CashIntensiveRetail')};
	boolean CashIntensiveNonRetail {xpath('CashIntensiveNonRetail')};
	boolean MoneyServiceBusiness {xpath('MoneyServiceBusiness')};
	boolean NonBankFinancialInstitution {xpath('NonBankFinancialInstitution')};
	boolean CasinoOrGamblingRelated {xpath('CasinoOrGamblingRelated')};
	boolean LegalAccountantTelemarketerFlightOrTravel {xpath('LegalAccountantTelemarketerFlightOrTravel')};
	boolean Automotive {xpath('Automotive')};
end;
		
export t_DDRSOSFiling := record
	string BusinessName {xpath('BusinessName')};
	string FilingType {xpath('FilingType')};
	string SOSFilingStatus {xpath('SOSFilingStatus')};
	iesp.share.t_Date FilingDate {xpath('FilingDate')};
	string FilingNumber {xpath('FilingNumber')};
	iesp.share.t_Date SOSIncorporationDate {xpath('SOSIncorporationDate')};
	string SOSIncorporationState {xpath('SOSIncorporationState')};
	iesp.share.t_Date SOSLastUpdated {xpath('SOSLastUpdated')};
	dataset(t_DDRSOSActions) SOSActions {xpath('SOSActions/SOSAction'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxActions)};
end;
		
export t_DDRBusinessOperatingInformation := record
	iesp.share.t_Date FirstReported {xpath('FirstReported')};
	iesp.share.t_Date LastReported {xpath('LastReported')};
	integer2 NumberOfSourcesReporting {xpath('NumberOfSourcesReporting')};
	dataset(t_DDRReportingSources) ReportingSources {xpath('ReportingSources/ReportingSource'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxReportingSources)};
	integer2 SOSActiveCount {xpath('SOSActiveCount')};
	integer2 SOSOtherCount {xpath('SOSOtherCount')};
	dataset(t_DDRSOSFiling) SOSFilingStatuses {xpath('SOSFilingStatuses/SOSFilingStatus'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxSOSFilingStatuses)};
	dataset(t_DDRSICNAIC) SICNAICs {xpath('SICNAICs/SICNAIC'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxSICNAICs)};
	dataset(t_DDRComponentsOfBusiness) BusinessNameVariations {xpath('BusinessNameVariations/Variation'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxBusinesses)};
	string FEIN {xpath('FEIN')};
	boolean FEINIsSSN {xpath('FEINIsSSN')};
	dataset(iesp.duediligenceshared.t_DDRPersonNameWithLexID) SSNAssociatedWithFEIN {xpath('SSNAssociatedWithFEIN/Item'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxSSNAssociations)};
	dataset(iesp.share.t_Name) SSNAssociatedWith {xpath('SSNAssociatedWith/Name'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxSSNAssociations)};
	boolean OperatesOutOfAHomeOffice {xpath('OperatesOutOfAHomeOffice')};
	string Filing {xpath('Filing')};
	string StructureType {xpath('StructureType')};
	string ParentCompany {xpath('ParentCompany')};
	iesp.share.t_Date PublicRecordsFirstReported {xpath('PublicRecordsFirstReported')};
	iesp.share.t_Date PublicRecordsLastReported {xpath('PublicRecordsLastReported')};
	iesp.share.t_Date SOSFirstReported {xpath('SOSFirstReported')};
	iesp.share.t_Date SOSLastReported {xpath('SOSLastReported')};
	iesp.share.t_Date BureauFirstReported {xpath('BureauFirstReported')};
	iesp.share.t_Date BureauLastReported {xpath('BureauLastReported')};
	integer8 AnnualSales {xpath('AnnualSales')};
	string4 AnnualSalesYearReported {xpath('AnnualSalesYearReported')};
end;
		
export t_DDRRegisteredAgent := record
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	boolean AgentAndBusinessShareAddress {xpath('AgentAndBusinessShareAddress')};
end;
		
export t_DDRBusinessShellShelfCharacteristics := record
	boolean IncorporatedInStateWithLooseIncorpLaws {xpath('IncorporatedInStateWithLooseIncorpLaws')};
	string IncorporationState {xpath('IncorporationState')};
	string20 FEINReported {xpath('FEINReported')};
	boolean BetterBusinessBureau {xpath('BetterBusinessBureau')};
	boolean YellowPages {xpath('YellowPages')};
	integer2 NumberOfBusinessesFoundAtAddress {xpath('NumberOfBusinessesFoundAtAddress')};
	integer2 NumberOfIncorporatedInStateWithLooseIncorpLaws {xpath('NumberOfIncorporatedInStateWithLooseIncorpLaws')};
	integer2 NumberOfBusinessWithNoFEIN {xpath('NumberOfBusinessWithNoFEIN')};
	boolean AddressPrivatePost {xpath('AddressPrivatePost')};
	boolean AddressMailDrop {xpath('AddressMailDrop')};
	boolean AddressRemailer {xpath('AddressRemailer')};
	boolean AddressStorageFacility {xpath('AddressStorageFacility')};
	boolean AddressUndeliverableSecondaryRange {xpath('AddressUndeliverableSecondaryRange')};
	string25 AgentSource {xpath('AgentSource')};
	dataset(iesp.share.t_Name) RegisteredAgents {xpath('RegisteredAgents/RegisteredAgent'), MAXCOUNT(1)};
	boolean AppearsAtAddressContainingNISOrBusIncubator {xpath('AppearsAtAddressContainingNISOrBusIncubator')};
	iesp.share.t_Date SOSIncorporationDate {xpath('SOSIncorporationDate')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	integer4 TimeBetweenSOSIncorporationDateDateFirstSeen {xpath('TimeBetweenSOSIncorporationDateDateFirstSeen')};
	boolean BureauReporting {xpath('BureauReporting')};
	boolean GovernmentSources {xpath('GovernmentSources')};
	boolean UtilitySources {xpath('UtilitySources')};
	boolean AgentExists {xpath('AgentExists')};
	boolean TINReported {xpath('TINReported')};
	integer3 NumberOfYears {xpath('NumberOfYears')};
	integer2 NumberOfMonths {xpath('NumberOfMonths')};
	integer3 NumberOfDays {xpath('NumberOfDays')};
end;
		
export t_DDRBusinessOperatingAttributeDetails := record
	t_DDRBusinessOperatingLocations BusinessLocations {xpath('BusinessLocations')};
	t_DDRBusinessOperatingInformation BusinessInformation {xpath('BusinessInformation')};
	t_DDRBusinessShellShelfCharacteristics ShellShelfCharacteristics {xpath('ShellShelfCharacteristics')};
end;
		
export t_DDRBusinessExecutiveCriminalEvents := record
	iesp.duediligenceshared.t_DDRLegalEventIndividual ExecutiveOfficer {xpath('ExecutiveOfficer')};
	string ExecTitle {xpath('ExecTitle')};
	dataset(iesp.duediligenceshared.t_DDRLegalStateCriminal) Criminals {xpath('Criminals/Criminal'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxLegalEvents)};
end;
		
export t_DDRBusinessLegalAttributeDetails := record
	iesp.duediligenceshared.t_DDRLegalSummary LegalSummary {xpath('LegalSummary')};
	dataset(iesp.duediligenceshared.t_DDRLiensJudgmentsEvictions) PossibleLiensJudgmentsEvictions {xpath('PossibleLiensJudgmentsEvictions/PossibleLiensJudgmentsEviction'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxLienJudgementsEvictions)};
	dataset(t_DDRBusinessExecutiveCriminalEvents) PossibleLegalEvents {xpath('PossibleLegalEvents/PossibleLegalEvent'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxLegalEvents)};
end;
		
export t_DDRBusinessExecutives := record
	iesp.share.t_Name Name {xpath('Name')};
	boolean Deceased {xpath('Deceased')};
	boolean MoreThanTwoIndvsAssociatedWithSSN {xpath('MoreThanTwoIndvsAssociatedWithSSN')};
	string LexID {xpath('LexID')};
	iesp.share.t_Date DOB {xpath('DOB')};
	dataset(iesp.duediligenceshared.t_DDRPositionTitles) Titles {xpath('Titles/Title'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxTitles)};
	boolean AssociatedWithOtherCompanies {xpath('AssociatedWithOtherCompanies')};
	dataset(iesp.duediligenceshared.t_DDRProfessionalLicenses) ProfessionalLicenses {xpath('ProfessionalLicenses/ProfessionalLicens'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxLicenses)};
	integer1 CriminalStateLegalEvents {xpath('CriminalStateLegalEvents')};
	integer1 CriminalFederalLegalEvents {xpath('CriminalFederalLegalEvents')};
	string2 USResidency {xpath('USResidency')};
	integer1 CriminalLegalEvents {xpath('CriminalLegalEvents')};
	integer1 LegalTypes {xpath('LegalTypes')};
	dataset(iesp.duediligenceshared.t_DDRPersonNameWithLexID) AssociatedWithOtherIndividuals {xpath('AssociatedWithOtherIndividuals/Individual'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxIndvAssociations)};
	dataset(t_DDRBusinessNameWithLexID) AssociatedWithOtherBusinesses {xpath('AssociatedWithOtherBusinesses/Business'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxBusAssociations)};
end;
		
export t_DDRRegisteredAgents := record
	iesp.share.t_Name Name {xpath('Name')};
	string LexID {xpath('LexID')};
	iesp.share.t_Address Address {xpath('Address')};
	boolean AddressMatchesInputBusiness {xpath('AddressMatchesInputBusiness')};
	integer2 NumberOfBusinessesAtAddress {xpath('NumberOfBusinessesAtAddress')};
	integer2 NumberOfBusinessesWithNoFEIN {xpath('NumberOfBusinessesWithNoFEIN')};
	integer2 NumberOfBusinessesIncorpStateWithLooseIncorpLaws {xpath('NumberOfBusinessesIncorpStateWithLooseIncorpLaws')};
end;
		
export t_DDRBusinessNetworkDetails := record
	dataset(t_DDRBusinessExecutives) BusinessExecutives {xpath('BusinessExecutives/BusinessExecutive'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxBusinessExecs)};
	dataset(t_DDRRegisteredAgents) RegisteredAgents {xpath('RegisteredAgents/RegisteredAgent'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxRegisteredAgents)};
	dataset(t_DDRLinkedBusinesses) LinkedBusinesses {xpath('LinkedBusinesses/LinkedBusiness'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxLinkedBusinesses)};
end;
		
export t_DDRBusinessAttributeDetails := record
	t_DDRBusinessEconomicAttributeDetails Economic {xpath('Economic')};
	t_DDRBusinessOperatingAttributeDetails Operating {xpath('Operating')};
	t_DDRBusinessLegalAttributeDetails Legal {xpath('Legal')};
	t_DDRBusinessNetworkDetails NetworkDetails {xpath('NetworkDetails')};
end;
		
export t_DDRBusinessReport := record
	t_DDRBusinessInformation BusinessInformation {xpath('BusinessInformation')};
	t_DDRBusinessAttributeDescription BusinessAttributeDescription {xpath('BusinessAttributeDescription')};
	t_DDRBusinessAttributeDetails BusinessAttributeDetails {xpath('BusinessAttributeDetails')};
end;
		
export t_DDRBusinessReportBy := record
	string ProductRequestType {xpath('ProductRequestType')}; //values['Standard','Modules','']
	dataset(iesp.duediligenceshared.t_DDRAttributeModule) AttributeModules {xpath('AttributeModules/Entry'), MAXCOUNT(iesp.constants.DDRAttributesConst.MaxAttributeModules)};
	iesp.duediligenceshared.t_DDRAttributesBusiness Business {xpath('Business')};
end;
		
export t_DDRBusinessResult := record
	string12 BusinessId {xpath('BusinessId')};
	boolean LexIDChanged {xpath('LexIDChanged')};
	t_DDRBusinessReportBy InputEcho {xpath('InputEcho')};
	iesp.duediligenceshared.t_DDRAttributeGroup AttributeGroup {xpath('AttributeGroup')};
	t_DDRBusinessReport BusinessReport {xpath('BusinessReport')};
	iesp.duediligenceshared.t_DDRAttributesAdditionalInfo AdditionalInput {xpath('AdditionalInput')};
	integer BusinessLexIDMatch {xpath('BusinessLexIDMatch')};
end;
		
export t_DueDiligenceBusinessReportResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	t_DDRBusinessResult Result {xpath('Result')};
end;
		
export t_DueDiligenceBusinessReportRequest := record (iesp.share.t_BaseRequest)
	iesp.duediligenceshared.t_DDRAttributesOptions Options {xpath('Options')};
	t_DDRBusinessReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_DueDiligenceBusinessReportResponseEx := record
	t_DueDiligenceBusinessReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from duediligencebusinessreport.xml. ***/
/*===================================================*/

