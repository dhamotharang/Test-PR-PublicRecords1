/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from residential_quality.xml. ***/
/*===================================================*/

export residential_quality := MODULE
			
export t_Walkability := record
	integer PublicTransportation {xpath('PublicTransportation')};
	integer Grocery {xpath('Grocery')};
	integer Restaurant {xpath('Restaurant')};
	integer PersonalCare {xpath('PersonalCare')};
	integer DrugsPharmacy {xpath('DrugsPharmacy')};
	integer MedicalCare {xpath('MedicalCare')};
	integer RetailGoods {xpath('RetailGoods')};
	integer Church {xpath('Church')};
	integer Entertainment {xpath('Entertainment')};
	integer Schools {xpath('Schools')};
	integer Banking {xpath('Banking')};
	integer Daycare {xpath('Daycare')};
	integer RepairShops {xpath('RepairShops')};
	integer PublicService {xpath('PublicService')};
	integer WalkabilityScore {xpath('WalkabilityScore')};
	share.t_IntRange WalkabilityScoresRange {xpath('WalkabilityScoresRange')};
end;
		
export t_ResidentialQualitySearchBy := record
	share.t_Address Address {xpath('Address')};
end;
		
export t_ResidentialQualitySearchOptions := record (share.t_BaseSearchOption)
	integer StartingRecord {xpath('StartingRecord')};//hidden[unused]
end;
		
export t_ResidentialQualitySearchResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	integer WalkabilityScore {xpath('WalkabilityScore')};
	share.t_IntRange WalkabilityScoresRange {xpath('WalkabilityScoresRange')};
end;
		
export t_PropertyInfo := record
	boolean OccupantOwned {xpath('OccupantOwned')};
	share.t_Date PurchaseDate {xpath('PurchaseDate')};
	share.t_Date BuiltDate {xpath('BuiltDate')};
	unsigned PurchaseAmount {xpath('PurchaseAmount')};
	unsigned MortgageAmount {xpath('MortgageAmount')};
	share.t_Date MortgageDate {xpath('MortgageDate')};
	string MortgageType {xpath('MortgageType')};
	string Financingtype {xpath('Financingtype')};
	unsigned AssessedAmount {xpath('AssessedAmount')};
	unsigned PropertyCount {xpath('PropertyCount')};
	unsigned PropertyTotal {xpath('PropertyTotal')};
	unsigned OwnedPurchaseTotal {xpath('OwnedPurchaseTotal')};
	unsigned OwnedPurchaseCount {xpath('OwnedPurchaseCount')};
	unsigned OwnedAssessedTotal {xpath('OwnedAssessedTotal')};
	unsigned OwnedAssessedCount {xpath('OwnedAssessedCount')};
	share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
	string LandUseCode {xpath('LandUseCode')};
	unsigned BuildingArea {xpath('BuildingArea')};
	unsigned NumberOfBuildings {xpath('NumberOfBuildings')};
	unsigned NumberOfStories {xpath('NumberOfStories')};
	unsigned NumberOfRooms {xpath('NumberOfRooms')};
	unsigned NumberOfBedrooms {xpath('NumberOfBedrooms')};
	unsigned NumberOfBaths {xpath('NumberOfBaths')};
	unsigned NumberOfPartialBaths {xpath('NumberOfPartialBaths')};
	string GarageTypeCode {xpath('GarageTypeCode')};
	unsigned NumberOfCarsParking {xpath('NumberOfCarsParking')};
	string StyleCode {xpath('StyleCode')};
	string LnFaresId {xpath('LnFaresId')};
	boolean WaterAdjacent {xpath('WaterAdjacent')};
	boolean WaterView {xpath('WaterView')};
	string TopograpyCode {xpath('TopograpyCode')};
	string BuildingClassCode {xpath('BuildingClassCode')};
	string BuildingQualityCode {xpath('BuildingQualityCode')};
	string BuildingConditionCode {xpath('BuildingConditionCode')};
end;
		
export t_PropValuation := record
	share.t_Date HistoryDate {xpath('HistoryDate')};
	string ParcelId {xpath('ParcelId')};
	string FipsCode {xpath('FipsCode')};
	string LandUse {xpath('LandUse')};
	integer AssessedValueYear {xpath('AssessedValueYear')};
	integer SalesPrice {xpath('SalesPrice')};
	integer AssessedTotalValue {xpath('AssessedTotalValue')};
	integer TotalMarketValue {xpath('TotalMarketValue')};
	integer TaxAssessmentValuation {xpath('TaxAssessmentValuation')};
	integer PriceIndexValuation {xpath('PriceIndexValuation')};
	integer HedonicValuation {xpath('HedonicValuation')};
	integer AutomatedValuation {xpath('AutomatedValuation')};
	integer ConfidenceScore {xpath('ConfidenceScore')};
end;
		
export t_EducationalFacility := record (neighborhood_safety.t_Facility)
	string UnitID {xpath('UnitID')};
	string InstitutionType {xpath('InstitutionType')};
	string GeoBlock {xpath('GeoBlock')};
	string MSA {xpath('MSA')};
	string Phone {xpath('Phone')};
	string Website {xpath('Website')};
end;
		
export t_ResidentialQualityReportBy := record
	share.t_Address Address {xpath('Address')};
end;
		
export t_ResidentialQualityReportOptions := record (share.t_BaseSearchOption)
	integer StartingRecord {xpath('StartingRecord')};//hidden[unused]
end;
		
export t_ResidentialQualityReport := record
	t_Walkability Walkability {xpath('Walkability')};
	neighborhood_safety.t_NeighborhoodStats NeighborhoodStats {xpath('NeighborhoodStats')};
	t_PropertyInfo Property {xpath('Property')};
	t_PropValuation PropertyValuation {xpath('PropertyValuation')};
	neighborhood_safety.t_EASI Demographics {xpath('Demographics')};
	dataset(neighborhood_safety.t_PublicSafetyFacility) PublicSafetyFacilities {xpath('PublicSafetyFacilities/PublicSafetyFacility'), MAXCOUNT(iesp.Constants.NeighborSafety.MaxPublicSafety)};
	dataset(neighborhood_safety.t_Facility) CorrectionalFacilities {xpath('CorrectionalFacilities/CorrectionalFacility'), MAXCOUNT(iesp.Constants.NeighborSafety.MaxCorrecFacility)};
	dataset(t_EducationalFacility) Schools {xpath('Schools/School'), MAXCOUNT(iesp.Constants.NeighborSafety.MaxSchools)};
	dataset(t_EducationalFacility) Colleges {xpath('Colleges/College'), MAXCOUNT(iesp.Constants.NeighborSafety.MaxColleges)};
end;
		
export t_ResidentialQualityReportResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_ResidentialQualityReport Report {xpath('Report')};
end;
		
export t_ResidentialQualitySearchRequest := record (share.t_BaseRequest)
	t_ResidentialQualitySearchOptions Options {xpath('Options')};
	t_ResidentialQualitySearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_ResidentialQualityReportRequest := record (share.t_BaseRequest)
	t_ResidentialQualityReportOptions Options {xpath('Options')};
	t_ResidentialQualityReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_ResidentialQualitySearchResponseEx := record
	t_ResidentialQualitySearchResponse response {xpath('response')};
end;
		
export t_ResidentialQualityReportResponseEx := record
	t_ResidentialQualityReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from residential_quality.xml. ***/
/*===================================================*/

