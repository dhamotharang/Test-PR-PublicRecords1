/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from peoplereport.xml. ***/
/*===================================================*/

export peoplereport := MODULE
			
export t_PeopleReportOption := record (share.t_BaseReportOption)
	boolean ReturnAlsoFound {xpath('ReturnAlsoFound')};//hidden[internal]
	boolean IncludePeopleAtWork {xpath('IncludePeopleAtWork')};//hidden[internal]
	boolean IncludeMotorVehicle {xpath('IncludeMotorVehicle')};//hidden[internal]
	boolean IncludePhonesPlus {xpath('IncludePhonesPlus')};//hidden[internal]
	boolean IncludeProfessionalLicenses {xpath('IncludeProfessionalLicenses')};//hidden[internal]
	boolean IncludeDriversLicenses {xpath('IncludeDriversLicenses')};//hidden[internal]
	boolean IncludePhonesFeedback {xpath('IncludePhonesFeedback')};//hidden[internal]
	boolean IncludeCriminalIndicators {xpath('IncludeCriminalIndicators')};//hidden[internal]
	share.t_RelationshipOption RelationshipOption {xpath('RelationshipOption')};//hidden[internal]
end;
		
export t_PeopleReportBy := record (bpsreport.t_BpsReportBy)
end;
		
export t_PeopleReportAlsoFound := record
	boolean HasPeopleAtWork {xpath('HasPeopleAtWork')};
	boolean HasMotorVehicle {xpath('HasMotorVehicle')};
	boolean HasPhonesPlus {xpath('HasPhonesPlus')};
	boolean HasProfessionalLicense {xpath('HasProfessionalLicense')};
	boolean HasDriversLicense {xpath('HasDriversLicense')};
end;
		
export t_PeopleReportOldPhone := record (bpsreport.t_BpsReportOldPhone)
	string11 _Type {xpath('Type')};
	string2 State {xpath('State')};
	string25 City {xpath('City')};
end;
		
export t_PeopleReportIndividual := record, MAXLENGTH (300000001)
	string12 UniqueId {xpath('UniqueId')};
	boolean HasBankruptcy {xpath('HasBankruptcy')};
	boolean HasProperty {xpath('HasProperty')};
	boolean HasCorporateAffiliation {xpath('HasCorporateAffiliation')};
	dataset(bpsreport.t_BpsReportAddressSlim) BpsReportAddresses2 {xpath('BpsReportAddresses2/BpsReportAddress'), MAXCOUNT(iesp.constants.BR.MaxAddress)};
	dataset(bps_share.t_BpsReportIdentity) AKAs {xpath('AKAs/Identity'), MAXCOUNT(iesp.Constants.BR.MaxAKA)};
	dataset(bps_share.t_BpsReportImposter) Imposters {xpath('Imposters/Imposter'), MAXCOUNT(iesp.Constants.BR.MaxImposters)};
	dataset(bpsreport.t_BpsReportOldPhone) OldPhones {xpath('OldPhones/OldPhone'), MAXCOUNT(iesp.constants.BR.MaxPhonesHistorical)};
	dataset(t_PeopleReportOldPhone) OldPhones2 {xpath('OldPhones2/OldPhone'), MAXCOUNT(iesp.constants.BR.MaxPhonesHistorical)};
	dataset(bpsreport.t_NeighborSlim) Neighbors2 {xpath('Neighbors2/Neighborhood'), MAXCOUNT(iesp.constants.BR.MaxNeighborhood)};
	dataset(bpsreport.t_BpsReportRelativeSlim) Relatives2 {xpath('Relatives2/Relative'), MAXCOUNT(iesp.constants.BR.MaxRelatives)};
	dataset(bpsreport.t_BpsReportAssociateSlim) Associates2 {xpath('Associates2/Associate'), MAXCOUNT(iesp.constants.BR.MaxAssociates)};
	dataset(bankruptcy.t_BankruptcyReportRecord) Bankruptcies {xpath('Bankruptcies/Bankruptcy'), MAXCOUNT(iesp.Constants.BR.MaxBankruptcies)};
	dataset(bpsreport.t_BpsCorpAffiliation) CorporateAffiliations {xpath('CorporateAffiliations/Affiliation'), MAXCOUNT(iesp.Constants.BR.MaxCorpAffiliations)};
	t_PeopleReportAlsoFound AlsoFound {xpath('AlsoFound')};//hidden[internal]
	dataset(peopleatwork.t_PeopleAtWorkRecord) PeopleAtWorks {xpath('PeopleAtWorks/PeopleAtWork'), MAXCOUNT(iesp.Constants.BR.MaxPeopleAtWork)};//hidden[internal]
	dataset(motorvehicle.t_MVReportRecord) Vehicles {xpath('Vehicles/Vehicle'), MAXCOUNT(iesp.Constants.BR.MaxVehicles)};//hidden[internal]
	dataset(bpsreport.t_BpsReportPhonesPlusRecord) PhonesPluses {xpath('PhonesPluses/PhonesPlus'), MAXCOUNT(iesp.constants.BR.MaxPhonesPlus)};//hidden[internal]
	dataset(proflicense.t_ProfessionalLicenseRecord) ProfessionalLicenses {xpath('ProfessionalLicenses/ProfessionalLicense'), MAXCOUNT(iesp.constants.BR.MaxProfLicenses)};//hidden[internal]
	dataset(bps_share.t_BpsReportDriverLicense) DriverLicenses {xpath('DriverLicenses/DriverLicense'), MAXCOUNT(iesp.Constants.BR.MaxDLs)};//hidden[internal]
end;
		
export t_PeopleReportResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_PeopleReportIndividual Individual {xpath('Individual')};
end;
		
export t_PeopleReportRequest := record (share.t_BaseRequest)
	t_PeopleReportOption Options {xpath('Options')};
	t_PeopleReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_PeopleReportResponseEx := record
	t_PeopleReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from peoplereport.xml. ***/
/*===================================================*/

