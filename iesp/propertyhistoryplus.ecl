/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from propertyhistoryplus.xml. ***/
/*===================================================*/

export propertyhistoryplus := MODULE
			
export t_PropertyHistoryPlusReportOption := record (share.t_BaseReportOption)
end;
		
export t_PropertyHistoryPlusReportBy := record
	string45 ParcelId {xpath('ParcelId')};
	share.t_Address Address {xpath('Address')};
end;
		
export t_PlusPropertyRecord := record
	string45 ParcelNumber {xpath('ParcelNumber')};
	string60 AlternateParcelNumber {xpath('AlternateParcelNumber')};
	string40 SubdivisionName {xpath('SubdivisionName')};
	string55 LandUse {xpath('LandUse')};
	integer YearBuilt {xpath('YearBuilt')};
	string11 LandValue {xpath('LandValue')};
	string11 ImprovementValue {xpath('ImprovementValue')};
	string11 TotalValue {xpath('TotalValue')};
	string15 AssessedValue {xpath('AssessedValue')};
	string15 TaxAmount {xpath('TaxAmount')};
	string11 MarketLandValue {xpath('MarketLandValue')};
	string11 MarketImprovementValue {xpath('MarketImprovementValue')};
	string11 TotalMarketValue {xpath('TotalMarketValue')};
	integer TaxYear {xpath('TaxYear')};
	integer LivingSize {xpath('LivingSize')};
	integer LandSize {xpath('LandSize')};
	integer Stories {xpath('Stories')};
	integer Bedrooms {xpath('Bedrooms')};
	integer FullBaths {xpath('FullBaths')};
	string18 Condition {xpath('Condition')};
	boolean Fireplace {xpath('Fireplace')};
	boolean Pool {xpath('Pool')};
	string28 AirConditioning {xpath('AirConditioning')};
	string28 Heating {xpath('Heating')};
	string23 Fuel {xpath('Fuel')};
	string12 Sewer {xpath('Sewer')};
	string12 Water {xpath('Water')};
	string20 Electric {xpath('Electric')};
	string25 Frame {xpath('Frame')};
	string28 Roof {xpath('Roof')};
	string250 LegalDescription {xpath('LegalDescription')};
	string28 Style {xpath('Style')};
end;
		
export t_PropertyHistoryPlusIndividual := record
	share.t_Name Name {xpath('Name')};
	string12 UniqueId {xpath('UniqueId')};
	dataset(share.t_RiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountHRI)};
end;
		
export t_PropertyHistoryPlusResident := record
	share.t_Name Name {xpath('Name')};
	string9 SSN {xpath('SSN')};
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
	string12 UniqueId {xpath('UniqueId')};
end;
		
export t_PlusPropertyDocument := record
	string10 Book {xpath('Book')};
	string10 Page {xpath('Page')};
	string20 Number {xpath('Number')};
end;
		
export t_PropertyHistoryPlusDeedRecord := record
	string60 LenderName {xpath('LenderName')};
	string15 MortgageAmount {xpath('MortgageAmount')};
	string40 DocumentType {xpath('DocumentType')};
	share.t_Date RecordingDate {xpath('RecordingDate')};
	t_PlusPropertyDocument PropertyDocument {xpath('PropertyDocument')};
end;
		
export t_BuyerSellerRelationship := record
	string12 BuyerUniqueId {xpath('BuyerUniqueId')};
	string12 SellerUniqueId {xpath('SellerUniqueId')};
	string50 Relationship {xpath('Relationship')};
end;
		
export t_PropertyHistoryPlusSaleRecord := record
	string60 TitleCompanyName {xpath('TitleCompanyName')};
	share.t_Date SaleDate {xpath('SaleDate')};
	integer MonthsSinceSaleDate {xpath('MonthsSinceSaleDate')};
	string9 SalePrice {xpath('SalePrice')};
	integer DaysBetweenSales {xpath('DaysBetweenSales')};
	integer PricePercentChange {xpath('PricePercentChange')};
	dataset(t_PropertyHistoryPlusIndividual) Buyers {xpath('Buyers/Buyer'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountIndividual)};
	dataset(t_PropertyHistoryPlusIndividual) Sellers {xpath('Sellers/Seller'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountIndividual)};
	dataset(t_BuyerSellerRelationship) BuyerSellerRelationships {xpath('BuyerSellerRelationships/BuyerSellerRelationship'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountRelationships)};
end;
		
export t_PropertyHistoryPlusTransaction := record
	string12 SourcePropertyRecordId {xpath('SourcePropertyRecordId')};
	string4 VendorSourceFlag {xpath('VendorSourceFlag')};
	integer GroupId {xpath('GroupId')};
	boolean IsDuplicate {xpath('IsDuplicate')};
	t_PropertyHistoryPlusDeedRecord Deed {xpath('Deed')};
	t_PropertyHistoryPlusSaleRecord Sale {xpath('Sale')};
	dataset(share.t_RiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountHRI)};
end;
		
export t_PlusHistoricalValue := record
	share.t_Date Date {xpath('Date')};
	string9 ZipAveragePrice {xpath('ZipAveragePrice')};
end;
		
export t_PropertyHistoryPlusReportResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_PropertyHistoryPlusReportBy InputEcho {xpath('InputEcho')};
	share.t_AddressEx Address {xpath('Address')};
	t_PlusPropertyRecord PropertyRecord {xpath('PropertyRecord')};
	dataset(t_PropertyHistoryPlusTransaction) Transactions {xpath('Transactions/Transaction'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountTransactions)};
	dataset(t_PropertyHistoryPlusResident) Residents {xpath('Residents/Resident'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountResidents)};
	dataset(t_PlusHistoricalValue) Zip5HistoricalValues {xpath('Zip5HistoricalValues/Zip5HistoricalValue'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountHistoricalValues)};
	dataset(t_PlusHistoricalValue) Zip4HistoricalValues {xpath('Zip4HistoricalValues/Zip4HistoricalValue'), MAXCOUNT(Constants.PropertyHistoryPlusReport.MaxCountHistoricalValues)};
end;
		
export t_PropertyHistoryPlusReportRequest := record (share.t_BaseRequest)
	t_PropertyHistoryPlusReportOption Options {xpath('Options')};
	t_PropertyHistoryPlusReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_PropertyHistoryPlusReportResponseEx := record
	t_PropertyHistoryPlusReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from propertyhistoryplus.xml. ***/
/*===================================================*/

