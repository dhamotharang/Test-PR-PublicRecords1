/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from smartlinxsearchcore.xml. ***/
/*===================================================*/

import iesp;
export smartlinxsearchcore := MODULE

export t_UnicodeName := record
	unicode62 Full {xpath('Full')}; // Xsd type: string
	unicode20 First {xpath('First')}; // Xsd type: string
	unicode20 Middle {xpath('Middle')}; // Xsd type: string
	unicode20 Last {xpath('Last')}; // Xsd type: string
	unicode5 Suffix {xpath('Suffix')}; // Xsd type: string
	unicode3 Prefix {xpath('Prefix')}; // Xsd type: string
 end;
			
export t_SLRInputName := record
	unicode Full {xpath('Full')};
	unicode Title {xpath('Title')};
	unicode First {xpath('First')};
	unicode Middle {xpath('Middle')};
	unicode Last {xpath('Last')};
	unicode Generation {xpath('Generation')};
end;
		
export t_SLRResultMatchEntityAKA := record (t_SLRInputName)
	unsigned8 ID {xpath('ID')};
	unsigned8 _Type {xpath('Type')};
	unsigned8 Category {xpath('Category')};
	string Notes {xpath('Notes')};
end;
		
export t_SLRResultMatchEntityAddress := record
	unsigned8 ID {xpath('ID')};
	unsigned8 _Type {xpath('Type')};
	string FullAddress {xpath('FullAddress')};
	string StreetAddress1 {xpath('StreetAddress1')};
	string StreetAddress2 {xpath('StreetAddress2')};
	string City {xpath('City')};
	string State {xpath('State')};
	string PostalCode {xpath('PostalCode')};
	string Country {xpath('Country')};
	string Notes {xpath('Notes')};
end;
		
export t_SLRResultMatchEntityPhone := record
	unsigned8 ID {xpath('ID')};
	unsigned8 _Type {xpath('Type')};
	string Number {xpath('Number')};
	string Notes {xpath('Notes')};
end;
		
export t_SLRResultMatchEntityID := record
	unsigned8 ID {xpath('ID')};
	unsigned8 _Type {xpath('Type')};
	string Label {xpath('Label')};
	string Number {xpath('Number')};
	string Issuer {xpath('Issuer')};
	string IssueDate {xpath('IssueDate')};
	string ExpDate {xpath('ExpDate')};
	string Notes {xpath('Notes')};
end;
		
export t_SLRResultMatchEntityDescription := record
	unsigned8 ID {xpath('ID')};
	unsigned8 _Type {xpath('Type')};
	string Value {xpath('Value')};
	string Notes {xpath('Notes')};
end;
		
export t_SLRResultMatchEntityValue := record
	unsigned8 ID {xpath('ID')};
	string Value {xpath('Value')};
end;
		
export t_SLRResultMatchEntityDetails := record
	integer CheckSum {xpath('CheckSum')};
	string Country {xpath('Country')};
	string Date {xpath('Date')};
	string Gender {xpath('Gender')}; //values['None','Unknown','Female','Male','']
	t_SLRInputName Name {xpath('Name')};
	string Notes {xpath('Notes')};
	string Number {xpath('Number')};
	string Reason {xpath('Reason')};
	unsigned8 _Type {xpath('Type')};
end;
		
export t_SLRResultMatchAdditional := record
	string EFTValue {xpath('EFTValue')};
	boolean PartialAddress {xpath('PartialAddress')};
	integer Score {xpath('Score')};
	integer SourceID {xpath('SourceID')};
	integer ValueType {xpath('ValueType')};
	integer InputInstance {xpath('InputInstance')};
end;
		
export t_SLRResultMatchAddress := record
	dataset(t_SLRResultMatchAdditional) AdditionalInformation {xpath('AdditionalInformation/AdditionalInfo'), MAXCOUNT(iesp.Constants.SLR.MaxList)};
	integer BestScore {xpath('BestScore')};
	string Best {xpath('Best')};
	boolean BestIsPartial {xpath('BestIsPartial')};
	boolean Conflict {xpath('Conflict')};
	boolean IndexMatch {xpath('IndexMatch')};
	unsigned1 BestInputID {xpath('BestInputID')};
	unsigned1 BestListID {xpath('BestListID')};
        dataset(t_SLRResultMatchEntityAddress) AddressDetails {xpath('AddressDetails'), MAXCOUNT(iesp.Constants.SLR.MaxList)};
end;
		
export t_SLRResultMatchCitizenship := record
	integer BestScore {xpath('BestScore')};
	dataset(t_SLRResultMatchAdditional) Citizenships {xpath('Citizenships/AdditionalInfo'), MAXCOUNT(iesp.Constants.SLR.MaxList)};
	boolean Conflict {xpath('Conflict')};
end;
		
export t_SLRResultMatchCountry := record
	string Best {xpath('Best')};
	unsigned2 BestID {xpath('BestID')};
	integer BestScore {xpath('BestScore')};
	string BestType {xpath('BestType')}; //values['None','Country','Code','AlternateName','City','Port','Term','']
	boolean Conflict {xpath('Conflict')};
	integer InputInstance {xpath('InputInstance')};
	string InputType {xpath('InputType')}; //values['None','AdditionalInfo','Address','ID','Name','Phone','EFT','']
end;
		
export t_SLRResultMatchDOB := record
	boolean BestIsPartial {xpath('BestIsPartial')};
	integer BestScore {xpath('BestScore')};
	boolean Conflict {xpath('Conflict')};
	dataset(t_SLRResultMatchAdditional) AdditionalInformation {xpath('AdditionalInformation/AdditionalInfo'), MAXCOUNT(iesp.Constants.SLR.MaxList)};
end;
		
export t_SLRResultMatchEntity := record
	t_SLRResultMatchEntityDetails EntityDetails {xpath('EntityDetails')};
	string EntityUniqueID {xpath('EntityUniqueID')};
	string SearchCriteria {xpath('SearchCriteria')};
	boolean MatchRealert {xpath('MatchRealert')};
	unicode Name {xpath('Name')};
	integer Offset {xpath('Offset')};
	integer8 PrevResultID {xpath('PrevResultID')};
	integer Score {xpath('Score')};
	string SourceNumber {xpath('SourceNumber')};
	boolean TypeConflict {xpath('TypeConflict')};
end;
		
export t_SLRResultMatchFile := record
	string Build {xpath('Build')};
	boolean Custom {xpath('Custom')};
	unsigned8 ID {xpath('ID')};
	integer Index {xpath('Index')};
	string Name {xpath('Name')};
	string Published {xpath('Published')};
	string _Type {xpath('Type')}; //values['UDF','ADF','BDF','CDF','SDF','']
end;
		
export t_SLRResultMatchGender := record
	boolean Conflict {xpath('Conflict')};
end;
		
export t_SLRResultMatchID := record
	integer BestScore {xpath('BestScore')};
	boolean Conflict {xpath('Conflict')};
	dataset(t_SLRResultMatchAdditional) AdditionalInformation {xpath('AdditionalInformation/AdditionalInfo'), MAXCOUNT(iesp.Constants.SLR.MaxList)};
	boolean IndexMatch {xpath('IndexMatch')};
	dataset(t_SLRResultMatchEntityID) IdentificationDetails {xpath('IdentificationDetails')};
end;
		
export t_SLRResultMatchName := record
	boolean AddressName {xpath('AddressName')};
	integer AddressInputInstance {xpath('AddressInputInstance')};
	unicode Best {xpath('Best')};
	unsigned1 BestID {xpath('BestID')};
	integer BestScore {xpath('BestScore')};
	boolean Conflict {xpath('Conflict')};
	boolean IndexMatch {xpath('IndexMatch')};
	dataset(t_SLRResultMatchEntityValue) AltNames {xpath('AltNames')};
	dataset(t_SLRResultMatchEntityAKA) AKAs {xpath('AKAs')};
end;
		
export t_SLRResultMatchPhone := record
	integer BestScore {xpath('BestScore')};
	boolean Conflict {xpath('Conflict')};
	boolean IndexMatch {xpath('IndexMatch')};
	dataset(t_SLRResultMatchAdditional) AdditionalInformation {xpath('AdditionalInformation/AdditionalInfo'), MAXCOUNT(iesp.Constants.SLR.MaxList)};
	dataset(t_SLRResultMatchEntityPhone) PhoneDetails {xpath('PhoneDetails')};
end;
		
export t_SLRResultMatch := record
	t_SLRResultMatchAddress Address {xpath('Address')};
	t_SLRResultMatchCitizenship Citizenship {xpath('Citizenship')};
	t_SLRResultMatchCountry Country {xpath('Country')};
	t_SLRResultMatchDOB DOB {xpath('DOB')};
	integer EFTContextEnd {xpath('EFTContextEnd')};
	integer EFTContextStart {xpath('EFTContextStart')};
	boolean EFTMatch {xpath('EFTMatch')};
	t_SLRResultMatchEntity Entity {xpath('Entity')};
	t_SLRResultMatchFile File {xpath('File')};
	t_SLRResultMatchGender Gender {xpath('Gender')};
	t_SLRResultMatchID ID {xpath('ID')};
	t_SLRResultMatchName Name {xpath('Name')};
	t_SLRResultMatchPhone Phone {xpath('Phone')};
	dataset(t_SLRResultMatchEntityValue) Codes {xpath('Codes')};
	dataset(t_SLRResultMatchEntityValue) Terms {xpath('Terms')};
	dataset(t_SLRResultMatchEntityValue) Cities {xpath('Cities')};
	dataset(t_SLRResultMatchEntityValue) Ports {xpath('Ports')};
	dataset(t_SLRResultMatchEntityDescription) Descriptions {xpath('Descriptions')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from smartlinxsearchcore.xml. ***/
/*===================================================*/

