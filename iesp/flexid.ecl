/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from flexid.xml. ***/
/*===================================================*/

import iesp;

export flexid := MODULE
			
export t_FlexIDSearchBy := record
	string30 Seq {xpath('Seq')};//hidden[ecldev]
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DOB {xpath('DOB')};
	unsigned1 Age {xpath('Age')};
	string9 SSN {xpath('SSN')};
	string4 SSNLast4 {xpath('SSNLast4')};
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string2 DriverLicenseState {xpath('DriverLicenseState')};
	string IPAddress {xpath('IPAddress')};
	string10 HomePhone {xpath('HomePhone')};
	string10 WorkPhone {xpath('WorkPhone')};
	iesp.instantid.t_Passport Passport {xpath('Passport')};
	string6 Gender {xpath('Gender')};
	string50 Email {xpath('Email')};
	string Channel {xpath('Channel')}; //values['','Mail','PointOfSale','Kiosk','Internet','Branch','Telephonic','Other','']
	string6 Income {xpath('Income')};
	string OwnOrRent {xpath('OwnOrRent')}; //values['','Own','Rent','']
	string16 LocationIdentifier {xpath('LocationIdentifier')};
	string16 OtherApplicationIdentifier1 {xpath('OtherApplicationIdentifier1')};
	string16 OtherApplicationIdentifier2 {xpath('OtherApplicationIdentifier2')};
	string16 OtherApplicationIdentifier3 {xpath('OtherApplicationIdentifier3')};
end;
		
export t_FlexIDModels := record
	string12 FraudPointModel {xpath('FraudPointModel')};
	iesp.instantid.t_FraudPointModelWithOptions FraudPointModel2 {xpath('FraudPointModel2')};
	dataset(iesp.instantid.t_ModelRequest) ModelRequests {xpath('ModelRequests/ModelRequest'), MAXCOUNT(5)};
end;
		
export t_RequireExactMatchFlexID := record
	boolean LastName {xpath('LastName')};
	boolean FirstName {xpath('FirstName')};
	boolean FirstNameAllowNickname {xpath('FirstNameAllowNickname')};
	boolean Address {xpath('Address')};
	boolean HomePhone {xpath('HomePhone')};
	boolean SSN {xpath('SSN')};
	boolean DOB {xpath('DOB')};
	boolean DriverLicense {xpath('DriverLicense')};
end;
		
export t_FlexIDOption := record (iesp.share.t_BaseOption)
	dataset(iesp.share.t_StringArrayItem) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(Constants.MaxCountWatchLists)};
	boolean UseDOBFilter {xpath('UseDOBFilter')};
	integer2 DOBRadius {xpath('DOBRadius')};
	boolean IncludeMSOverride {xpath('IncludeMSOverride')};
	boolean DisallowTargusEID3220 {xpath('DisallowTargusEID3220')};//hidden[internal]
	boolean PoBoxCompliance {xpath('PoBoxCompliance')};
	t_RequireExactMatchFlexID RequireExactMatch {xpath('RequireExactMatch')};
	boolean IncludeAllRiskIndicators {xpath('IncludeAllRiskIndicators')};
	boolean IncludeVerifiedElementSummary {xpath('IncludeVerifiedElementSummary')};
	boolean IncludeDLVerification {xpath('IncludeDLVerification')};
	iesp.instantid.t_DOBMatchOptions DOBMatch {xpath('DOBMatch')};
	string128 CustomCVIModelName {xpath('CustomCVIModelName')};
	string4 LastSeenThreshold {xpath('LastSeenThreshold')};
	boolean IncludeMIOverride {xpath('IncludeMIOverride')};
	boolean IncludeSSNVerification {xpath('IncludeSSNVerification')};
	iesp.share.t_OptionsForCVICalculation CVICalculationOptions {xpath('CVICalculationOptions')};
	boolean DisallowInsurancePhoneHeaderGateway {xpath('DisallowInsurancePhoneHeaderGateway')};//hidden[internal]
	string6 InstantIDVersion {xpath('InstantIDVersion')};
	boolean EnableEmergingId {xpath('EnableEmergingId')};//hidden[internal]
	string NameInputOrder {xpath('NameInputOrder')}; //values['Unknown','FML','LFM','']
	real4 GlobalWatchlistThreshold {xpath('GlobalWatchlistThreshold')};
	integer OFACVersion {xpath('OFACVersion')};//hidden[internal]
	boolean IncludeEmailVerification {xpath('IncludeEmailVerification')};
	boolean DisableNonGovernmentDLData {xpath('DisableNonGovernmentDLData')};
	boolean IncludeDigitalIdentity {xpath('IncludeDigitalIdentity')};
end;
		
export t_ValidElementSummary := record
	boolean SSNValid {xpath('SSNValid')};
	boolean SSNDeceased {xpath('SSNDeceased')};
	string1 DLValid {xpath('DLValid')}; // Xsd type: boolean
	boolean PassportValid {xpath('PassportValid')};
	boolean AddressPOBox {xpath('AddressPOBox')};
	boolean AddressCMRA {xpath('AddressCMRA')};
	boolean SSNFoundForLexID {xpath('SSNFoundForLexID')};
end;
		
export t_VerifiedElementSummary := record
	string1 FirstName {xpath('FirstName')}; // Xsd type: boolean
	boolean MiddleName {xpath('MiddleName')};
	string1 LastName {xpath('LastName')}; // Xsd type: boolean
	string1 StreetAddress {xpath('StreetAddress')}; // Xsd type: boolean
	string1 City {xpath('City')}; // Xsd type: boolean
	string1 State {xpath('State')}; // Xsd type: boolean
	string1 Zip {xpath('Zip')}; // Xsd type: boolean
	string1 HomePhone {xpath('HomePhone')}; // Xsd type: boolean
	boolean DOB {xpath('DOB')};
	string1 DOBMatchLevel {xpath('DOBMatchLevel')};
	string1 SSN {xpath('SSN')}; // Xsd type: boolean
	string1 DL {xpath('DL')}; // Xsd type: boolean
	boolean Email {xpath('Email')};
end;
		
export t_FlexIDResult := record
	t_FlexIDSearchBy InputEcho {xpath('InputEcho')};
	string12 UniqueId {xpath('UniqueId')};
	string9 VerifiedSSN {xpath('VerifiedSSN')};
	iesp.instantid.t_NameAddressPhone NameAddressPhone {xpath('NameAddressPhone')};
	t_VerifiedElementSummary VerifiedElementSummary {xpath('VerifiedElementSummary')};
	t_ValidElementSummary ValidElementSummary {xpath('ValidElementSummary')};
	unsigned1 NameAddressSSNSummary {xpath('NameAddressSSNSummary')};
	unsigned1 ComprehensiveVerificationIndex {xpath('ComprehensiveVerificationIndex')};
	dataset(iesp.share.t_SequencedRiskIndicator) CVIHighRiskIndicators {xpath('CVIHighRiskIndicators/CVIHighRiskIndicator'), MAXCOUNT(iesp.Constants.FI.MaxCVIRiskIndicators)};
	iesp.share.t_ComprehensiveVerificationStruct ComprehensiveVerification {xpath('ComprehensiveVerification')};
	iesp.share.t_CustomComprehensiveVerificationStruct CustomComprehensiveVerification {xpath('CustomComprehensiveVerification')};
	dataset(iesp.instantid.t_ModelSequencedHRI) Models {xpath('Models/Model'), MAXCOUNT(3)};
	string6 InstantIDVersion {xpath('InstantIDVersion')};
	boolean EmergingId {xpath('EmergingId')};
	string AddressSecondaryRangeMismatch {xpath('AddressSecondaryRangeMismatch')};
	string VerifiedEmail {xpath('VerifiedEmail')};
	boolean BureauDeleted {xpath('BureauDeleted')};
	boolean ITINExpired {xpath('ITINExpired')};
	boolean IsPhoneCurrent {xpath('IsPhoneCurrent')};
	string PhoneLineType {xpath('PhoneLineType')};
	string PhoneLineDescription {xpath('PhoneLineDescription')};
end;
		
export t_FlexIDResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	t_FlexIDResult Result {xpath('Result')};
end;
		
export t_FlexIDRequest := record (iesp.share.t_BaseRequest)
	t_FlexIDOption Options {xpath('Options')};
	t_FlexIDSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_FlexIDResponseEx := record
	t_FlexIDResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from flexid.xml. ***/
/*===================================================*/

