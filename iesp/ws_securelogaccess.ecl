/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from ws_securelogaccess.xml. ***/
/*===================================================*/

import iesp;

export ws_securelogaccess := MODULE

export t_EncryptedBlobRecord := record
	string EncryptedBlob {xpath('EncryptedBlob')};
	unsigned KeyVersion {xpath('KeyVersion')};
	string KeyGroup {xpath('KeyGroup')};
	string EncryptionKey {xpath('EncryptionKey')};
	string UserDefined {xpath('UserDefined')};
end;

export t_DecryptedBlobRecord := record
	string DecryptedBlob {xpath('DecryptedBlob')};
	string UserDefined {xpath('UserDefined')};
end;

export t_DecryptBlobResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_DecryptedBlobRecord) Blobs {xpath('Blobs/Blob'), MAXCOUNT(1000)};
end;

export t_EncryptBlobInput := record
	string TextBlob {xpath('TextBlob')};
	string KeyGroup {xpath('KeyGroup')};
	string UserDefined {xpath('UserDefined')};
end;

export t_EncryptBlobResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_EncryptedBlobRecord) Blobs {xpath('Blobs/Blob'), MAXCOUNT(1000)};
end;

export t_SearchTermHistoryReportByDate := record
	iesp.share.t_TimeStamp StartDate {xpath('StartDate')};
	iesp.share.t_TimeStamp EndDate {xpath('EndDate')};
	string LoginID {xpath('LoginID')};
end;

export t_SearchTermHistoryReportByTransactionDetail := record
	string TransactionID {xpath('TransactionID')};
	string LoginID {xpath('LoginID')};
	string CompanyID {xpath('CompanyID')};
end;

export t_SearchTermHistoryReportByTransaction := record
	dataset(t_SearchTermHistoryReportByTransactionDetail) Transactions {xpath('Transactions/Transaction'), MAXCOUNT(1000)};
end;

export t_SearchTermHistoryReportBy := record
	boolean FCRA {xpath('FCRA')};
	t_SearchTermHistoryReportByDate ByDate {xpath('ByDate')};
	t_SearchTermHistoryReportByTransaction ByTransaction {xpath('ByTransaction')};
end;

export t_SearchTermHistoryOptions := record
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
end;

export t_SearchTermHistoryInputEcho := record
	t_SearchTermHistoryOptions Options {xpath('Options')};
	t_SearchTermHistoryReportBy ReportBy {xpath('ReportBy')};
end;

export t_SearchTermHistorySearchTerms := record
	string fname {xpath('fname')};
	string mname {xpath('mname')};
	string lname {xpath('lname')};
	string address {xpath('address')};
	string city {xpath('city')};
	string state {xpath('state')};
	string zip {xpath('zip')};
	string zip4 {xpath('zip4')};
	string phone {xpath('phone')};
	string ssn {xpath('ssn')};
	string full_name {xpath('full_name')};
	string business_name {xpath('business_name')};
	string dob {xpath('dob')};
	string unique_id {xpath('unique_id')};
	string unique_id_source {xpath('unique_id_source')};
end;

export t_SearchTermHistorySearchResult := record
	string TransactionID {xpath('TransactionID')};
	iesp.share.t_TimeStamp TransactionDate {xpath('TransactionDate')};
	string TransactionTimestamp {xpath('TransactionTimestamp')};
	string TransactionType {xpath('TransactionType')};
	string LoginHistoryID {xpath('LoginHistoryID')};
	string LoginID {xpath('LoginID')};
	string CompanyID {xpath('CompanyID')};
	string FunctionName {xpath('FunctionName')};
	string ReferenceCode {xpath('ReferenceCode')};
	t_SearchTermHistorySearchTerms SearchTerms {xpath('SearchTerms')};
end;

export t_SearchTermHistoryResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	t_SearchTermHistoryInputEcho InputEcho {xpath('InputEcho')};
	dataset(t_SearchTermHistorySearchResult) Results {xpath('Results/Result'), MAXCOUNT(1)};
end;

export t_UpdateCMKResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	unsigned KeyVersion {xpath('KeyVersion')};
end;

export t_GetPublicKeyResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	string PublicKey {xpath('PublicKey')};
end;

export t_EncryptionKey := record
	unsigned KeyVersion {xpath('KeyVersion')};
	string EncryptionKey {xpath('EncryptionKey')};
end;

export t_KeyDecryptionEncryptionKey := record
	unsigned KeyVersion {xpath('KeyVersion')};
	string KeyGroup {xpath('KeyGroup')};
	string EncryptionKey {xpath('EncryptionKey')};
end;

export t_KeyDecryptionEncryptionKeyResponse := record
	unsigned KeyVersion {xpath('KeyVersion')};
	string EncryptionKey {xpath('EncryptionKey')};
	string KeyGroup {xpath('KeyGroup')};
	string RSAProtectedKey {xpath('RSAProtectedKey')};
end;

export t_KeyDecryptionResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	dataset(t_KeyDecryptionEncryptionKeyResponse) Keys {xpath('Keys/Key'), MAXCOUNT(1000)};
end;

export t_DecryptBlobRequest := record (iesp.share.t_BaseRequest)
	dataset(t_EncryptedBlobRecord) Blobs {xpath('Blobs/Blob'), MAXCOUNT(1000)};
end;

export t_EncryptBlobRequest := record (iesp.share.t_BaseRequest)
	dataset(t_EncryptBlobInput) Blobs {xpath('Blobs/Blob'), MAXCOUNT(1000)};
end;

export t_SearchTermHistoryRequest := record (iesp.share.t_BaseRequest)
	t_SearchTermHistoryOptions Options {xpath('Options')};
	t_SearchTermHistoryReportBy ReportBy {xpath('ReportBy')};
end;

export t_UpdateCMKRequest := record (iesp.share.t_BaseRequest)
	string RSAProtectedCMK {xpath('RSAProtectedCMK')};
end;

export t_GetPublicKeyRequest := record (iesp.share.t_BaseRequest)
end;

export t_KeyDecryptionRequest := record (iesp.share.t_BaseRequest)
	string RSAPublicKeyPEM {xpath('RSAPublicKeyPEM')};
	dataset(t_KeyDecryptionEncryptionKey) Keys {xpath('Keys/Key'), MAXCOUNT(1000)};
end;

export t_DecryptBlobResponseEx := record
	t_DecryptBlobResponse response {xpath('response')};
end;

export t_EncryptBlobResponseEx := record
	t_EncryptBlobResponse response {xpath('response')};
end;

export t_SearchTermHistoryResponseEx := record
	t_SearchTermHistoryResponse response {xpath('response')};
end;

export t_UpdateCMKResponseEx := record
	t_UpdateCMKResponse response {xpath('response')};
end;

export t_GetPublicKeyResponseEx := record
	t_GetPublicKeyResponse response {xpath('response')};
end;

export t_KeyDecryptionResponseEx := record
	t_KeyDecryptionResponse response {xpath('response')};
end;


end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from ws_securelogaccess.xml. ***/
/*===================================================*/

