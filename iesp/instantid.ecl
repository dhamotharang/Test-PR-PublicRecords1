/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from instantid.xml. ***/
/*===================================================*/

export instantid := MODULE
			
export t_Passport := record
	string Number {xpath('Number')};
	share.t_Date ExpirationDate {xpath('ExpirationDate')};
	string Country {xpath('Country')};
	string MachineReadableLine1 {xpath('MachineReadableLine1')};
	string MachineReadableLine2 {xpath('MachineReadableLine2')};
end;
		
export t_InstantIDSearchBy := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	share.t_Date DOB {xpath('DOB')};
	integer Age {xpath('Age')};
	string SSN {xpath('SSN')};
	string SSNLast4 {xpath('SSNLast4')};
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string2 DriverLicenseState {xpath('DriverLicenseState')};
	string IPAddress {xpath('IPAddress')};
	string HomePhone {xpath('HomePhone')};
	string WorkPhone {xpath('WorkPhone')};
	boolean UseDOBFilter {xpath('UseDOBFilter')};
	integer DOBRadius {xpath('DOBRadius')};
	t_Passport Passport {xpath('Passport')};
	string Gender {xpath('Gender')};
	string50 Email {xpath('Email')};
	string Channel {xpath('Channel')}; //values['Mail','PointOfSale','Kiosk','Internet','Branch','Telephonic','Other','']
	string6 Income {xpath('Income')};
	string OwnOrRent {xpath('OwnOrRent')}; //values['Own','Rent','']
	string16 LocationIdentifier {xpath('LocationIdentifier')};
	string16 OtherApplicationIdentifier1 {xpath('OtherApplicationIdentifier1')};
	string16 OtherApplicationIdentifier2 {xpath('OtherApplicationIdentifier2')};
	string16 OtherApplicationIdentifier3 {xpath('OtherApplicationIdentifier3')};
	share.t_TimeStamp ApplicationDateTime {xpath('ApplicationDateTime')};
end;
		
export t_AuthorizedRepresentative := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	share.t_Date DOB {xpath('DOB')};
	integer Age {xpath('Age')};
	string SSN {xpath('SSN')};
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string DriverLicenseState {xpath('DriverLicenseState')};
	string Phone10 {xpath('Phone10')};
	string FormerLastName {xpath('FormerLastName')};
end;
		
export t_BusinessInstantIDSearchBy := record
	string CompanyName {xpath('CompanyName')};
	string AlternateCompanyName {xpath('AlternateCompanyName')};
	share.t_Address CompanyAddress {xpath('CompanyAddress')};
	string FEIN {xpath('FEIN')};
	string CompanyPhone {xpath('CompanyPhone')};
	t_AuthorizedRepresentative AuthorizedRepresentative {xpath('AuthorizedRepresentative')};
	boolean UseDOBFilter {xpath('UseDOBFilter')};
	integer DOBRadius {xpath('DOBRadius')};
end;
		
export t_CBDBillToSearchBy := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	string SSN {xpath('SSN')};
	string Phone10 {xpath('Phone10')};
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string DriverLicenseState {xpath('DriverLicenseState')};
	string IPAddress {xpath('IPAddress')};
	string EmailAddress {xpath('EmailAddress')};
end;
		
export t_CBDShipToSearchBy := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	string Phone10 {xpath('Phone10')};
end;
		
export t_ChargebackDefenderSearchBy := record
	t_CBDBillToSearchBy BillTo {xpath('BillTo')};
	t_CBDShipToSearchBy ShipTo {xpath('ShipTo')};
end;
		
export t_StudentDefenderModel := record
	boolean StudentDefender {xpath('StudentDefender')};
	boolean IsStudentApplicant {xpath('IsStudentApplicant')};
end;
		
export t_ModelOption := record
	string OptionName {xpath('OptionName')};
	string OptionValue {xpath('OptionValue')};
end;
		
export t_ModelRequest := record
	string ModelName {xpath('ModelName')};
	dataset(t_ModelOption) ModelOptions {xpath('ModelOptions/ModelOption'), MAXCOUNT(1)};
end;
		
export t_FraudPointModelWithOptions := record
	string16 ModelName {xpath('ModelName')};
	boolean IncludeRiskIndices {xpath('IncludeRiskIndices')};
end;
		
export t_InstantIDModelsBase := record
	boolean ThindexOLD {xpath('ThindexOLD')};
	boolean Thindex {xpath('Thindex')};
	boolean Recover {xpath('Recover')};//hidden[internal]
	t_StudentDefenderModel StudentDefenderModel {xpath('StudentDefenderModel')};
	dataset(t_ModelRequest) ModelRequests {xpath('ModelRequests/ModelRequest'), MAXCOUNT(1)};
	boolean DisallowTargusEID3220 {xpath('DisallowTargusEID3220')};//hidden[internal]
end;
		
export t_InstantIDModels := record (t_InstantIDModelsBase)
	boolean FraudDefender {xpath('FraudDefender')};
	string FraudPointModel {xpath('FraudPointModel')};
end;
		
export t_InstantIDModelsFP2 := record (t_InstantIDModelsBase)
	boolean FraudDefender {xpath('FraudDefender')};
	string FraudPointModel {xpath('FraudPointModel')};
	t_FraudPointModelWithOptions FraudPointModelWithOptions {xpath('FraudPointModelWithOptions')};
end;
		
export t_BusinessInstantIDModels := record
	boolean BusinessDefender {xpath('BusinessDefender')};
end;
		
export t_CBDModels := record
	string ChargebackDefender {xpath('ChargebackDefender')};
	dataset(t_ModelRequest) ModelRequests {xpath('ModelRequests/ModelRequest'), MAXCOUNT(1)};
end;
		
export t_DOBMatchOptions := record
	string MatchType {xpath('MatchType')}; //values['FuzzyCCYYMMDD','FuzzyCCYYMM','RadiusCCYY','ExactCCYYMMDD','ExactCCYYMM','']
	integer MatchYearRadius {xpath('MatchYearRadius')};
end;
		
export t_RequireExactMatchInstID := record
	boolean LastName {xpath('LastName')};
	boolean FirstName {xpath('FirstName')};
	boolean FirstNameAllowNickname {xpath('FirstNameAllowNickname')};
	boolean HomePhone {xpath('HomePhone')};
	boolean SSN {xpath('SSN')};
end;
		
export t_InstantIDOption := record (share.t_BaseOption)
	boolean IncludeOFAC {xpath('IncludeOFAC')};
	boolean IncludeOtherWatchLists {xpath('IncludeOtherWatchLists')};
	dataset(share.t_StringArrayItem) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(1)};
	boolean IncludeMSOverride {xpath('IncludeMSOverride')};
	boolean IncludeDLVerification {xpath('IncludeDLVerification')};
	boolean ExcludeWatchLists {xpath('ExcludeWatchLists')};
	boolean IncludeOFACOnly {xpath('IncludeOFACOnly')};
	boolean PoBoxCompliance {xpath('PoBoxCompliance')};
	t_InstantIDModels IncludeModels {xpath('IncludeModels')};
	string RedFlagsReport {xpath('RedFlagsReport')};
	string GlobalWatchlistThreshold {xpath('GlobalWatchlistThreshold')};
	boolean DisallowTargusEID3220 {xpath('DisallowTargusEID3220')};//hidden[internal]
	t_DOBMatchOptions DOBMatch {xpath('DOBMatch')};
end;
		
export t_InstantIDOption2 := record (share.t_BaseOption)
	boolean IncludeOFAC {xpath('IncludeOFAC')};
	boolean IncludeOtherWatchLists {xpath('IncludeOtherWatchLists')};
	dataset(share.t_StringArrayItem) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(1)};
	boolean IncludeCLOverride {xpath('IncludeCLOverride')};
	boolean IncludeMSOverride {xpath('IncludeMSOverride')};
	boolean IncludeDLVerification {xpath('IncludeDLVerification')};
	boolean ExcludeWatchLists {xpath('ExcludeWatchLists')};
	boolean IncludeOFACOnly {xpath('IncludeOFACOnly')};
	boolean PoBoxCompliance {xpath('PoBoxCompliance')};
	t_InstantIDModelsFP2 IncludeModels {xpath('IncludeModels')};
	string RedFlagsReport {xpath('RedFlagsReport')};
	string GlobalWatchlistThreshold {xpath('GlobalWatchlistThreshold')};
	boolean DisallowTargusEID3220 {xpath('DisallowTargusEID3220')};//hidden[internal]
	t_DOBMatchOptions DOBMatch {xpath('DOBMatch')};
	boolean IncludeAllRiskIndicators {xpath('IncludeAllRiskIndicators')};
	t_RequireExactMatchInstID RequireExactMatch {xpath('RequireExactMatch')};
	string128 CustomCVIModelName {xpath('CustomCVIModelName')};
	string4 LastSeenThreshold {xpath('LastSeenThreshold')};
	boolean IncludeMIOverride {xpath('IncludeMIOverride')};
	share.t_OptionsForCVICalculation CVICalculationOptions {xpath('CVICalculationOptions')};
	boolean DisallowInsurancePhoneHeaderGateway {xpath('DisallowInsurancePhoneHeaderGateway')};//hidden[internal]
	string6 InstantIDVersion {xpath('InstantIDVersion')};
end;
		
export t_BusinessInstantIDOption := record (share.t_BaseSearchOption)
	boolean IncludeOFAC {xpath('IncludeOFAC')};
	boolean IncludeOtherWatchLists {xpath('IncludeOtherWatchLists')};
	dataset(share.t_StringArrayItem) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(1)};
	boolean IncludeMSOverride {xpath('IncludeMSOverride')};
	boolean IncludeDLVerification {xpath('IncludeDLVerification')};
	boolean ExcludeWatchLists {xpath('ExcludeWatchLists')};
	boolean IncludeOFACOnly {xpath('IncludeOFACOnly')};
	boolean PoBoxCompliance {xpath('PoBoxCompliance')};
	t_BusinessInstantIDModels IncludeModels {xpath('IncludeModels')};
	string GlobalWatchlistThreshold {xpath('GlobalWatchlistThreshold')};
	boolean DisallowTargusEID3220 {xpath('DisallowTargusEID3220')};//hidden[internal]
	string32 AttributesVersionRequest {xpath('AttributesVersionRequest')};
	boolean IncludeAllRiskIndicators {xpath('IncludeAllRiskIndicators')};
end;
		
export t_ChargebackDefenderOption := record (share.t_BaseSearchOption)
	t_CBDModels IncludeModels {xpath('IncludeModels')};
	dataset(share.t_StringArrayItem) RequestedAttributeGroups {xpath('RequestedAttributeGroups/Name'), MAXCOUNT(1)};
end;
		
export t_VerifiedInput := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	string SSN {xpath('SSN')};
	string HomePhone {xpath('HomePhone')};
	share.t_Date DOB {xpath('DOB')};
	share.t_MaskableDate MaskedDOB {xpath('MaskedDOB')};
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
end;
		
export t_CBDVerifiedInput := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
end;
		
export t_InputCorrected := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	string SSN {xpath('SSN')};
	string HomePhone {xpath('HomePhone')};
	share.t_Date DOB {xpath('DOB')};
end;
		
export t_CBDInputCorrected := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	string Phone10 {xpath('Phone10')};
	string SSN {xpath('SSN')};
end;
		
export t_NewAreaCode := record
	string AreaCode {xpath('AreaCode')};
	share.t_Date EffectiveDate {xpath('EffectiveDate')};
end;
		
export t_IdentityReversePhone := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
end;
		
export t_ChronologyHistory := record
	share.t_Address Address {xpath('Address')};
	string Phone {xpath('Phone')};
	share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
	boolean IsBestAddress {xpath('IsBestAddress')};
end;
		
export t_WatchList := record
	string Table {xpath('Table')};
	string RecordNumber {xpath('RecordNumber')};
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	string Country {xpath('Country')};
	string EntityName {xpath('EntityName')};
	integer Sequence {xpath('Sequence')};
end;
		
export t_AdditionalLastName := record
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
	string LastName {xpath('LastName')};
end;
		
export t_NameAddressPhone := record
	string Summary {xpath('Summary')};
	string _Type {xpath('Type')};
	string Status {xpath('Status')};
end;
		
export t_DecedentInfo := record
	share.t_Name Name {xpath('Name')};
	share.t_Date DOD {xpath('DOD')};
	share.t_Date DOB {xpath('DOB')};
end;
		
export t_Score := record
	string _Type {xpath('Type')};
	integer Value {xpath('Value')};
	dataset(share.t_RiskIndicator) RiskIndicators {xpath('RiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
end;
		
export t_ScoreSequenced := record
	string _Type {xpath('Type')};
	integer Value {xpath('Value')};
	dataset(share.t_NameValuePair) RiskIndices {xpath('RiskIndices/RiskIndex'), MAXCOUNT(6)};
	dataset(share.t_SequencedRiskIndicator) RiskIndicators {xpath('RiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
end;
		
export t_RISet := record
	string Name {xpath('Name')};
	dataset(share.t_SequencedRiskIndicator) RiskIndicators {xpath('RiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
end;
		
export t_ScoreSequencedRISets := record
	string _Type {xpath('Type')};
	integer Value {xpath('Value')};
	dataset(t_RISet) RiskIndicatorSets {xpath('RiskIndicatorSets/RiskIndicatorSet'), MAXCOUNT(iesp.Constants.Identifier2c.MaxOther)};
end;
		
export t_ScoreHRI := record
	string _Type {xpath('Type')};
	integer Value {xpath('Value')};
	dataset(share.t_RiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
end;
		
export t_ScoreSequencedHRI := record
	string _Type {xpath('Type')};
	integer Value {xpath('Value')};
	dataset(share.t_NameValuePair) RiskIndices {xpath('RiskIndices/RiskIndex'), MAXCOUNT(6)};
	dataset(share.t_SequencedRiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
end;
		
export t_Model := record
	string Name {xpath('Name')};
	dataset(t_Score) Scores {xpath('Scores/Score'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
end;
		
export t_ModelSequenced := record
	string Name {xpath('Name')};
	dataset(t_ScoreSequenced) Scores {xpath('Scores/Score'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
end;
		
export t_ModelSequencedRISets := record
	string Name {xpath('Name')};
	dataset(t_ScoreSequencedRISets) Scores {xpath('Scores/Score'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
end;
		
export t_ModelHRI := record
	string Name {xpath('Name')};
	dataset(t_ScoreHRI) Scores {xpath('Scores/Score'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
end;
		
export t_ModelSequencedHRI := record
	string Name {xpath('Name')};
	dataset(t_ScoreSequencedHRI) Scores {xpath('Scores/Score'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
end;
		
export t_RedFlag := record
	string Name {xpath('Name')};
	dataset(share.t_RiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	dataset(share.t_SequencedRiskIndicator) SeqHighRiskIndicators {xpath('SeqHighRiskIndicators/HighRiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
end;
		
export t_RedFlagsReport := record
	integer Version {xpath('Version')};
	dataset(t_RedFlag) RedFlags {xpath('RedFlags/RedFlag'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
end;
		
export t_InstantIDResult := record
	t_InstantIDSearchBy InputEcho {xpath('InputEcho')};
	string UniqueId {xpath('UniqueId')};
	t_VerifiedInput VerifiedInput {xpath('VerifiedInput')};
	boolean DOBVerified {xpath('DOBVerified')};
	integer NameAddressSSNSummary {xpath('NameAddressSSNSummary')};
	t_NameAddressPhone NameAddressPhone {xpath('NameAddressPhone')};
	integer ComprehensiveVerificationIndex {xpath('ComprehensiveVerificationIndex')};
	dataset(share.t_RiskIndicator) RiskIndicators {xpath('RiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	dataset(share.t_SequencedRiskIndicator) SeqRiskIndicators {xpath('SeqRiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	dataset(share.t_RiskIndicator) PotentialFollowupActions {xpath('PotentialFollowupActions/FollowupAction'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	share.t_ComprehensiveVerificationStruct ComprehensiveVerification {xpath('ComprehensiveVerification')};
	share.t_CustomComprehensiveVerificationStruct CustomComprehensiveVerification {xpath('CustomComprehensiveVerification')};
	t_InputCorrected InputCorrected {xpath('InputCorrected')};
	t_NewAreaCode NewAreaCode {xpath('NewAreaCode')};
	t_IdentityReversePhone ReversePhone {xpath('ReversePhone')};
	string PhoneOfNameAddress {xpath('PhoneOfNameAddress')};
	share.t_SSNInfo SSNInfo {xpath('SSNInfo')};
	dataset(t_ChronologyHistory) ChronologyHistories {xpath('ChronologyHistories/ChronologyHistory'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
	dataset(share.t_Name) AKAs {xpath('AKAs/AKA'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
	t_WatchList WatchList {xpath('WatchList')};
	dataset(t_WatchList) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(iesp.Constants.Identifier2c.MaxWatchlists)};
	string AdditionalScore1 {xpath('AdditionalScore1')};
	string AdditionalScore2 {xpath('AdditionalScore2')};
	share.t_Name CurrentName {xpath('CurrentName')};
	dataset(t_AdditionalLastName) AdditionalLastNames {xpath('AdditionalLastNames/AdditionalLastName'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
	dataset(t_Model) Models {xpath('Models/Model'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
	dataset(t_ModelSequenced) ModelsSeq {xpath('ModelsSeq/Model'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
	t_RedFlagsReport RedFlagsReport {xpath('RedFlagsReport')};
	boolean PassportValidated {xpath('PassportValidated')};
	integer FoundSSNCount {xpath('FoundSSNCount')};
	t_DecedentInfo DecedentInfo {xpath('DecedentInfo')};
	integer DOBMatchLevel {xpath('DOBMatchLevel')};
	boolean SSNFoundForLexID {xpath('SSNFoundForLexID')};
	boolean AddressPOBox {xpath('AddressPOBox')};
	boolean AddressCMRA {xpath('AddressCMRA')};
	string6 InstantIDVersion {xpath('InstantIDVersion')};
end;
		
export t_InstantIDResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_InstantIDResult Result {xpath('Result')};
end;
		
export t_PersonInputBlock := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	string SSN {xpath('SSN')};
	string Phone10 {xpath('Phone10')};
	share.t_Date DOB {xpath('DOB')};
end;
		
export t_VerifiedInputBlock := record (t_PersonInputBlock)
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
end;
		
export t_AlternateAddress := record
	share.t_Address Address {xpath('Address')};
	string Phone10 {xpath('Phone10')};
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
	boolean IsBestAddress {xpath('IsBestAddress')};
end;
		
export t_PersonVerificationIndicators := record
	boolean Name {xpath('Name')};
	boolean Address {xpath('Address')};
	boolean Phone10 {xpath('Phone10')};
	boolean SSN {xpath('SSN')};
	boolean DOB {xpath('DOB')};
end;
		
export t_FollowupAction := record
	string Action {xpath('Action')};
	string Description {xpath('Description')};
end;
		
export t_AlternateName := record
	share.t_Name Name {xpath('Name')};
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
end;
		
export t_CompanyNameAddress := record
	string CompanyName {xpath('CompanyName')};
	share.t_Address Address {xpath('Address')};
end;
		
export t_AuthorizedRepresentativeResults := record
	t_PersonVerificationIndicators VerificationIndicators {xpath('VerificationIndicators')};
	t_PersonInputBlock VerifiedInput {xpath('VerifiedInput')};
	t_VerifiedInputBlock VerifiedInput2 {xpath('VerifiedInput2')};
	string NameAddressSSNSummary {xpath('NameAddressSSNSummary')};
	string NameAddressPhoneSummary {xpath('NameAddressPhoneSummary')};
	string ComprehensiveVerificationIndex {xpath('ComprehensiveVerificationIndex')};
	string AdditionalScore1 {xpath('AdditionalScore1')};
	string AdditionalScore2 {xpath('AdditionalScore2')};
	dataset(share.t_RiskIndicator) RiskIndicators {xpath('RiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	dataset(share.t_SequencedRiskIndicator) SeqRiskIndicators {xpath('SeqRiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	dataset(t_FollowupAction) FollowupActions {xpath('FollowupActions/FollowupAction'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	t_PersonInputBlock InputCorrected {xpath('InputCorrected')};
	string AreaCodeSplitFlag {xpath('AreaCodeSplitFlag')};
	t_NewAreaCode NewAreaCode {xpath('NewAreaCode')};
	t_IdentityReversePhone ReversePhone {xpath('ReversePhone')};
	string PhoneOfNameAddress {xpath('PhoneOfNameAddress')};
	share.t_SSNInfo SSNInfo {xpath('SSNInfo')};
	dataset(t_AlternateAddress) AlternateAddressPhones {xpath('AlternateAddressPhones/AddressPhone'), MAXCOUNT(iesp.Constants.Identifier2c.MaxOther)};
	dataset(t_AlternateName) AKAs {xpath('AKAs/AKA'), MAXCOUNT(iesp.Constants.Identifier2c.MaxOther)};
	t_WatchList WatchListMatch {xpath('WatchListMatch')};
	dataset(t_WatchList) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(iesp.Constants.Identifier2c.MaxWatchlists)};
	t_DecedentInfo DecedentInfo {xpath('DecedentInfo')};
	integer FoundSSNCount {xpath('FoundSSNCount')};
end;
		
export t_BestCompanyData := record
	string CompanyName {xpath('CompanyName')};
	integer NameScore {xpath('NameScore')};
	share.t_Address Address {xpath('Address')};
	string Phone10 {xpath('Phone10')};
	string FEIN {xpath('FEIN')};
	share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
end;
		
export t_CompanyResults := record
	string BusinessId {xpath('BusinessId')};
	string SOSFilingName {xpath('SOSFilingName')};
	share.t_CompanyVerificationIndicators VerificationIndicators {xpath('VerificationIndicators')};
	share.t_CompanyVerificationData VerifiedInput {xpath('VerifiedInput')};
	integer NameAddressPhoneIndicator {xpath('NameAddressPhoneIndicator')};
	integer NameAddressFEINIndicator {xpath('NameAddressFEINIndicator')};
	integer NameAddressSSNIndicator {xpath('NameAddressSSNIndicator')};
	integer BusinessVerificationIndicator {xpath('BusinessVerificationIndicator')};
	string SICCode {xpath('SICCode')};
	string NAICSCode {xpath('NAICSCode')};
	string BusinessDescription {xpath('BusinessDescription')};
	string AdditionalScore1 {xpath('AdditionalScore1')};
	string AssitionalScore2 {xpath('AssitionalScore2')};
	dataset(share.t_RiskIndicator) RiskIndicators {xpath('RiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	dataset(share.t_SequencedRiskIndicator) SeqRiskIndicators {xpath('SeqRiskIndicators/RiskIndicator'), MAXCOUNT(iesp.Constants.Identifier2c.MaxRiskIndicators)};
	t_BestCompanyData InputCorrected {xpath('InputCorrected')};
	t_CompanyNameAddress NameAddressOfPhone {xpath('NameAddressOfPhone')};
	string PhoneOfNameAddress {xpath('PhoneOfNameAddress')};
	dataset(t_CompanyNameAddress) FEINMatchResults {xpath('FEINMatchResults/FEINMatchResult'), MAXCOUNT(iesp.Constants.Identifier2c.MaxOther)};
	string AddressType {xpath('AddressType')};
	string PhoneType {xpath('PhoneType')};
	integer BankruptcyCount {xpath('BankruptcyCount')};
	t_CompanyNameAddress RecentBankruptcyNameAddress {xpath('RecentBankruptcyNameAddress')};
	share.t_Date RecentBankruptcyFilingDate {xpath('RecentBankruptcyFilingDate')};
	string RecentBankruptcyType {xpath('RecentBankruptcyType')};
	string RecentLienType {xpath('RecentLienType')};
	integer UnreleasedLienCounter {xpath('UnreleasedLienCounter')};
	t_CompanyNameAddress RecentLienNameAddress {xpath('RecentLienNameAddress')};
	share.t_Date RecentLienFilingDate {xpath('RecentLienFilingDate')};
	integer ReleasedLienCounter {xpath('ReleasedLienCounter')};
	t_WatchList WatchListMatch {xpath('WatchListMatch')};
	dataset(t_WatchList) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(iesp.Constants.Identifier2c.MaxWatchlists)};
end;
		
export t_BusinessInstantIDResult := record
	t_BusinessInstantIDSearchBy InputEcho {xpath('InputEcho')};
	t_AuthorizedRepresentativeResults AuthorizedRepresentativeResults {xpath('AuthorizedRepresentativeResults')};
	t_CompanyResults CompanyResults {xpath('CompanyResults')};
	integer AuthorizedRepresentativeRelationshipToCompany {xpath('AuthorizedRepresentativeRelationshipToCompany')};
	integer DistHomeAddressToBusinessAddress {xpath('DistHomeAddressToBusinessAddress')};
	integer DistHomePhoneToBusinessAddress {xpath('DistHomePhoneToBusinessAddress')};
	integer DistHomeAddressToBusinessPhone {xpath('DistHomeAddressToBusinessPhone')};
	integer DistHomePhoneToBusinessPhone {xpath('DistHomePhoneToBusinessPhone')};
	integer DistHomePhoneToHomeAddress {xpath('DistHomePhoneToHomeAddress')};
	integer DistBusinessPhoneToBusinessAddress {xpath('DistBusinessPhoneToBusinessAddress')};
	dataset(t_Model) Models {xpath('Models/Model'), MAXCOUNT(1)};
	dataset(t_ModelSequenced) ModelsSeq {xpath('ModelsSeq/Model'), MAXCOUNT(1)};
	dataset(share.t_NameValuePair) Attributes {xpath('Attributes/Attribute'), MAXCOUNT(1)};
end;
		
export t_BusinessInstantIDResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_BusinessInstantIDResult Result {xpath('Result')};
end;
		
export t_CBDMainResult := record
	t_CBDVerifiedInput VerifiedInput {xpath('VerifiedInput')};
	t_CBDInputCorrected InputCorrected {xpath('InputCorrected')};
	string PhoneOfNameAddress {xpath('PhoneOfNameAddress')};
	string PhoneType {xpath('PhoneType')};
	string DwellingType {xpath('DwellingType')};
	string SIC {xpath('SIC')};
	string SSNVerificationIndicator {xpath('SSNVerificationIndicator')};
	string PhoneVerificationIndicator {xpath('PhoneVerificationIndicator')};
	string NameAddressSSNSummary {xpath('NameAddressSSNSummary')};
	string NameAddressPhoneSummary {xpath('NameAddressPhoneSummary')};
	t_NewAreaCode NewAreaCode {xpath('NewAreaCode')};
end;
		
export t_IPIDResult := record
	string AreaCode {xpath('AreaCode')};
	string RoutingType {xpath('RoutingType')};
	string SecondLevelDomain {xpath('SecondLevelDomain')};
	string Continent {xpath('Continent')};
	string TopLevelDomain {xpath('TopLevelDomain')};
	string Zip {xpath('Zip')};
	string State {xpath('State')};
	string Country {xpath('Country')};
end;
		
export t_CBDResult := record
	t_ChargebackDefenderSearchBy InputEcho {xpath('InputEcho')};
	t_CBDMainResult BillTo {xpath('BillTo')};
	t_CBDMainResult ShipTo {xpath('ShipTo')};
	t_IPIDResult IPAddressID {xpath('IPAddressID')};
	dataset(t_Model) Models {xpath('Models/Model'), MAXCOUNT(1)};
	dataset(t_ModelSequencedRISets) Models2 {xpath('Models2/Model'), MAXCOUNT(1)};
	dataset(share.t_AttributeGroup) AttributeGroups {xpath('AttributeGroups/AttributeGroup'), MAXCOUNT(1)};
end;
		
export t_ChargebackDefenderResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_CBDResult Result {xpath('Result')};
end;
		
export t_IPIDSearchBy := record
	string IPAddress {xpath('IPAddress')};
end;
		
export t_IPIDOption := record (share.t_BaseSearchOption)
end;
		
export t_IPIDStandaloneResult := record
	t_IPIDSearchBy InputEcho {xpath('InputEcho')};
	t_IPIDResult IPAddressID {xpath('IPAddressID')};
end;
		
export t_IPAddressIDResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_IPIDStandaloneResult Result {xpath('Result')};
end;
		
export t_InstantIDModelSearchBy := record
	share.t_Name Name {xpath('Name')};
	share.t_Address Address {xpath('Address')};
	share.t_Date DOB {xpath('DOB')};
	integer Age {xpath('Age')};
	string SSN {xpath('SSN')};
	string SSNLast4 {xpath('SSNLast4')};
	string DriverLicenseNumber {xpath('DriverLicenseNumber')};
	string2 DriverLicenseState {xpath('DriverLicenseState')};
	string IPAddress {xpath('IPAddress')};
	string HomePhone {xpath('HomePhone')};
	string WorkPhone {xpath('WorkPhone')};
	boolean UseDOBFilter {xpath('UseDOBFilter')};
	integer DOBRadius {xpath('DOBRadius')};
end;
		
export t_ConsumerVerificationIndex := record
	boolean IncludeCVI {xpath('IncludeCVI')};
	boolean IncludeNAP {xpath('IncludeNAP')};
	boolean IncludeNAS {xpath('IncludeNAS')};
end;
		
export t_InstantIDModelIncludes := record (t_InstantIDModels)
	t_ConsumerVerificationIndex CVIModel {xpath('CVIModel')};
end;
		
export t_InstantIDModelOption := record (share.t_BaseOption)
	boolean IncludeOFAC {xpath('IncludeOFAC')};
	boolean IncludeOtherWatchLists {xpath('IncludeOtherWatchLists')};
	dataset(share.t_StringArrayItem) WatchLists {xpath('WatchLists/WatchList'), MAXCOUNT(1)};
	boolean IncludeMSOverride {xpath('IncludeMSOverride')};
	boolean IncludeDLVerification {xpath('IncludeDLVerification')};
	boolean DisallowTargusEID3220 {xpath('DisallowTargusEID3220')};//hidden[internal]
	boolean IncludeReasonCodes {xpath('IncludeReasonCodes')};
	boolean ExcludeWatchLists {xpath('ExcludeWatchLists')};
	boolean IncludeOFACOnly {xpath('IncludeOFACOnly')};
	boolean PoBoxCompliance {xpath('PoBoxCompliance')};
	t_InstantIDModelIncludes IncludeModels {xpath('IncludeModels')};
end;
		
export t_InstantIDModelResult := record
	t_InstantIDSearchBy InputEcho {xpath('InputEcho')};
	dataset(t_Model) Models {xpath('Models/Model'), MAXCOUNT(1)};
	dataset(t_ModelHRI) ModelsWithHRI {xpath('ModelsWithHRI/Model'), MAXCOUNT(1)};
	dataset(t_ModelSequencedHRI) ModelsSeq {xpath('ModelsSeq/Model'), MAXCOUNT(1)};
	boolean DOBVerified {xpath('DOBVerified')};
end;
		
export t_InstantIDModelResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_InstantIDModelResult Result {xpath('Result')};
end;
		
export t_BusinessInstantIDModelSearchBy := record (t_BusinessInstantIDSearchBy)
end;
		
export t_BusinessInstantIDModelIncludes := record (t_BusinessInstantIDModels)
	dataset(t_ModelRequest) ModelRequests {xpath('ModelRequests/ModelRequest'), MAXCOUNT(1)};
end;
		
export t_BusinessInstantIDModelOption := record (share.t_BaseOption)
	boolean IncludeOFAC {xpath('IncludeOFAC')};
	boolean IncludeOtherWatchLists {xpath('IncludeOtherWatchLists')};
	boolean PoBoxCompliance {xpath('PoBoxCompliance')};
	t_BusinessInstantIDModelIncludes IncludeModels {xpath('IncludeModels')};
end;
		
export t_BusinessInstantIDModelResult := record
	t_BusinessInstantIDModelSearchBy InputEcho {xpath('InputEcho')};
	dataset(t_ModelHRI) ModelsWithHRI {xpath('ModelsWithHRI/Model'), MAXCOUNT(1)};
end;
		
export t_BusinessInstantIDModelResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_BusinessInstantIDModelResult Result {xpath('Result')};
end;
		
export t_SimpleAddressHistory := record
	share.t_Name Resident {xpath('Resident')};
	share.t_Address Address {xpath('Address')};
	share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	share.t_Date DateLastSeen {xpath('DateLastSeen')};
	integer Sequence {xpath('Sequence')};
end;
		
export t_InstantIDWithHistoryResult := record (t_InstantIDResult)
	dataset(share.t_Name) AKAHistories {xpath('AKAHistories/AKA'), MAXCOUNT(iesp.constants.Identifier2c.MaxOther)};
	dataset(t_SimpleAddressHistory) AddressHistories {xpath('AddressHistories/AddressHistory'), MAXCOUNT(1)};
end;
		
export t_InstantIDWithHistoryResponse := record
	share.t_ResponseHeader _Header {xpath('Header')};
	t_InstantIDWithHistoryResult Result {xpath('Result')};
end;
		
export t_InstantIDRequest := record (share.t_BaseRequest)
	t_InstantIDOption2 Options {xpath('Options')};
	t_InstantIDSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_BusinessInstantIDRequest := record (share.t_BaseRequest)
	t_BusinessInstantIDOption Options {xpath('Options')};
	t_BusinessInstantIDSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_ChargebackDefenderRequest := record (share.t_BaseRequest)
	t_ChargebackDefenderOption Options {xpath('Options')};
	t_ChargebackDefenderSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_InstantIDWithHistoryRequest := record (share.t_BaseRequest)
	t_InstantIDOption Options {xpath('Options')};
	t_InstantIDSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_IPAddressIDRequest := record (share.t_BaseRequest)
	t_IPIDSearchBy SearchBy {xpath('SearchBy')};
	t_IPIDOption Options {xpath('Options')};
end;
		
export t_InstantIDModelRequest := record (share.t_BaseRequest)
	t_InstantIDModelOption Options {xpath('Options')};
	t_InstantIDModelSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_BusinessInstantIDModelRequest := record (share.t_BaseRequest)
	t_BusinessInstantIDModelOption Options {xpath('Options')};
	t_BusinessInstantIDModelSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_InstantIDResponseEx := record
	t_InstantIDResponse response {xpath('response')};
end;
		
export t_BusinessInstantIDResponseEx := record
	t_BusinessInstantIDResponse response {xpath('response')};
end;
		
export t_ChargebackDefenderResponseEx := record
	t_ChargebackDefenderResponse response {xpath('response')};
end;
		
export t_IPAddressIDResponseEx := record
	t_IPAddressIDResponse response {xpath('response')};
end;
		
export t_InstantIDModelResponseEx := record
	t_InstantIDModelResponse response {xpath('response')};
end;
		
export t_BusinessInstantIDModelResponseEx := record
	t_BusinessInstantIDModelResponse response {xpath('response')};
end;
		
export t_InstantIDWithHistoryResponseEx := record
	t_InstantIDWithHistoryResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from instantid.xml. ***/
/*===================================================*/

