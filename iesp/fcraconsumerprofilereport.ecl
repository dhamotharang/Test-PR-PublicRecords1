/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from fcraconsumerprofilereport.xml. ***/
/*===================================================*/

import iesp;

export fcraconsumerprofilereport := MODULE
			
export t_ConsumerProfileOptions := record (iesp.share.t_BaseOption)
	boolean CAInPersonApplication {xpath('CAInPersonApplication')};
	string2 StateLawException {xpath('StateLawException')};
	string50 IntendedPurpose {xpath('IntendedPurpose')}; //values['Application','Prescreening','Portfolio Review','Insurance Application','Insurance Portfolio Review','Disclosure','Government','Collections','Tenant Screening','Healthcare Credit Transaction','Healthcare Legitimate Business Need','Rental Car Loss Damage Waiver','Employee or Volunteer Screening','Written Consent Prequalification','Rental Car','Written Consent','Child Support','Demand Deposit','Written Consent Direct to Consumer','Credit Application','']
	string20 FFDOptionsMask {xpath('FFDOptionsMask')};//hidden[ecl_only]
end;
		
export t_ConsumerProfileReportBy := record
	string12 UniqueId {xpath('UniqueId')};
	iesp.share.t_Name Name {xpath('Name')};
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DOB {xpath('DOB')};
	string9 SSN {xpath('SSN')};
	string10 Phone10 {xpath('Phone10')};
end;
		
export t_ConsumerProfileInformation := record
	string12 UniqueId {xpath('UniqueId')};
	iesp.share.t_Name Name {xpath('Name')};
	string9 SSN {xpath('SSN')};
	iesp.share.t_MaskableDate DOB {xpath('DOB')};
	iesp.share.t_Address Address {xpath('Address')};
	boolean IsDisputed {xpath('IsDisputed')};//hidden[internal]
	dataset(iesp.share_fcra.t_StatementIdRec) StatementIds {xpath('StatementIdRecs/StatementIdRec'), MAXCOUNT(iesp.Constants.MaxConsumerStatementIds)};
end;
		
export t_ConsumerProfileVerification := record
	string2 Code {xpath('Code')};
	string150 Description {xpath('Description')};
end;
		
export t_ConsumerProfileInputConfirmation := record
	t_ConsumerProfileVerification SSNVerification {xpath('SSNVerification')};
	t_ConsumerProfileVerification AddressVerification {xpath('AddressVerification')};
	t_ConsumerProfileVerification DOBVerification {xpath('DOBVerification')};
	t_ConsumerProfileVerification PhoneVerification {xpath('PhoneVerification')};
end;
		
export t_ConsumerProfileAddressHistory := record
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
	boolean IsDisputed {xpath('IsDisputed')};//hidden[internal]
	dataset(iesp.share_fcra.t_StatementIdRec) StatementIds {xpath('StatementIdRecs/StatementIdRec'), MAXCOUNT(iesp.Constants.MaxConsumerStatementIds)};
end;
		
export t_ConsumerProfileAlert := record
	string4 Code {xpath('Code')};
	string150 Description {xpath('Description')};
	string500 Message {xpath('Message')};
end;
		
export t_ConsumerProfileAKA := record (iesp.share.t_Name)
	boolean IsDisputed {xpath('IsDisputed')};//hidden[internal]
	dataset(iesp.share_fcra.t_StatementIdRec) StatementIds {xpath('StatementIdRecs/StatementIdRec'), MAXCOUNT(iesp.Constants.MaxConsumerStatementIds)};
end;
		
export t_ConsumerProfileResult := record
	boolean isBillable {xpath('isBillable')};//hidden[internal]
	t_ConsumerProfileInformation ConsumerInformation {xpath('ConsumerInformation')};
	dataset(t_ConsumerProfileAKA) AKAs {xpath('AKAs/AKA'), MAXCOUNT(iesp.Constants.ConsumerProfile.MAX_COUNT_AKAS)};
	t_ConsumerProfileInputConfirmation InputConfirmation {xpath('InputConfirmation')};
	string1 AddressStability {xpath('AddressStability')};
	dataset(t_ConsumerProfileAddressHistory) AddressHistories {xpath('AddressHistories/AddressHistory'), MAXCOUNT(iesp.Constants.ConsumerProfile.MAX_COUNT_ADDR_HIST)};
	iesp.share.t_SSNInfo SSNInfo {xpath('SSNInfo')};
	dataset(iesp.share.t_RiskIndicator) HighRiskIndicators {xpath('HighRiskIndicators/HighRiskIndicator'), MAXCOUNT(iesp.Constants.MaxCountHRI)};
	string2000 ConsumerStatement {xpath('ConsumerStatement')};
	dataset(t_ConsumerProfileAlert) Alerts {xpath('Alerts/Alert'), MAXCOUNT(iesp.Constants.ConsumerProfile.MAX_COUNT_ALERTS)};
	boolean IsDisputed {xpath('IsDisputed')};//hidden[internal]
	dataset(iesp.share_fcra.t_StatementIdRec) StatementIds {xpath('StatementIdRecs/StatementIdRec'), MAXCOUNT(iesp.Constants.MaxConsumerStatementIds)};
end;
		
export t_ConsumerProfileReportResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	t_ConsumerProfileResult Result {xpath('Result')};
	dataset(iesp.share_fcra.t_ConsumerStatement) ConsumerStatements {xpath('ConsumerStatements/ConsumerStatement'), MAXCOUNT(iesp.Constants.MaxConsumerStatements)};
end;
		
export t_FCRAConsumerProfileReportRequest := record (iesp.share.t_BaseRequest)
	t_ConsumerProfileOptions Options {xpath('Options')};
	t_ConsumerProfileReportBy ReportBy {xpath('ReportBy')};
end;
		
export t_FCRAConsumerProfileReportResponseEx := record
	t_ConsumerProfileReportResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from fcraconsumerprofilereport.xml. ***/
/*===================================================*/

