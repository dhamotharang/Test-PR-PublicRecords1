/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from midexrecordsearch.xml. ***/
/*===================================================*/

import iesp;
export midexrecordsearch := MODULE
			
export t_MIDEXRecordSearchOption := record (iesp.share.t_BaseSearchOption)
	integer ReturnCount {xpath('ReturnCount')};
	integer StartingRecord {xpath('StartingRecord')};
end;
		
export t_MIDEXRecordSearchAlertInput := record
	boolean EnableAlert {xpath('EnableAlert')};
	integer AlertVersion {xpath('AlertVersion')};
	boolean ReturnAllRecords {xpath('ReturnAllRecords')};
	dataset(iesp.midex_share.t_AlertHash) Hashes {xpath('Hashes/Hash'), MAXCOUNT(iesp.Constants.MIDEX.MAX_COUNT_SEARCH_RESPONSE_RECORDS)};
end;
		
export t_MIDEXRecordSearchBy := record
	string UniqueId {xpath('UniqueId')};
	iesp.share.t_Name Name {xpath('Name')};
	string9 SSN {xpath('SSN')};
	string4 SSNLast4 {xpath('SSNLast4')};
	string9 TIN {xpath('TIN')};
	iesp.share.t_Date DOB {xpath('DOB')};
	iesp.share.t_Address Address {xpath('Address')};
	string CompanyName {xpath('CompanyName')};
	string Phone10 {xpath('Phone10')};
	string LicenseNumber {xpath('LicenseNumber')};
	string LicenseState {xpath('LicenseState')};
	string MIDEXReportNumber {xpath('MIDEXReportNumber')};
	string NMLSId {xpath('NMLSId')};
	iesp.share.t_Date StartLoadDate {xpath('StartLoadDate')};
end;
		
export t_AddressWithDates := record
	iesp.share.t_Address Address {xpath('Address')};
	iesp.share.t_Date DateFirstSeen {xpath('DateFirstSeen')};
	iesp.share.t_Date DateLastSeen {xpath('DateLastSeen')};
end;
		
export t_MIDEXReportNumbers := record
	string ReportNumber {xpath('ReportNumber')};
	string RecordType {xpath('RecordType')};
end;
		
export t_MIDEXSearchRecordDetail := record
	iesp.share.t_Name Name {xpath('Name')};
	string50 CompanyName {xpath('CompanyName')};
	string ReportNumber {xpath('ReportNumber')};
	string RecordType {xpath('RecordType')};
	dataset(iesp.share.t_NameAndCompany) AKAs {xpath('AKAs/AKA'), MAXCOUNT(iesp.Constants.MIDEX.MAX_COUNT_SEARCH_RESPONSE_AKAS)};
	string SSN {xpath('SSN')};
	string TIN {xpath('TIN')};
	t_AddressWithDates Address {xpath('Address')};
	iesp.midex_share.t_MIDEXLicenseInfo License {xpath('License')};
	dataset(iesp.midex_share.t_NMLSInfo) NMLSs {xpath('NMLSs/NMLSInfo'), MAXCOUNT(iesp.Constants.MIDEX.MAX_COUNT_SEARCH_NMLS)};
	iesp.share.t_Date LoadDate {xpath('LoadDate')};
end;
		
export t_MIDEXRecordSearchRecord := record
	string RecordNumber {xpath('RecordNumber')};
	string12 UniqueId {xpath('UniqueId')};
	string12 BusinessId {xpath('BusinessId')};
	iesp.share.t_BusinessIdentity BusinessIds {xpath('BusinessIds')};
	dataset(t_MIDEXSearchRecordDetail) Details {xpath('Details/Detail'), MAXCOUNT(iesp.Constants.MIDEX.MAX_COUNT_SEARCH_RESPONSE_REPORTNUMBERS)};
end;
		
export t_MIDEXRecordSearchAlertResult := record
	boolean ResultChanged {xpath('ResultChanged')};
	integer AlertVersion {xpath('AlertVersion')};
	dataset(iesp.midex_share.t_AlertHash) Hashes {xpath('Hashes/Hash'), MAXCOUNT(iesp.Constants.MIDEX.MAX_COUNT_SEARCH_RESPONSE_RECORDS)};
end;
		
export t_MIDEXRecordSearchResponse := record
	iesp.share.t_ResponseHeader _Header {xpath('Header')};
	integer RecordCount {xpath('RecordCount')};
	dataset(t_MIDEXRecordSearchRecord) Records {xpath('Records/Record'), MAXCOUNT(iesp.Constants.MIDEX.MAX_COUNT_SEARCH_RESPONSE_RECORDS)};
	t_MIDEXRecordSearchAlertResult AlertResult {xpath('AlertResult')};//hidden[alerting]
end;
		
export t_MIDEXRecordSearchRequest := record (iesp.share.t_BaseRequest)
	t_MIDEXRecordSearchOption Options {xpath('Options')};
	t_MIDEXRecordSearchAlertInput AlertInput {xpath('AlertInput')};//hidden[alerting]
	t_MIDEXRecordSearchBy SearchBy {xpath('SearchBy')};
end;
		
export t_MIDEXRecordSearchResponseEx := record
	t_MIDEXRecordSearchResponse response {xpath('response')};
end;
		

end;

/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from midexrecordsearch.xml. ***/
/*===================================================*/

