#OPTION(persistexpire, 30)
#OPTION(codegen, 'nosmartjoins')
#OPTION(codegen, 'nolookupjoins')

// Defining the ERA to allow for ASOF functionality
ERA reportedby BEFORE(DateFirstSeen=NULL(MIN));
ERA reportedbetween BETWEEN(DateFirstSeen=NULL(MIN), DateLastSeen=NULL(MAX));
FUNCTION: CleanSpaces(STRING s) <= ECL(STD.Str.CleanSpaces(s)) FROM Std RETURNS STRING;


Legal :=  ENTITY
(FLAT(UID(seleid),
  STRING bestultcompanyname,
  STRING bestultfein,
  STRING bestultprimaryrange,
  STRING bestultpredirectional,
  STRING bestultprimaryname,
  STRING bestultaddresssuffix,
  STRING bestultpostdirectional,
  STRING bestultunitdesignation,
  STRING bestultsecondaryrange,
  STRING bestultpostalcity,
  STRING bestultvanitycity,
  STRING bestultstate,
  STRING bestultzip,
  STRING bestultzip4,
  STRING bestultcounty,
  STRING bestultphone,
  INTEGER bestultdatefirstseen,
  INTEGER bestultdatelastseen,
  INTEGER bestultincorporationdate,
  STRING bestultsic,
  STRING bestultnaics,
  STRING bestselecompanyname,
  STRING bestselefein,
  STRING bestseleprimaryrange,
  STRING bestselepredirectional,
  STRING bestseleprimaryname,
  STRING bestseleaddresssuffix,
  STRING bestselepostdirectional,
  STRING bestseleunitdesignation,
  STRING bestselesecondaryrange,
  STRING bestselepostalcity,
  STRING bestselevanitycity,
  STRING bestselestate,
  STRING bestselezip,
  STRING bestselezip4,
  STRING bestselecounty,
  STRING bestselephone,
  DATE bestseledatefirstseen,
  DATE bestseledatelastseen,
  DATE bestseleincorporationdate,
  STRING bestselesic,
  STRING bestselenaics,
  BOOLEAN bestseleisactive,
  BOOLEAN bestseleisdefunct,
  INTEGER ultid,
  INTEGER orgid,
  INTEGER seleid,
  INTEGER proxid,
  INTEGER powid,
  INTEGER dotid,
  INTEGER empid,
  INTEGER score,
  INTEGER weight, 
	INTEGER acctno),
	MODEL(
	  UID,
	  AccountNumbers{acctno},
    bestultcompanyname,
    bestultfein,
    bestultprimaryrange,
    bestultpredirectional,
    bestultprimaryname,
    bestultaddresssuffix,
    bestultpostdirectional,
    bestultunitdesignation,
    bestultsecondaryrange,
    bestultpostalcity,
    bestultvanitycity,
    bestultstate,
    bestultzip,
    bestultzip4,
    bestultcounty,
    bestultphone,
    bestultdatefirstseen,
    bestultdatelastseen,
    bestultincorporationdate,
    bestultsic,
    bestultnaics,
    bestselecompanyname,
    bestselefein,
    bestseleprimaryrange,
    bestselepredirectional,
    bestseleprimaryname,
    bestseleaddresssuffix,
    bestselepostdirectional,
    bestseleunitdesignation,
    bestselesecondaryrange,
    bestselepostalcity,
    bestselevanitycity,
    bestselestate,
    bestselezip,
    bestselezip4,
    bestselecounty,
    bestselephone,
    bestseledatefirstseen,
    bestseledatelastseen,
    bestseleincorporationdate,
    bestselesic,
    bestselenaics,
    bestseleisactive,
    bestseleisdefunct,
    ultid,
    orgid,
    seleid,
    proxid,
    powid,
    dotid,
    empid,
    score,
    weight));




Employer :=  ENTITY
(FLAT(UID(acctno),
	Legal rLegal=UID(seleid),
  STRING dummycode,
  INTEGER acctno, // claim_sep_emp_no in claims
  STRING checkdigit,
  STRING fedno,
  STRING cocd,
  STRING areacd,
  STRING status,
  STRING liabcd,
  DATE datefirstemp,
  DATE dateliabest,
  STRING compyr,
  STRING timelapsecd,
  STRING ownershipcd,
  STRING reinstatedate,
  STRING unitaddeddate,
  DATE liabtermdate,
  STRING dateacquired,
  STRING bkstopcode,
  STRING bankruptcydate,
  STRING legalactioncd,
  STRING letofassessment,
  DATE statusreceiptdate,
  STRING acquiredbyacctno,
  STRING unpaidbalcd,
  STRING warrantsissued,
  STRING datewarrantissued,
  STRING auditdate,
  STRING fieldrepcd,
  STRING datepurged,
  STRING numownssn,
  STRING ownername1,
  STRING ownerssn1,
  STRING ownername2,
  STRING ownerssn2,
  STRING ownername3,
  STRING ownerssn3,
  STRING reconamt,
  STRING unpdbalamt,
  STRING prevchrgamt,
  STRING ownername,
  STRING phonenumber,
  STRING mno,
  STRING mnosic6,
  STRING mnoavgwages,
  STRING flempname,
  STRING slempname,
  STRING fltradename,
  STRING sltradename,
  STRING flstreetaddr,
  STRING slstreetaddr,
  STRING attnof,
  STRING citystate,
  STRING zip,
  STRING altzipcode,
  STRING country,
  STRING leaseclientind,
  STRING aggregateleasingno,
	STRING biscorporatestatus,

  INTEGER ultid,
  INTEGER orgid,
  INTEGER seleid,
  INTEGER proxid,
  INTEGER powid,
  INTEGER dotid,
  INTEGER empid,
  INTEGER score,
  INTEGER weight
	
	/*
  STRING leasesic6,
  STRING leaseavgwages,
  STRING keyaccount,
  STRING relatedaccount,
  STRING accounttype,
  STRING percent,
  STRING ratecode,
  STRING sutacode,
  STRING transferdate,
  STRING employertype,
  STRING annchgadjamt,
  STRING annpremadjamt,
  STRING newsic6,
  STRING sutadumpingind,
  STRING sutainfractiondate,
  STRING sutapenaltyenddate,
  STRING sutabeginyyq,
  STRING sutaendyyq,
  STRING oldcumcontrib,
  STRING cumcontribpaid,
  STRING cumbenchg,
  STRING mostcurrtaxpay,
  STRING annyear,
  STRING anntaxwages,
  STRING anncontribpd,
  STRING annbenchg,
  STRING reserveratio,
  STRING rrcode,
  STRING annyear2,
  STRING anntaxwages2,
  STRING anncontribpd2,
  STRING annbenchg2,
  STRING reserveratio2,
  STRING rrcode2,
  STRING annyear3,
  STRING anntaxwages3,
  STRING anncontribpd3,
  STRING annbenchg3,
  STRING reserveratio3,
  STRING rrcode3,
  STRING annyear4,
  STRING anntaxwages4,
  STRING anncontribpd4,
  STRING annbenchg4,
  STRING reserveratio4,
  STRING rrcode4,
  STRING annyear5,
  STRING anntaxwages5,
  STRING anncontribpd5,
  STRING annbenchg5,
  STRING reserveratio5,
  STRING rrcode5,
  STRING annyear6,
  STRING anntaxwages6,
  STRING anncontribpd6,
  STRING annbenchg6,
  STRING reserveratio6,
  STRING rrcode6,
  STRING qtrsonfile,
  STRING qtryr,
  STRING ratecodeqtrinfo,
  STRING solvencyrate,
  STRING totalwages,
  STRING taxablewages,
  STRING contribdue,
  STRING duedate,
  STRING fmoemp,
  STRING smoemp,
  STRING tmoemp,
  STRING penaltycd,
  STRING nopayrollcd,
  STRING qtrlyunpdcd,
  STRING qtrlymagtapecd,
  STRING jsataxineffect,
  STRING qtrlyrptind,
  STRING qtrlysutadumpind,
  STRING qtrrtnmarker,
  STRING totchg,
  STRING delqcode,
  STRING trans014,
  STRING qtryr2,
  STRING ratecodeqtrinfo2,
  STRING solvencyrate2,
  STRING totalwages2,
  STRING taxablewages2,
  STRING contribdue2,
  STRING duedate2,
  STRING fmoemp2,
  STRING smoemp2,
  STRING tmoemp2,
  STRING penaltycd2,
  STRING nopayrollcd2,
  STRING qtrlyunpdcd2,
  STRING qtrlymagtapecd2,
  STRING jsataxineffect2,
  STRING qtrlyrptind2,
  STRING qtrlysutadumpind2,
  STRING qtrrtnmarker2,
  STRING totchg2,
  STRING delqcode2,
  STRING trans0142,
  STRING qtryr3,
  STRING ratecodeqtrinfo3,
  STRING solvencyrate3,
  STRING totalwages3,
  STRING taxablewages3,
  STRING contribdue3,
  STRING duedate3,
  STRING fmoemp3,
  STRING smoemp3,
  STRING tmoemp3,
  STRING penaltycd3,
  STRING nopayrollcd3,
  STRING qtrlyunpdcd3,
  STRING qtrlymagtapecd3,
  STRING jsataxineffect3,
  STRING qtrlyrptind3,
  STRING qtrlysutadumpind3,
  STRING qtrrtnmarker3,
  STRING totchg3,
  STRING delqcode3,
  STRING trans0143,
  STRING qtryr4,
  STRING ratecodeqtrinfo4,
  STRING solvencyrate4,
  STRING totalwages4,
  STRING taxablewages4,
  STRING contribdue4,
  STRING duedate4,
  STRING fmoemp4,
  STRING smoemp4,
  STRING tmoemp4,
  STRING penaltycd4,
  STRING nopayrollcd4,
  STRING qtrlyunpdcd4,
  STRING qtrlymagtapecd4,
  STRING jsataxineffect4,
  STRING qtrlyrptind4,
  STRING qtrlysutadumpind4,
  STRING qtrrtnmarker4,
  STRING totchg4,
  STRING delqcode4,
  STRING trans0144,
  STRING qtryr5,
  STRING ratecodeqtrinfo5,
  STRING solvencyrate5,
  STRING totalwages5,
  STRING taxablewages5,
  STRING contribdue5,
  STRING duedate5,
  STRING fmoemp5,
  STRING smoemp5,
  STRING tmoemp5,
  STRING penaltycd5,
  STRING nopayrollcd5,
  STRING qtrlyunpdcd5,
  STRING qtrlymagtapecd5,
  STRING jsataxineffect5,
  STRING qtrlyrptind5,
  STRING qtrlysutadumpind5,
  STRING qtrrtnmarker5,
  STRING totchg5,
  STRING delqcode5,
  STRING trans0145,
  STRING qtryr6,
  STRING ratecodeqtrinfo6,
  STRING solvencyrate6,
  STRING totalwages6,
  STRING taxablewages6,
  STRING contribdue6,
  STRING duedate6,
  STRING fmoemp6,
  STRING smoemp6,
  STRING tmoemp6,
  STRING penaltycd6,
  STRING nopayrollcd6,
  STRING qtrlyunpdcd6,
  STRING qtrlymagtapecd6,
  STRING jsataxineffect6,
  STRING qtrlyrptind6,
  STRING qtrlysutadumpind6,
  STRING qtrrtnmarker6,
  STRING totchg6,
  STRING delqcode6,
  STRING trans0146,
  STRING qtryr7,
  STRING ratecodeqtrinfo7,
  STRING solvencyrate7,
  STRING totalwages7,
  STRING taxablewages7,
  STRING contribdue7,
  STRING duedate7,
  STRING fmoemp7,
  STRING smoemp7,
  STRING tmoemp7,
  STRING penaltycd7,
  STRING nopayrollcd7,
  STRING qtrlyunpdcd7,
  STRING qtrlymagtapecd7,
  STRING jsataxineffect7,
  STRING qtrlyrptind7,
  STRING qtrlysutadumpind7,
  STRING qtrrtnmarker7,
  STRING totchg7,
  STRING delqcode7,
  STRING trans0147,
  STRING qtryr8,
  STRING ratecodeqtrinfo8,
  STRING solvencyrate8,
  STRING totalwages8,
  STRING taxablewages8,
  STRING contribdue8,
  STRING duedate8,
  STRING fmoemp8,
  STRING smoemp8,
  STRING tmoemp8,
  STRING penaltycd8,
  STRING nopayrollcd8,
  STRING qtrlyunpdcd8,
  STRING qtrlymagtapecd8,
  STRING jsataxineffect8,
  STRING qtrlyrptind8,
  STRING qtrlysutadumpind8,
  STRING qtrrtnmarker8,
  STRING totchg8,
  STRING delqcode8,
  STRING trans0148,
  STRING qtryr9,
  STRING ratecodeqtrinfo9,
  STRING solvencyrate9,
  STRING totalwages9,
  STRING taxablewages9,
  STRING contribdue9,
  STRING duedate9,
  STRING fmoemp9,
  STRING smoemp9,
  STRING tmoemp9,
  STRING penaltycd9,
  STRING nopayrollcd9,
  STRING qtrlyunpdcd9,
  STRING qtrlymagtapecd9,
  STRING jsataxineffect9,
  STRING qtrlyrptind9,
  STRING qtrlysutadumpind9,
  STRING qtrrtnmarker9,
  STRING totchg9,
  STRING delqcode9,
  STRING trans0149,
  STRING qtryr10,
  STRING ratecodeqtrinfo10,
  STRING solvencyrate10,
  STRING totalwages10,
  STRING taxablewages10,
  STRING contribdue10,
  STRING duedate10,
  STRING fmoemp10,
  STRING smoemp10,
  STRING tmoemp10,
  STRING penaltycd10,
  STRING nopayrollcd10,
  STRING qtrlyunpdcd10,
  STRING qtrlymagtapecd10,
  STRING jsataxineffect10,
  STRING qtrlyrptind10,
  STRING qtrlysutadumpind10,
  STRING qtrrtnmarker10,
  STRING totchg10,
  STRING delqcode10,
  STRING trans01410,
  STRING qtryr11,
  STRING ratecodeqtrinfo11,
  STRING solvencyrate11,
  STRING totalwages11,
  STRING taxablewages11,
  STRING contribdue11,
  STRING duedate11,
  STRING fmoemp11,
  STRING smoemp11,
  STRING tmoemp11,
  STRING penaltycd11,
  STRING nopayrollcd11,
  STRING qtrlyunpdcd11,
  STRING qtrlymagtapecd11,
  STRING jsataxineffect11,
  STRING qtrlyrptind11,
  STRING qtrlysutadumpind11,
  STRING qtrrtnmarker11,
  STRING totchg11,
  STRING delqcode11,
  STRING trans01411,
  STRING qtryr12,
  STRING ratecodeqtrinfo12,
  STRING solvencyrate12,
  STRING totalwages12,
  STRING taxablewages12,
  STRING contribdue12,
  STRING duedate12,
  STRING fmoemp12,
  STRING smoemp12,
  STRING tmoemp12,
  STRING penaltycd12,
  STRING nopayrollcd12,
  STRING qtrlyunpdcd12,
  STRING qtrlymagtapecd12,
  STRING jsataxineffect12,
  STRING qtrlyrptind12,
  STRING qtrlysutadumpind12,
  STRING qtrrtnmarker12,
  STRING totchg12,
  STRING delqcode12,
  STRING trans01412,
  STRING qtryr13,
  STRING ratecodeqtrinfo13,
  STRING solvencyrate13,
  STRING totalwages13,
  STRING taxablewages13,
  STRING contribdue13,
  STRING duedate13,
  STRING fmoemp13,
  STRING smoemp13,
  STRING tmoemp13,
  STRING penaltycd13,
  STRING nopayrollcd13,
  STRING qtrlyunpdcd13,
  STRING qtrlymagtapecd13,
  STRING jsataxineffect13,
  STRING qtrlyrptind13,
  STRING qtrlysutadumpind13,
  STRING qtrrtnmarker13,
  STRING totchg13,
  STRING delqcode13,
  STRING trans01413,
  STRING qtryr14,
  STRING ratecodeqtrinfo14,
  STRING solvencyrate14,
  STRING totalwages14,
  STRING taxablewages14,
  STRING contribdue14,
  STRING duedate14,
  STRING fmoemp14,
  STRING smoemp14,
  STRING tmoemp14,
  STRING penaltycd14,
  STRING nopayrollcd14,
  STRING qtrlyunpdcd14,
  STRING qtrlymagtapecd14,
  STRING jsataxineffect14,
  STRING qtrlyrptind14,
  STRING qtrlysutadumpind14,
  STRING qtrrtnmarker14,
  STRING totchg14,
  STRING delqcode14,
  STRING trans01414,
  STRING qtryr15,
  STRING ratecodeqtrinfo15,
  STRING solvencyrate15,
  STRING totalwages15,
  STRING taxablewages15,
  STRING contribdue15,
  STRING duedate15,
  STRING fmoemp15,
  STRING smoemp15,
  STRING tmoemp15,
  STRING penaltycd15,
  STRING nopayrollcd15,
  STRING qtrlyunpdcd15,
  STRING qtrlymagtapecd15,
  STRING jsataxineffect15,
  STRING qtrlyrptind15,
  STRING qtrlysutadumpind15,
  STRING qtrrtnmarker15,
  STRING totchg15,
  STRING delqcode15,
  STRING trans01415,
  STRING qtryr16,
  STRING ratecodeqtrinfo16,
  STRING solvencyrate16,
  STRING totalwages16,
  STRING taxablewages16,
  STRING contribdue16,
  STRING duedate16,
  STRING fmoemp16,
  STRING smoemp16,
  STRING tmoemp16,
  STRING penaltycd16,
  STRING nopayrollcd16,
  STRING qtrlyunpdcd16,
  STRING qtrlymagtapecd16,
  STRING jsataxineffect16,
  STRING qtrlyrptind16,
  STRING qtrlysutadumpind16,
  STRING qtrrtnmarker16,
  STRING totchg16,
  STRING delqcode16,
  STRING trans01616,
  STRING qtryr17,
  STRING ratecodeqtrinfo17,
  STRING solvencyrate17,
  STRING totalwages17,
  STRING taxablewages17,
  STRING contribdue17,
  STRING duedate17,
  STRING fmoemp17,
  STRING smoemp17,
  STRING tmoemp17,
  STRING penaltycd17,
  STRING nopayrollcd17,
  STRING qtrlyunpdcd17,
  STRING qtrlymagtapecd17,
  STRING jsataxineffect17,
  STRING qtrlyrptind17,
  STRING qtrlysutadumpind17,
  STRING qtrrtnmarker17,
  STRING totchg17,
  STRING delqcode17,
  STRING trans01417,
  STRING qtryr18,
  STRING ratecodeqtrinfo18,
  STRING solvencyrate18,
  STRING totalwages18,
  STRING taxablewages18,
  STRING contribdue18,
  STRING duedate18,
  STRING fmoemp18,
  STRING smoemp18,
  STRING tmoemp18,
  STRING penaltycd18,
  STRING nopayrollcd18,
  STRING qtrlyunpdcd18,
  STRING qtrlymagtapecd18,
  STRING jsataxineffect18,
  STRING qtrlyrptind18,
  STRING qtrlysutadumpind18,
  STRING qtrrtnmarker18,
  STRING totchg18,
  STRING delqcode18,
  STRING trans01418,
  STRING qtryr19,
  STRING ratecodeqtrinfo19,
  STRING solvencyrate19,
  STRING totalwages19,
  STRING taxablewages19,
  STRING contribdue19,
  STRING duedate19,
  STRING fmoemp19,
  STRING smoemp19,
  STRING tmoemp19,
  STRING penaltycd19,
  STRING nopayrollcd19,
  STRING qtrlyunpdcd19,
  STRING qtrlymagtapecd19,
  STRING jsataxineffect19,
  STRING qtrlyrptind19,
  STRING qtrlysutadumpind19,
  STRING qtrrtnmarker19,
  STRING totchg19,
  STRING delqcode19,
  STRING trans01419,
  STRING qtryr20,
  STRING ratecodeqtrinfo20,
  STRING solvencyrate20,
  STRING totalwages20,
  STRING taxablewages20,
  STRING contribdue20,
  STRING duedate20,
  STRING fmoemp20,
  STRING smoemp20,
  STRING tmoemp20,
  STRING penaltycd20,
  STRING nopayrollcd20,
  STRING qtrlyunpdcd20,
  STRING qtrlymagtapecd20,
  STRING jsataxineffect20,
  STRING qtrlyrptind20,
  STRING qtrlysutadumpind20,
  STRING qtrrtnmarker20,
  STRING totchg20,
  STRING delqcode20,
  STRING trans01420,
  STRING citystatezipconcatenated,
  STRING physicaladdressprimaryrange,
  STRING physicaladdresspredirectional,
  STRING physicaladdressprimaryname,
  STRING physicaladdressaddresssuffix,
  STRING physicaladdresspostdirectional,
  STRING physicaladdressunitdesignation,
  STRING physicaladdresssecondaryrange,
  STRING physicaladdresspostalcity,
  STRING physicaladdressvanitycity,
  STRING physicaladdressstate,
  STRING physicaladdresszip,
  STRING physicaladdresszip4,
  STRING physicaladdressdbpc,
  STRING physicaladdresscheckdigit,
  STRING physicaladdressrecordtype,
  STRING physicaladdresscounty,
  STRING physicaladdresslatitude,
  STRING physicaladdresslongitude,
  STRING physicaladdressmsa,
  STRING physicaladdressgeoblock,
  STRING physicaladdressgeomatchcode,
  STRING physicaladdresserrorstatus,
  BOOLEAN physicaladdresscachehit,
  BOOLEAN physicaladdresscleanerhit,
  STRING physicaladdresscleanedaddress,
  STRING physicaladdressinputaddress,
  BOOLEAN physicaladdressnoaddressinput,
  BOOLEAN physicaladdressnoaddresscleanererror,
  STRING physicaladdresserrorcodedescription,
  INTEGER ultid,
  INTEGER orgid,
  INTEGER seleid,
  INTEGER proxid,
  INTEGER powid,
  INTEGER dotid,
  INTEGER empid,
  INTEGER score,
  INTEGER weight,
  INTEGER businessisultinput,
  INTEGER businessisseleinput,
  INTEGER businessisproxinput,
  STRING bestultcompanyname,
  STRING bestultfein,
  STRING bestultprimaryrange,
  STRING bestultpredirectional,
  STRING bestultprimaryname,
  STRING bestultaddresssuffix,
  STRING bestultpostdirectional,
  STRING bestultunitdesignation,
  STRING bestultsecondaryrange,
  STRING bestultpostalcity,
  STRING bestultvanitycity,
  STRING bestultstate,
  STRING bestultzip,
  STRING bestultzip4,
  STRING bestultcounty,
  STRING bestultphone,
  INTEGER bestultdatefirstseen,
  INTEGER bestultdatelastseen,
  INTEGER bestultincorporationdate,
  STRING bestultsic,
  STRING bestultnaics,
  STRING bestselecompanyname,
  STRING bestselefein,
  STRING bestseleprimaryrange,
  STRING bestselepredirectional,
  STRING bestseleprimaryname,
  STRING bestseleaddresssuffix,
  STRING bestselepostdirectional,
  STRING bestseleunitdesignation,
  STRING bestselesecondaryrange,
  STRING bestselepostalcity,
  STRING bestselevanitycity,
  STRING bestselestate,
  STRING bestselezip,
  STRING bestselezip4,
  STRING bestselecounty,
  STRING bestselephone,
  INTEGER bestseledatefirstseen,
  INTEGER bestseledatelastseen,
  INTEGER bestseleincorporationdate,
  STRING bestselesic,
  STRING bestselenaics,
  BOOLEAN bestseleisactive,
  BOOLEAN bestseleisdefunct,
  STRING bestproxcompanyname,
  STRING bestproxfein,
  STRING bestproxprimaryrange,
  STRING bestproxpredirectional,
  STRING bestproxprimaryname,
  STRING bestproxaddresssuffix,
  STRING bestproxpostdirectional,
  STRING bestproxunitdesignation,
  STRING bestproxsecondaryrange,
  STRING bestproxpostalcity,
  STRING bestproxvanitycity,
  STRING bestproxstate,
  STRING bestproxzip,
  STRING bestproxzip4,
  STRING bestproxcounty,
  STRING bestproxphone,
  INTEGER bestproxdatefirstseen,
  INTEGER bestproxdatelastseen,
  INTEGER bestproxincorporationdate,
  STRING bestproxsic,
  STRING bestproxnaics,
  STRING mappininfo,
  INTEGER bipattributesisnew,
  INTEGER bipattributesinactive,
  INTEGER bipattributeshierarchysize,
  STRING ultentitycontextuid,
  STRING seleentitycontextuid,
  STRING proxentitycontextuid,
  INTEGER bizrecid,
  STRING advohitflag,
  STRING advovacancyindicator,
  STRING advothrowbackindicator,
  STRING advoseasonaldeliveryindicator,
  STRING advoseasonalsuppressionstartdate,
  STRING advoseasonalsuppressionenddate,
  STRING advodonotdeliverindicator,
  STRING advocollegeindicator,
  STRING advocollegesuppressionstartdate,
  STRING advocollegesuppressionenddate,
  STRING advoaddressstyle,
  STRING advosimplifyaddresscount,
  STRING advodropindicator,
  STRING advoresidentialorbusinessindicator,
  STRING advoonlywaytogetmailindicator,
  STRING advorecordtypecode,
  STRING advoaddresstype,
  STRING advoaddressusagetype,
  STRING advofirstseendate,
  STRING advolastseendate,
  STRING advovendorfirstreporteddate,
  STRING advovendorlastreporteddate,
  STRING advovacationbegindate,
  STRING advovacationenddate,
  STRING advonumberofcurrentvacationmonths,
  STRING advomaxvacationmonths,
  STRING advovacationperiodscount,
  INTEGER isnotvacantbusinessflag,
  INTEGER ispoboxflag,
  STRING advoresidentialorbusinessindicatordescription,
  STRING biscorporatekey,
  STRING biscorporatestate,
  STRING biscorporateprocessdate,
  STRING bislegalname,
  STRING biscorporatefilingdescription,
  STRING biscorporatestatus,
  STRING biscorporatestatusdate,
  STRING biscorporatestatuscomment,
  STRING biscorporateincorporationdate,
  STRING biscorporateincorporationstate,
  STRING biscorporatefederaltaxid,
  STRING bisorganizationstructuredescription,
  STRING bisprofitindicator,
  STRING bisregisteredagentname,
  STRING bisbiplevel,
  STRING bisenterprisenumber,
  STRING bisbusinessdescription,
  STRING biscompanytype,
  INTEGER bisnumberofemployees,
  STRING bissalesorrevenue,
  INTEGER bissales,
  INTEGER bisearnings,
  INTEGER bisnetworth,
  INTEGER bisassets,
  INTEGER bisliabilities,
  STRING bisupdatedate,
  STRING selestreetaddressconcatenated,
  STRING selestreetaddresscityconcatenated,
  STRING bestseleaddressconcatenated,
  STRING proxstreetaddressconcatenated,
  STRING proxstreetaddresscityconcatenated,
  STRING bestproxaddressconcatenated,
  INTEGER bisgsahasgsa,
  STRING bisgsabiplevel,
  INTEGER selegsaflag,
  INTEGER proxgsaflag
   */
		),
	MODEL(
UID,rLegal,dummycode,acctno,checkdigit,fedno,cocd,areacd,status,liabcd,datefirstemp,dateliabest,compyr,timelapsecd,ownershipcd,reinstatedate,unitaddeddate,liabtermdate,dateacquired,bkstopcode,bankruptcydate,legalactioncd,letofassessment,statusreceiptdate,acquiredbyacctno,unpaidbalcd,warrantsissued,datewarrantissued,auditdate,fieldrepcd,datepurged,numownssn,ownername1,ownerssn1,ownername2,ownerssn2,ownername3,ownerssn3,reconamt,unpdbalamt,prevchrgamt,ownername,phones{phonenumber},mno,mnosic6,mnoavgwages,flempname,slempname,fltradename,sltradename,flstreetaddr,slstreetaddr,attnof,citystate,zip,altzipcode,country,leaseclientind,aggregateleasingno,biscorporatestatus,ultid,orgid,seleid,proxid,powid,dotid,empid,score,weight));

  
Claim :=  ENTITY
(FLAT(UID(bizrecid),
   /*
  STRING claim_ssn,
  STRING col_monetary_determination_id,
  INTEGER claim_bye_ccyymmdd,
  INTEGER claim_eff_ccyymmdd,
  STRING claim_prog_type,
  STRING claim_claim_type,
  INTEGER claim_submit_ccyymmdd,
  STRING claim_submit_method,
  STRING claim_init_add,
  REAL claim_mba,
  REAL claim_wba,
  REAL claim_max_earn_allowed,
  INTEGER claim_weeks,
  */
	Employer rEmployer=UID(acctno),
  INTEGER acctno, // claim_sep_emp_no in claims
  STRING claim_sep_emp_name,
  INTEGER claim_sep_emp_no,
	INTEGER bizrecid,// this joins to trum,
  DATE claim_submit_ccyymmdd
	/*
  STRING claim_decision_code,
  STRING application_id,
  INTEGER seperation_date,
  STRING seperation_reason,
  STRING claim_status,
  STRING col_dba,
  STRING col_company,
  STRING col_address1,
  STRING col_address2,
  STRING col_city,
  STRING col_state,
  STRING col_zip,
  STRING col_mailingaddress1,
  STRING col_mailingaddress2,
  STRING col_mailingcity,
  STRING col_mailingstate,
  STRING col_mailingzip,
  STRING col_data_source,
  STRING claim_type,
  STRING physicaladdressprimaryrange,
  STRING physicaladdresspredirectional,
  STRING physicaladdressprimaryname,
  STRING physicaladdressaddresssuffix,
  STRING physicaladdresspostdirectional,
  STRING physicaladdressunitdesignation,
  STRING physicaladdresssecondaryrange,
  STRING physicaladdresspostalcity,
  STRING physicaladdressvanitycity,
  STRING physicaladdressstate,
  STRING physicaladdresszip,
  STRING physicaladdresszip4,
  STRING physicaladdressdbpc,
  STRING physicaladdresscheckdigit,
  STRING physicaladdressrecordtype,
  STRING physicaladdresscounty,
  STRING physicaladdresslatitude,
  STRING physicaladdresslongitude,
  STRING physicaladdressmsa,
  STRING physicaladdressgeoblock,
  STRING physicaladdressgeomatchcode,
  STRING physicaladdresserrorstatus,
  BOOLEAN physicaladdresscachehit,
  BOOLEAN physicaladdresscleanerhit,
  STRING physicaladdresscleanedaddress,
  STRING physicaladdressinputaddress,
  BOOLEAN physicaladdressnoaddressinput,
  BOOLEAN physicaladdressnoaddresscleanererror,
  STRING physicaladdresserrorcodedescription,
  STRING mailingaddressprimaryrange,
  STRING mailingaddresspredirectional,
  STRING mailingaddressprimaryname,
  STRING mailingaddressaddresssuffix,
  STRING mailingaddresspostdirectional,
  STRING mailingaddressunitdesignation,
  STRING mailingaddresssecondaryrange,
  STRING mailingaddresspostalcity,
  STRING mailingaddressvanitycity,
  STRING mailingaddressstate,
  STRING mailingaddresszip,
  STRING mailingaddresszip4,
  STRING mailingaddressdbpc,
  STRING mailingaddresscheckdigit,
  STRING mailingaddressrecordtype,
  STRING mailingaddresscounty,
  STRING mailingaddresslatitude,
  STRING mailingaddresslongitude,
  STRING mailingaddressmsa,
  STRING mailingaddressgeoblock,
  STRING mailingaddressgeomatchcode,
  STRING mailingaddresserrorstatus,
  BOOLEAN mailingaddresscachehit,
  BOOLEAN mailingaddresscleanerhit,
  STRING mailingaddresscleanedaddress,
  STRING mailingaddressinputaddress,
  BOOLEAN mailingaddressnoaddressinput,
  BOOLEAN mailingaddressnoaddresscleanererror,
  STRING mailingaddresserrorcodedescription,
  INTEGER legalphysicalultid,
  INTEGER legalphysicalorgid,
  INTEGER legalphysicalseleid,
  INTEGER legalphysicalproxid,
  INTEGER legalphysicalpowid,
  INTEGER legalphysicaldotid,
  INTEGER legalphysicalempid,
  INTEGER legalphysicalscore,
  INTEGER legalphysicalweight,
  INTEGER legalmailingultid,
  INTEGER legalmailingorgid,
  INTEGER legalmailingseleid,
  INTEGER legalmailingproxid,
  INTEGER legalmailingpowid,
  INTEGER legalmailingdotid,
  INTEGER legalmailingempid,
  INTEGER legalmailingscore,
  INTEGER legalmailingweight,
  INTEGER dbaphysicalultid,
  INTEGER dbaphysicalorgid,
  INTEGER dbaphysicalseleid,
  INTEGER dbaphysicalproxid,
  INTEGER dbaphysicalpowid,
  INTEGER dbaphysicaldotid,
  INTEGER dbaphysicalempid,
  INTEGER dbaphysicalscore,
  INTEGER dbaphysicalweight,
  INTEGER dbamailingultid,
  INTEGER dbamailingorgid,
  INTEGER dbamailingseleid,
  INTEGER dbamailingproxid,
  INTEGER dbamailingpowid,
  INTEGER dbamailingdotid,
  INTEGER dbamailingempid,
  INTEGER dbamailingscore,
  INTEGER dbamailingweight,
  INTEGER ultid,
  INTEGER orgid,
  INTEGER seleid,
  INTEGER proxid,
  INTEGER powid,
  INTEGER empid,
  INTEGER dotid,
  INTEGER score,
  INTEGER weight,
  INTEGER businessisultinput,
  INTEGER businessisseleinput,
  INTEGER businessisproxinput,
  STRING bestultcompanyname,
  STRING bestultfein,
  STRING bestultprimaryrange,
  STRING bestultpredirectional,
  STRING bestultprimaryname,
  STRING bestultaddresssuffix,
  STRING bestultpostdirectional,
  STRING bestultunitdesignation,
  STRING bestultsecondaryrange,
  STRING bestultpostalcity,
  STRING bestultvanitycity,
  STRING bestultstate,
  STRING bestultzip,
  STRING bestultzip4,
  STRING bestultcounty,
  STRING bestultphone,
  INTEGER bestultdatefirstseen,
  INTEGER bestultdatelastseen,
  INTEGER bestultincorporationdate,
  STRING bestultsic,
  STRING bestultnaics,
  STRING bestselecompanyname,
  STRING bestselefein,
  STRING bestseleprimaryrange,
  STRING bestselepredirectional,
  STRING bestseleprimaryname,
  STRING bestseleaddresssuffix,
  STRING bestselepostdirectional,
  STRING bestseleunitdesignation,
  STRING bestselesecondaryrange,
  STRING bestselepostalcity,
  STRING bestselevanitycity,
  STRING bestselestate,
  STRING bestselezip,
  STRING bestselezip4,
  STRING bestselecounty,
  STRING bestselephone,
  INTEGER bestseledatefirstseen,
  INTEGER bestseledatelastseen,
  INTEGER bestseleincorporationdate,
  STRING bestselesic,
  STRING bestselenaics,
  BOOLEAN bestseleisactive,
  BOOLEAN bestseleisdefunct,
  STRING bestproxcompanyname,
  STRING bestproxfein,
  STRING bestproxprimaryrange,
  STRING bestproxpredirectional,
  STRING bestproxprimaryname,
  STRING bestproxaddresssuffix,
  STRING bestproxpostdirectional,
  STRING bestproxunitdesignation,
  STRING bestproxsecondaryrange,
  STRING bestproxpostalcity,
  STRING bestproxvanitycity,
  STRING bestproxstate,
  STRING bestproxzip,
  STRING bestproxzip4,
  STRING bestproxcounty,
  STRING bestproxphone,
  INTEGER bestproxdatefirstseen,
  INTEGER bestproxdatelastseen,
  INTEGER bestproxincorporationdate,
  STRING bestproxsic,
  STRING bestproxnaics,
  STRING mappininfo,
  INTEGER bipattributesisnew,
  INTEGER bipattributesinactive,
  INTEGER bipattributeshierarchysize,
  STRING ultentitycontextuid,
  STRING seleentitycontextuid,
  STRING proxentitycontextuid,
  INTEGER bizrecid,
  STRING advohitflag,
  STRING advovacancyindicator,
  STRING advothrowbackindicator,
  STRING advoseasonaldeliveryindicator,
  STRING advoseasonalsuppressionstartdate,
  STRING advoseasonalsuppressionenddate,
  STRING advodonotdeliverindicator,
  STRING advocollegeindicator,
  STRING advocollegesuppressionstartdate,
  STRING advocollegesuppressionenddate,
  STRING advoaddressstyle,
  STRING advosimplifyaddresscount,
  STRING advodropindicator,
  STRING advoresidentialorbusinessindicator,
  STRING advoonlywaytogetmailindicator,
  STRING advorecordtypecode,
  STRING advoaddresstype,
  STRING advoaddressusagetype,
  STRING advofirstseendate,
  STRING advolastseendate,
  STRING advovendorfirstreporteddate,
  STRING advovendorlastreporteddate,
  STRING advovacationbegindate,
  STRING advovacationenddate,
  STRING advonumberofcurrentvacationmonths,
  STRING advomaxvacationmonths,
  STRING advovacationperiodscount,
  INTEGER isnotvacantbusinessflag,
  INTEGER ispoboxflag,
  STRING advoresidentialorbusinessindicatordescription,
  STRING biscorporatekey,
  STRING biscorporatestate,
  STRING biscorporateprocessdate,
  STRING bislegalname,
  STRING biscorporatefilingdescription,
  STRING biscorporatestatus,
  STRING biscorporatestatusdate,
  STRING biscorporatestatuscomment,
  STRING biscorporateincorporationdate,
  STRING biscorporateincorporationstate,
  STRING biscorporatefederaltaxid,
  STRING bisorganizationstructuredescription,
  STRING bisprofitindicator,
  STRING bisregisteredagentname,
  STRING bisbiplevel,
  STRING bisenterprisenumber,
  STRING bisbusinessdescription,
  STRING biscompanytype,
  INTEGER bisnumberofemployees,
  STRING bissalesorrevenue,
  INTEGER bissales,
  INTEGER bisearnings,
  INTEGER bisnetworth,
  INTEGER bisassets,
  INTEGER bisliabilities,
  STRING bisupdatedate,
  STRING selestreetaddressconcatenated,
  STRING selestreetaddresscityconcatenated,
  STRING bestseleaddressconcatenated,
  STRING proxstreetaddressconcatenated,
  STRING proxstreetaddresscityconcatenated,
  STRING bestproxaddressconcatenated,
  INTEGER bisgsahasgsa,
  STRING bisgsabiplevel,
  INTEGER selegsaflag,
  INTEGER proxgsaflag*/
		),
	MODEL(UID, rEmployer, claim_submit_ccyymmdd, bizrecid, acctno,claim_sep_emp_name, claim_sep_emp_no));


LegalEmployer :=  ASSOCIATION
(FLAT(
    Legal rLegal=UID(seleid),
    Employer rEmployer=UID(acctno)
    //DATE claim_submit_ccyymmdd
   ));


EmployerClaim :=  ASSOCIATION
(FLAT(
    Employer rEmployer=UID(acctno),
		Claim rClaim=UID(bizrecid)
    //DATE claim_submit_ccyymmdd
   ));


LegalClaim :=  ASSOCIATION
(FLAT(
    Legal rLegal=UID(seleid),
		Claim rClaim=UID(bizrecid)
    //DATE claim_submit_ccyymmdd
   ));
USE FRAUDGovUIKEL.Files.Employer(FLAT,
    Employer(FILTER((UNSIGNED)acctno != 0)),
	  Legal(FILTER((UNSIGNED)acctno != 0)),
		LegalEmployer(FILTER((UNSIGNED)acctno != 0))
	);
USE FraudGovUIKEL.Files.Claims(FLAT, 
  Claim(FILTER((UNSIGNED)claim_sep_emp_no != 0)),
	EmployerClaim(FILTER((UNSIGNED)claim_sep_emp_no != 0)),
	LegalClaim(FILTER((UNSIGNED)claim_sep_emp_no != 0))
	);
/*Logic Statements \ Attr

	Some of these attributs are at the business level, some are at the business legal entity level 
	Should these attributes be in their own entity?
*/
Legal: => AccountNumberCount := COUNT(AccountNumbers);
Legal: => ClaimCount := COUNT(LegalClaim);
Legal: => LegalClaimDateMax := MAX(LegalClaim.rClaim, claim_submit_ccyymmdd);

//Legal: => BisIncorpMSince := MAP(bestseleincorporationdate=NULL(0) => -99998, DAYSBETWEEN(bestseleincorporationdate, bestseledatelastseen));
// Legal: => BisIncorpMSince := DAYSBETWEEN(bestseleincorporationdate, bestseledatelastseen);



	
Employer: => ClaimCount := COUNT(EmployerClaim);
// Employer: => StatusReceiptFirstEmploymentDiff := DAYSBETWEEN(datefirstemp, statusreceiptdate);
// Add flag for if the date is in the last 2 years... and the StatusReceiptFirstEmploymentDiff < 0
Employer: => BusAcctUIDEcho := MAP(fltradename:Null OR flstreetaddr:Null OR zip:Null => -99999,
                                   fltradename:Null OR flstreetaddr:Null OR citystate:Null => -99999,
                                   acctno);
Employer: => BusAcctUltIDAppend := MAP(BusAcctUIDEcho=-99999 => -99999, 
																			 ultid:Null => -99998,
																			 ultid);
Employer: => BusAcctOrgIDAppend := MAP(BusAcctUIDEcho=-99999 => -99999, 
																				orgid:Null => -99998,
																				orgid);
Employer: => BusAcctSeleIDAppend := MAP(BusAcctUIDEcho=-99999 => -99999, 
																			 seleid:Null => -99998,
																			 seleid);
Employer: => BusAcctProxIDAppend := MAP(BusAcctUIDEcho=-99999 => -99999, 
																			 proxid:Null => -99998,
																			 proxid);
Employer: => BusAcctPowIDAppend := MAP(BusAcctUIDEcho=-99999 => -99999, 
																			 powid:Null => -99998,
																			 powid);

																		
// Nate
Employer: => BusAcctNewestUpdateMasterDt := MAP(BusAcctUIDEcho=-99999 => -99999,
																								20190213); // fixme. Need to put in an "lastupdated" date into the entities. Do we keep multiple versions?
Employer: => BusNewestRecordDt := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																			20190213); // fixme
Employer: => BusAcctDtEmployerBeganEcho := MAP(BusAcctUIDEcho=-99999 => -99999,
																							 ISVALIDDATE(datefirstemp) => INTEGER(datefirstemp), // In YYYYMMDD format
																							 -99998);
Employer: => BusAcctTaxLiabEndDtEcho := MAP(BusAcctUIDEcho=-99999 => -99999,
																							 ISVALIDDATE(liabtermdate) => INTEGER(liabtermdate), // In YYYYMMDD format
																							 -99998);																							 
// Employer: => BusNewestTaxLiabStartDt := rLegal.;
// Employer: => BusNewestTaxLiabEndDt := rLegal.NewestTaxLiabEndDt;
// Employer: => BusAcctTaxLiabStartMsince := MAP(BusAcctUIDEcho=-99999 => -99999,
																							// BusAcctTaxLiabStartDtEcho=-99998 => -99998,
																							// MONTHSBETWEEN(BusAcctTaxLiabStartDtEcho, BusAcctNewestRecordDt));
// Employer: => BusOldestTaxLiabStartMsince := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																								// BusOldestTaxLiabDt=-99998 => -99998,
																								// MONTHSBETWEEN(BusOldestTaxLiabStartDt, BusNewestRecordDt));
Employer: => BusAcctOldestUnemClmDt := MAP(BusAcctUIDEcho=-99999 => -99999,
																					 ClaimCount=0 => -99998,
																					 ALL(EmployerClaim.rClaim, NOT ISVALIDDATE(claim_submit_ccyymmdd)) => -99997, // All claim dates are invalid
																					 INTEGER(MIN(EmployerClaim.rClaim, claim_submit_ccyymmdd)));
Employer: => BusOldestUnemClmDt := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																			 rLegal.ClaimCount=0 => -99998,
																			 ALL(LegalClaim.rClaim, NOT ISVALIDDATE(claim_submit_ccyymmdd)) => -99997, // All invalid dates
																			 INTEGER(MIN(LegalClaim.rClaim, claim_submit_ccyymmdd)));
Employer: => BusIncorpDt := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																NOT ISVALIDDATE(rLegal.bestseleincorporationdate) => -99997, // SOS incorp date is invalid
																//DAYSBETWEEN(rLegal.bestseleincorporationdate, BusNewestRecordDt) < 0 => -99998, // No SOS incorporation on file prior to BusNewestRecordDt
																INTEGER(rLegal.bestseleincorporationdate)); // I believe this is the SOS incorporation date
// Employer: => BisIncorpMSince := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																		// BusIncorpDt=-99997 => -99997, // Or unable to calculate
																		//DAYSBETWEEN(rLegal.bestseleincorporationdate, BusNewestRecordDt) < 0 => -99998,
																		// MONTHSBETWEEN(BusIncorpDt, BusNewestRecordDt));
	
	
/* Nicole	*/													
Employer: => BusAcctNewestRecordDt := MAP(BusAcctUIDEcho=-99999 => -99999,
																					20190213);
Employer: => BusAcctStatusTypeEcho := MAP(BusAcctUIDEcho=-99999 => -99999,
																					status:Null => -99998,
																					status); // fixme. Need status from most recent master record																																			
Employer: => BusAcctTaxLiabStartDtEcho := MAP(BusAcctUIDEcho=-99999 => -99999,
																							ISVALIDDATE(dateliabest) => INTEGER(dateliabest),
																							-99998);
Employer: => BusOldestTaxLiabStartDt := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																						BusAcctTaxLiabStartDtEcho=-99998 => -99998,
																						MIN(LegalEmployer.rEmployer,BusAcctTaxLiabStartDtEcho));
Employer: => BusOldestTaxLiabEndDt := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																					BusAcctTaxLiabEndDtEcho=-99998 => -99998,
																					MIN(LegalEmployer.rEmployer,BusAcctTaxLiabEndDtEcho));
Employer: => BusTaxLiabOngoingFlag := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																					BusAcctTaxLiabStartDtEcho=-99998 => -99998,
																					ALL(LegalEmployer.rEmployer, ISVALIDDATE(DATE(BusAcctTaxLiabEndDtEcho))) => 0,
																					1);
Employer: => BusAcctTaxLiabEndMsince := MAP(BusAcctUIDEcho=-99999 => -99999,
																					  BusAcctTaxLiabEndDtEcho=-99998 => -99998,
																						MONTHSBETWEEN(DATE(BusAcctTaxLiabEndDtEcho),DATE(BusAcctNewestRecordDt))); // Needs BusAcctNewestRecordDt to work
//Employer: => BusNewestTaxLiabEndMsince := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
//																					    BusNewestTaxLiabEndDt=-99998 => -99998,
//																						  MONTHSBETWEEN(BusNewestTaxLiabEndDt,BusNewestRecordDt)); // Needs BusNewestTaxLiabEndDt to work
Employer: => BusAcctNewestUnemClmDt := MAP(BusAcctUIDEcho=-99999 => -99999,
																					 ClaimCount=0 => -99998,
																					 ALL(EmployerClaim.rClaim, NOT ISVALIDDATE(claim_submit_ccyymmdd)) => -99997, // All claim dates are invalid
																					 INTEGER(MAX(EmployerClaim.rClaim, claim_submit_ccyymmdd)));
																					 																					 
Employer: => BusNewestUnemClmDt := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
																			 ClaimCount=0 => -99998,
																			 ALL(LegalClaim.rClaim, NOT ISVALIDDATE(claim_submit_ccyymmdd)) => -99997, // All claim dates are invalid
																			 INTEGER(MAX(LegalClaim.rClaim, claim_submit_ccyymmdd)));

Employer: => BusIncorpStatusType := MAP(BusAcctUIDEcho=-99999 OR rLegal:Null => -99999,
                                        DAYSBETWEEN(DATE(BusIncorpDt),DATE(BusNewestRecordDt))<0 => -99998,
																				biscorporatestatus:Null => -99997,
																				biscorporatestatus);



// Extra stuff
// Employer: => LegalClaimDateMax := rLegal.LegalClaimDateMax;

// Claim: => EmployerClaimCount := rEmployer.ClaimCount;
QUERY: showEmployers <= Employer;
QUERY: showLegal <= Legal;
QUERY: showClaims <= Claim;
QUERY: showEmployerClaims <= EmployerClaim;
