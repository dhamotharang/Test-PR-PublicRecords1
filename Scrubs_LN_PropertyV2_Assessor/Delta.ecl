IMPORT SALT311,STD;
EXPORT Delta(DATASET(Layout_Property_Assessor)old_s, DATASET(Layout_Property_Assessor) new_s) := MODULE//Routines to compute the differences between two instances of a file
  SHARED inFieldList := ['ln_fares_id','process_date','vendor_source_flag','current_record','fips_code','state_code','county_name','old_apn','apna_or_pin_number','fares_unformatted_apn','duplicate_apn_multiple_address_id','assessee_name','second_assessee_name','assessee_ownership_rights_code','assessee_relationship_code','assessee_phone_number','tax_account_number','contract_owner','assessee_name_type_code','second_assessee_name_type_code','mail_care_of_name_type_code','mailing_care_of_name','mailing_full_street_address','mailing_unit_number','mailing_city_state_zip','property_full_street_address','property_unit_number','property_city_state_zip','property_country_code','property_address_code','legal_lot_code','legal_lot_number','legal_land_lot','legal_block','legal_section','legal_district','legal_unit','legal_city_municipality_township','legal_subdivision_name','legal_phase_number','legal_tract_number','legal_sec_twn_rng_mer','legal_brief_description','legal_assessor_map_ref','census_tract','record_type_code','ownership_type_code','new_record_type_code','state_land_use_code','county_land_use_code','county_land_use_description','standardized_land_use_code','timeshare_code','zoning','owner_occupied','recorder_document_number','recorder_book_number','recorder_page_number','transfer_date','recording_date','sale_date','document_type','sales_price','sales_price_code','mortgage_loan_amount','mortgage_loan_type_code','mortgage_lender_name','mortgage_lender_type_code','prior_transfer_date','prior_recording_date','prior_sales_price','prior_sales_price_code','assessed_land_value','assessed_improvement_value','assessed_total_value','assessed_value_year','market_land_value','market_improvement_value','market_total_value','market_value_year','homestead_homeowner_exemption','tax_exemption1_code','tax_exemption2_code','tax_exemption3_code','tax_exemption4_code','tax_rate_code_area','tax_amount','tax_year','tax_delinquent_year','school_tax_district1','school_tax_district1_indicator','school_tax_district2','school_tax_district2_indicator','school_tax_district3','school_tax_district3_indicator','lot_size','lot_size_acres','lot_size_frontage_feet','lot_size_depth_feet','land_acres','land_square_footage','land_dimensions','building_area','building_area_indicator','building_area1','building_area1_indicator','building_area2','building_area2_indicator','building_area3','building_area3_indicator','building_area4','building_area4_indicator','building_area5','building_area5_indicator','building_area6','building_area6_indicator','building_area7','building_area7_indicator','year_built','effective_year_built','no_of_buildings','no_of_stories','no_of_units','no_of_rooms','no_of_bedrooms','no_of_baths','no_of_partial_baths','no_of_plumbing_fixtures','garage_type_code','parking_no_of_cars','pool_code','style_code','type_construction_code','foundation_code','building_quality_code','building_condition_code','exterior_walls_code','interior_walls_code','roof_cover_code','roof_type_code','floor_cover_code','water_code','sewer_code','heating_code','heating_fuel_type_code','air_conditioning_code','air_conditioning_type_code','elevator','fireplace_indicator','fireplace_number','basement_code','building_class_code','site_influence1_code','site_influence2_code','site_influence3_code','site_influence4_code','site_influence5_code','amenities1_code','amenities2_code','amenities3_code','amenities4_code','amenities5_code','amenities2_code1','amenities2_code2','amenities2_code3','amenities2_code4','amenities2_code5','extra_features1_area','extra_features1_indicator','extra_features2_area','extra_features2_indicator','extra_features3_area','extra_features3_indicator','extra_features4_area','extra_features4_indicator','other_buildings1_code','other_buildings2_code','other_buildings3_code','other_buildings4_code','other_buildings5_code','other_impr_building1_indicator','other_impr_building2_indicator','other_impr_building3_indicator','other_impr_building4_indicator','other_impr_building5_indicator','other_impr_building_area1','other_impr_building_area2','other_impr_building_area3','other_impr_building_area4','other_impr_building_area5','topograpy_code','neighborhood_code','condo_project_or_building_name','assessee_name_indicator','second_assessee_name_indicator','other_rooms_indicator','mail_care_of_name_indicator','comments','tape_cut_date','certification_date','edition_number','prop_addr_propagated_ind','ln_ownership_rights','ln_relationship_type','ln_mailing_country_code','ln_property_name','ln_property_name_type','ln_land_use_category','ln_lot','ln_block','ln_unit','ln_subfloor','ln_floor_cover','ln_mobile_home_indicator','ln_condo_indicator','ln_property_tax_exemption','ln_veteran_status','ln_old_apn_indicator','fips'];
  EXPORT Differences := SALT311.mod_Delta.mac_DifferencesByFieldList(old_s, new_s, inFieldList);
  EXPORT DifferenceSummary(BOOLEAN Glob = TRUE) := hygiene(old_s).Summary('Old',Glob) + hygiene(new_s).Summary('New',Glob) + hygiene(PROJECT(Differences(deleted), TRANSFORM(Layout_Property_Assessor, SELF := LEFT.old_rec))).Summary('Deletions',Glob) + hygiene(PROJECT(Differences(added), TRANSFORM(Layout_Property_Assessor, SELF := LEFT.new_rec))).Summary('Additions',Glob);
  EXPORT StandardStats(BOOLEAN doHygieneSummaryGlobal = TRUE, BOOLEAN doHygieneSummaryPerSrc = TRUE) := FUNCTION
    myTimeStamp := (UNSIGNED6)SALT311.Fn_Now('YYYYMMDDHHMMSS') : INDEPENDENT;
    hygieneDiffOverall := DifferenceSummary(TRUE);
    hygieneDiffPerSrc := DifferenceSummary(FALSE);
    SALT311.mod_StandardStatsTransforms.mac_hygieneSummaryTransform(Scrubs_LN_PropertyV2_Assessor, Fields, 'RECORDOF(hygieneDiffOverall)', TRUE);
    hygieneDiffOverall_Standard := IF(doHygieneSummaryGlobal, NORMALIZE(hygieneDiffOverall, COUNT(inFieldList) * 6, xSummary(LEFT, COUNTER, myTimeStamp, LEFT.txt + '_all', LEFT.txt + '_all')));
    hygieneDiffPerSrc_Standard := IF(doHygieneSummaryPerSrc, NORMALIZE(hygieneDiffPerSrc, COUNT(inFieldList) * 6, xSummary(LEFT, COUNTER, myTimeStamp, LEFT.txt + '_src', LEFT.txt + '_src')));
 
    RETURN hygieneDiffOverall_Standard & hygieneDiffPerSrc_Standard;
  END;
END;
