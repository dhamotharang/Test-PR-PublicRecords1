IMPORT SALT33,ut;
EXPORT BasicMatch(DATASET(layout_BizHead) ih) := MODULE// An extremely tight pre-match designed to quickly eliminate high volume duplicates
 
SHARED  h00 := Specificities(ih).input_file;
  SHARED s := Specificities(ih).specificities[1];
  SHARED h00_match := h00( 
      0 + IF( (parent_proxid  IN SET(s.nulls_parent_proxid,parent_proxid) OR parent_proxid = (TYPEOF(parent_proxid))''), 0, 28 ) + IF( (sele_proxid  IN SET(s.nulls_sele_proxid,sele_proxid) OR sele_proxid = (TYPEOF(sele_proxid))''), 0, 28 ) + IF( (org_proxid  IN SET(s.nulls_org_proxid,org_proxid) OR org_proxid = (TYPEOF(org_proxid))''), 0, 28 ) + IF( (ultimate_proxid  IN SET(s.nulls_ultimate_proxid,ultimate_proxid) OR ultimate_proxid = (TYPEOF(ultimate_proxid))''), 0, 28 ) + IF( (source  IN SET(s.nulls_source,source) OR source = (TYPEOF(source))''), 0, 4 ) + IF( (source_record_id  IN SET(s.nulls_source_record_id,source_record_id) OR source_record_id = (TYPEOF(source_record_id))''), 0, 27 ) + IF( (company_name  IN SET(s.nulls_company_name,company_name) OR company_name = (TYPEOF(company_name))''), 0, 25 ) + IF( (company_name_prefix  IN SET(s.nulls_company_name_prefix,company_name_prefix) OR company_name_prefix = (TYPEOF(company_name_prefix))''), 0, 14 ) + IF( (cnp_name  IN SET(s.nulls_cnp_name,cnp_name) OR cnp_name = (TYPEOF(cnp_name))''), 0, 25 ) + IF( (cnp_number  IN SET(s.nulls_cnp_number,cnp_number) OR cnp_number = (TYPEOF(cnp_number))''), 0, 13 ) + IF( (cnp_btype  IN SET(s.nulls_cnp_btype,cnp_btype) OR cnp_btype = (TYPEOF(cnp_btype))''), 0, 3 ) + IF( (cnp_lowv  IN SET(s.nulls_cnp_lowv,cnp_lowv) OR cnp_lowv = (TYPEOF(cnp_lowv))''), 0, 5 ) + IF( (company_phone_3  IN SET(s.nulls_company_phone_3,company_phone_3) OR company_phone_3 = (TYPEOF(company_phone_3))''), 0, 9 ) + IF( (company_phone_3_ex  IN SET(s.nulls_company_phone_3_ex,company_phone_3_ex) OR company_phone_3_ex = (TYPEOF(company_phone_3_ex))''), 0, 9 ) + IF( (company_phone_7  IN SET(s.nulls_company_phone_7,company_phone_7) OR company_phone_7 = (TYPEOF(company_phone_7))''), 0, 23 ) + IF( (company_fein  IN SET(s.nulls_company_fein,company_fein) OR company_fein = (TYPEOF(company_fein))''), 0, 25 ) + IF( (company_sic_code1  IN SET(s.nulls_company_sic_code1,company_sic_code1) OR company_sic_code1 = (TYPEOF(company_sic_code1))''), 0, 10 ) + IF( (prim_range  IN SET(s.nulls_prim_range,prim_range) OR prim_range = (TYPEOF(prim_range))''), 0, 13 ) + IF( (prim_name  IN SET(s.nulls_prim_name,prim_name) OR prim_name = (TYPEOF(prim_name))''), 0, 14 ) + IF( (sec_range  IN SET(s.nulls_sec_range,sec_range) OR sec_range = (TYPEOF(sec_range))''), 0, 12 ) + IF( (city  IN SET(s.nulls_city,city) OR city = (TYPEOF(city))''), 0, 11 ) + IF( (city_clean  IN SET(s.nulls_city_clean,city_clean) OR city_clean = (TYPEOF(city_clean))''), 0, 11 ) + IF( (st  IN SET(s.nulls_st,st) OR st = (TYPEOF(st))''), 0, 5 ) + IF( (zip  IN SET(s.nulls_zip,zip) OR zip = (TYPEOF(zip))''), 0, 14 ) + IF( (company_url  IN SET(s.nulls_company_url,company_url) OR company_url = (TYPEOF(company_url))''), 0, 27 ) + IF( (isContact  IN SET(s.nulls_isContact,isContact) OR isContact = (TYPEOF(isContact))''), 0, 1 ) + IF( (contact_did  IN SET(s.nulls_contact_did,contact_did) OR contact_did = (TYPEOF(contact_did))''), 0, 25 ) + IF( (title  IN SET(s.nulls_title,title) OR title = (TYPEOF(title))''), 0, 1 ) + IF( (fname  IN SET(s.nulls_fname,fname) OR fname = (TYPEOF(fname))''), 0, 8 ) + IF( (fname_preferred  IN SET(s.nulls_fname_preferred,fname_preferred) OR fname_preferred = (TYPEOF(fname_preferred))''), 0, 9 ) + IF( (mname  IN SET(s.nulls_mname,mname) OR mname = (TYPEOF(mname))''), 0, 9 ) + IF( (lname  IN SET(s.nulls_lname,lname) OR lname = (TYPEOF(lname))''), 0, 10 ) + IF( (name_suffix  IN SET(s.nulls_name_suffix,name_suffix) OR name_suffix = (TYPEOF(name_suffix))''), 0, 8 ) + IF( (contact_ssn  IN SET(s.nulls_contact_ssn,contact_ssn) OR contact_ssn = (TYPEOF(contact_ssn))''), 0, 27 ) + IF( (contact_email  IN SET(s.nulls_contact_email,contact_email) OR contact_email = (TYPEOF(contact_email))''), 0, 27 ) + IF( (sele_flag  IN SET(s.nulls_sele_flag,sele_flag) OR sele_flag = (TYPEOF(sele_flag))''), 0, 1 ) + IF( (org_flag  IN SET(s.nulls_org_flag,org_flag) OR org_flag = (TYPEOF(org_flag))''), 0, 1 ) + IF( (ult_flag  IN SET(s.nulls_ult_flag,ult_flag) OR ult_flag = (TYPEOF(ult_flag))''), 0, 1 ) + IF( (fallback_value  IN SET(s.nulls_fallback_value,fallback_value) OR fallback_value = (TYPEOF(fallback_value))''), 0, 1 ) >= Config_BIP.BasicMatchThreshold); // Potentially remove anything that would violate FORCE(+) constraints
  MatchCands := JOIN(h00_match,Specificities(ih).ClusterSizes(InCluster=1),LEFT.proxid=RIGHT.proxid,TRANSFORM(LEFT),LOCAL); // Singletons only may match
  Rec := RECORD
    SALT33.UIDType proxid1;
    SALT33.UIDType proxid2;
  END;
// It is important that this is an EQUIVALENCE relationship - it allows us to form an implicit transitive closure
  h01 := SORT(h00_match,parent_proxid,sele_proxid,org_proxid,ultimate_proxid,source,source_record_id,company_name,company_name_prefix,cnp_name,cnp_number,cnp_btype,cnp_lowv,company_phone_3,company_phone_3_ex,company_phone_7,company_fein,company_sic_code1,prim_range,prim_name,sec_range,city,city_clean,st,zip,company_url,isContact,contact_did,title,fname,fname_preferred,mname,lname,name_suffix,contact_ssn,contact_email,sele_flag,org_flag,ult_flag,fallback_value,proxid);
  h02 := DEDUP(h01,parent_proxid,sele_proxid,org_proxid,ultimate_proxid,source,source_record_id,company_name,company_name_prefix,cnp_name,cnp_number,cnp_btype,cnp_lowv,company_phone_3,company_phone_3_ex,company_phone_7,company_fein,company_sic_code1,prim_range,prim_name,sec_range,city,city_clean,st,zip,company_url,isContact,contact_did,title,fname,fname_preferred,mname,lname,name_suffix,contact_ssn,contact_email,sele_flag,org_flag,ult_flag,fallback_value,LOCAL); // ,LOCAL ok - we don't need a perfect dedup - this is an optimization
  Match := JOIN(h02,MatchCands,LEFT.parent_proxid = RIGHT.parent_proxid AND LEFT.sele_proxid = RIGHT.sele_proxid AND LEFT.org_proxid = RIGHT.org_proxid AND LEFT.ultimate_proxid = RIGHT.ultimate_proxid AND LEFT.source = RIGHT.source
       AND LEFT.source_record_id = RIGHT.source_record_id AND LEFT.company_name = RIGHT.company_name AND LEFT.company_name_prefix = RIGHT.company_name_prefix AND LEFT.cnp_name = RIGHT.cnp_name AND LEFT.cnp_number = RIGHT.cnp_number
       AND LEFT.cnp_btype = RIGHT.cnp_btype AND LEFT.cnp_lowv = RIGHT.cnp_lowv AND LEFT.company_phone_3 = RIGHT.company_phone_3 AND LEFT.company_phone_3_ex = RIGHT.company_phone_3_ex AND LEFT.company_phone_7 = RIGHT.company_phone_7
       AND LEFT.company_fein = RIGHT.company_fein AND LEFT.company_sic_code1 = RIGHT.company_sic_code1 AND LEFT.prim_range = RIGHT.prim_range AND LEFT.prim_name = RIGHT.prim_name AND LEFT.sec_range = RIGHT.sec_range
       AND LEFT.city = RIGHT.city AND LEFT.st = RIGHT.st AND LEFT.city_clean = RIGHT.city_clean AND LEFT.st = RIGHT.st AND LEFT.zip = RIGHT.zip AND LEFT.company_url = RIGHT.company_url
       AND LEFT.isContact = RIGHT.isContact AND LEFT.contact_did = RIGHT.contact_did AND LEFT.title = RIGHT.title AND LEFT.fname = RIGHT.fname AND LEFT.fname_preferred = RIGHT.fname_preferred
       AND LEFT.mname = RIGHT.mname AND LEFT.lname = RIGHT.lname AND LEFT.name_suffix = RIGHT.name_suffix AND LEFT.contact_ssn = RIGHT.contact_ssn AND LEFT.contact_email = RIGHT.contact_email
       AND LEFT.sele_flag = RIGHT.sele_flag AND LEFT.org_flag = RIGHT.org_flag AND LEFT.ult_flag = RIGHT.ult_flag AND LEFT.fallback_value = RIGHT.fallback_value AND LEFT.proxid < RIGHT.proxid,TRANSFORM(Rec,SELF.proxid2 := LEFT.proxid,SELF.proxid1 := RIGHT.proxid), HASH);
SHARED PickOne := DEDUP( SORT( DISTRIBUTE( Match,HASH(proxid1) ), proxid1, proxid2, LOCAL), proxid1, LOCAL); // Lowest collector ID for each singleton
EXPORT patch_file := PickOne;
  ut.MAC_Patch_Id(h00,proxid,PickOne,proxid1,proxid2,o1); // Patch the input file
EXPORT input_file := o1 : INDEPENDENT;
EXPORT basic_match_count := COUNT(PickOne);
EXPORT id_delta := COUNT(DEDUP(h00,proxid,ALL))-COUNT(DEDUP(input_file,proxid,ALL)); // Should equal basic_match_count
END;
