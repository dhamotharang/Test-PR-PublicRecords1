Generated by SALT V2.9 Beta 3
File being processed :-
THRESHOLD:45
MODULE:HealthCareProviderHeader_BEST
FILENAME:HealthProvider
IDNAME:LNPID
IDFIELD:EXISTS:LNPID
SOURCEFIELD:SRC
SOURCERIDFIELD:SOURCE_RID
FIELDTYPE:DEFAULT:LEFTTRIM:NOQUOTES("'):ONFAIL(CLEAN):
FIELDTYPE:NUMBER:ALLOW(0123456789):
FIELDTYPE:ALPHA:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ):
FIELDTYPE:ALPHANUM:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-):
FIELDTYPE:WORDBAG:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'):SPACES( <>{}[]-^=!+&,./):ONFAIL(CLEAN):
//Uncomment up to NINES for internal or external adl
RIDFIELD:RID
RECORDS:80000000
POPULATION:12000000
NINES:4
//Source
SOURCEFIELD:SRC:PERMITS(fn_sources,5)
//Fuzzy
FUZZY:Right4:RST:CUSTOM(fn_Right4):TYPE(STRING4)
FUZZY:PreferredName:RST:CUSTOM(fn_PreferredName):TYPE(STRING20)
FUZZY:NormSuffix:RST:CUSTOM(fn_NormSuffix):TYPE(STRING5)
// BestType - Generic
BESTTYPE:BestDIDBYDOB:BASIS(LNPID:?:DOB):COMMONEST
BESTTYPE:BestDIDBYADDRESS:BASIS(LNPID:?:ADDRESS_ID):COMMONEST
BESTTYPE:BestDIDCommonest:BASIS(LNPID):COMMONEST
BESTTYPE:BestDOB:BASIS(LNPID):VOTED(fn_Best_DOB_Source_Votes,2):VALID(ValidDOB):MINIMUM(1):EXTEND
BESTTYPE:BestDOBLongest:BASIS(LNPID):LONGEST:EXTEND
BESTTYPE:BestDOBCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)
BESTTYPE:BestCNSMRDOBBYDOB:BASIS(LNPID:?:DOB):VALID(ValidDOB):COMMONEST:MINIMUM(1):EXTEND
BESTTYPE:BestSSNBYDOB:BASIS(LNPID:?:DOB):VALID(ValidSSN):COMMONEST:EXTEND
BESTTYPE:BestSSNBYCNSMRDOB:BASIS(LNPID:?:CNSMR_DOB):VALID(ValidSSN):COMMONEST:EXTEND
BESTTYPE:BestSSNCOMMONEST:BASIS(LNPID):COMMONEST
BESTTYPE:BestNPI:BASIS(LNPID):VOTED(fn_Best_NPI_Source_Votes,2)
BESTTYPE:BestUPIN:BASIS(LNPID):VOTED(fn_Best_UPIN_Source_Votes,2)
BESTTYPE:BestDEA:BASIS(LNPID):VOTED(fn_Best_DEA_Source_Votes,2)
BESTTYPE:MostRecent:BASIS(LNPID):RECENT(DT_LAST_SEEN):MINIMUM(2)
BESTTYPE:MostRecentAddr:BASIS(LNPID:ST):RECENT(DT_LAST_SEEN):MINIMUM(2)
BESTTYPE:BestAddressCommonest:BASIS(LNPID):COMMONEST:FUZZY:EXTEND
BESTTYPE:MostRecentLIC:BASIS(LNPID:?:LIC_STATE):RECENT(DT_LIC_EXPIRATION):FUZZY:EXTEND
BESTTYPE:BestLICCommenest:BASIS(LNPID):COMMONEST:FUZZY
BESTTYPE:BestLICLongest:BASIS(LNPID:?:LIC_STATE):LONGEST:FUZZY
BESTTYPE:MostRecentDEA:BASIS(LNPID):RECENT(DT_DEA_EXPIRATION)
BESTTYPE:BestFirstName:BASIS(LNPID):COMMONEST:FUZZY:EXTEND
BESTTYPE:CommonFirstName:BASIS(LNPID):COMMONEST:EXTEND
BESTTYPE:BestTaxCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)
BESTTYPE:UniqueSingleValue:BASIS(LNPID):UNIQUE:EXTEND
BESTTYPE:MostCommonValue:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(5):EXTEND
BESTTYPE:ExtendedCommonValue:BASIS(LNPID):COMMONEST:MINIMUM(2):EXTEND
BESTTYPE:LongestValue:BASIS(LNPID):LONGEST
BESTTYPE:CurrentLastName:BASIS(LNPID):RECENT(DT_LAST_SEEN)
BESTTYPE:BestLastName:BASIS(LNPID):RECENT(DT_LAST_SEEN):EXTEND:FUZZY:MINIMUM(2)
BESTTYPE:BestSecRange:BASIS(LNPID:PRIM_RANGE:PRIM_NAME:ZIP):COMMONEST:FUZZY:EXTEND
BESTTYPE:BestCity:BASIS(LNPID:ZIP):COMMONEST:EXTEND
BESTTYPE:BestTaxID:BASIS(LNPID):RECENT(DT_LAST_SEEN)
BESTTYPE:BestPhoneCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)
//HACK
//HACK:SLICEDISTANCE:18
//Fields
DATEFIELD:DOB:SOFT1(4.0):MDDM:YEARSHIFT12(4.0):BestDOB:BestDOBLongest:BestDOBCommonest:FLAG:FORCE(GENERATION,--3):17,0
DATEFIELD:CNSMR_DOB:SOFT1(4.0):MDDM:YEARSHIFT12(4.0):BestCNSMRDOBBYDOB:BestDOBLongest:BestDOBCommonest:FLAG:FORCE(GENERATION,--3):17,0
// Unique
FIELD:SSN:LIKE(NUMBER):Right4:EDIT1:BestSSNBYDOB:BestSSNCOMMONEST:FLAG:OWNED:24,0
FIELD:CNSMR_SSN:LIKE(NUMBER):Right4:EDIT1:BestSSNBYDOB:BestSSNBYCNSMRDOB:BestSSNCOMMONEST:FLAG:OWNED:24,0
FIELD:DID:LIKE(NUMBER):SWITCH0:WEIGHT(0.25):BestDIDBYDOB:BestDIDBYADDRESS:BestDIDCommonest:FLAG:23,249
//src
FIELD:SRC:CARRY
// Name
FIELD:SNAME:ExtendedCommonValue:LongestValue:NormSuffix:FORCE(--):7,8
FIELD:FNAME:EDIT1:INITIAL:PreferredName:BestFirstName:CommonFirstName:FLAG:8,24
FIELD:MNAME:INITIAL:EDIT2:ExtendedCommonValue:LongestValue:FLAG:8,37
FIELD:LNAME:INITIAL:HYPHEN2:EDIT2:BestLastName:CurrentLastName:FLAG:7,74
FIELD:GENDER:UniqueSingleValue:2,4
FIELD:DERIVED_GENDER:PROP:FORCE(--):1,3
FIELD:LIC_NBR:CONTEXT(LIC_STATE):EDIT1:MostRecentLIC:BestLICLongest:BestLICCommenest:FLAG:20,265
FIELD:C_LIC_NBR:CONTEXT(LIC_STATE):EDIT1:MostRecentLIC:BestLICLongest:BestLICCommenest:FLAG:20,265
//FIELD:C_LIC_NBR:CONTEXT(LIC_STATE):EDIT1:20,283
//Phone and Fax
FIELD:PHONE:CONTEXT(FNAME):SWITCH0:WEIGHT(0.5):21,485
FIELD:FAX:CONTEXT(FNAME):SWITCH0:WEIGHT(0.5):21,265
// Address
FIELD:ADDRESS_ID:LIKE(NUMBER):CARRY
FIELD:PRIM_NAME:SWITCH0:13,607
FIELD:PRIM_RANGE:SWITCH0:12,586
FIELD:SEC_RANGE:HYPHEN2:BestSecRange:SWITCH0:7,355
FIELD:V_CITY_NAME:BestCity:SWITCH0:11,445
FIELD:ST:BestCity:SWITCH0:5,156
FIELD:ZIP:SWITCH0:13,534
// Other Information
//FIELD:CNAME:EDIT1:LIKE(WORDBAG):FORCE(+):18,0
FIELD:CNAME:CARRY:18,0
FIELD:TAX_ID:CONTEXT(FNAME):SWITCH0:BestTaxID:BestTaxCommonest:FLAG:OWNED:0,0
FIELD:BILLING_TAX_ID:CONTEXT(FNAME):SWITCH0:BestTaxID:BestTaxCommonest:FLAG:OWNED:0,0
FIELD:UPIN:FORCE(--):BestUPIN:MostRecent:FLAG:OWNED:24,0
FIELD:NPI_NUMBER:LIKE(NUMBER):FORCE(--):BestNPI:MostRecent:FLAG:OWNED:23,0
FIELD:BILLING_NPI_NUMBER:LIKE(NUMBER):FORCE(--):BestNPI:MostRecent:FLAG:OWNED:23,0
FIELD:DEA_NUMBER:BestDEA:MostRecentDEA:FLAG:OWNED:23,94
FIELD:TAXONOMY:CONTEXT(FNAME):SWITCH0:BestNPI:MostRecent:FLAG:OWNED:8,97
//FIELD:VENDOR_ID:CONTEXT(SRC):WEIGHT(0.25):24,838
FIELD:VENDOR_ID:CONTEXT(SRC):24,685
FIELD:LIC_TYPE:CONTEXT(VENDOR_ID):WEIGHT(0.5):7,582
//Address CoOrdinates
FIELD:GEO_LAT:CARRY
FIELD:GEO_LONG:CARRY
LATLONG:LAT_LONG:LAT(GEO_LAT):LONG(GEO_LONG):DISTANCE(1):DIVISIONS(5):CONTEXT(FNAME):SWITCH0:WEIGHT(0.75):10,321
// Date
FIELD:DT_FIRST_SEEN:RECORDDATE(FIRST,YYYYMM):
FIELD:DT_LAST_SEEN:RECORDDATE(LAST,YYYYMM):
FIELD:DT_LIC_EXPIRATION:CARRY:0,0
FIELD:DT_DEA_EXPIRATION:CARRY:0,0
// Concept
CONCEPT:MAINNAME:FNAME:MNAME:LNAME:BAGOFWORDS:23,296
CONCEPT:FULLNAME:MAINNAME:SNAME:FORCE(+-3,OR(SSN[15]:DOB[5]:FNAME),OR(NPI_NUMBER[15]:DOB[5]:FNAME),OR(DEA_NUMBER[15]:DOB[5]:FNAME),OR(C_LIC_NBR[15]:DOB[5]:FNAME),OR(UPIN[15]:DOB[5]:FNAME)):23,300
CONCEPT:ADDR1:PRIM_RANGE:SEC_RANGE:PRIM_NAME:20,643
CONCEPT:LOCALE:V_CITY_NAME:ST:ZIP:13,536
CONCEPT:ADDRESS:ADDR1:LOCALE:21,646
// Rules Efficacy
EFFICACY:NAMED(RuleEfficacy.txt):THRESHOLD(500):INCLUDE
//Siblings
//CLEAVE:Rule01:BASIS(FNAME:DERIVED_GENDER:?:GENDER):EXPLODE:MATCH(ALL)
//CLEAVE:Rule02:BASIS(NPI_NUMBER):EXPLODE:MATCH(ALL)
//CLEAVE:Rule03:BASIS(UPIN):EXPLODE:MATCH(ALL)
//CLEAVE:Rule04:BASIS(DOB:MNAME:LIC_STATE):EXPLODE:MINIMUM(3):EXTEND:FUZZY:HYBRID(2)
//Jr vs Sr
//CLEAVE:Rule11:BASIS(DOB:SNAME):EXPLODE:MINIMUM(3):EXTEND:FUZZY:HYBRID(2)
//CONCEPT:GEO_Name:FULLNAME:LAT_LONG:22,0
//CONCEPT:VENDORID_NAME:VENDOR_ID:FULLNAME:FORCE(+5):SCALE(NEVER):24,874
//CONCEPT:VENDORID_NAME:VENDOR_ID:FULLNAME:24,874
//BlockLinks
//BLOCKLINK:NAMED(OverLinks)
// Rules Efficacy
//EFFICACY:NAMED(RuleEfficacy.txt):THRESHOLD(1500):INCLUDE
//HACK:MAXBLOCKSIZE:1000
//Siblings
//CLEAVE:Rule11:BASIS(SSN):EXPLODE:MATCH(ALL)
//CLEAVE:Rule12:BASIS(UPIN:FNAME):EXPLODE:MATCH(ALL)
//CLEAVE:Rule13:BASIS(FNAME:GENDER:DERIVED_GENDER):EXPLODE:MATCH(ALL)
//CLEAVE:Rule14:BASIS(NPI_NUMBER):EXPLODE:MATCH(ALL)
//CLEAVE:Rule12:BASIS(DOB:FNAME):EXPLODE:MATCH(ALL)
// Cleave - Jr v Sr
//CLEAVE:Rule11:BASIS(UPIN:SSN):EXPLODE:MATCH(ANY):MINIMUM(3):EXTEND:FUZZY:HYBRID(2)
//CLEAVE:Rule12:BASIS(UPIN:SSN:C_LIC_NBR):MATCH(ANY):MINIMUM(3):EXTEND
//CLEAVE:Rule13:BASIS(UPIN:SSN:FNAME):EXPLODE:MATCH(ANY):MINIMUM(3):EXTEND
// Cleave - Twins
//CLEAVE:Rule21:BASIS(FNAME:C_LIC_NBR:UPIN):EXPLODE:MATCH(ANY):MINIMUM(3):EXTEND
//CLEAVE:Rule22:BASIS(FNAME:C_LIC_NBR:SSN):EXPLODE:MATCH(ANY):MINIMUM(3):EXTEND
//CLEAVE:Rule23:BASIS(SSN:FNAME:MNAME):EXPLODE:MATCH(ANY):MINIMUM(5):EXTEND:FUZZY
// Cleave - with manual changes 
//CLEAVE:Rule31:BASIS(UPIN):MATCH(ANY):MINIMUM(8):EXTEND:FUZZY
//CLEAVE:Rule32:BASIS(UPIN:NPI_NUMBER):MATCH(ANY):MINIMUM(2):EXTEND:FUZZY
// Overlink Penalty
//PENALTY:CleavePenalty
Total available specificity:523
Specificity number that should imply one record specified 24.
Assuming an average of 7 records per cluster
Specificity value at which N^2 joins will be tolerated: 21
User specified threshold 45
Recommended matching threshold 37
Search Threshold set at 14
Use of PERSISTs in code set at:3
Presence of SOURCE and SOURCERIDFIELD allows field level delta-ing during ingest; so generating hygiene too
______________________________English Description of Matching Process___________________________
A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 4 nines of accuracy on a population of 12000000 with    80000000 records.
A matching threshold of 37 is recommended although this was overridden to 45.
___Field by Field Breakdown of Scoring Method___
DOB Scoring: In order for two records to be a match it is also required that the DOB fields not not match.
Specifically the score awarded to this field must be >= 3 unless one field is null.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC,data_permits) removing any which are invalid according to ValidDOB.
 The number of each field value are then counted.
 The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_DOB_Source_Votes which takes count and source into account by a margin of at least 2 and which has at least 1 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted.
 The best is then defined to be the one which has the most complete (non-null) value of all the field values.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two DOB fields will be considered to match if:
  - they are identical
  - if the YEARs are more than 13 apart then the whole record will be a no match.
  - if a Month or Day miss-match has a 01 on either side it will count as a 0 for that component
  - if the decade value differs by 1 it will be considered a fuzzy match
  - if the Year value differs by 2 it will be considered a fuzzy match
  - if the month component matches the day and vice-versi it will be considered a fuzzy match
  - otherwise each component of the score will be scored individually
The exact number of points allocated to a match will depend upon the global scarcity of the DOB
but should average 17 points with a failed match substracting 17 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for DOB.)
CNSMR_DOB Scoring: In order for two records to be a match it is also required that the CNSMR_DOB fields not not match.
Specifically the score awarded to this field must be >= 3 unless one field is null.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC,data_permits) removing any which are invalid according to ValidDOB.
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value and which has at least 1 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field DOB_year,DOB_month,DOB_day then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted.
 The best is then defined to be the one which has the most complete (non-null) value of all the field values.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two CNSMR_DOB fields will be considered to match if:
  - they are identical
  - if the YEARs are more than 13 apart then the whole record will be a no match.
  - if a Month or Day miss-match has a 01 on either side it will count as a 0 for that component
  - if the decade value differs by 1 it will be considered a fuzzy match
  - if the Year value differs by 2 it will be considered a fuzzy match
  - if the month component matches the day and vice-versi it will be considered a fuzzy match
  - otherwise each component of the score will be scored individually
The exact number of points allocated to a match will depend upon the global scarcity of the CNSMR_DOB
but should average 17 points with a failed match substracting 17 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for CNSMR_DOB.)
SSN Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC,data_permits) removing any which are invalid according to ValidSSN.
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field DOB_year,DOB_month,DOB_day then the value currently in the field will be replaced.
Two SSN fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - if the two fields have the same value for the function Right4
The exact number of points allocated to a match will depend upon the global scarcity of the SSN
and the degree of fuzziness required but should average 24 points with a failed match substracting 24 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for SSN.)
CNSMR_SSN Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,SRC,data_permits) removing any which are invalid according to ValidSSN.
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field DOB_year,DOB_month,DOB_day then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID,SRC,data_permits) removing any which are invalid according to ValidSSN.
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field CNSMR_DOB_year,CNSMR_DOB_month,CNSMR_DOB_day then the value currently in the field will be replaced.
Two CNSMR_SSN fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - if the two fields have the same value for the function Right4
The exact number of points allocated to a match will depend upon the global scarcity of the CNSMR_SSN
and the degree of fuzziness required but should average 24 points with a failed match substracting 24 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for CNSMR_SSN.)
DID Scoring: Two DID fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DID
but should average 23 points with a failed match substracting 17 points.
(This subtraction estimate is based upon 24% of clusters with 2 or more records have 2 or more values for DID.)
The SPC file has specified that the weight should be multiplied by  0.25
SRC Scoring: This field is not used for scoring; rather it is carried along for context and debugging
SNAME Scoring: In order for two records to be a match it is also required that the SNAME fields not not match.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two SNAME fields will be considered to match if:
  - they are identical
  - if the two fields have the same value for the function NormSuffix
The exact number of points allocated to a match will depend upon the global scarcity of the SNAME
but should average 7 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for SNAME.)
It should also be noted that SNAME is a child field of FULLNAME. Therefore if FULLNAME is a full match this field will score 0.
This field is scaled to match with its parent FULLNAME, on average that will mean multiplying by 76%
(Although the score is still computed to satisfy the forcing condition.)
FNAME Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which is the most commonly occurring field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
 2. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two FNAME fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
  - one is the leading part of the other
  - if the two fields have the same value for the function PreferredName
The exact number of points allocated to a match will depend upon the global scarcity of the FNAME
and the degree of fuzziness required but should average 8 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for FNAME.)
It should also be noted that FNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 100%
MNAME Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two MNAME fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 2 edits (see Glossary)
  - one is the leading part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the MNAME
and the degree of fuzziness required but should average 8 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 3% of clusters with 2 or more records have 2 or more values for MNAME.)
It should also be noted that MNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 100%
LNAME Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which has the most recent date recorded in:DT_LAST_SEEN and which has at least 2 records with that field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two LNAME fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 2 edits (see Glossary)
  - one is the leading part of the other
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the LNAME
and the degree of fuzziness required but should average 7 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 7% of clusters with 2 or more records have 2 or more values for LNAME.)
It should also be noted that LNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 100%
GENDER Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted.
 The best is then defined to be the one which is unique.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two GENDER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the GENDER
but should average 2 points with a failed match substracting 1 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for GENDER.)
DERIVED_GENDER Scoring: In order for two records to be a match it is also required that the DERIVED_GENDER fields not not match.
If a field is null and another record in the same cluster has a value for that field then the other records value will be used.
Two DERIVED_GENDER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DERIVED_GENDER
but should average 1 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for DERIVED_GENDER.)
LIC_NBR Scoring: 
The scoring for this field is ignored unless the LIC_STATE fields are identical.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which has the most recent date recorded in:DT_LIC_EXPIRATION.
 If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field LIC_STATE then the value currently in the field will be replaced.
Two LIC_NBR fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the LIC_NBR
and the degree of fuzziness required but should average 20 points with a failed match substracting 14 points.
(This subtraction estimate is based upon 26% of clusters with 2 or more records have 2 or more values for LIC_NBR.)
C_LIC_NBR Scoring: 
The scoring for this field is ignored unless the LIC_STATE fields are identical.
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,data_permits).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which has the most recent date recorded in:DT_LIC_EXPIRATION.
 If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field LIC_STATE then the value currently in the field will be replaced.
Two C_LIC_NBR fields will be considered to match if:
  - they are identical
  - one can be turned into the other with 1 edit (see Glossary)
The exact number of points allocated to a match will depend upon the global scarcity of the C_LIC_NBR
and the degree of fuzziness required but should average 20 points with a failed match substracting 14 points.
(This subtraction estimate is based upon 26% of clusters with 2 or more records have 2 or more values for C_LIC_NBR.)
PHONE Scoring: 
The scoring for this field is ignored unless the FNAME fields are identical.
Two PHONE fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PHONE
but should average 21 points with a failed match substracting 10 points.
(This subtraction estimate is based upon 48% of clusters with 2 or more records have 2 or more values for PHONE.)
The SPC file has specified that the weight should be multiplied by  0.50
FAX Scoring: 
The scoring for this field is ignored unless the FNAME fields are identical.
Two FAX fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the FAX
but should average 21 points with a failed match substracting 15 points.
(This subtraction estimate is based upon 26% of clusters with 2 or more records have 2 or more values for FAX.)
The SPC file has specified that the weight should be multiplied by  0.50
ADDRESS_ID Scoring: This field is not used for scoring; rather it is carried along for context and debugging
PRIM_NAME Scoring: Two PRIM_NAME fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_NAME
but should average 13 points with a failed match substracting 5 points.
(This subtraction estimate is based upon 60% of clusters with 2 or more records have 2 or more values for PRIM_NAME.)
It should also be noted that PRIM_NAME is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 62%
PRIM_RANGE Scoring: Two PRIM_RANGE fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_RANGE
but should average 12 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 58% of clusters with 2 or more records have 2 or more values for PRIM_RANGE.)
It should also be noted that PRIM_RANGE is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 62%
SEC_RANGE Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,PRIM_RANGE,PRIM_NAME,ZIP,data_permits).
 The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
 The best is then defined to be the one which is the most commonly occurring field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two SEC_RANGE fields will be considered to match if:
  - they are identical
  - if the two strings are identical if hypens and spaces are ignored
  - if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the SEC_RANGE
and the degree of fuzziness required but should average 7 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 35% of clusters with 2 or more records have 2 or more values for SEC_RANGE.)
It should also be noted that SEC_RANGE is a child field of ADDR1. Therefore if ADDR1 is a full match this field will score 0.
This field is scaled to match with its parent ADDR1, on average that will mean multiplying by 62%
V_CITY_NAME Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,ZIP,data_permits).
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two V_CITY_NAME fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the V_CITY_NAME
but should average 11 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 44% of clusters with 2 or more records have 2 or more values for V_CITY_NAME.)
It should also be noted that V_CITY_NAME is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%
ST Scoring: 
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
 1. Gather together all records that match on (LNPID,ZIP,data_permits).
 The number of each field value are then counted.
 The best is then defined to be the one which is the most commonly occurring field value.
 If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two ST fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ST
but should average 5 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 15% of clusters with 2 or more records have 2 or more values for ST.)
It should also be noted that ST is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%
ZIP Scoring: Two ZIP fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ZIP
but should average 13 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 53% of clusters with 2 or more records have 2 or more values for ZIP.)
It should also be noted that ZIP is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%
CNAME Scoring: This field is not used for scoring; rather it is carried along for context and debugging
TAX_ID Scoring: 
The scoring for this field is ignored unless the FNAME fields are identical.
Two TAX_ID fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the TAX_ID
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for TAX_ID.)
BILLING_TAX_ID Scoring: 
The scoring for this field is ignored unless the FNAME fields are identical.
Two BILLING_TAX_ID fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the BILLING_TAX_ID
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for BILLING_TAX_ID.)
UPIN Scoring: In order for two records to be a match it is also required that the UPIN fields not not match.
Two UPIN fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the UPIN
but should average 24 points with a failed match substracting 24 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for UPIN.)
NPI_NUMBER Scoring: In order for two records to be a match it is also required that the NPI_NUMBER fields not not match.
Two NPI_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the NPI_NUMBER
but should average 23 points with a failed match substracting 23 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for NPI_NUMBER.)
BILLING_NPI_NUMBER Scoring: In order for two records to be a match it is also required that the BILLING_NPI_NUMBER fields not not match.
Two BILLING_NPI_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the BILLING_NPI_NUMBER
but should average 23 points with a failed match substracting 23 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for BILLING_NPI_NUMBER.)
DEA_NUMBER Scoring: Two DEA_NUMBER fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DEA_NUMBER
but should average 23 points with a failed match substracting 20 points.
(This subtraction estimate is based upon 9% of clusters with 2 or more records have 2 or more values for DEA_NUMBER.)
TAXONOMY Scoring: 
The scoring for this field is ignored unless the FNAME fields are identical.
Two TAXONOMY fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the TAXONOMY
but should average 8 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 9% of clusters with 2 or more records have 2 or more values for TAXONOMY.)
VENDOR_ID Scoring: 
The scoring for this field is ignored unless the SRC fields are identical.
Two VENDOR_ID fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the VENDOR_ID
but should average 24 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 68% of clusters with 2 or more records have 2 or more values for VENDOR_ID.)
LIC_TYPE Scoring: 
The scoring for this field is ignored unless the VENDOR_ID fields are identical.
Two LIC_TYPE fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the LIC_TYPE
but should average 7 points with a failed match substracting 2 points.
(This subtraction estimate is based upon 58% of clusters with 2 or more records have 2 or more values for LIC_TYPE.)
The SPC file has specified that the weight should be multiplied by  0.50
GEO_LAT Scoring: This field is not used for scoring; rather it is carried along for context and debugging
GEO_LONG Scoring: This field is not used for scoring; rather it is carried along for context and debugging
LAT_LONG Scoring: 
The scoring for this field is ignored unless the FNAME fields are identical.
Two LAT_LONG fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the LAT_LONG
but should average 10 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 32% of clusters with 2 or more records have 2 or more values for LAT_LONG.)
The SPC file has specified that the weight should be multiplied by  0.75
DT_FIRST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LAST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LIC_EXPIRATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
DT_DEA_EXPIRATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
MAINNAME Scoring: Two MAINNAME fields will be considered to match if:
  - they are identical
  - The fields of either concept (but not both) can be shuffled so that they match
Note: MAINNAME is an amalgam of (FNAME,MNAME,LNAME)
Points will only be allocated for a match, the amount depending upon the scarcity of MAINNAME
but should average 23 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that MAINNAME is a child field of FULLNAME. Therefore if FULLNAME is a full match this field will score 0.
This field is scaled to match with its parent FULLNAME, on average that will mean multiplying by 76%
FULLNAME Scoring: In order for two records to be a match it is also required that the FULLNAME fields match.
Specifically the score awarded to this field must be >= -3 .
Two FULLNAME fields will be considered to match if:
  - they are identical
Note: FULLNAME is an amalgam of (MAINNAME,SNAME)
Points will only be allocated for a match, the amount depending upon the scarcity of FULLNAME
but should average 23 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score) and the sum of the scores of its' children will be used to determine the force criteria.
ADDR1 Scoring: Two ADDR1 fields will be considered to match if:
  - they are identical
Note: ADDR1 is an amalgam of (PRIM_RANGE,SEC_RANGE,PRIM_NAME)
Points will only be allocated for a match, the amount depending upon the scarcity of ADDR1
but should average 20 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that ADDR1 is a child field of ADDRESS. Therefore if ADDRESS is a full match this field will score 0.
This field is scaled to match with its parent ADDRESS, on average that will mean multiplying by 63%
LOCALE Scoring: Two LOCALE fields will be considered to match if:
  - they are identical
Note: LOCALE is an amalgam of (V_CITY_NAME,ST,ZIP)
Points will only be allocated for a match, the amount depending upon the scarcity of LOCALE
but should average 13 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that LOCALE is a child field of ADDRESS. Therefore if ADDRESS is a full match this field will score 0.
This field is scaled to match with its parent ADDRESS, on average that will mean multiplying by 63%
ADDRESS Scoring: Two ADDRESS fields will be considered to match if:
  - they are identical
Note: ADDRESS is an amalgam of (ADDR1,LOCALE)
Points will only be allocated for a match, the amount depending upon the scarcity of ADDRESS
but should average 21 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
LIC_STATE Scoring: This field is not used for scoring; rather it is carried along for context and debugging
__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters
Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.
Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.
__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.
