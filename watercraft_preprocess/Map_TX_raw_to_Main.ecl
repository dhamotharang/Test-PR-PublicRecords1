import watercraft, watercraft_preprocess, ut, lib_StringLib, header, STD;

// translates  tx_phase01.mp Ab intio graph into ECL

county_reg(string3 code)
:= case(code, 	
'001' => 'ANDERSON',
'002' => 'ANDREWS',
'003' => 'ANGELINA',
'004' => 'ARANSAS',
'005' => 'ARCHER',
'006' => 'ARMSTRONG',
'007' => 'ALASCOSA',
'008' => 'AUSTIN',
'009' => 'BAILEY',
'010' => 'BANDERA',
'011' => 'BASTROP',
'012' => 'BAYLOR',
'013' => 'BEE',
'014' => 'BELL',
'015' => 'BEXAR',
'016' => 'BLANCO',
'017' => 'BORDEN',
'018' => 'BOSQUE',
'019' => 'BOWIE',
'020' => 'BRAZORIA',
'021' => 'BRAZOS',
'022' => 'BREWSTER',
'023' => 'BRISCOE',
'024' => 'BROOKS',
'025' => 'BROWN',
'026' => 'BURLESON',
'027' => 'BURNET',
'028' => 'CALDWELL',
'029' => 'CALHOUN',
'030' => 'CALLAHAN',
'031' => 'CAMERON',
'032' => 'CAMP',
'033' => 'CARSON',
'034' => 'CASS',
'035' => 'CASTRO',
'036' => 'CHAMBERS',
'037' => 'CHEROKEE',
'038' => 'CHILDRESS',
'039' => 'CLAY',
'040' => 'COCHRAN',
'041' => 'COKE',
'042' => 'COLEMAN',
'043' => 'COLLIN',
'044' => 'COLLINGSWORTH',
'045' => 'COLORADO',
'046' => 'COMAL',
'047' => 'COMANCHE',
'048' => 'CONCHO',
'049' => 'COOKE',
'050' => 'CORYELL',
'051' => 'COTTLE',
'052' => 'CRANE',
'053' => 'CROCKETT',
'054' => 'CROSBY',
'055' => 'CULBERSON',
'056' => 'DALLAM',
'057' => 'DALLAS',
'058' => 'DAWSON',
'059' => 'DEAF SMITH',
'060' => 'DELTA',
'061' => 'DENTON',
'062' => 'DEWITT',
'063' => 'DICKENS',
'064' => 'DIMMIT',
'065' => 'DONLEY',
'066' => 'DUVAL',
'067' => 'EASTLAND',
'068' => 'ECTOR',
'069' => 'EDWARDS',
'070' => 'ELLIS',
'071' => 'EL PASO',
'072' => 'ERATH',
'073' => 'FALLS',
'074' => 'FANNIN',
'075' => 'FAYETTE',
'076' => 'FISHER',
'077' => 'FLOYD',
'078' => 'FOARD',
'079' => 'FORT BEND',
'080' => 'FRANKLIN',
'081' => 'FREESTONE',
'082' => 'FRIO',
'083' => 'GAINES',
'084' => 'GALVESTON',
'085' => 'GARZA',
'086' => 'GILLESPIE',
'087' => 'GLASSCOCK',
'088' => 'GOLIAD',
'089' => 'GONZALES',
'090' => 'GRAY',
'091' => 'GRAYSON',
'092' => 'GREGG',
'093' => 'GRIMES',
'094' => 'GUADALUPE',
'095' => 'HALE',
'096' => 'HALL',
'097' => 'HAMILTON',
'098' => 'HANSFORD',
'099' => 'HARDEMAN',
'100' => 'HARDIN',
'101' => 'HARRIS',
'102' => 'HARRISON',
'103' => 'HARTLEY',
'104' => 'HASKELL',
'105' => 'HAYS',
'106' => 'HEMPHILL',
'107' => 'HENDERSON',
'108' => 'HIDALGO',
'109' => 'HILL',
'110' => 'HOCKLEY',
'111' => 'HOOD',
'112' => 'HOPKINS',
'113' => 'HOUSTON',
'114' => 'HOWARD',
'115' => 'HUDSPETH',
'116' => 'HUNT',
'117' => 'HUTCHINSON',
'118' => 'IRION',
'119' => 'JACK',
'120' => 'JACKSON',
'121' => 'JASPER',
'122' => 'JEFF DAVIS',
'123' => 'JEFFERSON',
'124' => 'JIM HOGG',
'125' => 'JIM WELLS',
'126' => 'JOHNSON',
'127' => 'JONES',
'128' => 'KAMES',
'129' => 'KAUFMAN',
'130' => 'KENDALL',
'131' => 'KENEDY',
'132' => 'KENT',
'133' => 'KERR',
'134' => 'KIMBLE',
'135' => 'KING',
'136' => 'KINNEY',
'137' => 'KLEBERG',
'138' => 'KNOX',
'139' => 'LAMAR',
'140' => 'LAMB',
'141' => 'LAMPASAS',
'142' => 'LASALLE',
'143' => 'LAVACA',
'144' => 'LEE',
'145' => 'LEON',
'146' => 'LIBERTY',
'147' => 'LIMESTONE',
'148' => 'LIPSCOMB',
'149' => 'LIVE OAK',
'150' => 'LLANO',
'151' => 'LOVING',
'152' => 'LUBBOCK',
'153' => 'LYNN',
'154' => 'MADISON',
'155' => 'MARION',
'156' => 'MARTIN',
'157' => 'MASON',
'158' => 'MATAGORDA',
'159' => 'MAVERICK',
'160' => 'MCCULLOCH',
'161' => 'MCLENNAN',
'162' => 'MCMULLEN',
'163' => 'MEDINA',
'164' => 'MENARD',
'165' => 'MIDLAND',
'166' => 'MILAM',
'167' => 'MILLS',
'168' => 'MITCHELL',
'169' => 'MONTAGUE',
'170' => 'MONTGOMERY',
'171' => 'MOORE',
'172' => 'MORRIS',
'173' => 'MOTLEY',
'174' => 'NACOGDOCHES',
'175' => 'NAVARRO',
'176' => 'NEWTON',
'177' => 'NOLAN',
'178' => 'NUECES',
'179' => 'OCHILTREE',
'180' => 'OLDHAM',
'181' => 'ORANGE',
'182' => 'PALO PINTO',
'183' => 'PANOLA',
'184' => 'PARKER',
'185' => 'PARMER',
'186' => 'PECOS',
'187' => 'POLK',
'188' => 'POTTER',
'189' => 'PRESIDIO',
'190' => 'RAINS',
'191' => 'RANDALL',
'192' => 'REAGAN',
'193' => 'REAL',
'194' => 'RED RIVER',
'195' => 'REEVES',
'196' => 'REFUGIO',
'197' => 'ROBERTS',
'198' => 'ROBERTSON',
'199' => 'ROCKWELL',
'200' => 'RUNNELS',
'201' => 'RUSK',
'202' => 'SABINE',
'203' => 'SAN AUGUSTINE',
'204' => 'SAN JACINTO',
'205' => 'SAN PATRICIO',
'206' => 'SAN SABA',
'207' => 'SCHLEICHER',
'208' => 'SCURRY',
'209' => 'SHACKLEFORD',
'210' => 'SHELBY',
'211' => 'SHERMAN',
'212' => 'SMITH',
'213' => 'SOMERVELL',
'214' => 'STARR',
'215' => 'STEPHENS',
'216' => 'STERLING',
'217' => 'STONEWALL',
'218' => 'SUTTON',
'219' => 'SWISHER',
'220' => 'TARRANT',
'221' => 'TAYLOR',
'222' => 'TERRELL',
'223' => 'TERRY',
'224' => 'THROCKMORTON',
'225' => 'TITUS',
'226' => 'TOM GREEN',
'227' => 'TRAVIS',
'228' => 'TRINITY',
'229' => 'TYLER',
'230' => 'UPSHUR',
'231' => 'UPTON',
'232' => 'UVALDE',
'233' => 'VAL VERDE',
'234' => 'VAN ZANDT',
'235' => 'VICTORIA',
'236' => 'WALKER',
'237' => 'WALLER',
'238' => 'WARD',
'239' => 'WASHINGTON',
'240' => 'WEBB',
'241' => 'WHARTON',
'242' => 'WHEELER',
'243' => 'WICHITA',
'244' => 'WILBARGER',
'245' => 'WILLACY',
'246' => 'WILLIAMSON',
'247' => 'WILSON',
'248' => 'WINKLER',
'249' => 'WISE',
'250' => 'WOOD',
'251' => 'YOAKUM',
'252' => 'YOUNG',
'253' => 'ZAPATA',
'254' => 'ZAVALA','');

tran_type_desc(string2 code)
:= case(code, 
'03' => 'DUPLICATE REGISTRATION',
'04' => 'RENEWAL',
'05' => 'RENEWAL/ADDRESS CHANGE',
'06' => 'STOLEN',
'08' => 'CORRECTION REGISTRATION',
'10' => 'ORIGINAL TITLE - NO REGISTRATION',
'11' => 'ORIGINAL TITLE - ORIGINAL REG. (NEW)',
'12' => 'ORIGINAL TITLE - ORIGINAL TRANSFER REG.',
'17' => 'ORIGINAL TITLE - TRANSFER/RENEWAL REG.',
'22' => 'TRANSFER TITLE - TRANSFER REG.',
'27' => 'TRANSFER TITLE - TRANSFER/RENEWAL REG.',
'30' => 'CERTIFIED COPY TITLE',
'38' => 'CORRECTION CERTIFIED COPY',
'40' => 'DUPLICATE NON-NEGOTIABLE TITLE',
'60' => 'DUPLICATE DECALS',
'66' => 'OWNER INFORMATION PRINT',
'80' => 'CORRECTION TITLE',
'88' => 'CORRECTION TITLE AND REGISTRATION',
'90' => 'REMOVE LIEN','');

out_of_state (string15 code) 
:= case(code,
'AK/USA'               => 'AK',
'AL/USA'               => 'AL',
'ALABAMA'              => 'AL',
'ALASKA'               => 'AK',
'ALBAMA'               => 'AL',
'AM'                   => '',
'AR/USA'               => 'AR',
'ARIIZONA'             => 'AZ',
'ARIZONA'              => 'AZ',
'ARK/USA'              => 'AR',
'ARKANSAS'             => 'AR',
'ARTESIANEWMEXICO'     => 'AU',
'AZ/USA'               => 'AZ',
'AZIZONA'              => 'AZ',
'BOSSIERCITY,LA'       => 'LA',
'BOSSIERCITY/LA'       => 'LA',
'BOSSIERCITYLA'        => 'LA',
'BUFORD,GA'            => 'GA',
'CA/USA'               => 'CA',
'CALIFORINA'           => 'CA',
'CALIFORNA'            => 'CA',
'CALIFORNIA'           => 'CA',
'CALIFORNIAUSA'        => 'CA',
'CF'                   => '',
'CF/USA'               => '',
'CL'                   => '',
'CL/USA'               => '',
'CO/USA'               => 'CO',
'COLORADA'             => 'CO',
'COLORADO'             => 'CO',
'CONNECTICUT'          => 'CT',
'CT/USA'               => 'CT',
'DELAWARE'             => 'DE',
'DUBAI,U.A.E'          => 'AE',
'DUBAI,U.A.E.'         => 'AE',
'DURBAN,SOUTHAFRICA'   => '',
'FL/USA'               => 'FL',
'FLOR'                 => 'FL',
'FLORDIA'              => 'FL',
'FLORICA'              => 'FL',
'FLORIDA'              => 'FL',
'FLORIDA/USA'          => 'FL',
'FLORIDIA'             => 'FL',
'FRANCE'               => 'FR',
'GA/USA'               => 'GA',
'GE'                   => 'GA',
'GEORGIA'              => 'GA',
'IDAHO'                => 'ID',
'IL/USA'               => 'IL',
'ILLINIOS'             => 'IL',
'ILLINOIS'             => 'IL',
'IN/USA'               => 'IN',
'INDDIANA'             => 'IN',
'INDIANA'              => 'IN',
'IOWA'                 => 'IA',
'KA'                   => 'KS',
'KA299UR'              => 'KS',
'KA902US'              => 'KS',
'KANSAS'               => 'KS',
'KANSAS/USA'           => 'KS',
'KE'                   => 'KY',
'KENTUCKY'             => 'KY',
'KENTUCKY/OHIO'        => 'KY',
'KOREA'                => '',
'KY/US'                => 'KY',
'LA/USA'               => 'LA',
'LA0417VS'             => 'LA',
'LA-1878-EW'           => 'LA',
'LA2051FG'             => 'LA',
'LA5293FB'             => 'LA',
'LA6163BU'             => 'LA',
'LA6709EM'             => 'LA',
'LASCRUCESNM'          => 'NM',
'LITTLEFERRY,NY'       => 'NY',
'LO'                   => 'LA',
'LOIUSIANA'            => 'LA',
'LOUIISIANA'           => 'LA',
'LOUISANA'             => 'LA',
'LOUISANNA'            => 'LA',
'LOUISIANA'            => 'LA',
'LOUISIANA,USA'        => 'LA',
'LOUISIANA/USA'        => 'LA',
'LOUISIANNA'           => 'LA',
'LOUISINA'             => 'LA',
'LOUSIANA'             => 'LA',
'LOUSIANNA'            => 'LA',
'MAINE'                => 'ME',
'MARYLAND'             => 'MD',
'MASSACHUSETTS'        => 'MA',
'MC/USA'               => '',
'MD/USA'               => 'MD',
'MEXICO'               => 'MX',
'MI/USA'               => 'MI',
'MICHIGAN'             => 'MI',
'MINNESOT'             => 'MN',
'MINNESOTA'            => 'MN',
'MISS'                 => 'MS',
'MISSISSIPPI'          => 'MS',
'MISSISSIPPI/LAWRENCE' => 'MS',
'MISSOURI'             => 'MO',
'MIUSA'                => 'MI',
'MO/USA'               => 'MO',
'MO926EN'              => 'MO',
'MONTANA'              => 'MT',
'MS/USA'               => 'MS',
'MUSKEGONMI'           => 'MI',
'NASHVILLEARKANSAS'    => 'AR',
'NC/USA'               => 'NC',
'NEBRASKA'             => 'NE',
'NEVADA'               => 'NV',
'NEVEDA'               => 'NV',
'NEWHAMPSHIRE'         => 'NH',
'NEWJERSEY'            => 'NJ',
'NEWMEXICO'            => 'NM',
'NEWMEXICOUSA'         => 'NM',
'NEWYORK'              => 'NY',
'NH/USA'               => 'NH',
'NHUSA'                => 'NH',
'NISSOURI'             => 'MO',
'NJ5520GE'             => 'NJ',
'NM/USA'               => 'NM',
'NM7104BB'             => 'NM',
'NO'                   => 'NC',
'NORTHCAROLINA'        => 'NC',
'NORTHDAKOTA'          => 'ND',
'NV/USA'               => 'NV',
'NY/USA'               => 'NY',
'OH/USA'               => 'OH',
'OHIO'                 => 'OH',
'OK/CHOCTAW'           => 'OK',
'OK/US'                => 'OK',
'OK/USA'               => 'OK',
'OKALHOMA'             => 'OK',
'OKLA'                 => 'OK',
'OKLAHAMO'             => 'OK',
'OKLAHOMA'             => 'OK',
'OKLAHOMA/USA'         => 'OK',
'OLKAHOMA'             => 'OK',
'OREGON'               => 'OR',
'PA/USA'               => 'PA',
'PANAMA'               => 'PN',
'PENNSYLANIA'          => 'PA',
'PENNSYLVANIA'         => 'PA',
'PERRYARKANSAS'        => 'AR',
'PLEASANTSHDETN'       => 'TN',
'RHODEISLAND'          => 'RI',
'SC/USA'               => 'SC',
'SHREVEPORT,LA'        => 'LA',
'SO'                   => 'SC',
'SOUTHCAROLINA'        => 'SC',
'SOUTHDAKOTA'          => 'SD',
'STONEWALL,LA.'        => 'LA',
'TE'                   => 'TN',
'TENESSEE'             => 'TN',
'TENN'                 => 'TN',
'TENNESE'              => 'TN',
'TENNESSE'             => 'TN',
'TENNESSEE'            => 'TN',
'TENNESSEE/OVERTON'    => 'TN',
'TENNESSEE/USA'        => 'TN',
'TEXARKANA,AR'         => 'AR',
'TEXARKANA/ARKANSAS'   => 'AR',
'TEXAS'                => 'TX',
'TEXAS8030AA'          => 'TX',
'TN/USA'               => 'TN',
'USA/FL'               => 'FL',
'USA/OK'               => 'OK',
'UTAH'                 => 'UT',
'VA/USA'               => 'VA',
'VIRGINA'              => 'VA',
'VIRGINIA'             => 'VA',
'VIRGINIA/OHIO'        => 'VA',
'WA/USA'               => 'WA',
'WARREN,MI'            => 'MI',
'WASHINGTON'           => 'WA',
'WASHINGTONSTATE'      => 'WA',
'WESTVIRGINIA'         => 'WV',
'WI/USA'               => 'WI',
'WISCONSIN'            => 'WI',
'WISCONSON'            => 'WI',
'WS/USA'               => 'WI',
'WY/USA'               => 'WY',
'WYOMING'              => 'WY', code);

use_desc(string1 code)
:= case(code,
'1' => 'PLEASURE',
'2' => 'LIVERY',
'3' => 'COMMERCIAL FISHING',
'4' => 'COMMERCIAL OTHER',
'5' => 'OTHER',
'7' => 'POLITICAL SUB-DIVISION',
'8' => 'COMMERCIAL NO-FEE','');

prop_desc(string1 code) 
:= case(code,	
'1' => 'OUTBOARD',
'2' => 'INBOARD',
'3' => 'STERN',
'4' => 'OTHER',
'5' => 'SAIL','');

Watercraft.Macro_Clean_Hull_ID(watercraft_preprocess.file_TX_clean_in, watercraft.layout_TX_new_18q3,hull_clean_in)
watercraft.Macro_Is_hull_id_in_MIC(hull_clean_in, watercraft.layout_TX_new_18q3, wDatasetwithflag)

string fFixHullID(string pHullIDIn)
 := lib_stringlib.StringLib.StringFilter(lib_stringlib.stringlib.stringtouppercase(pHullIDIn),'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ ');
 
watercraft.Layout_Watercraft_Main_Base main_mapping_format(wDatasetwithflag L) := TRANSFORM
	 string60 v_lien_name := if(trim(L.PRIMARY_LIEN_BUSINESS)<>'',L.PRIMARY_LIEN_BUSINESS,trim(trim(L.PRIMARY_LIEN_LAST)+' '+trim(L.PRIMARY_LIEN_FIRST)+' '+trim(L.PRIMARY_LIEN_MIDDLE)));
	//New watercraft_key logic to be implemented at a later date
	/*self.watercraft_key			:=	StringLib.StringFindReplace(IF(trim(L.year,left,right) >= '1972' and length(trim(fFixHullID,left, right)) = 12 and L.is_hull_id_in_MIC, trim(fFixHullID,left, right),
																																IF(length(trim(fFixHullID,left,right)) = 12 and trim(L.year,left,right) = '0', trim(fFixHullID,left,right),
																																		trim(L.REG_NUM) != '',L.STATEABREV + L.REG_NUM + IF(trim(L.year,left,right)<>'0',trim(L.year,left,right),''))),' ','');*/
	
	self.watercraft_key			:=	if(trim(L.YEAR,left,right) >= '1972' and length(trim(fFixHullID(L.HULL_ID),left,right)) = 12 and L.is_hull_id_in_MIC, trim(fFixHullID(L.HULL_ID),left,right),
	                              if(fFixHullID(L.HULL_ID) <> '' and trim(fFixHullID(L.HULL_ID),left,right) <> 'UNKN'and 
																	trim(fFixHullID(L.HULL_ID),left,right) <> 'UNKNOWN' and trim(L.YEAR,left,right) <> '19',
																	(trim(fFixHullID(L.HULL_ID),left,right) + trim(L.MAKE,left,right) + trim(L.YEAR,left,right))[1..30],
	                                (trim(L.MAKE,left,right) + trim(L.YEAR,left,right) + trim(L.NAME,left,right))[1..30]));
	self.sequence_key				:=	L.REG_DATE;
	self.state_origin				:=	'TX';
	self.source_code				:=	'AW';
	self.st_registration				:=	L.STATEABREV;
	self.county_registration		:=	county_reg(L.COUNTY);
	self.registration_number		:=	L.REG_NUM;
	self.hull_number						:=	fFixHullID(L.HULL_ID);
	self.propulsion_description	:=	L.PROP;
	self.vehicle_type_Description	:=	L.VEH_TYPE;
	self.fuel_description					:=	L.FUEL;
	self.hull_type_description		:=	if(trim(L.HULL)<>'',l.HULL,l.HULL_MATERIAL_OTHER);
	self.use_description					:=	L.USE_1;
	self.watercraft_length				:=	L.TOTAL_INCH;
	self.model_year								:=	if(length(L.YEAR)< 4, L.YEAR_BUILT, L.YEAR);
	self.watercraft_name					:=	L.USCG_BOAT_NAME;
	self.watercraft_class_description	:=	L.BOAT_CLASS;
	self.watercraft_make_description	:=	L.MAKE;
//	self.watercraft_model_description	:=	L.MODEL; //Removed because field from vendor is a year, not a description
	self.watercraft_color_1_description	:=	if(trim(L.HULL_COLOR_PRIMARY)<>'UNKNOWN',L.HULL_COLOR_PRIMARY,'');
	// self.watercraft_color_2_description	:=	if(trim(L.HULL_COLOR_SECONDARY)<>'UNKNOWN',L.HULL_COLOR_SECONDARY,'');
	self.watercraft_hp_1					:=	L.MTR_1_HORSEPOWER;
	self.watercraft_hp_2					:=	L.MTR_2_HORSEPOWER;
	self.engine_number_1					:=	L.MTR_1_SERIAL;
	self.engine_number_2					:=	L.MTR_2_SERIAL;
	self.coast_guard_documented_flag	:=	L.IS_USCG_DOCUMENTED;
	self.coast_guard_number						:=	L.USCG_DOCUMENT_NUMBER;
	IsValidRegDate										:=	STD.DATE.IsValidDate((integer)L.REG_DATE);
	self.registration_date						:=	If(IsValidRegDate,L.REG_DATE,'');
	IsValidExpireDate									:=	STD.DATE.IsValidDate((integer)L.EXPIRATION_DATE);
	self.registration_expiration_date	:=	If(IsValidExpireDate,L.EXPIRATION_DATE,'');
	self.decal_number									:=	L.DECAL_NUMBER;
	self.transaction_type_description	:=	L.LAST_TRANSACTION;
	self.title_number									:=	if(L.TITLE_NUMBER<> 'NOT-TITLED', L.TITLE_NUMBER, '');
	IsValidTitleDate									:=	STD.DATE.IsValidDate((integer)L.TITLE_ISSUE_DATE);
	self.title_issue_date							:=	If(IsValidTitleDate,L.TITLE_ISSUE_DATE,'');
	self.lien_1_indicator							:=	if(v_lien_name <> '', 'Y', 'N');
	self.lien_1_name									:=	v_lien_name;
	IsValidLienDate										:=	STD.DATE.IsValidDate((integer)L.PRIMARY_LIEN_DATE);
	self.lien_1_date									:=	If(IsValidLienDate,L.PRIMARY_LIEN_DATE,'');
	self.lien_1_address_1							:=	L.PRIMARY_LIEN_ADDRESS1;
	self.lien_1_address_2							:=	L.PRIMARY_LIEN_ADDRESS2;
	self.lien_1_city									:=	L.PRIMARY_LIEN_CITY;
	self.lien_1_state									:=	L.PRIMARY_LIEN_STATE;
	self.lien_1_zip										:=	L.PRIMARY_LIEN_ZIP;
	self.state_purchased							:=	out_of_state(stringlib.stringfilterout(L.STATE_BOAT_IS_FROM,' '));
	IsValidPurchDate									:=	STD.DATE.IsValidDate((integer)L.DATE_OF_SALE);
	self.purchase_date								:=	If(IsValidPurchDate,L.DATE_OF_SALE,'');
	self.purchase_price								:=	L.SALE_PRICE;
	self	:= L;
	self	:= [];
END;
	
EXPORT Map_TX_raw_to_Main := project(wDatasetwithflag, main_mapping_format(left));