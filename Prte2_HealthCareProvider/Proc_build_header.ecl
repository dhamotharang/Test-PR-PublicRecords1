import  STD,PRTE2, _control, PRTE;  
EXPORT PROC_BUILD_header(String pversion) := FUNCTION

header_layout:=RECORD
  unsigned8 lnpid;
  unsigned8 rid;
  unsigned8 did;
  unsigned8 bdid;
  unsigned6 dotid;
  unsigned6 empid;
  unsigned6 powid;
  unsigned6 proxid;
  unsigned6 seleid;
  unsigned6 orgid;
  unsigned6 ultid;
  string2 src;
  unsigned8 source_rid;
  unsigned4 dt_first_seen;
  unsigned4 dt_last_seen;
  unsigned4 dt_vendor_first_reported;
  unsigned4 dt_vendor_last_reported;
  unsigned4 dt_lic_begin;
  unsigned4 dt_lic_expiration;
  unsigned4 dt_dea_expiration;
  unsigned4 dt_npi_deact;
  unsigned4 dt_address_verified;
  unsigned4 dt_bus_incorporated;
  unsigned2 cleavepenalty;
  string1 ambiguous;
  string1 consumer_disclosure;
  string1 entity_type;
  string1 did_flag;
  string1 ssn_flag;
  string1 cnsmr_ssn_flag;
  string1 dob_flag;
  string1 cnsmr_dob_flag;
  string1 lic_nbr_flag;
  string1 c_lic_nbr_flag;
  string1 fname_flag;
  string1 mname_flag;
  string1 lname_flag;
  string1 cname_flag;
  string1 cnp_name_flag;
  string1 addr_flag;
  string1 tax_id_flag;
  string1 billing_tax_id_flag;
  string1 fein_flag;
  string1 derived_fein_flag;
  string1 upin_flag;
  string1 npi_number_flag;
  string1 billing_npi_number_flag;
  string1 dea_number_flag;
  string1 phone_flag;
  string1 fax_flag;
  string1 clia_number_flag;
  string1 taxonomy_flag;
  string1 medicare_facility_number_flag;
  string1 medicaid_number_flag;
  string1 ncpdp_number_flag;
  boolean is_state_sanction;
  boolean is_oig_sanction;
  boolean is_opm_sanction;
  boolean is_public_private_comp;
  boolean is_profit_nonprofit_comp;
  string1 suppress_address;
  string9 ssn;
  string9 cnsmr_ssn;
  unsigned4 dob;
  unsigned4 cnsmr_dob;
  string10 phone;
  string10 fax;
  string25 lic_nbr;
  string25 c_lic_nbr;
  string2 lic_state;
  string60 lic_type;
  string60 lic_status;
  string5 title;
  string20 fname;
  string20 mname;
  string28 lname;
  string5 sname;
  string120 cname;
  unsigned6 cnp_nameid;
  string120 cnp_name;
  string10 cnp_number;
  string10 cnp_store_number;
  string10 cnp_btype;
  string20 cnp_lowv;
  boolean cnp_translated;
  integer4 cnp_classid;
  string8 sic_code;
  string1 gender;
  string1 derived_gender;
  unsigned8 address_id;
  string1 address_classification;
  string10 prim_range;
  string2 predir;
  string28 prim_name;
  string4 addr_suffix;
  string2 postdir;
  string10 unit_desig;
  string8 sec_range;
  string25 p_city_name;
  string25 v_city_name;
  string2 st;
  string5 zip;
  string4 zip4;
  string4 cart;
  string1 cr_sort_sz;
  string4 lot;
  string1 lot_order;
  string2 dbpc;
  string1 chk_digit;
  string2 rec_type;
  string2 fips_state;
  string3 fips_county;
  string10 geo_lat;
  string11 geo_long;
  string4 msa;
  string7 geo_blk;
  string1 geo_match;
  string4 err_stat;
  string1 death_ind;
  unsigned4 dod;
  unsigned4 tax_id;
  unsigned4 billing_tax_id;
  unsigned4 fein;
  unsigned4 derived_fein;
  string6 upin;
  string10 npi_number;
  string10 billing_npi_number;
  string1 dea_bus_act_ind;
  string10 dea_number;
  string10 clia_number;
  string10 taxonomy;
  string4 taxonomy_code;
  string10 medicare_facility_number;
  string15 medicaid_number;
  string7 ncpdp_number;
  string3 speciality_code;
  string1 provider_status;
  string40 vendor_id;
  unsigned8 __internal_fpos__;
 END;
 
 header_Build :=  DATASET([ ],header_layout);
 header_key := INDEX(header_Build,
 {lnpid},{header_Build},
  prte2.constants.prefix + 'key::healthcareprovider::' + pversion + '::header'); 
 
	BUILDindex(header_Key);
 
 return 'Successful';
 end;
