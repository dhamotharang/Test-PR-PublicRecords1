// Machine-readable versions of the spec file and subsets thereof
EXPORT Base_GenerationMod := MODULE
 
  // SALT Version info
  EXPORT salt_VERSION := 'V3.8.0';
  EXPORT salt_MODULE := 'SALT38'; // Optional override by HACK:SALTMODULE
  EXPORT salt_TOOLSMODULE := 'SALTTOOLS30'; // Optional override by HACK:SALTTOOLSMODULE
 
  // Core module configuration values
  EXPORT spc_MODULE := 'Scrubs_DNB_FEIN';
  EXPORT spc_NAMESCOPE := 'Base';
  EXPORT spc_PROCESS := '';
  EXPORT spc_IDNAME := ''; // cluster id (input)
  EXPORT spc_IDFIELD := ''; // cluster id (output)
  EXPORT spc_RIDFIELD := ''; // record id
 
  // The entire spec file
  EXPORT spcString :=
    'OPTIONS:-gh\n'
    + 'MODULE:Scrubs_DNB_FEIN\n'
    + 'FILENAME:DNB_FEIN\n'
    + 'NAMESCOPE:Base\n'
    + '// Uncomment up to NINES for internal or external adl\n'
    + '// IDFIELD:EXISTS:<NameOfIDField>\n'
    + '// RIDFIELD:<NameOfRidField>\n'
    + '// RECORDS:<NumberOfRecordsInDataFile>\n'
    + '// POPULATION:<ExpectedNumberOfEntitiesInDataFile>\n'
    + '// NINES:<Precision required 3 = 99.9%, 2 = 99% etc>\n'
    + '// Uncomment Process if doing external adl\n'
    + '// PROCESS:<ProcessName>\n'
    + '// FIELDTYPE statements can be used to clean up (or check the cleaning) of individual fields\n'
    + '// BESTTYPE statements declare methods of generating the best value for a given cluster; this can also improve linking\n'
    + '// FUZZY can be used to create new types of FUZZY linking\n'
    + '// Remember to generate specificities and update the 0,0 placeholders below before running any sort of linking.\n'
    + '// If the actual specificity for a field is <1, round it up to 1 rather than down to 0.  If your cluster is running\n'
    + '// a shared repository, calling SALTTOOLS30.mac_Patch_SPC from the bottom of BWR_Specificities may be a convenience.\n'
    + '\n'
    + '//FIELDTYPE DEFINITIONS\n'
    + 'FIELDTYPE:invalid_mandatory:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_populated_strings>0)\n'
    + 'FIELDTYPE:invalid_zero_integer:ENUM(0|)\n'
    + 'FIELDTYPE:invalid_percentage:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_range_numeric>0,0,100)\n'
    + 'FIELDTYPE:invalid_pastdate8:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_past_yyyymmdd>0)\n'
    + '\n'
    + 'FIELDTYPE:invalid_tmsid:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_tmsid>0)\n'
    + 'FIELDTYPE:invalid_bdid:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_numeric>0,12)\n'
    + 'FIELDTYPE:invalid_orig_state:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_verify_state>0)\n'
    + 'FIELDTYPE:invalid_orig_zip5:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_numeric>0,5)\n'
    + 'FIELDTYPE:invalid_fein:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_numeric>0,9)\n'
    + 'FIELDTYPE:invalid_source_duns_number:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_numeric>0,9)\n'
    + 'FIELDTYPE:invalid_case_duns_number:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_numeric>0,9)\n'
    + 'FIELDTYPE:invalid_confidence_code:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_numeric>0,2)\n'
    + 'FIELDTYPE:invalid_indirect_direct_source_ind:ENUM(1|2)\n'
    + 'FIELDTYPE:invalid_best_fein_indicator:ENUM(1|)\n'
    + 'FIELDTYPE:invalid_sic_code:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_sic_code>0)\n'
    + 'FIELDTYPE:invalid_telephone_number:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_verify_phone>0)\n'
    + 'FIELDTYPE:invalid_hdqtr_parent_duns_number:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_duns>0)\n'
    + 'FIELDTYPE:invalid_lname:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_valid_name>0,mname,fname,top_contact_name)\n'
    + 'FIELDTYPE:invalid_source_rec_id:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_numeric>0)\n'
    + 'FIELDTYPE:invalid_weight:CUSTOM(Scrubs_DNB_FEIN.Functions.fn_range_numeric>0,0,999)\n'
    + '\n'
    + '\n'
    + '//FIELD DEFINITIONS\n'
    + 'FIELD:tmsid:TYPE(STRING50):LIKE(invalid_tmsid):0,0\n'
    + 'FIELD:bdid:TYPE(STRING12):LIKE(invalid_bdid):0,0\n'
    + 'FIELD:date_first_seen:TYPE(STRING8):LIKE(invalid_pastdate8):0,0\n'
    + 'FIELD:date_last_seen:TYPE(STRING8):LIKE(invalid_pastdate8):0,0\n'
    + 'FIELD:date_vendor_first_reported:TYPE(STRING8):LIKE(invalid_pastdate8):0,0\n'
    + 'FIELD:date_vendor_last_reported:TYPE(STRING8):LIKE(invalid_pastdate8):0,0\n'
    + 'FIELD:orig_company_name:TYPE(STRING50):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:clean_cname:TYPE(STRING50):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:orig_address1:TYPE(STRING30):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:orig_address2:TYPE(STRING30):0,0\n'
    + 'FIELD:orig_city:TYPE(STRING20):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:orig_state:TYPE(STRING2):LIKE(invalid_orig_state):0,0\n'
    + 'FIELD:orig_zip5:TYPE(STRING5):LIKE(invalid_orig_zip5):0,0\n'
    + 'FIELD:orig_zip4:TYPE(STRING4):0,0\n'
    + 'FIELD:orig_county:TYPE(STRING20):0,0\n'
    + 'FIELD:fein:TYPE(STRING9):LIKE(invalid_fein):0,0\n'
    + 'FIELD:source_duns_number:TYPE(STRING9):LIKE(invalid_source_duns_number):0,0\n'
    + 'FIELD:case_duns_number:TYPE(STRING9):LIKE(invalid_case_duns_number):0,0\n'
    + 'FIELD:duns_orig_source:TYPE(STRING50):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:confidence_code:TYPE(STRING2):LIKE(invalid_confidence_code):0,0\n'
    + 'FIELD:indirect_direct_source_ind:TYPE(STRING1):LIKE(invalid_indirect_direct_source_ind):0,0\n'
    + 'FIELD:best_fein_indicator:TYPE(STRING1):LIKE(invalid_best_fein_indicator):0,0\n'
    + 'FIELD:company_name:TYPE(STRING120):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:trade_style:TYPE(STRING120):0,0\n'
    + 'FIELD:sic_code:TYPE(STRING8):LIKE(invalid_sic_code):0,0\n'
    + 'FIELD:telephone_number:TYPE(STRING16):LIKE(invalid_telephone_number):0,0\n'
    + 'FIELD:top_contact_name:TYPE(STRING60):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:top_contact_title:TYPE(STRING60):0,0\n'
    + 'FIELD:hdqtr_parent_duns_number:TYPE(STRING9):LIKE(invalid_hdqtr_parent_duns_number):0,0\n'
    + 'FIELD:title:TYPE(STRING5):0,0\n'
    + 'FIELD:fname:TYPE(STRING20):0,0\n'
    + 'FIELD:mname:TYPE(STRING20):0,0\n'
    + 'FIELD:lname:TYPE(STRING20):LIKE(invalid_lname):0,0\n'
    + 'FIELD:name_suffix:TYPE(STRING5):0,0\n'
    + 'FIELD:name_score:TYPE(STRING3):0,0\n'
    + 'FIELD:prim_range:TYPE(STRING10):0,0\n'
    + 'FIELD:predir:TYPE(STRING2):0,0\n'
    + 'FIELD:prim_name:TYPE(STRING28):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:addr_suffix:TYPE(STRING4):0,0\n'
    + 'FIELD:postdir:TYPE(STRING2):0,0\n'
    + 'FIELD:unit_desig:TYPE(STRING10):0,0\n'
    + 'FIELD:sec_range:TYPE(STRING8):0,0\n'
    + 'FIELD:p_city_name:TYPE(STRING25):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:v_city_name:TYPE(STRING25):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:st:TYPE(STRING2):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:zip:TYPE(STRING5):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:zip4:TYPE(STRING4):0,0\n'
    + 'FIELD:cart:TYPE(STRING4):0,0\n'
    + 'FIELD:cr_sort_sz:TYPE(STRING1):0,0\n'
    + 'FIELD:lot:TYPE(STRING4):0,0\n'
    + 'FIELD:lot_order:TYPE(STRING1):0,0\n'
    + 'FIELD:dbpc:TYPE(STRING2):0,0\n'
    + 'FIELD:chk_digit:TYPE(STRING1):0,0\n'
    + 'FIELD:rec_type:TYPE(STRING2):0,0\n'
    + 'FIELD:county:TYPE(STRING5):0,0\n'
    + 'FIELD:geo_lat:TYPE(STRING10):0,0\n'
    + 'FIELD:geo_long:TYPE(STRING11):0,0\n'
    + 'FIELD:msa:TYPE(STRING4):0,0\n'
    + 'FIELD:geo_blk:TYPE(STRING7):0,0\n'
    + 'FIELD:geo_match:TYPE(STRING1):0,0\n'
    + 'FIELD:err_stat:TYPE(STRING4):0,0\n'
    + 'FIELD:raw_aid:TYPE(UNSIGNED8):0,0\n'
    + 'FIELD:ace_aid:TYPE(UNSIGNED8):0,0\n'
    + 'FIELD:prep_addr_line1:TYPE(STRING100):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:prep_addr_line_last:TYPE(STRING50):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:source_rec_id:TYPE(UNSIGNED8):LIKE(invalid_source_rec_id):0,0\n'
    + 'FIELD:dotid:TYPE(UNSIGNED6):LIKE(invalid_zero_integer):0,0\n'
    + 'FIELD:dotscore:TYPE(UNSIGNED2):LIKE(invalid_zero_integer):0,0\n'
    + 'FIELD:dotweight:TYPE(UNSIGNED2):LIKE(invalid_zero_integer):0,0\n'
    + 'FIELD:empid:TYPE(UNSIGNED6):LIKE(invalid_zero_integer):0,0\n'
    + 'FIELD:empscore:TYPE(UNSIGNED2):LIKE(invalid_zero_integer):0,0\n'
    + 'FIELD:empweight:TYPE(UNSIGNED2):LIKE(invalid_zero_integer):0,0\n'
    + 'FIELD:powid:TYPE(UNSIGNED6):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:powscore:TYPE(UNSIGNED2):LIKE(invalid_percentage):0,0\n'
    + 'FIELD:powweight:TYPE(UNSIGNED2):LIKE(invalid_weight):0,0\n'
    + 'FIELD:proxid:TYPE(UNSIGNED6):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:proxscore:TYPE(UNSIGNED2):LIKE(invalid_percentage):0,0\n'
    + 'FIELD:proxweight:TYPE(UNSIGNED2):LIKE(invalid_weight):0,0\n'
    + 'FIELD:seleid:TYPE(UNSIGNED6):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:selescore:TYPE(UNSIGNED2):LIKE(invalid_percentage):0,0\n'
    + 'FIELD:seleweight:TYPE(UNSIGNED2):LIKE(invalid_weight):0,0\n'
    + 'FIELD:orgid:TYPE(UNSIGNED6):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:orgscore:TYPE(UNSIGNED2):LIKE(invalid_percentage):0,0\n'
    + 'FIELD:orgweight:TYPE(UNSIGNED2):LIKE(invalid_weight):0,0\n'
    + 'FIELD:ultid:TYPE(UNSIGNED6):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:ultscore:TYPE(UNSIGNED2):LIKE(invalid_percentage):0,0\n'
    + 'FIELD:ultweight:TYPE(UNSIGNED2):LIKE(invalid_weight):0,0\n'
    + '// CONCEPT statements should be used to group together interellated fields; such as address\n'
    + '// RELATIONSHIP is used to find non-obvious relationships between the clusters\n'
    + '// SOURCEFIELD is used if a field of the file denotes a source of the records in that file\n'
    + '// LINKPATH is used to define access paths for external linking\n'
    ;
 
  // Structured values
  EXPORT linkpaths := DATASET([
    ],{STRING linkpath;STRING compulsory;STRING optional;STRING bonus;STRING required;STRING search});
 
END;
