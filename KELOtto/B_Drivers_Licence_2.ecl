//HPCC Systems KEL Compiler Version 0.11.0
IMPORT KEL011 AS KEL;
IMPORT B_Person_3,E_Address,E_Bank,E_Bank_Account,E_Customer,E_Drivers_Licence,E_Email,E_Event,E_Internet_Protocol,E_Person,E_Person_Event,E_Person_Person,E_Phone,E_Social_Security_Number FROM KELOtto;
IMPORT * FROM KEL011.Null;
EXPORT B_Drivers_Licence_2 := MODULE
  SHARED VIRTUAL TYPEOF(E_Drivers_Licence.__Result) __E_Drivers_Licence := E_Drivers_Licence.__Result;
  SHARED VIRTUAL TYPEOF(B_Person_3.__ENH_Person_3) __ENH_Person_3 := B_Person_3.__ENH_Person_3;
  SHARED VIRTUAL TYPEOF(E_Person_Event.__Result) __E_Person_Event := E_Person_Event.__Result;
  SHARED VIRTUAL TYPEOF(E_Person_Person.__Result) __E_Person_Person := E_Person_Person.__Result;
  SHARED __EE59971 := __E_Drivers_Licence;
  SHARED __EE60036 := __ENH_Person_3;
  SHARED __EE63931 := __EE60036;
  SHARED __EE60372 := __E_Person_Person;
  SHARED __EE63257 := __EE60372(__NN(__EE60372.From_Person_) AND __NN(__EE60372.To_Person_));
  SHARED __ST64451_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) From_Person_;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE64455 := PROJECT(TABLE(PROJECT(__EE63257,__ST64451_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,TRUE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),From_Person_,To_Person_},From_Person_,To_Person_,MERGE),__ST64451_Layout);
  SHARED __EE60020 := __E_Person_Event;
  SHARED __EE63778 := __EE60020(__NN(__EE60020.Licence_) AND __NN(__EE60020.Subject_));
  SHARED __ST64463_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE64467 := PROJECT(TABLE(PROJECT(__EE63778,__ST64463_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,TRUE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),Subject_,Licence_},Subject_,Licence_,MERGE),__ST64463_Layout);
  SHARED __ST64489_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) From_Person_;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64480(__ST64451_Layout __EE64455, __ST64463_Layout __EE64467) := __EEQP(__EE64467.Subject_,__EE64455.From_Person_);
  __ST64489_Layout __JT64480(__ST64451_Layout __l, __ST64463_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE64487 := JOIN(__EE64455,__EE64467,__JC64480(LEFT,RIGHT),__JT64480(LEFT,RIGHT),INNER,HASH);
  SHARED __ST64598_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64602 := DEDUP(PROJECT(__EE64487,__ST64598_Layout),ALL);
  SHARED __ST64711_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.nint Lex_Id_;
    KEL.typ.ndataset(E_Person.Source_Customers_Layout) Source_Customers_;
    KEL.typ.ndataset(E_Person.Reported_Date_Of_Birth_Layout) Reported_Date_Of_Birth_;
    KEL.typ.ndataset(E_Person.Full_Name_Layout) Full_Name_;
    KEL.typ.nkdate Deceased_Date_;
    KEL.typ.nkdate Deceased_Date_Of_Birth_;
    KEL.typ.nstr Deceased_First_;
    KEL.typ.nstr Deceased_Middle_;
    KEL.typ.nstr Deceased_Last_;
    KEL.typ.nstr Deceased_Match_Code_;
    KEL.typ.nbool _isdeepdive_;
    KEL.typ.nstr _county__death_;
    KEL.typ.nstr Deceased_Ssn_;
    KEL.typ.nstr _state__death__flag_;
    KEL.typ.nstr _death__rec__src_;
    KEL.typ.nstr _state__death__id_;
    KEL.typ.nstr _verfirst_;
    KEL.typ.nstr _verlast_;
    KEL.typ.nstr _veraddr_;
    KEL.typ.nstr _vercity_;
    KEL.typ.nstr _verstate_;
    KEL.typ.nstr _verzip_;
    KEL.typ.nstr _verzip4_;
    KEL.typ.nstr _verssn_;
    KEL.typ.nstr _verdob_;
    KEL.typ.nstr _verhphone_;
    KEL.typ.nstr _verify__addr_;
    KEL.typ.nstr _verify__dob_;
    KEL.typ.nstr _valid__ssn_;
    KEL.typ.nint _nas__summary_;
    KEL.typ.nint _nap__summary_;
    KEL.typ.nstr _cvi_;
    KEL.typ.nstr _additional__fname__1_;
    KEL.typ.nstr _additional__lname__1_;
    KEL.typ.nstr _additional__lname__date__last__1_;
    KEL.typ.nstr _additional__fname__2_;
    KEL.typ.nstr _additional__lname__2_;
    KEL.typ.nstr _additional__lname__date__last__2_;
    KEL.typ.nstr _additional__fname__3_;
    KEL.typ.nstr _additional__lname__3_;
    KEL.typ.nstr _additional__lname__date__last__3_;
    KEL.typ.nint _subjectssncount_;
    KEL.typ.ndataset(E_Person.Hri_List_Layout) Hri_List_;
    KEL.typ.nstr _dobmatchlevel_;
    KEL.typ.nbool _ssnfoundforlexid_;
    KEL.typ.nstr _cvicustomscore_;
    KEL.typ.nint Subject_Ssn_Count_;
    KEL.typ.nint Date_Of_Birth_Match_Level_;
    KEL.typ.nint Stolen_Identity_Index_;
    KEL.typ.nint Synthetic_Identity_Index_;
    KEL.typ.nint Manipulated_Identity_Index_;
    KEL.typ.nint Vulnerable_Victim_Index_;
    KEL.typ.nint Friendlyfraud_Index_;
    KEL.typ.nint Suspicious_Activity_Index_;
    KEL.typ.nint _v2__sourcerisklevel_;
    KEL.typ.nint _v2__assocsuspicousidentitiescount_;
    KEL.typ.nint _v2__assoccreditbureauonlycount_;
    KEL.typ.nint _v2__validationaddrproblems_;
    KEL.typ.nint _v2__inputaddrageoldest_;
    KEL.typ.nstr _v2__inputaddrdwelltype_;
    KEL.typ.nstr _v2__divssnidentitycountnew_;
    KEL.typ.int Death_Prior_To_All_Events_ := 0;
    KEL.typ.int Deceased_ := 0;
    KEL.typ.int Deceased_Dob_Match_ := 0;
    KEL.typ.nfloat Deceased_Event_Percent_;
    KEL.typ.int Deceased_Name_Match_ := 0;
    KEL.typ.int High_Risk_Death_Prior_To_All_Events_ := 0;
    KEL.typ.int In_Customer_Population_ := 0;
    KEL.typ.nint Max_Deceased_To_Event_Diff_;
    KEL.typ.int Vl_Event30_Active_Flag_ := 0;
    KEL.typ.int Vl_Event30_Count_ := 0;
    KEL.typ.int Vl_Event7_Active_Flag_ := 0;
    KEL.typ.int Vl_Event7_Count_ := 0;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64613(B_Person_3.__ST12765_Layout __EE63931, __ST64598_Layout __EE64602) := __EEQP(__EE64602.To_Person_,__EE63931.UID);
  __ST64711_Layout __JT64613(B_Person_3.__ST12765_Layout __l, __ST64598_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE64709 := JOIN(__EE64602,__EE63931,__JC64613(RIGHT,LEFT),__JT64613(RIGHT,LEFT),INNER,HASH);
  SHARED __ST61211_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_Licence.Typ) UID;
    KEL.typ.nint Lex_Id_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64818 := DEDUP(PROJECT(__EE64709,TRANSFORM(__ST61211_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST61229_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64831 := PROJECT(__CLEANANDDO(__EE64818,TABLE(__EE64818,{KEL.typ.int C_O_U_N_T___Person_ := COUNT(GROUP),UID},UID,MERGE)),__ST61229_Layout);
  SHARED __ST61852_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_Licence.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_Licence_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__1_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64837(E_Drivers_Licence.Layout __EE59971, __ST61229_Layout __EE64831) := __EEQP(__EE59971.UID,__EE64831.UID);
  __ST61852_Layout __JT64837(E_Drivers_Licence.Layout __l, __ST61229_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE64851 := JOIN(__EE59971,__EE64831,__JC64837(LEFT,RIGHT),__JT64837(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE63928 := __EE60020;
  SHARED __EE64165 := __EE63928(__NN(__EE63928.Subject_));
  SHARED __ST64900_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) Licence_;
    KEL.typ.ndataset(E_Person_Event.Layout) Person_Event_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64897(__ST64463_Layout __EE64467, E_Person_Event.Layout __EE64165) := __EEQP(__EE64467.Subject_,__EE64165.Subject_);
  __ST64900_Layout __Join__ST64900_Layout(__ST64463_Layout __r, DATASET(E_Person_Event.Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Event_ := __CN(__recs);
  END;
  SHARED __EE64898 := DENORMALIZE(DISTRIBUTE(__EE64467,HASH(Subject_)),DISTRIBUTE(__EE64165,HASH(Subject_)),__JC64897(LEFT,RIGHT),GROUP,__Join__ST64900_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __ST60900_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_Licence.Typ) UID;
    KEL.typ.ndataset(E_Person_Event.Layout) Person_Event_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __ST60900_Layout __ND64926__Project(__ST64900_Layout __PP64922) := TRANSFORM
    SELF.UID := __PP64922.Licence_;
    SELF := __PP64922;
  END;
  SHARED __EE64962 := DEDUP(PROJECT(__EE64898,__ND64926__Project(LEFT)),ALL);
  SHARED __ST60945_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64975 := PROJECT(__CLEANANDDO(__EE64962,TABLE(__EE64962,{KEL.typ.int C_O_U_N_T___Person_ := COUNT(GROUP),UID},UID,MERGE)),__ST60945_Layout);
  SHARED __ST61939_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_Licence.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_Licence_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__2_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64983(__ST61852_Layout __EE64851, __ST60945_Layout __EE64975) := __EEQP(__EE64851.UID,__EE64975.UID);
  __ST61939_Layout __JT64983(__ST61852_Layout __l, __ST60945_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Person__1_ := __r.C_O_U_N_T___Person_;
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65001 := JOIN(__EE64851,__EE64975,__JC64983(LEFT,RIGHT),__JT64983(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE63943 := __EE63778;
  SHARED __EE63922 := __EE60036;
  SHARED __EE64291 := __EE63922(__EE63922.Vl_Event7_Active_Flag_ = 1);
  __JC64299(E_Person_Event.Layout __EE63943, B_Person_3.__ST12765_Layout __EE64291) := __EEQP(__EE63943.Subject_,__EE64291.UID);
  SHARED __EE64300 := JOIN(__EE63943,__EE64291,__JC64299(LEFT,RIGHT),TRANSFORM(E_Person_Event.Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST60719_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_Licence.Typ) UID;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64327 := DEDUP(PROJECT(__EE64300,TRANSFORM(__ST60719_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST60737_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64340 := PROJECT(__CLEANANDDO(__EE64327,TABLE(__EE64327,{KEL.typ.int C_O_U_N_T___Person_Event_ := COUNT(GROUP),UID},UID,MERGE)),__ST60737_Layout);
  SHARED __ST62027_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_Licence.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_Licence_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__3_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65024(__ST61939_Layout __EE65001, __ST60737_Layout __EE64340) := __EEQP(__EE65001.UID,__EE64340.UID);
  __ST62027_Layout __JT65024(__ST61939_Layout __l, __ST60737_Layout __r) := TRANSFORM
    SELF.U_I_D__3_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65042 := JOIN(__EE65001,__EE64340,__JC65024(LEFT,RIGHT),__JT65024(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE60593 := __EE60036(__EE60036.Vl_Event30_Active_Flag_ = 1);
  __JC63796(E_Person_Event.Layout __EE63778, B_Person_3.__ST12765_Layout __EE60593) := __EEQP(__EE63778.Subject_,__EE60593.UID);
  SHARED __EE63797 := JOIN(__EE63778,__EE60593,__JC63796(LEFT,RIGHT),TRANSFORM(E_Person_Event.Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST60525_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_Licence.Typ) UID;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE63824 := DEDUP(PROJECT(__EE63797,TRANSFORM(__ST60525_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST60543_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE63837 := PROJECT(__CLEANANDDO(__EE63824,TABLE(__EE63824,{KEL.typ.int C_O_U_N_T___Person_Event_ := COUNT(GROUP),UID},UID,MERGE)),__ST60543_Layout);
  SHARED __ST62112_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_Licence.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_Licence_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Person_Event__1_ := 0;
    KEL.typ.ntyp(E_Drivers_Licence.Typ) U_I_D__4_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65065(__ST62027_Layout __EE65042, __ST60543_Layout __EE63837) := __EEQP(__EE65042.UID,__EE63837.UID);
  __ST62112_Layout __JT65065(__ST62027_Layout __l, __ST60543_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Person_Event__1_ := __r.C_O_U_N_T___Person_Event_;
    SELF.U_I_D__4_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65087 := JOIN(__EE65042,__EE63837,__JC65065(LEFT,RIGHT),__JT65065(LEFT,RIGHT),LEFT OUTER,HASH);
  EXPORT __ST11980_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_Licence.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_Licence_Id_;
    KEL.typ.int Cl_Active30_Identity_Count_ := 0;
    KEL.typ.int Cl_Active7_Identity_Count_ := 0;
    KEL.typ.int Cl_Event_Count_ := 0;
    KEL.typ.int Cl_Identity_Count_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST11980_Layout __ND65113__Project(__ST62112_Layout __PP65088) := TRANSFORM
    SELF.Cl_Active30_Identity_Count_ := __PP65088.C_O_U_N_T___Person_Event__1_;
    SELF.Cl_Active7_Identity_Count_ := __PP65088.C_O_U_N_T___Person_Event_;
    SELF.Cl_Event_Count_ := __PP65088.C_O_U_N_T___Person__1_;
    SELF.Cl_Identity_Count_ := __PP65088.C_O_U_N_T___Person_;
    SELF := __PP65088;
  END;
  EXPORT __ENH_Drivers_Licence_2 := PROJECT(__EE65087,__ND65113__Project(LEFT));
END;
