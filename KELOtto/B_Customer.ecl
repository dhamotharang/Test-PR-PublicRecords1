//HPCC Systems KEL Compiler Version 0.11.6-2
IMPORT KEL011 AS KEL;
IMPORT B_Customer_1,B_Customer_4,B_Person_1,B_Person_2,E_Address,E_Customer,E_Customer_Person,E_Person FROM KELOtto;
IMPORT * FROM KEL011.Null;
EXPORT B_Customer := MODULE
  SHARED VIRTUAL TYPEOF(B_Customer_1.__ENH_Customer_1) __ENH_Customer_1 := B_Customer_1.__ENH_Customer_1;
  SHARED VIRTUAL TYPEOF(E_Customer_Person.__Result) __E_Customer_Person := E_Customer_Person.__Result;
  SHARED VIRTUAL TYPEOF(B_Person_1.__ENH_Person_1) __ENH_Person_1 := B_Person_1.__ENH_Person_1;
  SHARED __EE1425124 := __ENH_Customer_1;
  SHARED __EE1425911 := __ENH_Person_1;
  SHARED __EE1425909 := __E_Customer_Person;
  SHARED __EE1437740 := __EE1425909(__NN(__EE1425909._r_Customer_) AND __NN(__EE1425909.Subject_));
  SHARED __ST1431155_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.nint Lex_Id_;
    KEL.typ.ndataset(E_Person.Source_Customers_Layout) Source_Customers_;
    KEL.typ.ndataset(E_Person.Reported_Date_Of_Birth_Layout) Reported_Date_Of_Birth_;
    KEL.typ.ndataset(E_Person.Reported_Ssn_Layout) Reported_Ssn_;
    KEL.typ.ndataset(E_Person.Reported_Email_Address_Layout) Reported_Email_Address_;
    KEL.typ.ndataset(E_Person.Full_Name_Layout) Full_Name_;
    KEL.typ.nkdate Deceased_Date_;
    KEL.typ.nkdate Deceased_Date_Of_Birth_;
    KEL.typ.nstr Deceased_First_;
    KEL.typ.nstr Deceased_Middle_;
    KEL.typ.nstr Deceased_Last_;
    KEL.typ.nstr Deceased_Match_Code_;
    KEL.typ.nbool _isdeepdive_;
    KEL.typ.nstr _county__death_;
    KEL.typ.nstr Deceased_Ssn_;
    KEL.typ.nstr _state__death__flag_;
    KEL.typ.nstr _death__rec__src_;
    KEL.typ.nstr _state__death__id_;
    KEL.typ.nstr _verfirst_;
    KEL.typ.nstr _verlast_;
    KEL.typ.nstr _veraddr_;
    KEL.typ.nstr _vercity_;
    KEL.typ.nstr _verstate_;
    KEL.typ.nstr _verzip_;
    KEL.typ.nstr _verzip4_;
    KEL.typ.nstr _verssn_;
    KEL.typ.nstr _verdob_;
    KEL.typ.nstr _verhphone_;
    KEL.typ.nstr _verify__addr_;
    KEL.typ.nstr _verify__dob_;
    KEL.typ.nstr _valid__ssn_;
    KEL.typ.nint _nas__summary_;
    KEL.typ.nint _nap__summary_;
    KEL.typ.nstr _cvi_;
    KEL.typ.nstr _additional__fname__1_;
    KEL.typ.nstr _additional__lname__1_;
    KEL.typ.nstr _additional__lname__date__last__1_;
    KEL.typ.nstr _additional__fname__2_;
    KEL.typ.nstr _additional__lname__2_;
    KEL.typ.nstr _additional__lname__date__last__2_;
    KEL.typ.nstr _additional__fname__3_;
    KEL.typ.nstr _additional__lname__3_;
    KEL.typ.nstr _additional__lname__date__last__3_;
    KEL.typ.nint _subjectssncount_;
    KEL.typ.nstr _dobmatchlevel_;
    KEL.typ.nbool _ssnfoundforlexid_;
    KEL.typ.nstr _cvicustomscore_;
    KEL.typ.nint Subject_Ssn_Count_;
    KEL.typ.nint Date_Of_Birth_Match_Level_;
    KEL.typ.nint Stolen_Identity_Index_;
    KEL.typ.nint Synthetic_Identity_Index_;
    KEL.typ.nint Manipulated_Identity_Index_;
    KEL.typ.nint Vulnerable_Victim_Index_;
    KEL.typ.nint Friendlyfraud_Index_;
    KEL.typ.nint Suspicious_Activity_Index_;
    KEL.typ.nint _v2__sourcerisklevel_;
    KEL.typ.nint _v2__assocsuspicousidentitiescount_;
    KEL.typ.nint _v2__assoccreditbureauonlycount_;
    KEL.typ.nint _v2__validationaddrproblems_;
    KEL.typ.nint _v2__inputaddrageoldest_;
    KEL.typ.nstr _v2__inputaddrdwelltype_;
    KEL.typ.nstr _v2__divssnidentitycountnew_;
    KEL.typ.nstr _curr__incar__flag_;
    KEL.typ.nint _name__ssn__dob__match_;
    KEL.typ.ndataset(E_Person.Offenses_Layout) Offenses_;
    KEL.typ.ndataset(E_Person.Address_Layout) Address_;
    KEL.typ.int Address_Count_ := 0;
    KEL.typ.int Address_Invalid30_Count_ := 0;
    KEL.typ.int Address_Is_Cmra30_Count_ := 0;
    KEL.typ.int Address_Is_Out_Of_State30_Count_ := 0;
    KEL.typ.nint Age_;
    KEL.typ.int All_Death_Prior_To_All_Events_ := 0;
    KEL.typ.nfloat All_Deceased_Event_Percent_;
    KEL.typ.nint All_Max_Deceased_To_Event_Diff_;
    B_Person_2.__NS463900_Layout Best_Full_Name_;
    B_Person_1.__NS845429_Layout Best_Reported_Address_;
    B_Person_1.__NS845449_Layout Best_Reported_Email_;
    B_Person_1.__NS845457_Layout Best_Reported_Ssn_;
    KEL.typ.int Cl_Active30_Identity_Count_ := 0;
    KEL.typ.nint Cl_Active30_Identity_Count_Percentile_;
    KEL.typ.int Cl_Active7_Identity_Count_ := 0;
    KEL.typ.nint Cl_Active7_Identity_Count_Percentile_;
    KEL.typ.int Cl_Address_Safe_Count_ := 0;
    KEL.typ.int Cl_Adjacent_Safe_Element_Count_ := 0;
    KEL.typ.int Cl_Bank_Account_Safe_Count_ := 0;
    KEL.typ.int Cl_Bank_Identity_Count_Gt2_Count_ := 0;
    KEL.typ.int Cl_Drivers_License_Safe_Count_ := 0;
    KEL.typ.int Cl_Email_Safe_Count_ := 0;
    KEL.typ.int Cl_Event_Count_ := 0;
    KEL.typ.nint Cl_Event_Count_Percentile_;
    KEL.typ.int Cl_High_Kr_Identity_Count_ := 0;
    KEL.typ.float Cl_High_Kr_Identity_Percent_ := 0.0;
    KEL.typ.int Cl_High_Risk_Death_Prior_To_All_Events_Identity_Count_ := 0;
    KEL.typ.float Cl_High_Risk_Death_Prior_To_All_Events_Identity_Percent_ := 0.0;
    KEL.typ.int Cl_High_Risk_Email_Count_ := 0;
    KEL.typ.int Cl_Identity_Count_ := 0;
    KEL.typ.nint Cl_Identity_Count_Percentile_;
    KEL.typ.int Cl_Ip_High_Risk_Identity_Count_ := 0;
    KEL.typ.int Cl_Ip_Safe_Count_ := 0;
    KEL.typ.int Cl_Nap3_Identity_Count_ := 0;
    KEL.typ.float Cl_Nas3_Identity_Percent_ := 0.0;
    KEL.typ.int Cl_Nas9_Identity_Count_ := 0;
    KEL.typ.float Cl_Nas9_Identity_Percent_ := 0.0;
    KEL.typ.int Cl_P_R_Identity_Match_Count_ := 0;
    KEL.typ.int Cl_Phone_Safe_Count_ := 0;
    KEL.typ.int Cl_Ssn_Safe_Count_ := 0;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.int Death_Prior_To_All_Events_ := 0;
    KEL.typ.int Deceased_ := 0;
    KEL.typ.int Deceased_Dob_Match_ := 0;
    KEL.typ.nfloat Deceased_Event_Percent_;
    KEL.typ.int Deceased_Match_ := 0;
    KEL.typ.int Deceased_Name_Match_ := 0;
    KEL.typ.nunk Entity_Context_Uid_;
    KEL.typ.int Event_Count_ := 0;
    KEL.typ.int Fraud_Offense_Count_ := 0;
    KEL.typ.int High_Risk_Death_Prior_To_All_Events_ := 0;
    KEL.typ.int In_Customer_Population_ := 0;
    KEL.typ.int Ip_High_Risk_City_ := 0;
    KEL.typ.int Ip_Hosted_ := 0;
    KEL.typ.int Ip_Not_Us_ := 0;
    KEL.typ.int Ip_Tor_ := 0;
    KEL.typ.int Ip_Vpn_ := 0;
    KEL.typ.int Kr_Event_After_Known_Risk_Count_ := 0;
    KEL.typ.int Kr_Event_After_Known_Risk_Flag_ := 0;
    KEL.typ.int Kr_Event_After_Last_Known_Risk_Count_ := 0;
    KEL.typ.int Kr_High_Risk_Flag_ := 0;
    KEL.typ.int Kr_High_Risk_Routing_ := 0;
    KEL.typ.nkdate Kr_Last_Event_Date_;
    KEL.typ.int Kr_Medium_Risk_Flag_ := 0;
    KEL.typ.int Kr_Not_Known_Risk_Has_Known_Risk_Element_Flag_ := 0;
    KEL.typ.nstr Label_;
    KEL.typ.nint Max_Deceased_To_Event_Diff_;
    KEL.typ.int Nap3_Flag_ := 0;
    KEL.typ.int Nas9_Flag_ := 0;
    KEL.typ.int No_Lex_Id_ := 0;
    KEL.typ.int No_Lex_Id_Gt22_ := 0;
    KEL.typ.int Safe_Flag_ := 0;
    KEL.typ.nkdate Safe_Flag_Last_Date_;
    KEL.typ.int Safe_Flag_Transaction_Count_ := 0;
    KEL.typ.nint Score_;
    KEL.typ.int Validation_Addr_Problems30_Count_ := 0;
    KEL.typ.int Vl_Event30_Active_Flag_ := 0;
    KEL.typ.int Vl_Event30_All_Day_Count_ := 0;
    KEL.typ.int Vl_Event30_Count_ := 0;
    KEL.typ.int Vl_Event7_Active_Flag_ := 0;
    KEL.typ.int Vl_Event7_All_Count_ := 0;
    KEL.typ.int Vl_Event7_Count_ := 0;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer__1_;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1437764(B_Person_1.__ST54566_Layout __EE1425911, E_Customer_Person.Layout __EE1437740) := __EEQP(__EE1437740.Subject_,__EE1425911.UID);
  __ST1431155_Layout __JT1437764(B_Person_1.__ST54566_Layout __l, E_Customer_Person.Layout __r) := TRANSFORM
    SELF._r_Customer__1_ := __r._r_Customer_;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1437765 := JOIN(__EE1437740,__EE1425911,__JC1437764(RIGHT,LEFT),__JT1437764(RIGHT,LEFT),INNER,HASH);
  SHARED __ST1426914_Layout := RECORD
    KEL.typ.ntyp(E_Customer.Typ) UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.nuid U_I_D__1_;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer__1_;
    KEL.typ.nint Lex_Id_;
    KEL.typ.ndataset(E_Person.Source_Customers_Layout) Source_Customers_;
    KEL.typ.ndataset(E_Person.Reported_Date_Of_Birth_Layout) Reported_Date_Of_Birth_;
    KEL.typ.ndataset(E_Person.Reported_Ssn_Layout) Reported_Ssn_;
    KEL.typ.ndataset(E_Person.Reported_Email_Address_Layout) Reported_Email_Address_;
    KEL.typ.ndataset(E_Person.Full_Name_Layout) Full_Name_;
    KEL.typ.nkdate Deceased_Date_;
    KEL.typ.nkdate Deceased_Date_Of_Birth_;
    KEL.typ.nstr Deceased_First_;
    KEL.typ.nstr Deceased_Middle_;
    KEL.typ.nstr Deceased_Last_;
    KEL.typ.nstr Deceased_Match_Code_;
    KEL.typ.nbool _isdeepdive_;
    KEL.typ.nstr _county__death_;
    KEL.typ.nstr Deceased_Ssn_;
    KEL.typ.nstr _state__death__flag_;
    KEL.typ.nstr _death__rec__src_;
    KEL.typ.nstr _state__death__id_;
    KEL.typ.nstr _verfirst_;
    KEL.typ.nstr _verlast_;
    KEL.typ.nstr _veraddr_;
    KEL.typ.nstr _vercity_;
    KEL.typ.nstr _verstate_;
    KEL.typ.nstr _verzip_;
    KEL.typ.nstr _verzip4_;
    KEL.typ.nstr _verssn_;
    KEL.typ.nstr _verdob_;
    KEL.typ.nstr _verhphone_;
    KEL.typ.nstr _verify__addr_;
    KEL.typ.nstr _verify__dob_;
    KEL.typ.nstr _valid__ssn_;
    KEL.typ.nint _nas__summary_;
    KEL.typ.nint _nap__summary_;
    KEL.typ.nstr _cvi_;
    KEL.typ.nstr _additional__fname__1_;
    KEL.typ.nstr _additional__lname__1_;
    KEL.typ.nstr _additional__lname__date__last__1_;
    KEL.typ.nstr _additional__fname__2_;
    KEL.typ.nstr _additional__lname__2_;
    KEL.typ.nstr _additional__lname__date__last__2_;
    KEL.typ.nstr _additional__fname__3_;
    KEL.typ.nstr _additional__lname__3_;
    KEL.typ.nstr _additional__lname__date__last__3_;
    KEL.typ.nint _subjectssncount_;
    KEL.typ.nstr _dobmatchlevel_;
    KEL.typ.nbool _ssnfoundforlexid_;
    KEL.typ.nstr _cvicustomscore_;
    KEL.typ.nint Subject_Ssn_Count_;
    KEL.typ.nint Date_Of_Birth_Match_Level_;
    KEL.typ.nint Stolen_Identity_Index_;
    KEL.typ.nint Synthetic_Identity_Index_;
    KEL.typ.nint Manipulated_Identity_Index_;
    KEL.typ.nint Vulnerable_Victim_Index_;
    KEL.typ.nint Friendlyfraud_Index_;
    KEL.typ.nint Suspicious_Activity_Index_;
    KEL.typ.nint _v2__sourcerisklevel_;
    KEL.typ.nint _v2__assocsuspicousidentitiescount_;
    KEL.typ.nint _v2__assoccreditbureauonlycount_;
    KEL.typ.nint _v2__validationaddrproblems_;
    KEL.typ.nint _v2__inputaddrageoldest_;
    KEL.typ.nstr _v2__inputaddrdwelltype_;
    KEL.typ.nstr _v2__divssnidentitycountnew_;
    KEL.typ.nstr _curr__incar__flag_;
    KEL.typ.nint _name__ssn__dob__match_;
    KEL.typ.ndataset(E_Person.Offenses_Layout) Offenses_;
    KEL.typ.ndataset(E_Person.Address_Layout) Address_;
    KEL.typ.int Address_Count_ := 0;
    KEL.typ.int Address_Invalid30_Count_ := 0;
    KEL.typ.int Address_Is_Cmra30_Count_ := 0;
    KEL.typ.int Address_Is_Out_Of_State30_Count_ := 0;
    KEL.typ.nint Age_;
    KEL.typ.int All_Death_Prior_To_All_Events_ := 0;
    KEL.typ.nfloat All_Deceased_Event_Percent_;
    KEL.typ.nint All_Max_Deceased_To_Event_Diff_;
    B_Person_2.__NS463900_Layout Best_Full_Name_;
    B_Person_1.__NS845429_Layout Best_Reported_Address_;
    B_Person_1.__NS845449_Layout Best_Reported_Email_;
    B_Person_1.__NS845457_Layout Best_Reported_Ssn_;
    KEL.typ.int Cl_Active30_Identity_Count_ := 0;
    KEL.typ.nint Cl_Active30_Identity_Count_Percentile_;
    KEL.typ.int Cl_Active7_Identity_Count_ := 0;
    KEL.typ.nint Cl_Active7_Identity_Count_Percentile_;
    KEL.typ.int Cl_Address_Safe_Count_ := 0;
    KEL.typ.int Cl_Adjacent_Safe_Element_Count_ := 0;
    KEL.typ.int Cl_Bank_Account_Safe_Count_ := 0;
    KEL.typ.int Cl_Bank_Identity_Count_Gt2_Count_ := 0;
    KEL.typ.int Cl_Drivers_License_Safe_Count_ := 0;
    KEL.typ.int Cl_Email_Safe_Count_ := 0;
    KEL.typ.int Cl_Event_Count_ := 0;
    KEL.typ.nint Cl_Event_Count_Percentile_;
    KEL.typ.int Cl_High_Kr_Identity_Count_ := 0;
    KEL.typ.float Cl_High_Kr_Identity_Percent_ := 0.0;
    KEL.typ.int Cl_High_Risk_Death_Prior_To_All_Events_Identity_Count_ := 0;
    KEL.typ.float Cl_High_Risk_Death_Prior_To_All_Events_Identity_Percent_ := 0.0;
    KEL.typ.int Cl_High_Risk_Email_Count_ := 0;
    KEL.typ.int Cl_Identity_Count_ := 0;
    KEL.typ.nint Cl_Identity_Count_Percentile_;
    KEL.typ.int Cl_Ip_High_Risk_Identity_Count_ := 0;
    KEL.typ.int Cl_Ip_Safe_Count_ := 0;
    KEL.typ.int Cl_Nap3_Identity_Count_ := 0;
    KEL.typ.float Cl_Nas3_Identity_Percent_ := 0.0;
    KEL.typ.int Cl_Nas9_Identity_Count_ := 0;
    KEL.typ.float Cl_Nas9_Identity_Percent_ := 0.0;
    KEL.typ.int Cl_P_R_Identity_Match_Count_ := 0;
    KEL.typ.int Cl_Phone_Safe_Count_ := 0;
    KEL.typ.int Cl_Ssn_Safe_Count_ := 0;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.int Death_Prior_To_All_Events_ := 0;
    KEL.typ.int Deceased_ := 0;
    KEL.typ.int Deceased_Dob_Match_ := 0;
    KEL.typ.nfloat Deceased_Event_Percent_;
    KEL.typ.int Deceased_Match_ := 0;
    KEL.typ.int Deceased_Name_Match_ := 0;
    KEL.typ.nunk Entity_Context_Uid_;
    KEL.typ.int Event_Count_ := 0;
    KEL.typ.int Fraud_Offense_Count_ := 0;
    KEL.typ.int High_Risk_Death_Prior_To_All_Events_ := 0;
    KEL.typ.int In_Customer_Population_ := 0;
    KEL.typ.int Ip_High_Risk_City_ := 0;
    KEL.typ.int Ip_Hosted_ := 0;
    KEL.typ.int Ip_Not_Us_ := 0;
    KEL.typ.int Ip_Tor_ := 0;
    KEL.typ.int Ip_Vpn_ := 0;
    KEL.typ.int Kr_Event_After_Known_Risk_Count_ := 0;
    KEL.typ.int Kr_Event_After_Known_Risk_Flag_ := 0;
    KEL.typ.int Kr_Event_After_Last_Known_Risk_Count_ := 0;
    KEL.typ.int Kr_High_Risk_Flag_ := 0;
    KEL.typ.int Kr_High_Risk_Routing_ := 0;
    KEL.typ.nkdate Kr_Last_Event_Date_;
    KEL.typ.int Kr_Medium_Risk_Flag_ := 0;
    KEL.typ.int Kr_Not_Known_Risk_Has_Known_Risk_Element_Flag_ := 0;
    KEL.typ.nstr Label_;
    KEL.typ.nint Max_Deceased_To_Event_Diff_;
    KEL.typ.int Nap3_Flag_ := 0;
    KEL.typ.int Nas9_Flag_ := 0;
    KEL.typ.int No_Lex_Id_ := 0;
    KEL.typ.int No_Lex_Id_Gt22_ := 0;
    KEL.typ.int Safe_Flag_ := 0;
    KEL.typ.nkdate Safe_Flag_Last_Date_;
    KEL.typ.int Safe_Flag_Transaction_Count_ := 0;
    KEL.typ.nint Score_;
    KEL.typ.int Validation_Addr_Problems30_Count_ := 0;
    KEL.typ.int Vl_Event30_Active_Flag_ := 0;
    KEL.typ.int Vl_Event30_All_Day_Count_ := 0;
    KEL.typ.int Vl_Event30_Count_ := 0;
    KEL.typ.int Vl_Event7_Active_Flag_ := 0;
    KEL.typ.int Vl_Event7_All_Count_ := 0;
    KEL.typ.int Vl_Event7_Count_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __ST1426914_Layout __ND1437983__Project(__ST1431155_Layout __PP1437766) := TRANSFORM
    SELF.UID := __PP1437766._r_Customer__1_;
    SELF._r_Customer_ := __PP1437766._r_Customer__1_;
    SELF.U_I_D__1_ := __PP1437766.UID;
    SELF._r_Customer__1_ := __PP1437766._r_Customer_;
    SELF := __PP1437766;
  END;
  SHARED __EE1438712 := PROJECT(__EE1437765,__ND1437983__Project(LEFT));
  SHARED __ST1427362_Layout := RECORD
    KEL.typ.ntyp(E_Customer.Typ) UID;
    KEL.typ.nint Exp1_;
    KEL.typ.nint Exp2_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __ST1427362_Layout __ND1438717__Project(__ST1426914_Layout __PP1438713) := TRANSFORM
    SELF.Exp1_ := __CN(__PP1438713.Address_Count_);
    SELF.Exp2_ := __CN(__PP1438713.Event_Count_);
    SELF := __PP1438713;
  END;
  SHARED __EE1438732 := PROJECT(__EE1438712,__ND1438717__Project(LEFT));
  SHARED __EE1438943 := __EE1438732;
  SHARED __ST1430281_Layout := RECORD
    KEL.typ.nint M_E_D_I_A_N___Address_Count_;
    KEL.typ.nint M_E_D_I_A_N___Event_Count_;
    KEL.typ.ntyp(E_Customer.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  __ST1430281_WeightLayout := {KEL.typ.int M_E_D_I_A_N___Address_Count_,KEL.typ.int M_E_D_I_A_N___Event_Count_};
  __ST1430281_WeightLayout __ST1430281_WeightCalc(KEL.Aggregates.RankedFieldN __r) := TRANSFORM
    SELF.M_E_D_I_A_N___Address_Count_ := IF(__r.number = 1,KEL.Aggregates.NTileWeight(2,1,__r.size,__r.pos),0);
    SELF.M_E_D_I_A_N___Event_Count_ := IF(__r.number = 2,KEL.Aggregates.NTileWeight(2,1,__r.size,__r.pos),0);
  END;
  __ST1430281_Layout __ST1430281_Normalize(__ST1430281_Layout __r) := TRANSFORM
    SELF.M_E_D_I_A_N___Address_Count_ := __OP2(__r.M_E_D_I_A_N___Address_Count_,/,__CN(2));
    SELF.M_E_D_I_A_N___Event_Count_ := __OP2(__r.M_E_D_I_A_N___Event_Count_,/,__CN(2));
    SELF := __r;
  END;
  __RK1438951 := KEL.Aggregates.RankingGroupedSmall2(__EE1438943,'Exp1_,Exp2_','UID',__ST1430281_WeightLayout,__ST1430281_Layout,__ST1430281_WeightCalc,__ST1430281_Normalize,TRUE,FALSE,FALSE);
  SHARED __EE1438966 := __RK1438951;
  SHARED __ST1433092_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Customer_Id_;
    KEL.typ.nint Industry_Type_;
    KEL.typ.ndataset(E_Customer.States_Layout) States_;
    KEL.typ.int Address_Count_ := 0;
    KEL.typ.int All_Address_Count_ := 0;
    KEL.typ.int All_Deceased_Matched_Person_Count_ := 0;
    KEL.typ.int All_Deceased_Person_Count_ := 0;
    KEL.typ.int All_High_Frequency_Address_Count_ := 0;
    KEL.typ.int All_Person_Count_ := 0;
    KEL.typ.int Deceased_Person_Count_ := 0;
    KEL.typ.nkdate Event_Date_Max_;
    KEL.typ.int High_Frequency_Address_Count_ := 0;
    KEL.typ.nstr Jurisdiction_State_;
    B_Customer_4.__NS156185_Layout Jurisdiction_State_Top_;
    KEL.typ.int Person_Count_ := 0;
    KEL.typ.nint M_E_D_I_A_N___Address_Count_;
    KEL.typ.nint M_E_D_I_A_N___Event_Count_;
    KEL.typ.ntyp(E_Customer.Typ) U_I_D__1_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1438972(B_Customer_1.__ST49612_Layout __EE1425124, __ST1430281_Layout __EE1438966) := __EEQP(__EE1425124.UID,__EE1438966.UID);
  __ST1433092_Layout __JT1438972(B_Customer_1.__ST49612_Layout __l, __ST1430281_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1438973 := JOIN(__EE1425124,__EE1438966,__JC1438972(LEFT,RIGHT),__JT1438972(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __ST1427382_Layout := RECORD
    KEL.typ.nfloat A_V_E___Address_Count_;
    KEL.typ.nfloat A_V_E___Event_Count_;
    KEL.typ.ntyp(E_Customer.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE1438753 := PROJECT(__CLEANANDDO(__EE1438732,TABLE(__EE1438732,{KEL.Aggregates.AveNG(__EE1438732.Exp1_) A_V_E___Address_Count_,KEL.Aggregates.AveNG(__EE1438732.Exp2_) A_V_E___Event_Count_,UID},UID,MERGE)),__ST1427382_Layout);
  SHARED __ST1433270_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Customer_Id_;
    KEL.typ.nint Industry_Type_;
    KEL.typ.ndataset(E_Customer.States_Layout) States_;
    KEL.typ.int Address_Count_ := 0;
    KEL.typ.int All_Address_Count_ := 0;
    KEL.typ.int All_Deceased_Matched_Person_Count_ := 0;
    KEL.typ.int All_Deceased_Person_Count_ := 0;
    KEL.typ.int All_High_Frequency_Address_Count_ := 0;
    KEL.typ.int All_Person_Count_ := 0;
    KEL.typ.int Deceased_Person_Count_ := 0;
    KEL.typ.nkdate Event_Date_Max_;
    KEL.typ.int High_Frequency_Address_Count_ := 0;
    KEL.typ.nstr Jurisdiction_State_;
    B_Customer_4.__NS156185_Layout Jurisdiction_State_Top_;
    KEL.typ.int Person_Count_ := 0;
    KEL.typ.nint M_E_D_I_A_N___Address_Count_;
    KEL.typ.nint M_E_D_I_A_N___Event_Count_;
    KEL.typ.ntyp(E_Customer.Typ) U_I_D__1_;
    KEL.typ.nfloat A_V_E___Address_Count_;
    KEL.typ.nfloat A_V_E___Event_Count_;
    KEL.typ.ntyp(E_Customer.Typ) U_I_D__2_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC1439007(__ST1433092_Layout __EE1438973, __ST1427382_Layout __EE1438753) := __EEQP(__EE1438973.UID,__EE1438753.UID);
  __ST1433270_Layout __JT1439007(__ST1433092_Layout __l, __ST1427382_Layout __r) := TRANSFORM
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE1439008 := JOIN(__EE1438973,__EE1438753,__JC1439007(LEFT,RIGHT),__JT1439007(LEFT,RIGHT),LEFT OUTER,HASH);
  EXPORT __ST35958_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Customer_Id_;
    KEL.typ.nint Industry_Type_;
    KEL.typ.ndataset(E_Customer.States_Layout) States_;
    KEL.typ.int Address_Count_ := 0;
    KEL.typ.int All_Address_Count_ := 0;
    KEL.typ.float All_Deceased_Matched_Percent_ := 0.0;
    KEL.typ.int All_Deceased_Matched_Person_Count_ := 0;
    KEL.typ.int All_Deceased_Person_Count_ := 0;
    KEL.typ.float All_Deceased_Person_Percent_ := 0.0;
    KEL.typ.int All_High_Frequency_Address_Count_ := 0;
    KEL.typ.float All_High_Frequency_Address_Percent_ := 0.0;
    KEL.typ.int All_Person_Count_ := 0;
    KEL.typ.int Deceased_Person_Count_ := 0;
    KEL.typ.float Deceased_Person_Percent_ := 0.0;
    KEL.typ.nkdate Event_Date_Max_;
    KEL.typ.int High_Frequency_Address_Count_ := 0;
    KEL.typ.float High_Frequency_Address_Percent_ := 0.0;
    KEL.typ.nstr Jurisdiction_State_;
    B_Customer_4.__NS156185_Layout Jurisdiction_State_Top_;
    KEL.typ.nfloat Person_Address_Count_Average_;
    KEL.typ.nint Person_Address_Count_Median_;
    KEL.typ.int Person_Count_ := 0;
    KEL.typ.nfloat Person_Event_Count_Average_;
    KEL.typ.nint Person_Event_Count_Median_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST35958_Layout __ND1439044__Project(__ST1433270_Layout __PP1439009) := TRANSFORM
    SELF.All_Deceased_Matched_Percent_ := __PP1439009.All_Deceased_Matched_Person_Count_ / __PP1439009.All_Person_Count_;
    SELF.All_Deceased_Person_Percent_ := __PP1439009.All_Deceased_Person_Count_ / __PP1439009.All_Person_Count_;
    SELF.All_High_Frequency_Address_Percent_ := __PP1439009.All_High_Frequency_Address_Count_ / __PP1439009.All_Address_Count_;
    SELF.Deceased_Person_Percent_ := __PP1439009.Deceased_Person_Count_ / __PP1439009.Person_Count_;
    SELF.High_Frequency_Address_Percent_ := __PP1439009.High_Frequency_Address_Count_ / __PP1439009.Address_Count_;
    SELF.Person_Address_Count_Average_ := __PP1439009.A_V_E___Address_Count_;
    SELF.Person_Address_Count_Median_ := __PP1439009.M_E_D_I_A_N___Address_Count_;
    SELF.Person_Event_Count_Average_ := __PP1439009.A_V_E___Event_Count_;
    SELF.Person_Event_Count_Median_ := __PP1439009.M_E_D_I_A_N___Event_Count_;
    SELF := __PP1439009;
  END;
  EXPORT __ENH_Customer := PROJECT(__EE1439008,__ND1439044__Project(LEFT)) : PERSIST('~temp::KEL::KELOtto::Customer::Annotated',EXPIRE(7));
  SHARED __EE3316977 := __ENH_Customer;
  SHARED IDX_Customer_UID_Layout := RECORD
    KEL.typ.uid UID;
    __EE3316977.Customer_Id_;
    __EE3316977.Industry_Type_;
    __EE3316977.States_;
    __EE3316977.Person_Count_;
    __EE3316977.All_Person_Count_;
    __EE3316977.Deceased_Person_Count_;
    __EE3316977.Deceased_Person_Percent_;
    __EE3316977.All_Deceased_Person_Count_;
    __EE3316977.All_Deceased_Person_Percent_;
    __EE3316977.All_Deceased_Matched_Person_Count_;
    __EE3316977.All_Deceased_Matched_Percent_;
    __EE3316977.Address_Count_;
    __EE3316977.All_Address_Count_;
    __EE3316977.High_Frequency_Address_Count_;
    __EE3316977.All_High_Frequency_Address_Count_;
    __EE3316977.High_Frequency_Address_Percent_;
    __EE3316977.All_High_Frequency_Address_Percent_;
    __EE3316977.Person_Event_Count_Average_;
    __EE3316977.Person_Event_Count_Median_;
    __EE3316977.Person_Address_Count_Average_;
    __EE3316977.Person_Address_Count_Median_;
    __EE3316977.Jurisdiction_State_Top_;
    __EE3316977.Jurisdiction_State_;
    __EE3316977.Event_Date_Max_;
    __EE3316977.Date_First_Seen_;
    __EE3316977.Date_Last_Seen_;
    __EE3316977.__RecordCount;
  END;
  SHARED IDX_Customer_UID_Projected := PROJECT(__EE3316977,TRANSFORM(IDX_Customer_UID_Layout,SELF.UID:=__T(LEFT.UID),SELF:=LEFT));
  EXPORT IDX_Customer_UID_Name := '~key::KEL::KELOtto::Customer::UID';
  EXPORT IDX_Customer_UID := INDEX(IDX_Customer_UID_Projected,{UID},{IDX_Customer_UID_Projected},IDX_Customer_UID_Name);
  EXPORT IDX_Customer_UID_Build := BUILD(IDX_Customer_UID,OVERWRITE);
  EXPORT __ST3316979_Layout := RECORDOF(IDX_Customer_UID);
  EXPORT IDX_Customer_UID_Wrapped := PROJECT(IDX_Customer_UID,TRANSFORM(__ST35958_Layout,SELF.UID := __CN(LEFT.UID),SELF:=LEFT));
  EXPORT BuildAll := PARALLEL(IDX_Customer_UID_Build);
END;
