//HPCC Systems KEL Compiler Version 0.11.0
IMPORT KEL011 AS KEL;
IMPORT B_Person_3,E_Address,E_Bank,E_Bank_Account,E_Customer,E_Drivers_License,E_Email,E_Event,E_Internet_Protocol,E_Person,E_Person_Event,E_Person_Person,E_Phone,E_Social_Security_Number FROM KELOtto;
IMPORT * FROM KEL011.Null;
EXPORT B_Drivers_License_2 := MODULE
  SHARED VIRTUAL TYPEOF(E_Drivers_License.__Result) __E_Drivers_License := E_Drivers_License.__Result;
  SHARED VIRTUAL TYPEOF(B_Person_3.__ENH_Person_3) __ENH_Person_3 := B_Person_3.__ENH_Person_3;
  SHARED VIRTUAL TYPEOF(E_Person_Event.__Result) __E_Person_Event := E_Person_Event.__Result;
  SHARED VIRTUAL TYPEOF(E_Person_Person.__Result) __E_Person_Person := E_Person_Person.__Result;
  SHARED __EE60339 := __E_Drivers_License;
  SHARED __EE60404 := __ENH_Person_3;
  SHARED __EE64299 := __EE60404;
  SHARED __EE60740 := __E_Person_Person;
  SHARED __EE63625 := __EE60740(__NN(__EE60740.From_Person_) AND __NN(__EE60740.To_Person_));
  SHARED __ST64819_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) From_Person_;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE64823 := PROJECT(TABLE(PROJECT(__EE63625,__ST64819_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,TRUE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),From_Person_,To_Person_},From_Person_,To_Person_,MERGE),__ST64819_Layout);
  SHARED __EE60388 := __E_Person_Event;
  SHARED __EE64146 := __EE60388(__NN(__EE60388.Licence_) AND __NN(__EE60388.Subject_));
  SHARED __ST64831_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE64835 := PROJECT(TABLE(PROJECT(__EE64146,__ST64831_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,TRUE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),Subject_,Licence_},Subject_,Licence_,MERGE),__ST64831_Layout);
  SHARED __ST64857_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) From_Person_;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64848(__ST64819_Layout __EE64823, __ST64831_Layout __EE64835) := __EEQP(__EE64835.Subject_,__EE64823.From_Person_);
  __ST64857_Layout __JT64848(__ST64819_Layout __l, __ST64831_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE64855 := JOIN(__EE64823,__EE64835,__JC64848(LEFT,RIGHT),__JT64848(LEFT,RIGHT),INNER,HASH);
  SHARED __ST64966_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64970 := DEDUP(PROJECT(__EE64855,__ST64966_Layout),ALL);
  SHARED __ST65079_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.nint Lex_Id_;
    KEL.typ.ndataset(E_Person.Source_Customers_Layout) Source_Customers_;
    KEL.typ.ndataset(E_Person.Reported_Date_Of_Birth_Layout) Reported_Date_Of_Birth_;
    KEL.typ.ndataset(E_Person.Full_Name_Layout) Full_Name_;
    KEL.typ.nkdate Deceased_Date_;
    KEL.typ.nkdate Deceased_Date_Of_Birth_;
    KEL.typ.nstr Deceased_First_;
    KEL.typ.nstr Deceased_Middle_;
    KEL.typ.nstr Deceased_Last_;
    KEL.typ.nstr Deceased_Match_Code_;
    KEL.typ.nbool _isdeepdive_;
    KEL.typ.nstr _county__death_;
    KEL.typ.nstr Deceased_Ssn_;
    KEL.typ.nstr _state__death__flag_;
    KEL.typ.nstr _death__rec__src_;
    KEL.typ.nstr _state__death__id_;
    KEL.typ.nstr _verfirst_;
    KEL.typ.nstr _verlast_;
    KEL.typ.nstr _veraddr_;
    KEL.typ.nstr _vercity_;
    KEL.typ.nstr _verstate_;
    KEL.typ.nstr _verzip_;
    KEL.typ.nstr _verzip4_;
    KEL.typ.nstr _verssn_;
    KEL.typ.nstr _verdob_;
    KEL.typ.nstr _verhphone_;
    KEL.typ.nstr _verify__addr_;
    KEL.typ.nstr _verify__dob_;
    KEL.typ.nstr _valid__ssn_;
    KEL.typ.nint _nas__summary_;
    KEL.typ.nint _nap__summary_;
    KEL.typ.nstr _cvi_;
    KEL.typ.nstr _additional__fname__1_;
    KEL.typ.nstr _additional__lname__1_;
    KEL.typ.nstr _additional__lname__date__last__1_;
    KEL.typ.nstr _additional__fname__2_;
    KEL.typ.nstr _additional__lname__2_;
    KEL.typ.nstr _additional__lname__date__last__2_;
    KEL.typ.nstr _additional__fname__3_;
    KEL.typ.nstr _additional__lname__3_;
    KEL.typ.nstr _additional__lname__date__last__3_;
    KEL.typ.nint _subjectssncount_;
    KEL.typ.ndataset(E_Person.Hri_List_Layout) Hri_List_;
    KEL.typ.nstr _dobmatchlevel_;
    KEL.typ.nbool _ssnfoundforlexid_;
    KEL.typ.nstr _cvicustomscore_;
    KEL.typ.nint Subject_Ssn_Count_;
    KEL.typ.nint Date_Of_Birth_Match_Level_;
    KEL.typ.nint Stolen_Identity_Index_;
    KEL.typ.nint Synthetic_Identity_Index_;
    KEL.typ.nint Manipulated_Identity_Index_;
    KEL.typ.nint Vulnerable_Victim_Index_;
    KEL.typ.nint Friendlyfraud_Index_;
    KEL.typ.nint Suspicious_Activity_Index_;
    KEL.typ.nint _v2__sourcerisklevel_;
    KEL.typ.nint _v2__assocsuspicousidentitiescount_;
    KEL.typ.nint _v2__assoccreditbureauonlycount_;
    KEL.typ.nint _v2__validationaddrproblems_;
    KEL.typ.nint _v2__inputaddrageoldest_;
    KEL.typ.nstr _v2__inputaddrdwelltype_;
    KEL.typ.nstr _v2__divssnidentitycountnew_;
    KEL.typ.int Death_Prior_To_All_Events_ := 0;
    KEL.typ.int Deceased_ := 0;
    KEL.typ.int Deceased_Dob_Match_ := 0;
    KEL.typ.nfloat Deceased_Event_Percent_;
    KEL.typ.int Deceased_Name_Match_ := 0;
    KEL.typ.int High_Risk_Death_Prior_To_All_Events_ := 0;
    KEL.typ.int In_Customer_Population_ := 0;
    KEL.typ.nint Max_Deceased_To_Event_Diff_;
    KEL.typ.int Vl_Event30_Active_Flag_ := 0;
    KEL.typ.int Vl_Event30_Count_ := 0;
    KEL.typ.int Vl_Event7_Active_Flag_ := 0;
    KEL.typ.int Vl_Event7_Count_ := 0;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64981(B_Person_3.__ST13133_Layout __EE64299, __ST64966_Layout __EE64970) := __EEQP(__EE64970.To_Person_,__EE64299.UID);
  __ST65079_Layout __JT64981(B_Person_3.__ST13133_Layout __l, __ST64966_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65077 := JOIN(__EE64970,__EE64299,__JC64981(RIGHT,LEFT),__JT64981(RIGHT,LEFT),INNER,HASH);
  SHARED __ST61579_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.nint Lex_Id_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE65186 := DEDUP(PROJECT(__EE65077,TRANSFORM(__ST61579_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST61597_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE65199 := PROJECT(__CLEANANDDO(__EE65186,TABLE(__EE65186,{KEL.typ.int C_O_U_N_T___Person_ := COUNT(GROUP),UID},UID,MERGE)),__ST61597_Layout);
  SHARED __ST62220_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__1_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65205(E_Drivers_License.Layout __EE60339, __ST61597_Layout __EE65199) := __EEQP(__EE60339.UID,__EE65199.UID);
  __ST62220_Layout __JT65205(E_Drivers_License.Layout __l, __ST61597_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65219 := JOIN(__EE60339,__EE65199,__JC65205(LEFT,RIGHT),__JT65205(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE64296 := __EE60388;
  SHARED __EE64533 := __EE64296(__NN(__EE64296.Subject_));
  SHARED __ST65268_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.ndataset(E_Person_Event.Layout) Person_Event_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65265(__ST64831_Layout __EE64835, E_Person_Event.Layout __EE64533) := __EEQP(__EE64835.Subject_,__EE64533.Subject_);
  __ST65268_Layout __Join__ST65268_Layout(__ST64831_Layout __r, DATASET(E_Person_Event.Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Event_ := __CN(__recs);
  END;
  SHARED __EE65266 := DENORMALIZE(DISTRIBUTE(__EE64835,HASH(Subject_)),DISTRIBUTE(__EE64533,HASH(Subject_)),__JC65265(LEFT,RIGHT),GROUP,__Join__ST65268_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __ST61268_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.ndataset(E_Person_Event.Layout) Person_Event_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __ST61268_Layout __ND65294__Project(__ST65268_Layout __PP65290) := TRANSFORM
    SELF.UID := __PP65290.Licence_;
    SELF := __PP65290;
  END;
  SHARED __EE65330 := DEDUP(PROJECT(__EE65266,__ND65294__Project(LEFT)),ALL);
  SHARED __ST61313_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE65343 := PROJECT(__CLEANANDDO(__EE65330,TABLE(__EE65330,{KEL.typ.int C_O_U_N_T___Person_ := COUNT(GROUP),UID},UID,MERGE)),__ST61313_Layout);
  SHARED __ST62307_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__2_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65351(__ST62220_Layout __EE65219, __ST61313_Layout __EE65343) := __EEQP(__EE65219.UID,__EE65343.UID);
  __ST62307_Layout __JT65351(__ST62220_Layout __l, __ST61313_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Person__1_ := __r.C_O_U_N_T___Person_;
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65369 := JOIN(__EE65219,__EE65343,__JC65351(LEFT,RIGHT),__JT65351(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE64311 := __EE64146;
  SHARED __EE64290 := __EE60404;
  SHARED __EE64659 := __EE64290(__EE64290.Vl_Event7_Active_Flag_ = 1);
  __JC64667(E_Person_Event.Layout __EE64311, B_Person_3.__ST13133_Layout __EE64659) := __EEQP(__EE64311.Subject_,__EE64659.UID);
  SHARED __EE64668 := JOIN(__EE64311,__EE64659,__JC64667(LEFT,RIGHT),TRANSFORM(E_Person_Event.Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST61087_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64695 := DEDUP(PROJECT(__EE64668,TRANSFORM(__ST61087_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST61105_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64708 := PROJECT(__CLEANANDDO(__EE64695,TABLE(__EE64695,{KEL.typ.int C_O_U_N_T___Person_Event_ := COUNT(GROUP),UID},UID,MERGE)),__ST61105_Layout);
  SHARED __ST62395_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__3_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65392(__ST62307_Layout __EE65369, __ST61105_Layout __EE64708) := __EEQP(__EE65369.UID,__EE64708.UID);
  __ST62395_Layout __JT65392(__ST62307_Layout __l, __ST61105_Layout __r) := TRANSFORM
    SELF.U_I_D__3_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65410 := JOIN(__EE65369,__EE64708,__JC65392(LEFT,RIGHT),__JT65392(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE60961 := __EE60404(__EE60404.Vl_Event30_Active_Flag_ = 1);
  __JC64164(E_Person_Event.Layout __EE64146, B_Person_3.__ST13133_Layout __EE60961) := __EEQP(__EE64146.Subject_,__EE60961.UID);
  SHARED __EE64165 := JOIN(__EE64146,__EE60961,__JC64164(LEFT,RIGHT),TRANSFORM(E_Person_Event.Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST60893_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64192 := DEDUP(PROJECT(__EE64165,TRANSFORM(__ST60893_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST60911_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64205 := PROJECT(__CLEANANDDO(__EE64192,TABLE(__EE64192,{KEL.typ.int C_O_U_N_T___Person_Event_ := COUNT(GROUP),UID},UID,MERGE)),__ST60911_Layout);
  SHARED __ST62480_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Person_Event__1_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__4_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65433(__ST62395_Layout __EE65410, __ST60911_Layout __EE64205) := __EEQP(__EE65410.UID,__EE64205.UID);
  __ST62480_Layout __JT65433(__ST62395_Layout __l, __ST60911_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Person_Event__1_ := __r.C_O_U_N_T___Person_Event_;
    SELF.U_I_D__4_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65455 := JOIN(__EE65410,__EE64205,__JC65433(LEFT,RIGHT),__JT65433(LEFT,RIGHT),LEFT OUTER,HASH);
  EXPORT __ST12348_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int Cl_Active30_Identity_Count_ := 0;
    KEL.typ.int Cl_Active7_Identity_Count_ := 0;
    KEL.typ.int Cl_Event_Count_ := 0;
    KEL.typ.int Cl_Identity_Count_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST12348_Layout __ND65481__Project(__ST62480_Layout __PP65456) := TRANSFORM
    SELF.Cl_Active30_Identity_Count_ := __PP65456.C_O_U_N_T___Person_Event__1_;
    SELF.Cl_Active7_Identity_Count_ := __PP65456.C_O_U_N_T___Person_Event_;
    SELF.Cl_Event_Count_ := __PP65456.C_O_U_N_T___Person__1_;
    SELF.Cl_Identity_Count_ := __PP65456.C_O_U_N_T___Person_;
    SELF := __PP65456;
  END;
  EXPORT __ENH_Drivers_License_2 := PROJECT(__EE65455,__ND65481__Project(LEFT));
END;
