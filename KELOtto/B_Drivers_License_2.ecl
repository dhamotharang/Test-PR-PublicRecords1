//HPCC Systems KEL Compiler Version 0.11.0
IMPORT KEL011 AS KEL;
IMPORT B_Person_3,E_Address,E_Bank,E_Bank_Account,E_Customer,E_Drivers_License,E_Email,E_Event,E_Internet_Protocol,E_Person,E_Person_Event,E_Person_Person,E_Phone,E_Social_Security_Number FROM KELOtto;
IMPORT * FROM KEL011.Null;
EXPORT B_Drivers_License_2 := MODULE
  SHARED VIRTUAL TYPEOF(E_Drivers_License.__Result) __E_Drivers_License := E_Drivers_License.__Result;
  SHARED VIRTUAL TYPEOF(B_Person_3.__ENH_Person_3) __ENH_Person_3 := B_Person_3.__ENH_Person_3;
  SHARED VIRTUAL TYPEOF(E_Person_Event.__Result) __E_Person_Event := E_Person_Event.__Result;
  SHARED VIRTUAL TYPEOF(E_Person_Person.__Result) __E_Person_Person := E_Person_Person.__Result;
  SHARED __EE60332 := __E_Drivers_License;
  SHARED __EE60397 := __ENH_Person_3;
  SHARED __EE64292 := __EE60397;
  SHARED __EE60733 := __E_Person_Person;
  SHARED __EE63618 := __EE60733(__NN(__EE60733.From_Person_) AND __NN(__EE60733.To_Person_));
  SHARED __ST64812_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) From_Person_;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE64816 := PROJECT(TABLE(PROJECT(__EE63618,__ST64812_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,TRUE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),From_Person_,To_Person_},From_Person_,To_Person_,MERGE),__ST64812_Layout);
  SHARED __EE60381 := __E_Person_Event;
  SHARED __EE64139 := __EE60381(__NN(__EE60381.Licence_) AND __NN(__EE60381.Subject_));
  SHARED __ST64824_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __EE64828 := PROJECT(TABLE(PROJECT(__EE64139,__ST64824_Layout),{KEL.typ.int __RecordCount := SUM(GROUP,__RecordCount),KEL.typ.epoch Date_First_Seen_ := KEL.era.SimpleRoll(GROUP,Date_First_Seen_,MIN,TRUE),KEL.typ.epoch Date_Last_Seen_ := KEL.era.SimpleRoll(GROUP,Date_Last_Seen_,MAX,FALSE),Subject_,Licence_},Subject_,Licence_,MERGE),__ST64824_Layout);
  SHARED __ST64850_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) From_Person_;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64841(__ST64812_Layout __EE64816, __ST64824_Layout __EE64828) := __EEQP(__EE64828.Subject_,__EE64816.From_Person_);
  __ST64850_Layout __JT64841(__ST64812_Layout __l, __ST64824_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE64848 := JOIN(__EE64816,__EE64828,__JC64841(LEFT,RIGHT),__JT64841(LEFT,RIGHT),INNER,HASH);
  SHARED __ST64959_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64963 := DEDUP(PROJECT(__EE64848,__ST64959_Layout),ALL);
  SHARED __ST65072_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.nint Lex_Id_;
    KEL.typ.ndataset(E_Person.Source_Customers_Layout) Source_Customers_;
    KEL.typ.ndataset(E_Person.Reported_Date_Of_Birth_Layout) Reported_Date_Of_Birth_;
    KEL.typ.ndataset(E_Person.Full_Name_Layout) Full_Name_;
    KEL.typ.nkdate Deceased_Date_;
    KEL.typ.nkdate Deceased_Date_Of_Birth_;
    KEL.typ.nstr Deceased_First_;
    KEL.typ.nstr Deceased_Middle_;
    KEL.typ.nstr Deceased_Last_;
    KEL.typ.nstr Deceased_Match_Code_;
    KEL.typ.nbool _isdeepdive_;
    KEL.typ.nstr _county__death_;
    KEL.typ.nstr Deceased_Ssn_;
    KEL.typ.nstr _state__death__flag_;
    KEL.typ.nstr _death__rec__src_;
    KEL.typ.nstr _state__death__id_;
    KEL.typ.nstr _verfirst_;
    KEL.typ.nstr _verlast_;
    KEL.typ.nstr _veraddr_;
    KEL.typ.nstr _vercity_;
    KEL.typ.nstr _verstate_;
    KEL.typ.nstr _verzip_;
    KEL.typ.nstr _verzip4_;
    KEL.typ.nstr _verssn_;
    KEL.typ.nstr _verdob_;
    KEL.typ.nstr _verhphone_;
    KEL.typ.nstr _verify__addr_;
    KEL.typ.nstr _verify__dob_;
    KEL.typ.nstr _valid__ssn_;
    KEL.typ.nint _nas__summary_;
    KEL.typ.nint _nap__summary_;
    KEL.typ.nstr _cvi_;
    KEL.typ.nstr _additional__fname__1_;
    KEL.typ.nstr _additional__lname__1_;
    KEL.typ.nstr _additional__lname__date__last__1_;
    KEL.typ.nstr _additional__fname__2_;
    KEL.typ.nstr _additional__lname__2_;
    KEL.typ.nstr _additional__lname__date__last__2_;
    KEL.typ.nstr _additional__fname__3_;
    KEL.typ.nstr _additional__lname__3_;
    KEL.typ.nstr _additional__lname__date__last__3_;
    KEL.typ.nint _subjectssncount_;
    KEL.typ.ndataset(E_Person.Hri_List_Layout) Hri_List_;
    KEL.typ.nstr _dobmatchlevel_;
    KEL.typ.nbool _ssnfoundforlexid_;
    KEL.typ.nstr _cvicustomscore_;
    KEL.typ.nint Subject_Ssn_Count_;
    KEL.typ.nint Date_Of_Birth_Match_Level_;
    KEL.typ.nint Stolen_Identity_Index_;
    KEL.typ.nint Synthetic_Identity_Index_;
    KEL.typ.nint Manipulated_Identity_Index_;
    KEL.typ.nint Vulnerable_Victim_Index_;
    KEL.typ.nint Friendlyfraud_Index_;
    KEL.typ.nint Suspicious_Activity_Index_;
    KEL.typ.nint _v2__sourcerisklevel_;
    KEL.typ.nint _v2__assocsuspicousidentitiescount_;
    KEL.typ.nint _v2__assoccreditbureauonlycount_;
    KEL.typ.nint _v2__validationaddrproblems_;
    KEL.typ.nint _v2__inputaddrageoldest_;
    KEL.typ.nstr _v2__inputaddrdwelltype_;
    KEL.typ.nstr _v2__divssnidentitycountnew_;
    KEL.typ.int Death_Prior_To_All_Events_ := 0;
    KEL.typ.int Deceased_ := 0;
    KEL.typ.int Deceased_Dob_Match_ := 0;
    KEL.typ.nfloat Deceased_Event_Percent_;
    KEL.typ.int Deceased_Name_Match_ := 0;
    KEL.typ.int High_Risk_Death_Prior_To_All_Events_ := 0;
    KEL.typ.int In_Customer_Population_ := 0;
    KEL.typ.nint Max_Deceased_To_Event_Diff_;
    KEL.typ.int Vl_Event30_Active_Flag_ := 0;
    KEL.typ.int Vl_Event30_Count_ := 0;
    KEL.typ.int Vl_Event7_Active_Flag_ := 0;
    KEL.typ.int Vl_Event7_Count_ := 0;
    KEL.typ.ntyp(E_Person.Typ) To_Person_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC64974(B_Person_3.__ST13126_Layout __EE64292, __ST64959_Layout __EE64963) := __EEQP(__EE64963.To_Person_,__EE64292.UID);
  __ST65072_Layout __JT64974(B_Person_3.__ST13126_Layout __l, __ST64959_Layout __r) := TRANSFORM
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65070 := JOIN(__EE64963,__EE64292,__JC64974(RIGHT,LEFT),__JT64974(RIGHT,LEFT),INNER,HASH);
  SHARED __ST61572_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.nint Lex_Id_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE65179 := DEDUP(PROJECT(__EE65070,TRANSFORM(__ST61572_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST61590_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE65192 := PROJECT(__CLEANANDDO(__EE65179,TABLE(__EE65179,{KEL.typ.int C_O_U_N_T___Person_ := COUNT(GROUP),UID},UID,MERGE)),__ST61590_Layout);
  SHARED __ST62213_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__1_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65198(E_Drivers_License.Layout __EE60332, __ST61590_Layout __EE65192) := __EEQP(__EE60332.UID,__EE65192.UID);
  __ST62213_Layout __JT65198(E_Drivers_License.Layout __l, __ST61590_Layout __r) := TRANSFORM
    SELF.U_I_D__1_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65212 := JOIN(__EE60332,__EE65192,__JC65198(LEFT,RIGHT),__JT65198(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE64289 := __EE60381;
  SHARED __EE64526 := __EE64289(__NN(__EE64289.Subject_));
  SHARED __ST65261_Layout := RECORD
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Drivers_License.Typ) Licence_;
    KEL.typ.ndataset(E_Person_Event.Layout) Person_Event_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65258(__ST64824_Layout __EE64828, E_Person_Event.Layout __EE64526) := __EEQP(__EE64828.Subject_,__EE64526.Subject_);
  __ST65261_Layout __Join__ST65261_Layout(__ST64824_Layout __r, DATASET(E_Person_Event.Layout) __recs) := TRANSFORM
    SELF := __r;
    SELF.Person_Event_ := __CN(__recs);
  END;
  SHARED __EE65259 := DENORMALIZE(DISTRIBUTE(__EE64828,HASH(Subject_)),DISTRIBUTE(__EE64526,HASH(Subject_)),__JC65258(LEFT,RIGHT),GROUP,__Join__ST65261_Layout(LEFT,ROWS(RIGHT)),LOCAL);
  SHARED __ST61261_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.ndataset(E_Person_Event.Layout) Person_Event_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __ST61261_Layout __ND65287__Project(__ST65261_Layout __PP65283) := TRANSFORM
    SELF.UID := __PP65283.Licence_;
    SELF := __PP65283;
  END;
  SHARED __EE65323 := DEDUP(PROJECT(__EE65259,__ND65287__Project(LEFT)),ALL);
  SHARED __ST61306_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE65336 := PROJECT(__CLEANANDDO(__EE65323,TABLE(__EE65323,{KEL.typ.int C_O_U_N_T___Person_ := COUNT(GROUP),UID},UID,MERGE)),__ST61306_Layout);
  SHARED __ST62300_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__2_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65344(__ST62213_Layout __EE65212, __ST61306_Layout __EE65336) := __EEQP(__EE65212.UID,__EE65336.UID);
  __ST62300_Layout __JT65344(__ST62213_Layout __l, __ST61306_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Person__1_ := __r.C_O_U_N_T___Person_;
    SELF.U_I_D__2_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65362 := JOIN(__EE65212,__EE65336,__JC65344(LEFT,RIGHT),__JT65344(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE64304 := __EE64139;
  SHARED __EE64283 := __EE60397;
  SHARED __EE64652 := __EE64283(__EE64283.Vl_Event7_Active_Flag_ = 1);
  __JC64660(E_Person_Event.Layout __EE64304, B_Person_3.__ST13126_Layout __EE64652) := __EEQP(__EE64304.Subject_,__EE64652.UID);
  SHARED __EE64661 := JOIN(__EE64304,__EE64652,__JC64660(LEFT,RIGHT),TRANSFORM(E_Person_Event.Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST61080_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64688 := DEDUP(PROJECT(__EE64661,TRANSFORM(__ST61080_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST61098_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64701 := PROJECT(__CLEANANDDO(__EE64688,TABLE(__EE64688,{KEL.typ.int C_O_U_N_T___Person_Event_ := COUNT(GROUP),UID},UID,MERGE)),__ST61098_Layout);
  SHARED __ST62388_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__3_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65385(__ST62300_Layout __EE65362, __ST61098_Layout __EE64701) := __EEQP(__EE65362.UID,__EE64701.UID);
  __ST62388_Layout __JT65385(__ST62300_Layout __l, __ST61098_Layout __r) := TRANSFORM
    SELF.U_I_D__3_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65403 := JOIN(__EE65362,__EE64701,__JC65385(LEFT,RIGHT),__JT65385(LEFT,RIGHT),LEFT OUTER,HASH);
  SHARED __EE60954 := __EE60397(__EE60397.Vl_Event30_Active_Flag_ = 1);
  __JC64157(E_Person_Event.Layout __EE64139, B_Person_3.__ST13126_Layout __EE60954) := __EEQP(__EE64139.Subject_,__EE60954.UID);
  SHARED __EE64158 := JOIN(__EE64139,__EE60954,__JC64157(LEFT,RIGHT),TRANSFORM(E_Person_Event.Layout,SELF:=LEFT),HASH,KEEP(1));
  SHARED __ST60886_Layout := RECORD
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64185 := DEDUP(PROJECT(__EE64158,TRANSFORM(__ST60886_Layout,SELF.UID := LEFT.Licence_,SELF := LEFT)),ALL);
  SHARED __ST60904_Layout := RECORD
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) UID;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
  END;
  SHARED __EE64198 := PROJECT(__CLEANANDDO(__EE64185,TABLE(__EE64185,{KEL.typ.int C_O_U_N_T___Person_Event_ := COUNT(GROUP),UID},UID,MERGE)),__ST60904_Layout);
  SHARED __ST62473_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int C_O_U_N_T___Person_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__1_;
    KEL.typ.int C_O_U_N_T___Person__1_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__2_;
    KEL.typ.int C_O_U_N_T___Person_Event_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__3_;
    KEL.typ.int C_O_U_N_T___Person_Event__1_ := 0;
    KEL.typ.ntyp(E_Drivers_License.Typ) U_I_D__4_;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  __JC65426(__ST62388_Layout __EE65403, __ST60904_Layout __EE64198) := __EEQP(__EE65403.UID,__EE64198.UID);
  __ST62473_Layout __JT65426(__ST62388_Layout __l, __ST60904_Layout __r) := TRANSFORM
    SELF.C_O_U_N_T___Person_Event__1_ := __r.C_O_U_N_T___Person_Event_;
    SELF.U_I_D__4_ := __r.UID;
    SELF := __l;
    SELF := __r;
  END;
  SHARED __EE65448 := JOIN(__EE65403,__EE64198,__JC65426(LEFT,RIGHT),__JT65426(LEFT,RIGHT),LEFT OUTER,HASH);
  EXPORT __ST12341_Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ndataset(E_Drivers_License.Source_Customers_Layout) Source_Customers_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr State_;
    KEL.typ.nint Otto_Drivers_License_Id_;
    KEL.typ.int Cl_Active30_Identity_Count_ := 0;
    KEL.typ.int Cl_Active7_Identity_Count_ := 0;
    KEL.typ.int Cl_Event_Count_ := 0;
    KEL.typ.int Cl_Identity_Count_ := 0;
    KEL.typ.epoch Date_First_Seen_ := 0;
    KEL.typ.epoch Date_Last_Seen_ := 0;
    KEL.typ.int __RecordCount := 0;
  END;
  SHARED __ST12341_Layout __ND65474__Project(__ST62473_Layout __PP65449) := TRANSFORM
    SELF.Cl_Active30_Identity_Count_ := __PP65449.C_O_U_N_T___Person_Event__1_;
    SELF.Cl_Active7_Identity_Count_ := __PP65449.C_O_U_N_T___Person_Event_;
    SELF.Cl_Event_Count_ := __PP65449.C_O_U_N_T___Person__1_;
    SELF.Cl_Identity_Count_ := __PP65449.C_O_U_N_T___Person_;
    SELF := __PP65449;
  END;
  EXPORT __ENH_Drivers_License_2 := PROJECT(__EE65448,__ND65474__Project(LEFT));
END;
