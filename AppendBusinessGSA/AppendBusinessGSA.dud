ID "6b34395a-47e3-4154-bfdc-bed59801bb48";
NAME AppendBusinessGsa;
LABEL "Append Business GSA";
VERSION "1.0.0";
AUTHOR "CarmigJX";
CATEGORY COMPUTE;
DESCRIPTION "Appends GSA flag for a business and computes GSA details for use in visualization";
PERMISSIONS
VIEW:PUBLIC;
EDIT:PRIVATE;
RUN:PUBLIC;
END

INPUTS
	STRING Prefix: LABEL("Append Column Prefix"),DEFAULT(""),DESCRIPTION("Prefix to be appended to the new fields");
	DATASET dsInput: MAPBYNAME
	FIELD UltID: LABEL("UltID"),DESCRIPTION("UltID");
	FIELD OrgID: LABEL("OrgID"),DESCRIPTION("OrgID");
	FIELD SeleID: LABEL("SeleID"),DESCRIPTION("SeleID");
	FIELD ProxID: LABEL("ProxID"),DESCRIPTION("ProxID");
	FIELD BusinessNameFields: LABEL("Business Name Fields"),DESCRIPTION("List of Ult, Sele and Prox level business name fields"),MANY;
	FIELD BusinessAddressFields: LABEL("Business Address Fields"),DESCRIPTION("List of Ult, Sele and Prox level business address fields"),MANY;
	FIELD GraphIdFields: LABEL("Graph ID Fields"),DESCRIPTION("List of Ult, Sele and Prox level entity context UID fields"),MANY;
	FIELD AppendFields: MANY,LABEL("Append Fields"),DESCRIPTION("Fields that should be in Details output layout"),OPTIONAL,NULL(""),DEFAULT("");
END
	STRING DPPAPURPOSE: LABEL("DPPA Purpose"),DEFAULT("^GLOBAL|DPPAPURPOSE");
	STRING GLBPURPOSE: LABEL("GLB Purpose"),DEFAULT("^GLOBAL|GLBPURPOSE");
	STRING DATARESTRICTIONMASK: LABEL("Data Restriction Mask"),DEFAULT("^GLOBAL|DATARESTRICTIONMASK");
END

OUTPUTS
	DATASET dsOutput(dsInput): PREFIX(INPUTS.Prefix),APPEND
		INTEGER HasGsa;
    STRING BipLevel;
  END
	DATASET dsDetails
		INPUTS.AppendFields;
    STRING GsaName;
    STRING GsaClassification;
    STRING GsaCTType;
    STRING GsaDescription;
    STRING GsaActionDate;
    STRING GsaTermDate;
    STRING1 GsaTermDateIndefinite;
    STRING GsaCTCode;
    STRING GsaAgencycomponent;
    STRING GsaExclusionType;
    STRING GsaSamNumber;
    STRING GraphId;
    STRING BusinessName;
    STRING BusinessAddress;
    INTEGER BusinessHasGsa;
    STRING BusinessHasGsaDescription;
  END
	DATASET GsaHitStats: SIDE,WUID,SMALL
		STRING GsaHit: FEW;
    INTEGER Cnt;
  END
END

VISUALIZE BusinessGsaStats: LABEL("Append Business GSA Stats")
  PIE HitRate(GsaHitStats{GsaHit,Cnt}): LABEL(GsaHit),WEIGHT(Cnt),TITLE("Hit Rate"), _charttype("AM_PIE");
END

GENERATES INLINE
	IMPORT AppendBusinessGsa;
  %^sdsBusinessGsa% := AppendBusinessGsa.macAppendBusinessGsa(%dsInput%, %UltID%, %OrgID%, %SeleID%, %ProxID%, %^qPrefix%) %^p%;
  
	IMPORT AppendBusinessGsa;  
  %^edsDetails% := AppendBusinessGsa.macComputeBusinessGsaDetails(%dsBusinessGsa%,%Prefix%Classification,%Prefix%CTType,%Prefix%Description,%Prefix%ActionDate,
    %Prefix%TermDate,%Prefix%TermDateIndefinite,%Prefix%ExclusionType,%Prefix%CTCode,%Prefix%Agencycomponent,
    %Prefix%ExclusionType,%Prefix%SamNumber,%Prefix%BipLevel,%Prefix%HasGsa,
    %^qBusinessNameFields%, %^qBusinessAddressFields%, %^qGraphIdFields%,
    %^qAppendFields%, %^qPrefix%);  
  
	LOCAL rOutput := RECORD
	 RECORDOF(%dsInput%);
	 INTEGER %Prefix%HasGsa;
	 STRING %Prefix%BipLevel;
	END;
  %^edsOutput% := PROJECT(%dsBusinessGsa%, TRANSFORM(rOutput, SELF := LEFT));
  
  %^eGsaHitStats% := TABLE(%dsOutput%,
    {STRING  GsaHit := IF(%Prefix%BipLevel <> '', %Prefix%BipLevel, 'NoHit'),INTEGER Cnt := COUNT(GROUP)},
    %Prefix%BipLevel, FEW);
ENDGENERATES


RESOURCES
	INDEX Keys.GsaBusinessKey: FILENAME("~thor_data400::key::gsa::qa::linkids"),URL("http://10.241.100.157:8010"),DALIIP("10.241.100.157"),CLUSTER("thor100_100cert");
	ECL AppendBusinessGsa: FILENAME("AppendBusinessGsa"),URL("<http://10.241.100.153:8010>");
	ECL hipie_ecl: FILENAME("hipie_ecl"),URL("<http://10.241.100.153:8010>");
	FILE readme: FILENAME("AppendBusinessGSA_ReadMe.txt"),LABEL("Plugin Readme File");
	FILE AppendBusinessGSA_testcmp: FILENAME("AppendBusinessGSA_testcmp.txt"),LABEL("Plugin Test Composition");
	FILE AppendBusinessGSA_BuildTestDataset: FILENAME("AppendBusinessGSA_BuildTestDataset.ecl"),LABEL("BWR to create data for test composition");
	FILE checklist: FILENAME("AppendBusinessGSAChecklist.xlsx"),LABEL("Plugin Checklist");
  LOGICALFILE test: FILENAME("~qa::appendbusinessgsa::appendbusinessgsa::input"),URL("http://10.241.100.159:8010"),DALIIP("10.241.100.159"),CLUSTER("thor100_100dev");
END
