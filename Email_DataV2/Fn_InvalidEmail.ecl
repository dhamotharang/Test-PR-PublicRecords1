IMPORT Email_DataV2, STD;
								
BadEmails	:= ['123@US.HSBC.COM','BESTBUY@BESTBUY.COM','DOES NOT HAVE@NONE.COM','DOESNOTHAVE@CITI.COM','DONOTHAVE@DONOTHAVE.COM',
								'EMAIL@EMAIL.COM','FAKE@ACTIVE.COM','HOTMAIL@HOTMAIL','MWADE@CHEFSCATALOG.COM','NOADDRESS@YAHOO.COM',
								'N/A','N/A@YAHOO.COM','NA@AOL.COM','NA@BESTBUY.COM','NA@GMAIL.COM','NA@HOTMAIL.COM','NA@NONE.COM','NA@YAHOO.COM',
								'NA1@YAHOO','NAME@DOMAIN.COM','NAME@EMAIL.COM','NO EMAIL','NO@BESTBUY.COM','NO@EMAIL.COM','NO@GMAIL.COM','NO@HOTMAIL.COM',
								'NO@NONE.COM','NO@OPT.OUT','NO@YAHOO.COM','NOEMAIL@AOL.COM','NOEMAIL@BESTBUY.COM','NOEMAIL@CITI.COM','NOEMAIL@EMAIL.COM',
								'NOEMAIL@GMAIL.COM','NOEMAIL@HOTMAIL.COM','NOEMAIL@HSBC.COM','NOEMAIL@NONE.COM','NOEMAIL@YAHOO.COM','NOMAIL@GMAIL.COM',
								'NOMAIL@NOMAIL.COM','NOMAIL@YAHOO.COM','NON@BESTBUY','NONAME@AOL.COM','NONAME@GMAIL.COM','NONE','NONE@AOL.COM',
								'NOMAIL@YAHOO.COM','NOMAIL@YAHOO.COM','NONE@EMAIL.COM','NONE@GMAIL.COM','NONE@HOTMAIL.COM','NONE@HSBC.COM','NONE@MSN.COM',
								'NONE@NA.COM','NONE@NONE.COM','NONE@NONEMAIL.COM','NONE@YAHOO.COM','NONE1@NONE.COM','NOREPLY@BESTBUY.COM',
								'NOTHANKS@AOL.COM','NOTHANKS@GMAIL.COM','NOTHANKS@YAHOO.COM','REFUSE@EMAIL.COM','REFUSED','REFUSED@CITI.COM',
								'RFSD','SEARS@SEARS.COM','TEMP@TEMP.COM','YAHOO@YAHOO.COM']; //Exact matches that were confirmed invalid

InvalidDomain := ['AAA.COM','AAA.NET','BBY.COM','BBY.NET','DEEPDISCOUNTCD.COM','DEEPDISCOUNTCD.NET','DEEPDISCOUNTCD.ORG','DELIAINC.COM','DELIAINC.NET',
									'DELIAINC.ORG','EMAIL.ORG','FAKEEMAIL.COM','HAVE.COM','HAVE.ORG','LANE.COM','N.COM','N.NET','N.ORG','NO.COM','NO.NO.COM','NO.NO.NET',
									'NO.NO.ORG','NO2NO54541NO.COM','NOEMAIL.COM','NOEMAIL.NET','NOMAIL.COM','NON.COM','NONAME.COM','NONAME.NET','OPT.COM','OPT.NET',
									'OPT.ORG','REFUSED.COM','TEST.COM','UPDATEMELATER.COM','UPDATEMELATER.NET','UPDATEMELATER.ORG','WORLDNIC.COM','WORLDNIC.NET'];

EXPORT Fn_InvalidEmail (DATASET(RECORDOF(Layouts.temp_Validate)) email_in) := FUNCTION

	Layouts.temp_Validate SetValidRule(email_in L) := TRANSFORM
	//Redundant, but some historical builds did not have uppercase applied
		string100 CleanName		:= STD.Str.CleanSpaces(STD.Str.ToUpperCase(L.clean_email));
		string100 CleanDomain	:= STD.Str.CleanSpaces(STD.Str.ToUpperCase(L.append_domain));
	//(REGEXFIND('^[0-9A-Z]{1}@',CleanName), TRUE, FALSE); //Removing this condition until further discussion	
		SELF.InValidEmail		:= IF(CleanName in BadEmails, TRUE, FALSE);
		SELF.InValidDomain	:= IF(CleanDomain in InvalidDomain, TRUE, FALSE);
		SELF	:= L;
	END;
	
	pValidEmailFlag	:= PROJECT(email_in, SetValidRule(LEFT));
																		
	RETURN pValidEmailFlag;
END;