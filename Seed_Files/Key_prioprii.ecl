numrec := record
	layout_prioprii;
	string3	prodnum;
end;

numrec into_num(layout_prioprii L, string3 p) := transform
	self.prodnum := p;
	self := L;
end;
df := project(file_seed13, into_num(LEFT, '002')) +
	 project(file_seed14, into_num(LEFT, '014')) +
	 project(file_seed15, into_num(LEFT, '102')) +
	 project(file_seed95, into_num(LEFT, '007')) + // pi07
	 project(file_seed62, into_num(LEFT, '009')) +
	 project(file_seed74, into_num(LEFT, '045')) +
	 project(file_seed94, into_num(LEFT, '020')); // allv

export Key_prioprii := index(df,{prodnum, social},{account_out,
	riskwiseid,
	hriskphoneflag,
	phonevalflag,
	phonezipflag,
	hriskaddrflag,
	decsflag,
	socsdobflag,
	socsvalflag,
	drlcvalflag,
	frdriskscore,
	areacodesplitflag,
	altareacode,
	splitdate,
	addrvalflag,
	dwelltypeflag,
	cassaddr,
	casscity,
	cassstate,
	casszip,
	bansflag,
	coaalertflag,
	coafirst,
	coalast,
	coaaddr,
	coacity,
	coastate,
	coazip,
	idtheftflag,
	aptscanflag,
	addrhistoryflag,
	firstcount,
	lastcount,
	formerlastcount,
	addrcount,
	hphonecount,
	wphonecount,
	socscount,
	socsverlevel,
	dobcount,
	drlccount,
	emailcount,
	numelever,
	numsource,
	verfirst,
	verlast,
	vercmpy,
	veraddr,
	vercity,
	verstate,
	verzip,
	verhphone,
	verwphone,
	versocs,
	verdob,
	verdrlc,
	veremail,
	firstscore,
	lastscore,
	cmpyscore,
	addrscore,
	hphonescore,
	wphonescore,
	socsscore,
	dobscore,
	dlnmscore,
	emailscore,
	socsmiskeyflag,
	hphonemiskeyflag,
	addrmiskeyflag,
	hriskcmpy,
	hrisksic,
	hriskphone,
	hriskaddr,
	hriskcity,
	hriskstate,
	hriskzip,
	disthphoneaddr,
	disthphonewphone,
	distwphoneaddr,
	estincome,
	numfraud,
	first,
	last,
	addr,
	city_out,
	state_out,
	zip_out,
	first2,
	last2,
	addr2,
	city2,
	state2,
	zip2},'~thor_Data400::key::seed::qa::prioprii');
