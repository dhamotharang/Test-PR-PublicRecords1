import data_services;

numrec := record
	layout_pb1opb1i;
	string3	prodnum;
end;

numrec into_num(layout_pb1opb1i L, string3 p) := transform
	self.prodnum := p;
	self := L;
end;

df := project(file_seed11, into_num(LEFT, '001')) +
	 project(file_seed12, into_num(LEFT, '002'));

export key_pb1opb1i := index(df,{prodnum, FEIN},{account_out,
	riskwiseid,
	cmpyverlevel,
	cmpyphoneverlevel,
	score,
	score2,
	score3,
	reason1,
	reason2,
	reason3,
	reason4,
	reason5,
	reason6,
	reason7,
	reason8,
	action1,
	action2,
	action3,
	action4,
	correctcmpyname,
	correctcmpyaddr,
	correctcmpyphone,
	fein_out,
	cmpydirsfirst,
	cmpydirslast,
	cmpydirsaddr,
	cmpydirscity,
	cmpydirsstate,
	cmpydirszip,
	cmpynameaddrphone,
	cmpyphoneflag1,
	cmpyphoneflag2,
	cmpyphoneflag3,
	cmpybansflag,
	dbabansflag,
	cmpylienamtflag,
	cmpynumliens,
	cmpylientypeflag,
	dbalienamtflag,
	dbanumliens,
	dbalientypeflag,
	cmpyaddrtype,
	sic,
	execlast,
	exectitle,
	cmpyyear,
	cmpyhriskalerttable,
	cmpyhriskalertnum,
	cmpyalertfirst,
	cmpyalertlast,
	cmpyalertaddr,
	cmpyalertcity,
	cmpyalertstate,
	cmpyalertzip,
	cmpyalertentity,
	socsverlevel,
	phoneverlevel,
	authreplinkflag,
	score4,
	score5,
	score6,
	reason9,
	reason10,
	reason11,
	reason12,
	reason13,
	reason14,
	reason15,
	reason16,
	action5,
	action6,
	action7,
	action8,
	correctlast,
	correctaddr,
	correctphone,
	correctsocs,
	correctdob,
	dirsfirst,
	dirslast,
	dirsaddr,
	dirscity,
	dirsstate,
	dirszip,
	nameaddrphone,
	hphonetypeflag,
	wphonetypeflag,
	socllowissue,
	soclhighissue,
	soclstate,
	eqfsfirst,
	eqfslast,
	eqfsaddr,
	eqfscity,
	eqfsstate,
	eqfszip,
	eqfsphone,
	eqfsaddr2,
	eqfscity2,
	eqfsstate2,
	eqfszip2,
	eqfsphone2,
	eqfsaddr3,
	eqfscity3,
	eqfsstate3,
	eqfszip3,
	eqfsphone3,
	altlast,
	altlast2,
	numucc,
	dist1,
	dist2,
	dist3,
	dist4,
	dist5,
	hriskalerttable,
	hriskalertnum,
	alertfirst,
	alertlast,
	alertaddr,
	alertcity,
	alertstate,
	alertzip,
	alertentity},data_services.data_location.prefix() + 'thor_data400::key::seed::qa::pb1opb1i');
