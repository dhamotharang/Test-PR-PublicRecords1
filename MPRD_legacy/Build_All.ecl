
import versioncontrol, _control, ut, tools;
export Build_all(string pversion, boolean pUseProd = false) := function

spray_  		 := VersionControl.fSprayInputFiles(fSpray(pversion,pUseProd));


 built := sequential
         (
   					spray_,
						parallel(
						Build_Keys.build_keys_facility(pversion,pUseProd).facility_all,
						Build_Keys.build_keys_individual(pversion,pUseProd).individual_all,
						Build_Keys.Build_Keys_basc_cp(pversion,pUseProd).basc_cp_All,
						Build_Keys.Build_Keys_basc_claims(pversion,pUseProd).basc_claims_All,
  	        Build_Keys.Build_Keys_npi_extension(pversion,pUseProd).npi_extension_All,
            Build_Keys.Build_Keys_npi_extension_facility(pversion,pUseProd).npi_extension_facility_All,
						Build_Keys.Build_Keys_claims_addr_master(pversion,pUseProd).claims_addr_master_All,
						Build_Keys.Build_Keys_claims_by_month(pversion,pUseProd).claims_by_month_All,
						Build_Keys.Build_Keys_npi_tin_xref(pversion,pUseProd).npi_tin_xref_All,
						Build_Keys.Build_Keys_taxonomy_equiv(pversion,pUseProd).taxonomy_equiv_All,
						Build_Keys.build_keys_basc_deceased(pversion,pUseProd).basc_deceased_All,
					  Build_Keys.Build_Keys_basc_addr(pversion,pUseProd).basc_addr_All,
					  Build_Keys.Build_Keys_client_Data(pversion,pUseProd).client_Data_All,
						Build_Keys.Build_Keys_std_terms_lu(pversion,pUseProd).std_terms_All,
					  Build_Keys.Build_Keys_taxonomy_full_lu(pversion,pUseProd).taxonomy_full_lu_All,
					  Build_Keys.Build_Keys_specialty_lu(pversion,pUseProd).specialty_lu_All,
						Build_Keys.Build_Keys_group_lu(pversion,pUseProd).group_lu_All,
						Build_keys.Build_Keys_hospital_lu(pversion,pUseProd).hospital_lu_All,
					  Build_Keys.Build_Keys_dea_xref(pversion,pUseProd).dea_xref_All,
					  Build_Keys.Build_Keys_lic_xref(pversion,pUseProd).lic_xref_All,
					  Build_Keys.Build_Keys_facility_name_xref(pversion,pUseProd).facility_name_xref_All,
					  Build_Keys.Build_Keys_addr_name_xref(pversion,pUseProd).addr_name_xref_All,
					  Build_Keys.Build_Keys_basc_facility_mme(pversion,pUseProd).basc_facility_mme_All,
					  Build_Keys.Build_Keys_nanpa(pversion,pUseProd).nanpa_All,
					  Build_Keys.Build_Keys_best_hospital(pversion,pUseProd).best_hospital_All,
					  Build_Keys.Build_Keys_last_name_stats(pversion,pUseProd).last_name_stats_All,
					  Build_Keys.Build_Keys_source_confidence_lu(pversion,pUseProd).source_confidence_lu_All,
					  Build_Keys.Build_Keys_office_attributes_facility(pversion,pUseProd).office_attributes_facility_All,
					  Build_Keys.Build_Keys_office_attributes(pversion,pUseProd).office_attributes_All,
						Build_keys.Build_Keys_ignore_terms_lu(pversion,pUseProd).ignore_terms_lu_All,
						Build_keys.Build_Keys_taxon_lu(pversion,pUseProd).taxon_lu_All,
						Build_keys.Build_Keys_abbr_lu(pversion,pUseProd).abbr_lu_All,
						Build_keys. Build_Keys_call_queue_bad(pversion,pUseProd).call_queue_bad_All
						),
						parallel(
   					Build_Base.build_base_individual(pversion,pUseProd).individual_all,
					  Build_Base.build_base_facility(pversion,pUseProd).facility_all,
					  Build_Base.build_base_basc_claims(pversion,pUseProd).basc_claims_all,
						Build_Base.build_base_basc_cp(pversion,pUseProd).basc_cp_all,
						Build_Base.build_base_claims_by_month(pversion,pUseProd).claims_by_month_all,
						Build_Base.build_base_claims_addr_master(pversion,pUseProd).claims_addr_master_all,
						Build_Base.build_base_npi_tin_xref(pversion,pUseProd).npi_tin_xref_all,
					  Build_Base.build_base_npi_extension(pversion,pUseProd).npi_extension_all,
						Build_Base.build_base_npi_extension_facility(pversion,pUseProd).npi_extension_facility_all,
						Build_Base.build_base_taxonomy_equiv(pversion,pUseProd).taxonomy_equiv_all,
						Build_Base.build_base_basc_deceased(pversion,pUseProd).basc_deceased_all,
						Build_Base.build_base_basc_addr(pversion,pUseProd).basc_addr_all,
						Build_Base.build_base_client_data(pversion,pUseProd).client_data_all,
						Build_Base.build_base_office_attributes(pversion,pUseProd).office_attributes_all,
						Build_Base.build_base_office_attributes_facility(pversion,pUseProd).office_attributes_facility_all,
            Build_Base.build_base_std_terms_lu(pversion,pUseProd).std_terms_lu_all,						
						Build_Base.build_base_taxonomy_full_lu(pversion,pUseProd).taxonomy_full_lu_all,						
						Build_Base.build_base_dir_confidence_2010_lu(pversion,pUseProd).dir_confidence_2010_lu_all,	
						Build_Base.build_base_specialty_lu(pversion,pUseProd).specialty_lu_all,	
						Build_Base.build_base_group_lu(pversion,pUseProd).group_lu_all,	
						Build_Base.build_base_hospital_lu(pversion,pUseProd).hospital_lu_all,	
						Build_Base.build_base_dea_xref(pversion,pUseProd).dea_xref_all,
            Build_Base.build_base_lic_xref(pversion,pUseProd).lic_xref_all,
 						Build_Base.build_base_addr_name_xref(pversion,pUseProd).addr_name_xref_all,
						Build_Base.build_base_facility_name_xref(pversion,pUseProd).facility_name_xref_all,
						Build_Base.build_base_basc_facility_mme(pversion,pUseProd).basc_facility_mme_all,
						Build_Base.build_base_lic_filedate(pversion,pUseProd).lic_filedate_all,
						Build_Base.build_base_nanpa(pversion,pUseProd).nanpa_all,
						Build_Base.build_base_best_hospital(pversion,pUseProd).best_hospital_all,
						Build_Base.build_base_last_name_stats(pversion,pUseProd).last_name_stats_all,
						Build_Base.build_base_source_confidence_lu(pversion,pUseProd).source_confidence_lu_all,
						Build_Base.build_base_ignore_terms_lu(pversion,pUseProd).ignore_terms_lu_all,
						Build_Base.build_base_taxon_lu(pversion,pUseProd).taxon_lu_all,
						Build_Base.build_base_abbr_lu(pversion,pUseProd).abbr_lu_all,
						Build_Base.build_base_call_queue_bad(pversion,pUseProd).call_queue_bad_all
					 ),
					 parallel(
					  build_keys.Build_Keys_individual_joined(pversion,pUseProd).individual_joined_All,
						build_keys.Build_Keys_facility_joined(pversion,pUseProd).facility_joined_All,
						build_keys.Build_Keys_facility_joined_filecode(pversion,pUseProd).facility_joined_filecode_All
					 ),
						parallel(
						Promote.promote_facility(pversion,pUseProd).buildfiles.Built2QA,
						Promote.Promote_facility_joined_grpkey(pversion,pUseProd).buildfiles.Built2QA,
						Promote.Promote_facility_joined_filecodekey(pversion,pUseProd).buildfiles.Built2QA,
						Promote.promote_individual(pversion,pUseProd).buildfiles.Built2QA,
						Promote.Promote_individual_joined_grpkey(pversion,pUseProd).buildfiles.Built2QA,
					  Promote.Promote_basc_claims(pversion,pUseProd).buildfiles.Built2QA,
					  Promote.Promote_basc_cp(pversion,pUseProd).buildfiles.Built2QA,
						Promote.promote_claims_by_month(pversion,pUseProd).buildfiles.Built2QA,
   					Promote.promote_claims_addr_master(pversion,pUseProd).buildfiles.Built2QA,
   					Promote.promote_npi_tin_xref(pversion,pUseProd).buildfiles.Built2QA,
   					Promote.promote_npi_extension(pversion,pUseProd).buildfiles.Built2QA,
   					Promote.promote_npi_extension_facility(pversion,pUseProd).buildfiles.Built2QA,
   				  Promote.promote_taxonomy_equiv(pversion,pUseProd).buildfiles.Built2QA,
   				  Promote.promote_basc_deceased(pversion,pUseProd).buildfiles.Built2QA,
            Promote.promote_basc_addr(pversion,pUseProd).buildfiles.Built2QA,
  					Promote.promote_client_data(pversion,pUseProd).buildfiles.Built2QA,
						Promote.promote_office_attributes(pversion,pUseProd).buildfiles.Built2QA,
						Promote.promote_office_attributes_facility(pversion,pUseProd).buildfiles.Built2QA,
						Promote.promote_std_terms_lu(pversion,pUseProd).buildfiles.Built2QA,
						Promote.promote_taxonomy_full_lu(pversion,pUseProd).buildfiles.Built2QA,
   					Promote.Promote_dir_confidence_2010_lu(pversion,pUseProd).buildfiles.Built2QA,
   					Promote.Promote_specialty_lu(pversion,pUseProd).buildfiles.Built2QA,
   					Promote.Promote_group_lu(pversion,pUseProd).buildfiles.Built2QA,
   					Promote.Promote_hospital_lu(pversion,pUseProd).buildfiles.Built2QA,
             Promote.Promote_dea_xref(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_lic_xref(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_facility_name_xref(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_addr_name_xref(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_basc_facility_mme(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_lic_filedate(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_nanpa(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_best_hospital(pversion,pUseProd).buildfiles.Built2QA,
              promote.promote_last_name_stats(pversion,pUseProd).buildfiles.Built2QA,						
   						Promote.Promote_source_confidence_lu(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_ignore_terms_lu(pversion,pUseProd).buildfiles.Built2QA,
   						Promote.Promote_taxon_lu(pversion,pUseProd).buildfiles.Built2QA,
						  Promote.Promote_abbr_lu(pversion,pUseProd).buildfiles.Built2QA,
						  Promote.Promote_call_queue_bad(pversion,pUseProd).buildfiles.Built2QA
						
            ),

						sequential(
   			    //Build_Strata(pversion,pUseProd).all,
   					//Archive processed files in history					
   					FileServices.StartSuperFileTransaction(),
   					FileServices.AddSuperFile(Filenames(pversion,pUseProd).facility_lInputHistTemplate,  Filenames(pversion,pUseProd).facility_lInputTemplate,,true),
						FileServices.AddSuperFile(Filenames(pversion,pUseProd).individual_lInputHistTemplate,  Filenames(pversion,pUseProd).individual_lInputTemplate,,true),
   					FileServices.ClearSuperFile(Filenames(pversion,pUseProd).facility_lInputTemplate),
						FileServices.ClearSuperFile(Filenames(pversion,pUseProd).individual_lInputTemplate),
					  FileServices.AddSuperFile(Filenames(pversion,pUseProd).basc_claims_lInputHistTemplate,  Filenames(pversion,pUseProd).basc_claims_lInputTemplate,,true),
						FileServices.ClearSuperFile(Filenames(pversion,pUseProd).basc_claims_lInputTemplate),										
						FileServices.AddSuperFile(Filenames(pversion,pUseProd).basc_cp_lInputHistTemplate,  Filenames(pversion,pUseProd).basc_cp_lInputTemplate,,true),
						FileServices.ClearSuperFile(Filenames(pversion,pUseProd).basc_cp_lInputTemplate),
							
						
						FileServices.AddSuperFile(Filenames(pversion,pUseProd).claims_by_month_lInputHistTemplate,  Filenames(pversion,pUseProd).claims_by_month_lInputTemplate,,true),
						FileServices.AddSuperFile(Filenames(pversion,pUseProd).claims_addr_master_lInputHistTemplate,  Filenames(pversion,pUseProd).claims_addr_master_lInputTemplate,,true),
   					FileServices.ClearSuperFile(Filenames(pversion,pUseProd).claims_by_month_lInputTemplate),
						FileServices.ClearSuperFile(Filenames(pversion,pUseProd).claims_addr_master_lInputTemplate),
   					
             FileServices.AddSuperFile(Filenames(pversion,pUseProd).npi_tin_xref_lInputHistTemplate,  Filenames(pversion,pUseProd).npi_tin_xref_lInputTemplate,,true),
						FileServices.AddSuperFile(Filenames(pversion,pUseProd).npi_extension_lInputHistTemplate,  Filenames(pversion,pUseProd).npi_extension_lInputTemplate,,true),
   					 FileServices.ClearSuperFile(Filenames(pversion,pUseProd).npi_tin_xref_lInputTemplate),
						 FileServices.ClearSuperFile(Filenames(pversion,pUseProd).npi_extension_lInputTemplate),
   											
						 FileServices.AddSuperFile(Filenames(pversion,pUseProd).npi_extension_facility_lInputHistTemplate,  Filenames(pversion,pUseProd).npi_extension_facility_lInputTemplate,,true),
						FileServices.AddSuperFile(Filenames(pversion,pUseProd).taxonomy_equiv_lInputHistTemplate,  Filenames(pversion,pUseProd).taxonomy_equiv_lInputTemplate,,true),
   					 FileServices.ClearSuperFile(Filenames(pversion,pUseProd).npi_extension_facility_lInputTemplate),
						 FileServices.ClearSuperFile(Filenames(pversion,pUseProd).taxonomy_equiv_lInputTemplate),
						 
              FileServices.AddSuperFile(Filenames(pversion,pUseProd).client_data_lInputHistTemplate,  Filenames(pversion,pUseProd).client_data_lInputTemplate,,true),
						  FileServices.AddSuperFile(Filenames(pversion,pUseProd).basc_deceased_lInputHistTemplate,  Filenames(pversion,pUseProd).basc_deceased_lInputTemplate,,true),
   					  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).client_data_lInputTemplate),
						 FileServices.ClearSuperFile(Filenames(pversion,pUseProd).basc_deceased_lInputTemplate),
						 
						  FileServices.AddSuperFile(Filenames(pversion,pUseProd).basc_addr_lInputHistTemplate,  Filenames(pversion,pUseProd). basc_addr_lInputTemplate,,true),
						 FileServices.AddSuperFile(Filenames(pversion,pUseProd).office_attributes_lInputHistTemplate,  Filenames(pversion,pUseProd).office_attributes_lInputTemplate,,true),
   					 FileServices.ClearSuperFile(Filenames(pversion,pUseProd).basc_addr_lInputTemplate),
						 FileServices.ClearSuperFile(Filenames(pversion,pUseProd).office_attributes_lInputTemplate),
						 
						  FileServices.AddSuperFile(Filenames(pversion,pUseProd).office_attributes_facility_lInputHistTemplate,  Filenames(pversion,pUseProd).office_attributes_facility_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).office_attributes_facility_lInputTemplate),
							
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).std_terms_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).std_terms_lu_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).std_terms_lu_lInputTemplate),
							
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).taxonomy_full_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).taxonomy_full_lu_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).taxonomy_full_lu_lInputTemplate),
							
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).dir_confidence_2010_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).dir_confidence_2010_lu_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).dir_confidence_2010_lu_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).specialty_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).specialty_lu_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).specialty_lu_lInputTemplate),
							
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).group_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).group_lu_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).group_lu_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).hospital_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).hospital_lu_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).hospital_lu_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).dea_xref_lInputHistTemplate,  Filenames(pversion,pUseProd).dea_xref_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).dea_xref_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).lic_xref_lInputHistTemplate,  Filenames(pversion,pUseProd).lic_xref_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).lic_xref_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).addr_name_xref_lInputHistTemplate,  Filenames(pversion,pUseProd).addr_name_xref_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).addr_name_xref_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).facility_name_xref_lInputHistTemplate,  Filenames(pversion,pUseProd).facility_name_xref_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).facility_name_xref_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).basc_facility_mme_lInputHistTemplate,  Filenames(pversion,pUseProd).basc_facility_mme_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).basc_facility_mme_lInputTemplate),	
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).lic_filedate_lInputHistTemplate,  Filenames(pversion,pUseProd).lic_filedate_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).lic_filedate_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).nanpa_lInputHistTemplate,  Filenames(pversion,pUseProd).nanpa_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).nanpa_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).best_hospital_lInputHistTemplate,  Filenames(pversion,pUseProd).best_hospital_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).best_hospital_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).last_name_stats_lInputHistTemplate,  Filenames(pversion,pUseProd).last_name_stats_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).last_name_stats_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).source_confidence_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).source_confidence_lu_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).source_confidence_lu_lInputTemplate),
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).ignore_terms_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).ignore_terms_lu_lInputTemplate,,true),
						  FileServices.ClearSuperFile(Filenames(pversion,pUseProd).ignore_terms_lu_lInputTemplate),										
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).taxon_lu_lInputHistTemplate,Filenames(pversion,pUseProd).taxon_lu_lInputTemplate,,true),
							FileServices.ClearSuperFile(Filenames(pversion,pUseProd).taxon_lu_lInputTemplate),	
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).abbr_lu_lInputHistTemplate,  Filenames(pversion,pUseProd).abbr_lu_lInputTemplate,,true),
              FileServices.ClearSuperFile(Filenames(pversion,pUseProd).abbr_lu_lInputTemplate),	
							FileServices.AddSuperFile(Filenames(pversion,pUseProd).call_queue_bad_lInputHistTemplate,  Filenames(pversion,pUseProd).call_queue_bad_lInputTemplate,,true),
              FileServices.ClearSuperFile(Filenames(pversion,pUseProd).call_queue_bad_lInputTemplate),
							
							
   					  FileServices.FinishSuperFileTransaction()
						)
   				): success(Send_Email(pversion,pUseProd).BuildSuccess), failure(send_email(pversion,pUseProd).BuildFailure);
   
   
   return built;

end;