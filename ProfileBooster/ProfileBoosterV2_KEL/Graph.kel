// #OPTION(codegen, 'nosmartjoins') // Hidden option that disables SMART joins in favor of more traditional HASH joins //Use SMART because Prod_ESP is on version > 7 (7.2.46-1)
#OPTION(keyfetchlimit, 10000) // Maximum number of rows to return for any key fetch. HPCC Defaults to 10,000
#OPTION(keyfetchlimitaction, 'atmost') // Instead of using LIMIT(N) for ECL JOIN's, use ATMOST(N). The N is specified by the keyfetchlimit #OPTION above.

// --- ENTITY Definitions Section ---
IMPORT ProfileBooster.ProfileBoosterV2_KEL.Entities;

// --- USE Statements Section ---
IMPORT ProfileBooster.ProfileBoosterV2_KEL.Uses;

// --- Attributes Section ---
IMPORT ProfileBooster.ProfileBoosterV2_KEL.Attributes;

QUERY: NonFCRAProfileBoosterV2(Person LexID_in, 
					// DATASET OF ProfileBooster.ProfileBoosterV2_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset, 
					P_InpClnArchDt,
					PERMITS DPM) <= Person(UID = LexID_in){
			LexID := UID,
			PL_PurchNewAmt,
			PL_PurchTotEv,
			PL_PurchCntEv,
			PL_PurchNewAgeMonths,
			PL_PurchOldAgeMonths,
			PL_PurchItemCntEv,
			PL_PurchAmtAvg,
			PL_AstVehAutoCarCntEv,
			PL_AstVehAutoCntEv,
			PL_AstVehAutoEliteCntEv,
			PL_AstVehAutoExpCntEv,
			PL_AstVehAutoLuxuryCntEv,
			PL_AstVehAutoMakeCntEv,
			PL_AstVehAutoOrigOwnCntEv,
			PL_AstVehAutoSUVCntEv,
			PL_AstVehAutoTruckCntEv, 
			PL_AstVehAutoVanCntEv,
			PL_AstVehAuto2ndFreqMake, 
			PL_AstVehAuto2ndFreqMakeCntEv,
			PL_AstVehAutoFreqMake,
			PL_AstVehAutoFreqMakeCntEv,		
			PL_AstVehAutoNewTypeIndx,
			PL_AstVehAutoEmrgPriceAvg,
			PL_AstVehAutoEmrgPriceDiff,
			PL_AstVehAutoEmrgPriceMax,
			PL_AstVehAutoNewPrice, 
			PL_AstVehAutoEmrgAgeAvg, 
			PL_AstVehAutoEmrgAgeMax, 
			PL_AstVehAutoEmrgAgeMin, 
			PL_AstVehAutoEmrgSpanAvg,
			PL_AstVehAutoLastAgeAvg,
			PL_AstVehAutoLastAgeMax,
			PL_AstVehAutoLastAgeMin,
			PL_AstVehAutoNewMsnc,
			PL_AstVehAutoTimeOwnSpanAvg,
			PL_AstVehOtherATVCntEv,
			PL_AstVehOtherCamperCntEv,
			PL_AstVehOtherCntEv,
			PL_AstVehOtherCommCntEv,
			PL_AstVehOtherMtrCntEv,
			PL_AstVehOtherOrigOwnCntEv,
			PL_AstVehOtherScooterCntEv,
			PL_AstVehOtherNewMsnc,
			PL_AstVehOtherNewTypeIndx,
			PL_AstVehOtherNewPrice,
			PL_AstVehOtherPriceAvg,
			PL_AstVehOtherPriceMax,
			PL_AstVehOtherPriceMin,
			PL_AstVehAutoEmrgPriceMin
   		}
   	ASOF reportedby(P_InpClnArchDt) 
   	USING DPM;
		
		QUERY: NonFCRAProfileBoosterV2All(InputArchiveDateClean,
																			PERMITS DPM
																			) <= Person{
			LexID := UID,
			PL_PurchNewAmt,
			PL_PurchTotEv,
			PL_PurchCntEv,
			PL_PurchNewAgeMonths,
			PL_PurchOldAgeMonths,
			PL_PurchItemCntEv,
			PL_PurchAmtAvg,
			PL_AstVehAutoCarCntEv,
			PL_AstVehAutoCntEv,
			PL_AstVehAutoEliteCntEv,
			PL_AstVehAutoExpCntEv,
			PL_AstVehAutoLuxuryCntEv,
			PL_AstVehAutoMakeCntEv,
			PL_AstVehAutoOrigOwnCntEv,
			PL_AstVehAutoSUVCntEv,
			PL_AstVehAutoTruckCntEv, 
			PL_AstVehAutoVanCntEv,
			PL_AstVehAuto2ndFreqMake, 
			PL_AstVehAuto2ndFreqMakeCntEv,
			PL_AstVehAutoFreqMake,
			PL_AstVehAutoFreqMakeCntEv,		
			PL_AstVehAutoNewTypeIndx,
			PL_AstVehAutoEmrgPriceAvg,
			PL_AstVehAutoEmrgPriceDiff,
			PL_AstVehAutoEmrgPriceMax,
			PL_AstVehAutoNewPrice, 
			PL_AstVehAutoEmrgAgeAvg, 
			PL_AstVehAutoEmrgAgeMax, 
			PL_AstVehAutoEmrgAgeMin, 
			PL_AstVehAutoEmrgSpanAvg,
			PL_AstVehAutoLastAgeAvg,
			PL_AstVehAutoLastAgeMax,
			PL_AstVehAutoLastAgeMin,
			PL_AstVehAutoNewMsnc,
			PL_AstVehAutoTimeOwnSpanAvg,
			PL_AstVehOtherATVCntEv,
			PL_AstVehOtherCamperCntEv,
			PL_AstVehOtherCntEv,
			PL_AstVehOtherCommCntEv,
			PL_AstVehOtherMtrCntEv,
			PL_AstVehOtherOrigOwnCntEv,
			PL_AstVehOtherScooterCntEv,
			PL_AstVehOtherNewMsnc,
			PL_AstVehOtherNewTypeIndx,
			PL_AstVehOtherNewPrice,
			PL_AstVehOtherPriceAvg,
			PL_AstVehOtherPriceMax,
			PL_AstVehOtherPriceMin,
			PL_AstVehAutoEmrgPriceMin
   		}
   	ASOF reportedby(InputArchiveDateClean)
   	USING DPM;