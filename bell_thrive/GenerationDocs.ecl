Generated by SALT V2.0 Gold
File being processed :-
MODULE:bell_thrive
FILENAME:files().input.used
FIELD:id:0,0
FIELD:fname:0,0
FIELD:lname:0,0
FIELD:dob:0,0
FIELD:Own_Home:0,0
FIELD:dlnum:0,0
FIELD:State_Of_License:0,0
FIELD:addr:0,0
FIELD:city:0,0
FIELD:st:0,0
FIELD:zip:0,0
FIELD:Phone_Home:0,0
FIELD:Phone_Cell:0,0
FIELD:Phone_Work:0,0
FIELD:EMAIL:0,0
FIELD:ip:0,0
FIELD:dt:0,0
FIELD:INCOME_MONTHLY:0,0
FIELD:Weekly_BiWeekly:0,0
FIELD:MONTHSEMPLOYED:0,0
FIELD:MonthsAtBank:0,0
FIELD:employer:0,0
FIELD:Bank:0,0
Total available specificity:0
Search Threshold set at -4
Need threshold and blockthreshold to continue
Use of PERSISTs in code set at:3
______________________________English Description of Matching Process___________________________
A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 0 nines of accuracy on a population of 0 with 0 records.
The matching threshold is therefore set at 0.
___Field by Field Breakdown of Scoring Method___
id Scoring: Two id fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the id
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for id.)
fname Scoring: Two fname fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the fname
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for fname.)
lname Scoring: Two lname fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the lname
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for lname.)
dob Scoring: Two dob fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dob
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dob.)
Own_Home Scoring: Two Own_Home fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the Own_Home
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for Own_Home.)
dlnum Scoring: Two dlnum fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dlnum
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dlnum.)
State_Of_License Scoring: Two State_Of_License fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the State_Of_License
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for State_Of_License.)
addr Scoring: Two addr fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the addr
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for addr.)
city Scoring: Two city fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the city
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for city.)
st Scoring: Two st fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the st
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for st.)
zip Scoring: Two zip fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the zip
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for zip.)
Phone_Home Scoring: Two Phone_Home fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the Phone_Home
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for Phone_Home.)
Phone_Cell Scoring: Two Phone_Cell fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the Phone_Cell
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for Phone_Cell.)
Phone_Work Scoring: Two Phone_Work fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the Phone_Work
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for Phone_Work.)
EMAIL Scoring: Two EMAIL fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the EMAIL
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for EMAIL.)
ip Scoring: Two ip fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ip
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for ip.)
dt Scoring: Two dt fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the dt
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for dt.)
INCOME_MONTHLY Scoring: Two INCOME_MONTHLY fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the INCOME_MONTHLY
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for INCOME_MONTHLY.)
Weekly_BiWeekly Scoring: Two Weekly_BiWeekly fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the Weekly_BiWeekly
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for Weekly_BiWeekly.)
MONTHSEMPLOYED Scoring: Two MONTHSEMPLOYED fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the MONTHSEMPLOYED
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for MONTHSEMPLOYED.)
MonthsAtBank Scoring: Two MonthsAtBank fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the MonthsAtBank
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for MonthsAtBank.)
employer Scoring: Two employer fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the employer
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for employer.)
Bank Scoring: Two Bank fields will be considered to match if:
  - they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the Bank
but should average 0 points with a failed match substracting 0 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for Bank.)
__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
  - Changing one character
  - Deleting one character
  - Transposing two characters
Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.
Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.
__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.
