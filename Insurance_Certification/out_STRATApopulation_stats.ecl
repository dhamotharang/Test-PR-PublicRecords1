import STRATA, Insurance_Certification;

export out_STRATApopulation_stats(string pversion) := function

Base := Insurance_Certification.Files().Base_Cert.qa;

strataLayout:=record
layouts_certification.base;
string10 nogrouping := 'nogrouping';
end;

strataBase:=project(Base, TRANSFORM(strataLayout,SELF := LEFT;));

rPopulationStats_Insurance_Certification := record
    strataBase.nogrouping;    // field to group by --  all values are "nogrouping"
    CountGroup                        := count(group);
    unique_id_CountNonBlank						:=sum(group,if((string)strataBase.unique_id<>'',1,0));
		Norm_Type_CountNonBlank						:=sum(group,if(strataBase.Norm_Type<>'',1,0));
		Norm_BusinessName_CountNonBlank		:=sum(group,if(strataBase.Norm_BusinessName<>'',1,0));
		Norm_FirstName_CountNonBlank			:=sum(group,if(strataBase.Norm_FirstName<>'',1,0));
		Norm_Middle_CountNonBlank					:=sum(group,if(strataBase.Norm_Middle<>'',1,0));
		Norm_Last_CountNonBlank						:=sum(group,if(strataBase.Norm_Last<>'',1,0));
		Norm_Suffix_CountNonBlank					:=sum(group,if(strataBase.Norm_Suffix<>'',1,0));
		Norm_Address1_CountNonBlank				:=sum(group,if(strataBase.Norm_Address1<>'',1,0));
		Norm_Address2_CountNonBlank				:=sum(group,if(strataBase.Norm_Address2<>'',1,0));
		Norm_City_CountNonBlank						:=sum(group,if(strataBase.Norm_City<>'',1,0));
		Norm_State_CountNonBlank					:=sum(group,if(strataBase.Norm_State<>'',1,0));
		Norm_Zip_CountNonBlank						:=sum(group,if(strataBase.Norm_Zip<>'',1,0));
		Norm_Zip4_CountNonBlank						:=sum(group,if(strataBase.Norm_Zip4<>'',1,0));
		Norm_Phone_CountNonBlank					:=sum(group,if(strataBase.Norm_Phone<>'',1,0));
		DartID_CountNonBlank							:=sum(group,if(strataBase.DartID<>'',1,0));
		DateAdded_CountNonBlank						:=sum(group,if((string)strataBase.DateAdded<>'',1,0));
		DateUpdated_CountNonBlank					:=sum(group,if((string)strataBase.DateUpdated<>'',1,0));
		Website_CountNonBlank							:=sum(group,if(strataBase.Website<>'',1,0));
		State_CountNonBlank								:=sum(group,if(strataBase.State<>'',1,0));
		LNInsCertRecordID_CountNonBlank		:=sum(group,if((string)strataBase.LNInsCertRecordID<>'',1,0));
		ProfileLastUpdated_CountNonBlank	:=sum(group,if(strataBase.ProfileLastUpdated<>'',1,0));
		SIID_CountNonBlank								:=sum(group,if(strataBase.SIID<>'',1,0));
		SIPStatusCode_CountNonBlank				:=sum(group,if(strataBase.SIPStatusCode<>'',1,0));
		WCBEmpNumber_CountNonBlank				:=sum(group,if(strataBase.WCBEmpNumber<>'',1,0));
		UBINumber_CountNonBlank						:=sum(group,if(strataBase.UBINumber<>'',1,0));
		CofANumber_CountNonBlank					:=sum(group,if(strataBase.CofANumber<>'',1,0));
		USDOTNumber_CountNonBlank					:=sum(group,if(strataBase.USDOTNumber<>'',1,0));
		Phone2_CountNonBlank							:=sum(group,if(strataBase.Phone2<>'',1,0));
		Phone3_CountNonBlank							:=sum(group,if(strataBase.Phone3<>'',1,0));
		Fax1_CountNonBlank								:=sum(group,if(strataBase.Fax1<>'',1,0));
		Fax2_CountNonBlank								:=sum(group,if(strataBase.Fax2<>'',1,0));
		Email1_CountNonBlank							:=sum(group,if(strataBase.Email1<>'',1,0));
		Email2_CountNonBlank							:=sum(group,if(strataBase.Email2<>'',1,0));
		BusinessType_CountNonBlank				:=sum(group,if(strataBase.BusinessType<>'',1,0));
		NameTitle_CountNonBlank						:=sum(group,if(strataBase.NameTitle<>'',1,0));
		MailingAddress1_CountNonBlank			:=sum(group,if(strataBase.MailingAddress1<>'',1,0));
		MailingAddress2_CountNonBlank			:=sum(group,if(strataBase.MailingAddress2<>'',1,0));
		MailingAddressCity_CountNonBlank	:=sum(group,if(strataBase.MailingAddressCity<>'',1,0));
		MailingAddressState_CountNonBlank	:=sum(group,if(strataBase.MailingAddressState<>'',1,0));
		MailingAddressZip_CountNonBlank		:=sum(group,if(strataBase.MailingAddressZip<>'',1,0));
		MailingAddressZip4_CountNonBlank	:=sum(group,if(strataBase.MailingAddressZip4<>'',1,0));
		ContactFax_CountNonBlank					:=sum(group,if(strataBase.ContactFax<>'',1,0));
		ContactEmail_CountNonBlank				:=sum(group,if(strataBase.ContactEmail<>'',1,0));
		PolicyHolderNameFirst_CountNonBlank		:=sum(group,if(strataBase.PolicyHolderNameFirst<>'',1,0));
		PolicyHolderNameMiddle_CountNonBlank	:=sum(group,if(strataBase.PolicyHolderNameMiddle<>'',1,0));
		PolicyHolderNameLast_CountNonBlank		:=sum(group,if(strataBase.PolicyHolderNameLast<>'',1,0));
		PolicyHolderNameSuffix_CountNonBlank	:=sum(group,if(strataBase.PolicyHolderNameSuffix<>'',1,0));
		StatePolicyFileNumber_CountNonBlank		:=sum(group,if(strataBase.StatePolicyFileNumber<>'',1,0));
		CoverageInjuryIllnessDate_CountNonBlank	:=sum(group,if(strataBase.CoverageInjuryIllnessDate<>'',1,0));
		SelfInsuranceGroup_CountNonBlank			:=sum(group,if(strataBase.SelfInsuranceGroup<>'',1,0));
		SelfInsuranceGroupPhone_CountNonBlank	:=sum(group,if(strataBase.SelfInsuranceGroupPhone<>'',1,0));
		SelfInsuranceGroupID_CountNonBlank		:=sum(group,if(strataBase.SelfInsuranceGroupID<>'',1,0));
		NumberofEmployees_CountNonBlank		:=sum(group,if(strataBase.NumberofEmployees<>'',1,0));
		LicensedContractor_CountNonBlank	:=sum(group,if(strataBase.LicensedContractor<>'',1,0));
		MCOName_CountNonBlank							:=sum(group,if(strataBase.MCOName<>'',1,0));
		MCONumber_CountNonBlank						:=sum(group,if(strataBase.MCONumber<>'',1,0));
		MCOAddressLine1_CountNonBlank			:=sum(group,if(strataBase.MCOAddressLine1<>'',1,0));
		MCOAddressLine2_CountNonBlank			:=sum(group,if(strataBase.MCOAddressLine2<>'',1,0));
		MCOCity_CountNonBlank							:=sum(group,if(strataBase.MCOCity<>'',1,0));
		MCOState_CountNonBlank						:=sum(group,if(strataBase.MCOState<>'',1,0));
		MCOZip_CountNonBlank							:=sum(group,if(strataBase.MCOZip<>'',1,0));
		MCOZip4_CountNonBlank							:=sum(group,if(strataBase.MCOZip4<>'',1,0));
		MCOPhone_CountNonBlank						:=sum(group,if(strataBase.MCOPhone<>'',1,0));
		GoverningClassCode_CountNonBlank	:=sum(group,if(strataBase.GoverningClassCode<>'',1,0));
		LicenseNumber_CountNonBlank				:=sum(group,if(strataBase.LicenseNumber<>'',1,0));
		Class_CountNonBlank								:=sum(group,if(strataBase.Class<>'',1,0));
		ClassificationDescription_CountNonBlank	:=sum(group,if(strataBase.ClassificationDescription<>'',1,0));
		LicenseStatus_CountNonBlank				:=sum(group,if(strataBase.LicenseStatus<>'',1,0));
		LicenseAdditionalInfo_CountNonBlank	:=sum(group,if(strataBase.LicenseAdditionalInfo<>'',1,0));
		LicenseIssueDate_CountNonBlank		:=sum(group,if(strataBase.LicenseIssueDate<>'',1,0));
		LicenseExpirationDate_CountNonBlank	:=sum(group,if(strataBase.LicenseExpirationDate<>'',1,0));
		NAICSCode_CountNonBlank						:=sum(group,if(strataBase.NAICSCode<>'',1,0));
		OfficerExemptFirstName1_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptFirstName1<>'',1,0));
		OfficerExemptLastName1_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptLastName1<>'',1,0));
		OfficerExemptMiddleName1_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptMiddleName1<>'',1,0));
		OfficerExemptTitle1_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTitle1<>'',1,0));
		OfficerExemptEffectiveDate1_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptEffectiveDate1<>'',1,0));
		OfficerExemptTerminationDate1_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTerminationDate1<>'',1,0));
		OfficerExemptType1_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptType1<>'',1,0));
		OfficerExemptBusinessActivities1_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptBusinessActivities1<>'',1,0));
		OfficerExemptFirstName2_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptFirstName2<>'',1,0));
		OfficerExemptLastName2_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptLastName2<>'',1,0));
		OfficerExemptMiddleName2_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptMiddleName2<>'',1,0));
		OfficerExemptTitle2_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTitle2<>'',1,0));
		OfficerExemptEffectiveDate2_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptEffectiveDate2<>'',1,0));
		OfficerExemptTerminationDate2_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTerminationDate2<>'',1,0));
		OfficerExemptType2_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptType2<>'',1,0));
		OfficerExemptBusinessActivities2_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptBusinessActivities2<>'',1,0));
		OfficerExemptFirstName3_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptFirstName3<>'',1,0));
		OfficerExemptLastName3_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptLastName3<>'',1,0));
		OfficerExemptMiddleName3_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptMiddleName3<>'',1,0));
		OfficerExemptTitle3_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTitle3<>'',1,0));
		OfficerExemptEffectiveDate3_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptEffectiveDate3<>'',1,0));
		OfficerExemptTerminationDate3_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTerminationDate3<>'',1,0));
		OfficerExemptType3_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptType3<>'',1,0));
		OfficerExemptBusinessActivities3_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptBusinessActivities3<>'',1,0));
		OfficerExemptFirstName4_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptFirstName4<>'',1,0));
		OfficerExemptLastName4_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptLastName4<>'',1,0));
		OfficerExemptMiddleName4_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptMiddleName4<>'',1,0));
		OfficerExemptTitle4_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTitle4<>'',1,0));
		OfficerExemptEffectiveDate4_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptEffectiveDate4<>'',1,0));
		OfficerExemptTerminationDate4_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTerminationDate4<>'',1,0));
		OfficerExemptType4_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptType4<>'',1,0));
		OfficerExemptBusinessActivities4_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptBusinessActivities4<>'',1,0));
		OfficerExemptFirstName5_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptFirstName5<>'',1,0));
		OfficerExemptLastName5_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptLastName5<>'',1,0));
		OfficerExemptMiddleName5_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptMiddleName5<>'',1,0));
		OfficerExemptTitle5_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTitle5<>'',1,0));
		OfficerExemptEffectiveDate5_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptEffectiveDate5<>'',1,0));
		OfficerExemptTerminationDate5_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptTerminationDate5<>'',1,0));
		OfficerExemptType5_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptType5<>'',1,0));
		OfficerExemptBusinessActivities5_CountNonBlank	:=sum(group,if(strataBase.OfficerExemptBusinessActivities5<>'',1,0));
		DBA1_CountNonBlank								:=sum(group,if(strataBase.DBA1<>'',1,0));
		DBADateFrom1_CountNonBlank				:=sum(group,if(strataBase.DBADateFrom1<>'',1,0));
		DBADateTo1_CountNonBlank					:=sum(group,if(strataBase.DBADateTo1<>'',1,0));
		DBAType1_CountNonBlank						:=sum(group,if(strataBase.DBAType1<>'',1,0));
		DBA2_CountNonBlank								:=sum(group,if(strataBase.DBA2<>'',1,0));
		DBADateFrom2_CountNonBlank				:=sum(group,if(strataBase.DBADateFrom2<>'',1,0));
		DBADateTo2_CountNonBlank					:=sum(group,if(strataBase.DBADateTo2<>'',1,0));
		DBAType2_CountNonBlank						:=sum(group,if(strataBase.DBAType2<>'',1,0));
		DBA3_CountNonBlank								:=sum(group,if(strataBase.DBA3<>'',1,0));
		DBADateFrom3_CountNonBlank				:=sum(group,if(strataBase.DBADateFrom3<>'',1,0));
		DBADateTo3_CountNonBlank					:=sum(group,if(strataBase.DBADateTo3<>'',1,0));
		DBAType3_CountNonBlank						:=sum(group,if(strataBase.DBAType3<>'',1,0));
		DBA4_CountNonBlank								:=sum(group,if(strataBase.DBA4<>'',1,0));
		DBADateFrom4_CountNonBlank				:=sum(group,if(strataBase.DBADateFrom4<>'',1,0));
		DBADateTo4_CountNonBlank					:=sum(group,if(strataBase.DBADateTo4<>'',1,0));
		DBAType4_CountNonBlank						:=sum(group,if(strataBase.DBAType4<>'',1,0));
		DBA5_CountNonBlank								:=sum(group,if(strataBase.DBA5<>'',1,0));
		DBADateFrom5_CountNonBlank				:=sum(group,if(strataBase.DBADateFrom5<>'',1,0));
		DBADateTo5_CountNonBlank					:=sum(group,if(strataBase.DBADateTo5<>'',1,0));
		DBAType5_CountNonBlank						:=sum(group,if(strataBase.DBAType5<>'',1,0));
		SubsidiaryName1_CountNonBlank			:=sum(group,if(strataBase.SubsidiaryName1<>'',1,0));
		SubsidiaryStartDate1_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate1<>'',1,0));
		SubsidiaryName2_CountNonBlank				:=sum(group,if(strataBase.SubsidiaryName2<>'',1,0));
		SubsidiaryStartDate2_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate2<>'',1,0));
		SubsidiaryName3_CountNonBlank				:=sum(group,if(strataBase.SubsidiaryName3<>'',1,0));
		SubsidiaryStartDate3_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate3<>'',1,0));
		SubsidiaryName4_CountNonBlank				:=sum(group,if(strataBase.SubsidiaryName4<>'',1,0));
		SubsidiaryStartDate4_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate4<>'',1,0));
		SubsidiaryName5_CountNonBlank				:=sum(group,if(strataBase.SubsidiaryName5<>'',1,0));
		SubsidiaryStartDate5_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate5<>'',1,0));
		SubsidiaryName6_CountNonBlank				:=sum(group,if(strataBase.SubsidiaryName6<>'',1,0));
		SubsidiaryStartDate6_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate6<>'',1,0));
		SubsidiaryName7_CountNonBlank				:=sum(group,if(strataBase.SubsidiaryName7<>'',1,0));
		SubsidiaryStartDate7_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate7<>'',1,0));
		SubsidiaryName8_CountNonBlank				:=sum(group,if(strataBase.SubsidiaryName8<>'',1,0));
		SubsidiaryStartDate8_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate8<>'',1,0));
		SubsidiaryName9_CountNonBlank				:=sum(group,if(strataBase.SubsidiaryName9<>'',1,0));
		SubsidiaryStartDate9_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate9<>'',1,0));
		SubsidiaryName10_CountNonBlank			:=sum(group,if(strataBase.SubsidiaryName10<>'',1,0));
		SubsidiaryStartDate10_CountNonBlank	:=sum(group,if(strataBase.SubsidiaryStartDate10<>'',1,0));
		Append_MailAddress1_CountNonBlank		:=sum(group,if(strataBase. Append_MailAddress1<>'',1,0));
		Append_MailAddressLast_CountNonBlank	:=sum(group,if(strataBase. Append_MailAddressLast<>'',1,0));
		bdid_CountNonBlank									:=sum(group,if((string)strataBase. bdid <>'',1,0));
		did_CountNonBlank										:=sum(group,if((string)strataBase. did <>'',1,0));
  UltID_CountNonZero	     			    		:= sum(group,if(strataBase.UltID<>0,1,0));
	OrgID_CountNonZero 	              		:= sum(group,if(strataBase.OrgID<>0,1,0));
	SeleID_CountNonZero              			:= sum(group,if(strataBase.SeleID<>0,1,0));
 	ProxID_CountNonZero 	            		:= sum(group,if(strataBase.ProxID<>0,1,0));
	POWID_CountNonZero 	              		:= sum(group,if(strataBase.POWID<>0,1,0));
	EmpID_CountNonZero 	   								:= sum(group,if(strataBase.EmpID<>0,1,0));
	DotID_CountNonZero 	 									:= sum(group,if(strataBase.DotID<>0,1,0));
	UltScore_CountNonZero 	  		        := sum(group,if(strataBase.UltScore<>0,1,0));
  OrgScore_CountNonZero 	      		    := sum(group,if(strataBase.OrgScore<>0,1,0));
  SeleScore_CountNonZero 			          := sum(group,if(strataBase.SeleScore<>0,1,0));
	ProxScore_CountNonZero 	    		      := sum(group,if(strataBase.ProxScore<>0,1,0));
	POWScore_CountNonZero 	        		  := sum(group,if(strataBase.POWScore<>0,1,0));
 	EmpScore_CountNonZero 			 					:= sum(group,if(strataBase.EmpScore<>0,1,0));
	DotScore_CountNonZero 	  						:= sum(group,if(strataBase.DotScore<>0,1,0));
	UltWeight_CountNonZero 	      		    := sum(group,if(strataBase.UltWeight<>0,1,0));		
	OrgWeight_CountNonZero 			          := sum(group,if(strataBase.OrgWeight<>0,1,0));
	SeleWeight_CountNonZero 	  		      := sum(group,if(strataBase.SeleWeight<>0,1,0));
	ProxWeight_CountNonZero 	      		  := sum(group,if(strataBase.ProxWeight<>0,1,0));
	POWWeight_CountNonZero 			          := sum(group,if(strataBase.POWWeight<>0,1,0));
	EmpWeight_CountNonZero 	 						  := sum(group,if(strataBase.EmpWeight<>0,1,0));
  DotWeight_CountNonZero 	 							:= sum(group,if(strataBase.DotWeight<>0,1,0));			
end;

dPopulationStats_Insurance_Certification := table(strataBase,rPopulationStats_Insurance_Certification,few);                                                               

STRATA.createXMLStats(dPopulationStats_Insurance_Certification,
            'Insurance_Certification','baseV1',pversion,
'',resultsOut,'view','population');
 
 return resultsOut;
 
 end;