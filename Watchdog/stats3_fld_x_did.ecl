avgDiffFmt := RECORD
	num_DID := COUNT(GROUP);
	SSN := SUM(GROUP,stat3_finalFmt.diffSSN)/COUNT(GROUP,stat3_finalFmt.diffSSN != 0);
	SSN_T := AVE(GROUP,stat3_finalFmt.diffSSN);
	Phones := SUM(GROUP,stat3_finalFmt.diffPhone)/COUNT(GROUP,stat3_finalFmt.diffPhone != 0);
	Phones_T := AVE(GROUP,stat3_finalFmt.diffPhone);
	DOB := SUM(GROUP,stat3_finalFmt.diffDOB)/COUNT(GROUP,stat3_finalFmt.diffDOB != 0);
	DOB_T := AVE(GROUP,stat3_finalFmt.diffDOB);
	Title := SUM(GROUP,stat3_finalFmt.diffTitle)/COUNT(GROUP,stat3_finalFmt.diffTitle != 0);
	Title_T := AVE(GROUP,stat3_finalFmt.diffTitle);
	Fname := SUM(GROUP,stat3_finalFmt.difffname)/COUNT(GROUP,stat3_finalFmt.difffname != 0);
	Fname_T := AVE(GROUP,stat3_finalFmt.diffFname);
	Mname := SUM(GROUP,stat3_finalFmt.diffmname)/COUNT(GROUP,stat3_finalFmt.diffmname != 0);
	Mname_T := AVE(GROUP,stat3_finalFmt.diffMname);
	Lname := SUM(GROUP,stat3_finalFmt.difflname)/COUNT(GROUP,stat3_finalFmt.difflname != 0);
	Lname_T := AVE(GROUP,stat3_finalFmt.difflname);
	NmSuffix := SUM(GROUP,stat3_finalFmt.diffNmSuffix)/COUNT(GROUP,stat3_finalFmt.diffNmSuffix != 0);
	NmSuffix_T := AVE(GROUP,stat3_finalFmt.diffNmSuffix);
	Prim_Range := SUM(GROUP,stat3_finalFmt.diffPrim_range)/COUNT(GROUP,stat3_finalFmt.diffPrim_range != 0);
	Prim_Range_T := AVE(GROUP,stat3_finalFmt.diffPrim_Range);
	Predir := SUM(GROUP,stat3_finalFmt.diffPredir)/COUNT(GROUP,stat3_finalFmt.diffPredir != 0);
	Predir_T := AVE(GROUP,stat3_finalFmt.diffPredir);
	Prim_name := SUM(GROUP,stat3_finalFmt.diffPrim_name)/COUNT(GROUP,stat3_finalFmt.diffPrim_Name != 0);
	Prim_name_T := AVE(GROUP,stat3_finalFmt.diffPrim_name);
	Suffix := SUM(GROUP,stat3_finalFmt.diffSuffix)/COUNT(GROUP,stat3_finalFmt.diffSuffix != 0);
	Suffix_T := AVE(GROUP,stat3_finalFmt.diffSuffix);
	PostDir := SUM(GROUP,stat3_finalFmt.diffPostDir)/COUNT(GROUP,stat3_finalFmt.diffPostDir != 0);
	Postdir_T := AVE(GROUP,stat3_finalFmt.diffPostDir);
	Unit_Desig := SUM(GROUP,stat3_finalFmt.diffUnit_Desig)/COUNT(GROUP,stat3_finalFmt.diffUnit_Desig != 0);
	Unit_Desig_T := AVE(GROUP,stat3_finalFmt.diffUnit_Desig);
	Sec_Range := SUM(GROUP,stat3_finalFmt.diffSec_Range)/COUNT(GROUP,stat3_finalFmt.diffSec_Range != 0);
	Sec_Range_T := AVE(GROUP,stat3_finalFmt.diffSec_range);
	City := SUM(GROUP,stat3_finalFmt.diffCity)/COUNT(GROUP,stat3_finalFmt.diffCity != 0);
	City_T := AVE(GROUP,stat3_finalFmt.diffCity);
	State := SUM(GROUP,stat3_finalFmt.diffState)/COUNT(GROUP,stat3_finalFmt.diffState != 0);
	State_T := AVE(GROUP,stat3_finalFmt.diffState);
	Zip := SUM(GROUP,stat3_finalFmt.diffZip)/COUNT(GROUP,stat3_finalFmt.diffZip != 0);
	Zip_T := AVE(GROUP,stat3_finalFmt.diffZip);
	Zip4 := SUM(GROUP,stat3_finalFmt.diffZip4)/COUNT(GROUP,stat3_finalFmt.diffZip4 != 0);
	Zip4_T := AVE(GROUP,stat3_finalFmt.diffZip4);
	DOD := SUM(GROUP,stat3_finalFmt.diffDOD)/COUNT(GROUP,stat3_finalFmt.diffDOD != 0);
	DOD_T := AVE(GROUP,stat3_finalFmt.diffDOD);
	Bkrupt := SUM(GROUP,stat3_finalFmt.diffBkrupt)/COUNT(GROUP,stat3_finalFmt.diffBkrupt != 0);
	Bkrupt_T := AVE(GROUP,stat3_finalFmt.diffBkrupt);
	Prpty := SUM(GROUP,stat3_finalFmt.diffPrpty)/COUNT(GROUP,stat3_finalFmt.diffPrpty != 0);
	Prpty_T := AVE(GROUP,stat3_finalFmt.diffPrpty);
	VehNums := SUM(GROUP,stat3_finalFmt.diffVehicle)/COUNT(GROUP,stat3_finalFmt.diffVehicle != 0);
	Vehicle_T := AVE(GROUP,stat3_finalFmt.diffVehicle);	
END;

export stats3_fld_x_did := TABLE(stat3_finalTab,avgDiffFmt);