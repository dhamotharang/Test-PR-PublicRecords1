stats2RecFmt := RECORD
	did := layout_delta.did;
	Titles := COUNT(GROUP,layout_Delta.title != '');
	FNames := COUNT(GROUP,layout_delta.fname != '');
	MNames := COUNT(GROUP,layout_delta.mname != '');
	LNames := COUNT(GROUP,layout_delta.lname != '');
	NmSuffix := COUNT(GROUP,layout_delta.name_suffix != '');
	SSN := COUNT(GROUP,layout_delta.ssn != '');
	Phone := COUNT(GROUP,layout_delta.phone != '');
	DOB := COUNT(GROUP,layout_delta.dob != 0);
	Prim_Range := COUNT(GROUP, Layout_Delta.prim_range != '');
	Predir := COUNT(GROUP, Layout_Delta.predir != '');
	Prim_name := COUNT(GROUP,Layout_Delta.prim_name != '');
	Suffix := COUNT(GROUP,Layout_Delta.suffix != '');
	Postdir := COUNT(GROUP,Layout_Delta.postdir != '');
	Unit_Desig := COUNT(GROUP,Layout_Delta.unit_desig != '');
	Sec_Range := COUNT(GROUP,Layout_Delta.sec_range != '');
	City_Name := COUNT(GROUP,Layout_Delta.city_name != '');
    State := COUNT(GROUP,Layout_Delta.st != '');
	Zip := COUNT(GROUP,Layout_Delta.zip != '');
	Zip4 := COUNT(GROUP,Layout_Delta.zip4 != '');
	DOD := COUNT(GROUP,Layout_Delta.DOD != '');
	Prpt_Deed_ID := COUNT(GROUP,Layout_Delta.Prpty_Deed_ID != '');
	BK_CC_CaseNo := COUNT(GROUP,Layout_Delta.Bkrupt_CrtCode_CaseNo != '');
	VehicleNum := COUNT(GROUP,layout_delta.Vehicle_vehnum != '');
END;
	
fdelta := distribute(file_delta,hash(layout_delta.did));
fdeltaSrt := sort (fdelta,did,local);

indivStats := TABLE(fdeltaSrt,stats2RecFmt,did,local);

avgTotalFmt := RECORD
	num_DID := COUNT(GROUP);
	SSN := SUM(GROUP,indivStats.SSN)/COUNT(GROUP,indivStats.SSN != 0);
	SSN_Tot := AVE(GROUP,indivStats.SSN);
	Phones := SUM(GROUP,indivStats.Phone)/COUNT(GROUP,indivStats.Phone != 0);
	Phones_Tot := AVE(GROUP,indivStats.Phone);	
	DOB := SUM(GROUP,indivStats.DOB)/COUNT(GROUP,indivStats.DOB != 0);
	DOB_Tot := AVE(GROUP,indivStats.DOB);
	Title := SUM(GROUP,indivStats.titles)/COUNT(GROUP,indivStats.DOB != 0);
	Title_Tot := AVE(GROUP,indivStats.Titles);
	Fname := SUM(GROUP,indivStats.fnames)/COUNT(GROUP,indivStats.fnames != 0);
	Fname_Tot := AVE(GROUP,indivStats.Fnames);
	Mname := SUM(GROUP,indivStats.mnames)/COUNT(GROUP,indivStats.mnames != 0);
	Mname_Tot := AVE(GROUP,indivStats.Mnames);
	Lname := SUM(GROUP,indivStats.lnames)/COUNT(GROUP,indivStats.lnames != 0);
	Lname_Tot := AVE(GROUP,indivStats.Lnames);
	NmSuffix := SUM(GROUP,indivStats.NmSuffix)/COUNT(GROUP,indivstats.NmSuffix != 0);
	NmSuffix_Tot := AVE(GROUP,indivStats.NmSuffix);
	Prim_Range := SUM(GROUP,indivStats.Prim_range)/COUNT(GROUP,indivStats.prim_range != 0);
	Prim_Range_Tot := AVE(GROUP,indivStats.Prim_Range);
	Predir := SUM(GROUP,indivStats.Predir)/COUNT(GROUP,indivStats.Predir != 0);
	Predir_Tot := AVE(GROUP,indivStats.Predir);
	Prim_name := SUM(GROUP,indivStats.Prim_name)/COUNT(GROUP,indivStats.Prim_name != 0);
	Prim_Name_Tot := AVE(GROUP,indivStats.Prim_Name);
	Suffix := SUM(GROUP,indivStats.Suffix)/COUNT(GROUP,indivStats.Suffix != 0);
	Suffix_Tot := AVE(GROUP,indivStats.Suffix);
	PostDir := SUM(GROUP,indivStats.PostDir)/COUNT(GROUP,indivStats.PostDir != 0);
	PostDir_Tot := AVE(GROUP,indivStats.PostDir);
	Unit_Desig := SUM(GROUP,indivStats.Unit_Desig)/COUNT(GROUP,indivStats.Unit_Desig != 0);
	Unit_Desig_Tot := AVE(GROUP,indivStats.Unit_Desig);
	Sec_Range := SUM(GROUP,indivStats.Sec_Range)/COUNT(GROUP,indivStats.Sec_range != 0);
	Sec_Range_Tot := AVE(GROUP,indivStats.Sec_Range);
	City := SUM(GROUP,indivStats.City_Name)/COUNT(GROUP,indivStats.City_name != 0);
	CIty_Tot := AVE(GROUP,indivStats.City_Name);
	State := SUM(GROUP,indivStats.State)/COUNT(GROUP,indivStats.State != 0);
	State_Tot := AVE(GROUP,indivStats.State);
	Zip := SUM(GROUP,indivStats.Zip)/COUNT(GROUP,indivStats.Zip != 0);
	Zip_Tot := AVE(GROUP,indivStats.Zip);
	Zip4 := SUM(GROUP,indivStats.Zip4)/COUNT(GROUP,indivStats.Zip4 != 0);
	Zip4_Tot := AVE(GROUP,indivStats.Zip4);
	DOD := SUM(GROUP,indivStats.DOD)/COUNT(GROUP,indivStats.DOD != 0);
	dod_Tot := AVE(GROUP,indivStats.dod);
	Prpt_Deed_ID := SUM(GROUP,indivStats.Prpt_deed_id)/COUNT(GROUP,indivStats.Prpt_deed_id != 0);
	Prpt_Dd_ID__Tot := AVE(GROUP,indivStats.Prpt_Deed_id);
	VehicleNum := SUM(GROUP,indivStats.VehicleNum)/COUNT(GROUP,indivStats.VehicleNum != 0);
	VehicleNum_Tot := AVE(GROUP,indivStats.VehicleNum);
	BK_CC_CaseNo := SUM(GROUP,indivStats.BK_CC_CaseNo)/COUNT(GROUP,indivStats.BK_CC_CaseNo != 0);
	BKCC_CaseNo_Tot := AVE(GROUP,indivStats.BK_CC_CaseNo);
END;

export stats2_fld_x_did := TABLE(indivStats,avgTotalFmt);