// Machine-readable versions of the spec file and subsets thereof
EXPORT GenerationMod := MODULE
 
  // SALT Version info
  EXPORT salt_VERSION := 'V3.8.0';
  EXPORT salt_MODULE := 'SALT38'; // Optional override by HACK:SALTMODULE
  EXPORT salt_TOOLSMODULE := 'SALTTOOLS30'; // Optional override by HACK:SALTTOOLSMODULE
 
  // Core module configuration values
  EXPORT spc_MODULE := 'Scrubs_DL_ME_MEDCERT';
  EXPORT spc_NAMESCOPE := '';
  EXPORT spc_PROCESS := '';
  EXPORT spc_IDNAME := ''; // cluster id (input)
  EXPORT spc_IDFIELD := ''; // cluster id (output)
  EXPORT spc_RIDFIELD := ''; // record id
 
  // The entire spec file
  EXPORT spcString :=
    'OPTIONS:-gh\n'
    + 'MODULE:Scrubs_DL_ME_MEDCERT\n'
    + 'FILENAME:In_ME_MEDCERT\n'
    + '// Uncomment up to NINES for internal or external adl\n'
    + '// IDFIELD:EXISTS:<NameOfIDField>\n'
    + '// RIDFIELD:<NameOfRidField>\n'
    + '// RECORDS:<NumberOfRecordsInDataFile>\n'
    + '// POPULATION:<ExpectedNumberOfEntitiesInDataFile>\n'
    + '// NINES:<Precision required 3 = 99.9%, 2 = 99% etc>\n'
    + '// Uncomment Process if doing external adl\n'
    + '// PROCESS:<ProcessName>\n'
    + '// FIELDTYPE statements can be used to clean up (or check the cleaning) of individual fields\n'
    + '// BESTTYPE statements declare methods of generating the best value for a given cluster; this can also improve linking\n'
    + '// FUZZY can be used to create new types of FUZZY linking\n'
    + '// Remember to generate specificities and update the 0,0 placeholders below before running any sort of linking.\n'
    + '// If the actual specificity for a field is <1, round it up to 1 rather than down to 0.  If your cluster is running\n'
    + '// a shared repository, calling SALTTOOLS30.mac_Patch_SPC from the bottom of BWR_Specificities may be a convenience.\n'
    + '\n'
    + 'FIELDTYPE:invalid_Past_Date:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_valid_past_date>0)\n'
    + 'FIELDTYPE:invalid_General_Date:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_valid_general_Date>0)\n'
    + 'FIELDTYPE:invalid_process_date:CUSTOM(Scrubs.fn_valid_pastDate>0)\n'
    + 'FIELDTYPE:invalid_orig_credential_type:ALLOW(DIL|DLP|DTL|SID|)\n'
    + 'FIELDTYPE:invalid_orig_lname:CUSTOM(Scrubs_DL_ME_MEDCERT.functions.fn_chk_people_names>0,orig_fname)\n'
    + 'FIELDTYPE:invalid_orig_fname:CUSTOM(Scrubs_DL_ME_MEDCERT.functions.fn_chk_people_names>0,orig_lname)\n'
    + 'FIELDTYPE:invalid_Alpha:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_alpha>0)\n'
    + 'FIELDTYPE:invalid_mandatory:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_chk_blanks>0) \n'
    + 'FIELDTYPE:invalid_orig_state:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_verify_state>0)  \n'
    + 'FIELDTYPE:invalid_orig_zip:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_full_zip>0)   \n'
    + 'FIELDTYPE:invalid_zip5:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_verify_zip5>0)\n'
    + 'FIELDTYPE:invalid_zip4:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_verify_zip4>0)\n'
    + 'FIELDTYPE:invalid_boolean:ALLOW(N|Y|)\n'
    + 'FIELDTYPE:invalid_orig_sex:ALLOW(F|M|U|)\n'
    + 'FIELDTYPE:invalid_Num:ALLOW(0123456789)\n'
    + 'FIELDTYPE:invalid_orig_hair:ALLOW(AU|BD|BK|BR|BT|GY|RD|WH|)\n'
    + 'FIELDTYPE:invalid_orig_eyes:ALLOW(BK|BL|BR|DB|DI|DG|DH|GR|GY|HB|HG|HH|HZ|PK|)\n'
    + 'FIELDTYPE:invalid_orig_dlstat:ALLOW(A|C|D|I|R|S|V|X|)\n'
    + 'FIELDTYPE:invalid_orig_dlclass:ALLOW(1|2|3|A|B|C|)\n'
    + 'FIELDTYPE:invalid_Alpha_Numeric:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_alphanumeric>0)\n'
    + 'FIELDTYPE:invalid_orig_endorsements:ALLOW(2|3|H|I|J|K|L|N|P|S|T|X|Y|Z|)\n'
    + 'FIELDTYPE:invalid_orig_comm_driv_status:ALLOW(A|B|C|D|E|F|G|H|I|K|L|M|N|O|P|R|S|T|U|V|W|X|Y|)\n'
    + 'FIELDTYPE:invalid_clean_name_first:CUSTOM(Scrubs_DL_ME_MEDCERT.functions.fn_chk_people_names>0,clean_name_middle,Clean_name_last)\n'
    + 'FIELDTYPE:invalid_clean_name_middle:CUSTOM(Scrubs_DL_ME_MEDCERT.functions.fn_chk_people_names>0,clean_name_first,Clean_name_last)\n'
    + 'FIELDTYPE:invalid_clean_name_last:CUSTOM(Scrubs_DL_ME_MEDCERT.functions.fn_chk_people_names>0,clean_name_first,clean_name_middle)\n'
    + 'FIELDTYPE:invalid_clean_cart:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_alphanumeric>0,4)\n'
    + 'FIELDTYPE:invalid_clean_lot:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_numeric>0,4)\n'
    + 'FIELDTYPE:invalid_clean_lot_order:ENUM(A|D|)\n'
    + 'FIELDTYPE:invalid_clean_dpbc:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_numeric>0,2)\n'
    + 'FIELDTYPE:invalid_clean_chk_digit:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_numeric>0,1)\n'
    + 'FIELDTYPE:invalid_clean_fips_state:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_numeric>0,2)\n'
    + 'FIELDTYPE:invalid_clean_fips_county:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_numeric>0,3)\n'
    + 'FIELDTYPE:invalid_clean_geo:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_geo_coord>0)\n'
    + 'FIELDTYPE:invalid_clean_msa:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_numeric>0,4)\n'
    + 'FIELDTYPE:invalid_clean_geo_match:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_numeric>0,1)\n'
    + 'FIELDTYPE:invalid_clean_err_stat:CUSTOM(Scrubs_DL_ME_MEDCERT.Functions.fn_alphanumeric>0,4)\n'
    + '\n'
    + 'FIELD:append_process_date:TYPE(STRING8):LIKE(invalid_process_date):0,0\n'
    + 'FIELD:orig_dob:TYPE(STRING8):LIKE(invalid_Past_Date):0,0\n'
    + 'FIELD:orig_credential_type:TYPE(STRING3):LIKE(invalid_orig_credential_type):0,0\n'
    + 'FIELD:orig_id_terminal_date:TYPE(STRING8):LIKE(invalid_Past_Date):0,0\n'
    + 'FIELD:orig_lname:TYPE(STRING30):LIKE(invalid_orig_lname):0,0\n'
    + 'FIELD:orig_fname:TYPE(STRING20):LIKE(invalid_orig_fname):0,0\n'
    + 'FIELD:orig_mi:TYPE(STRING1):LIKE(invalid_Alpha):0,0\n'
    + 'FIELD:orig_namesuf:TYPE(STRING3):0,0\n'
    + 'FIELD:orig_street:TYPE(STRING50):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:orig_city:TYPE(STRING50):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:orig_state:TYPE(STRING2):LIKE(invalid_orig_state):0,0\n'
    + 'FIELD:orig_zip:TYPE(STRING9):LIKE(invalid_orig_zip):0,0\n'
    + 'FIELD:orig_drivered:TYPE(STRING1):0,0\n'
    + 'FIELD:orig_sex:TYPE(STRING1):LIKE(invalid_orig_sex):0,0\n'
    + 'FIELD:orig_height:TYPE(STRING1):LIKE(invalid_Num):0,0\n'
    + 'FIELD:orig_height2:TYPE(STRING2):LIKE(invalid_Num):0,0\n'
    + 'FIELD:orig_weight:TYPE(STRING3):LIKE(invalid_Num):0,0\n'
    + 'FIELD:orig_hair:TYPE(STRING3):LIKE(invalid_orig_hair):0,0\n'
    + 'FIELD:orig_eyes:TYPE(STRING3):LIKE(invalid_orig_eyes):0,0\n'
    + 'FIELD:orig_dlexpiredate:TYPE(STRING8):LIKE(invalid_General_Date):0,0\n'
    + 'FIELD:orig_dlstat:TYPE(STRING1):LIKE(invalid_orig_dlstat):0,0\n'
    + 'FIELD:orig_dlissuedate:TYPE(STRING8):LIKE(invalid_Past_Date):0,0\n'
    + 'FIELD:orig_originalissuedate:TYPE(STRING8):LIKE(invalid_Past_Date):0,0\n'
    + 'FIELD:orig_regstatfr:TYPE(STRING1):LIKE(invalid_boolean):0,0\n'
    + 'FIELD:orig_regstatcr:TYPE(STRING1):LIKE(invalid_boolean):0,0\n'
    + 'FIELD:orig_dlclass:TYPE(STRING1):LIKE(invalid_orig_dlclass):0,0\n'
    + 'FIELD:orig_historynum:TYPE(STRING7):LIKE(invalid_Num):0,0\n'
    + 'FIELD:orig_disabledvet:TYPE(STRING1):0,0\n'
    + 'FIELD:orig_photo:TYPE(STRING1):0,0\n'
    + 'FIELD:orig_habitualoffender:TYPE(STRING1):0,0\n'
    + 'FIELD:orig_restrictions:TYPE(STRING20):LIKE(invalid_Alpha_Numeric):0,0\n'
    + 'FIELD:orig_endorsements:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements2:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements3:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements4:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements5:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements6:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements7:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements8:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements9:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements10:TYPE(STRING1):LIKE(invalid_orig_endorsements):0,0\n'
    + 'FIELD:orig_endorsements11_20:TYPE(STRING10):0,0\n'
    + 'FIELD:orig_comm_driv_status:TYPE(STRING1):LIKE(invalid_orig_comm_driv_status):0,0\n'
    + 'FIELD:orig_disabled_vet_type:TYPE(STRING30):0,0\n'
    + 'FIELD:orig_organ_donor:TYPE(STRING1):LIKE(invalid_boolean):0,0\n'
    + 'FIELD:orig_crlf:TYPE(STRING3):0,0\n'
    + 'FIELD:clean_name_prefix:TYPE(STRING5):0,0\n'
    + 'FIELD:clean_name_first:TYPE(STRING20):LIKE(invalid_clean_name_first):0,0\n'
    + 'FIELD:clean_name_middle:TYPE(STRING20):LIKE(invalid_clean_name_middle):0,0\n'
    + 'FIELD:clean_name_last:TYPE(STRING20):LIKE(invalid_clean_name_last):0,0\n'
    + 'FIELD:clean_name_suffix:TYPE(STRING5):0,0\n'
    + 'FIELD:clean_name_score:TYPE(STRING3):0,0\n'
    + 'FIELD:clean_prim_range:TYPE(STRING10):0,0\n'
    + 'FIELD:clean_predir:TYPE(STRING2):0,0\n'
    + 'FIELD:clean_prim_name:TYPE(STRING28):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:clean_addr_suffix:TYPE(STRING4):0,0\n'
    + 'FIELD:clean_postdir:TYPE(STRING2):0,0\n'
    + 'FIELD:clean_unit_desig:TYPE(STRING10):0,0\n'
    + 'FIELD:clean_sec_range:TYPE(STRING8):0,0\n'
    + 'FIELD:clean_p_city_name:TYPE(STRING25):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:clean_v_city_name:TYPE(STRING25):LIKE(invalid_mandatory):0,0\n'
    + 'FIELD:clean_st:TYPE(STRING2):LIKE(invalid_orig_state):0,0\n'
    + 'FIELD:clean_zip:TYPE(STRING5):LIKE(invalid_zip5):0,0\n'
    + 'FIELD:clean_zip4:TYPE(STRING4):LIKE(invalid_zip4):0,0\n'
    + 'FIELD:clean_cart:TYPE(STRING4):LIKE(invalid_clean_cart):0,0\n'
    + 'FIELD:clean_cr_sort_sz:TYPE(STRING1):0,0\n'
    + 'FIELD:clean_lot:TYPE(STRING4):LIKE(invalid_clean_lot):0,0\n'
    + 'FIELD:clean_lot_order:TYPE(STRING1):LIKE(invalid_clean_lot_order):0,0\n'
    + 'FIELD:clean_dpbc:TYPE(STRING2):LIKE(invalid_clean_dpbc):0,0\n'
    + 'FIELD:clean_chk_digit:TYPE(STRING1):LIKE(invalid_clean_chk_digit):0,0\n'
    + 'FIELD:clean_record_type:TYPE(STRING2):0,0\n'
    + 'FIELD:clean_ace_fips_st:TYPE(STRING2):LIKE(invalid_clean_fips_state):0,0\n'
    + 'FIELD:clean_fipscounty:TYPE(STRING3):LIKE(invalid_clean_fips_county):0,0\n'
    + 'FIELD:clean_geo_lat:TYPE(STRING10):LIKE(invalid_clean_geo):0,0\n'
    + 'FIELD:clean_geo_long:TYPE(STRING11):LIKE(invalid_clean_geo):0,0\n'
    + 'FIELD:clean_msa:TYPE(STRING4):LIKE(invalid_clean_msa):0,0\n'
    + 'FIELD:clean_geo_blk:TYPE(STRING7):0,0\n'
    + 'FIELD:clean_geo_match:TYPE(STRING1):LIKE(invalid_clean_geo_match):0,0\n'
    + 'FIELD:clean_err_stat:TYPE(STRING4):LIKE(invalid_clean_err_stat):0,0\n'
    + '// CONCEPT statements should be used to group together interellated fields; such as address\n'
    + '// RELATIONSHIP is used to find non-obvious relationships between the clusters\n'
    + '// SOURCEFIELD is used if a field of the file denotes a source of the records in that file\n'
    + '// LINKPATH is used to define access paths for external linking\n'
    ;
 
  // Structured values
  EXPORT linkpaths := DATASET([
    ],{STRING linkpath;STRING compulsory;STRING optional;STRING bonus;STRING required;STRING search});
 
END;
