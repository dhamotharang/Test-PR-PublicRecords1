//HPCC Systems KEL Compiler Version 1.1.0
IMPORT KEL11 AS KEL;
IMPORT E_Address,E_Bank,E_Bank_Account,E_Customer,E_Drivers_License,E_Email,E_Internet_Protocol,E_Person,E_Phone,E_Social_Security_Number FROM RiskIntelligenceNetwork_Analytics;
IMPORT * FROM KEL11.Null;
EXPORT E_Event := MODULE
  EXPORT Typ := KEL.typ.uid;
  EXPORT InLayout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ntyp(E_Customer.Typ) _r_Source_Customer_;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Address.Typ) Location_;
    KEL.typ.ntyp(E_Social_Security_Number.Typ) _r_Ssn_;
    KEL.typ.ntyp(E_Phone.Typ) _r_Phone_;
    KEL.typ.ntyp(E_Email.Typ) _r_Email_;
    KEL.typ.ntyp(E_Internet_Protocol.Typ) _r_Internet_Protocol_;
    KEL.typ.ntyp(E_Bank_Account.Typ) _r_Bank_Account_;
    KEL.typ.ntyp(E_Drivers_License.Typ) _r_Drivers_License_;
    KEL.typ.nint _rin__source_;
    KEL.typ.nint Lex_Id_;
    KEL.typ.nstr Phone_Number_;
    KEL.typ.nstr Otto_Address_Id_;
    KEL.typ.nstr Otto_Email_Id_;
    KEL.typ.nstr Otto_Ip_Address_Id_;
    KEL.typ.nstr Otto_Drivers_License_Id_;
    KEL.typ.nstr Otto_S_S_N_Id_;
    KEL.typ.nstr Otto_Bank_Account_Id_;
    KEL.typ.nstr Case_Id_;
    KEL.typ.nstr Client_Id_;
    KEL.typ.nint Record_Id_;
    KEL.typ.nkdate Event_Date_;
    KEL.typ.nstr Title_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Middle_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr Name_Suffix_;
    KEL.typ.nstr _unique__number_;
    KEL.typ.nstr _mac__address_;
    KEL.typ.nstr _serial__number_;
    KEL.typ.nstr _device__type_;
    KEL.typ.nstr _device__identification__provider_;
    KEL.typ.nbool _addresspobox_;
    KEL.typ.nbool _addresscmra_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Unit_Designation_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr Postal_City_;
    KEL.typ.nstr Vanity_City_;
    KEL.typ.nstr State_;
    KEL.typ.nstr Zip_;
    KEL.typ.nstr Zip4_;
    KEL.typ.nstr Carrier_Route_Number_;
    KEL.typ.nstr Carrier_Route_Sortation_At_Z_I_P_;
    KEL.typ.nint Line_Of_Travel_;
    KEL.typ.nstr Line_Of_Travel_Order_;
    KEL.typ.nint Delivery_Point_Barcode_;
    KEL.typ.nint Delivery_Point_Barcode_Check_Digit_;
    KEL.typ.nstr Type_Code_;
    KEL.typ.nint County_;
    KEL.typ.nfloat Latitude_;
    KEL.typ.nfloat Longitude_;
    KEL.typ.nint Metropolitan_Statistical_Area_;
    KEL.typ.nint Geo_Block_;
    KEL.typ.nstr Geo_Match_;
    KEL.typ.nstr A_C_E_Cleaner_Error_Code_;
    KEL.typ.nbool _is_Additional_;
    KEL.typ.nstr _address__vacancy__indicator_;
    KEL.typ.nstr _addrvalflag_;
    KEL.typ.nstr _drop__indicator_;
    KEL.typ.nstr Phone_Formatted_;
    KEL.typ.nbool Phones_Meta_Hit_;
    KEL.typ.nstr _phone__prepaid_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr License_State_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Type_;
    KEL.typ.nkdate Created_On_;
    KEL.typ.nstr Host_;
    KEL.typ.nstr Email_Last_Domain_;
    KEL.typ.nint _isdisposableemail_;
    KEL.typ.nstr Ssn_;
    KEL.typ.nstr Ssn_Formatted_;
    KEL.typ.nstr Routing_Number_;
    KEL.typ.nstr Full_Bankname_;
    KEL.typ.nstr Abbreviated_Bankname_;
    KEL.typ.nstr Fractional_Routingnumber_;
    KEL.typ.nstr Headoffice_Routingnumber_;
    KEL.typ.nstr Headoffice_Branchcodes_;
    KEL.typ.nstr Account_Number_;
    KEL.typ.nstr Bank_Hit_;
    KEL.typ.nint Confidence__that__activity__was__deceitful__id_;
    KEL.typ.nint _name__risk__code_;
    KEL.typ.nint _dob__risk__code_;
    KEL.typ.nint _ssn__risk__code_;
    KEL.typ.nint _drivers__license__risk__code_;
    KEL.typ.nint _physical__address__risk__code_;
    KEL.typ.nint _phone__risk__code_;
    KEL.typ.nint _cell__phone__risk__code_;
    KEL.typ.nint _work__phone__risk__code_;
    KEL.typ.nint _bank__account__1__risk__code_;
    KEL.typ.nint _bank__account__2__risk__code_;
    KEL.typ.nint _email__address__risk__code_;
    KEL.typ.nint _ip__address__fraud__code_;
    KEL.typ.nint _business__risk__code_;
    KEL.typ.nint _mailing__address__risk__code_;
    KEL.typ.nint _device__risk__code_;
    KEL.typ.nint _identity__risk__code_;
    KEL.typ.nint _event__type__1_;
    KEL.typ.nint _event__type__2_;
    KEL.typ.nint _event__type__3_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nbool Bocashell_Hit_;
    KEL.typ.nint Bocashell_Lex_Id_;
    KEL.typ.nint _nap__summary_;
    KEL.typ.nint _nas__summary_;
    KEL.typ.nint _cvi_;
    KEL.typ.nint _fp3__stolenidentityindex_;
    KEL.typ.nint _syntheticidentityindex__v3_;
    KEL.typ.nint _manipulatedidentityindex__v3_;
    KEL.typ.nint _socsdobflag_;
    KEL.typ.nint _pwsocsdobflag_;
    KEL.typ.nint _dobmatchlevel_;
    KEL.typ.nint _sourcerisklevel_;
    KEL.typ.nstr _reason1_;
    KEL.typ.nstr _reason2_;
    KEL.typ.nstr _reason3_;
    KEL.typ.nstr _reason4_;
    KEL.typ.nstr _reason5_;
    KEL.typ.nstr _reason6_;
    KEL.typ.nint _socsvalflag_;
    KEL.typ.nint _drlcvalflag_;
    KEL.typ.nint _hphonevalflag_;
    KEL.typ.nbool _truedid_;
    KEL.typ.nstr _best__fname_;
    KEL.typ.nstr _best__lname_;
    KEL.typ.nstr _best__ssn_;
    KEL.typ.nstr _input__fname__isbestmatch_;
    KEL.typ.nstr _input__lname__isbestmatch_;
    KEL.typ.nstr _input__ssn__isbestmatch_;
    KEL.typ.nbool _add__curr__pop_;
    KEL.typ.nstr _add__curr__prim__range_;
    KEL.typ.nstr _add__curr__predir_;
    KEL.typ.nstr _add__curr__prim__name_;
    KEL.typ.nstr _add__curr__addr__suffix_;
    KEL.typ.nstr _add__curr__postdir_;
    KEL.typ.nstr _add__curr__unit__desig_;
    KEL.typ.nstr _add__curr__sec__range_;
    KEL.typ.nstr _add__curr__city__name_;
    KEL.typ.nstr _add__curr__st_;
    KEL.typ.nstr _add__curr__zip5_;
    KEL.typ.nstr _add__curr__county_;
    KEL.typ.nstr _add__curr__geo__blk_;
    KEL.typ.nstr _add__curr__lat_;
    KEL.typ.nstr _add__curr__long_;
    KEL.typ.nbool _add__input__isbestmatch_;
    KEL.typ.nkdate _bocashell__addr1__dt__first__seen_;
    KEL.typ.nkdate _bocashell__addr1__date__last__seen_;
    KEL.typ.nstr _historydatetimestamp_;
    KEL.typ.nkdate _reported__dob_;
    KEL.typ.nbool _diddeceased_;
    KEL.typ.nkdate _diddeceaseddate_;
    KEL.typ.nstr _fraudpoint__v3_;
    KEL.typ.nbool Best_Hit_;
    KEL.typ.nstr _best__phone_;
    KEL.typ.nstr _best__drivers__license__state_;
    KEL.typ.nstr _best__drivers__license_;
    KEL.typ.nstr _best__drivers__license__exp_;
    KEL.typ.nkdate Deceased_Date_;
    KEL.typ.nkdate Deceased_Date_Of_Birth_;
    KEL.typ.nstr Deceased_First_;
    KEL.typ.nstr Deceased_Middle_;
    KEL.typ.nstr Deceased_Last_;
    KEL.typ.nstr Deceased_Match_Code_;
    KEL.typ.nbool _isdeepdive_;
    KEL.typ.nstr _county__death_;
    KEL.typ.nstr Deceased_Ssn_;
    KEL.typ.nstr _state__death__flag_;
    KEL.typ.nstr _death__rec__src_;
    KEL.typ.nstr _state__death__id_;
    KEL.typ.nbool Crim_Hit_;
    KEL.typ.nstr _curr__incar__flag_;
    KEL.typ.nstr _off__cat__list_;
    KEL.typ.nint _name__ssn__dob__match_;
    KEL.typ.nstr Ip_Address_;
    KEL.typ.nstr _iprngbeg_;
    KEL.typ.nstr _iprngend_;
    KEL.typ.nstr _edgecountry_;
    KEL.typ.nstr _edgeregion_;
    KEL.typ.nstr _edgecity_;
    KEL.typ.nstr _edgeconnspeed_;
    KEL.typ.nstr _edgemetrocode_;
    KEL.typ.nstr _edgelatitude_;
    KEL.typ.nstr _edgelongitude_;
    KEL.typ.nstr _edgepostalcode_;
    KEL.typ.nstr _edgecountrycode_;
    KEL.typ.nstr _edgeregioncode_;
    KEL.typ.nstr _edgecitycode_;
    KEL.typ.nstr _edgecontinentcode_;
    KEL.typ.nstr _edgetwolettercountry_;
    KEL.typ.nstr _edgeinternalcode_;
    KEL.typ.nstr _edgeareacodes_;
    KEL.typ.nstr _edgecountryconf_;
    KEL.typ.nstr _edgeregionconf_;
    KEL.typ.nstr _edgecitycong_;
    KEL.typ.nstr _edgepostalconf_;
    KEL.typ.nstr _edgegmtoffset_;
    KEL.typ.nstr _edgeindst_;
    KEL.typ.nstr _siccode_;
    KEL.typ.nstr _domainname_;
    KEL.typ.nstr _ispname_;
    KEL.typ.nstr _homebiztype_;
    KEL.typ.nstr _asn_;
    KEL.typ.nstr _asnname_;
    KEL.typ.nstr _primarylang_;
    KEL.typ.nstr _secondarylang_;
    KEL.typ.nstr _proxytype_;
    KEL.typ.nstr _proxydescription_;
    KEL.typ.nstr _isanisp_;
    KEL.typ.nstr _companyname_;
    KEL.typ.nstr _ranks_;
    KEL.typ.nstr _households_;
    KEL.typ.nstr _women_;
    KEL.typ.nstr _women18to34_;
    KEL.typ.nstr _women35to49_;
    KEL.typ.nstr _men_;
    KEL.typ.nstr _men18to34_;
    KEL.typ.nstr _men35to49_;
    KEL.typ.nstr _teens_;
    KEL.typ.nstr _kids_;
    KEL.typ.nstr _naicscode_;
    KEL.typ.nstr _cbsacode_;
    KEL.typ.nstr _cbsatitle_;
    KEL.typ.nstr _cbsatype_;
    KEL.typ.nstr _csacode_;
    KEL.typ.nstr _csatitle_;
    KEL.typ.nstr _mdcode_;
    KEL.typ.nstr _mdtitle_;
    KEL.typ.nstr _organizationname_;
    KEL.typ.nstr _advo__hitflag_;
    KEL.typ.nstr _advo__vacancyindicator_;
    KEL.typ.nstr _advo__addressstyle_;
    KEL.typ.nstr _advo__dropindicator_;
    KEL.typ.nstr _advo__residentialorbusinessindicator_;
    KEL.typ.nstr _advo__addresstype_;
    KEL.typ.nstr _advo__addressusagetype_;
    UNSIGNED4 __Part := 0;
  END;
  SHARED VIRTUAL __SourceFilter(DATASET(InLayout) __ds) := __ds;
  SHARED VIRTUAL __GroupedFilter(GROUPED DATASET(InLayout) __ds) := __ds;
  SHARED __Mapping := 'UID(DEFAULT:UID),gc_id(DEFAULT:_r_Customer_:0|DEFAULT:_r_Source_Customer_:0),lexid(DEFAULT:Subject_:0|DEFAULT:Lex_Id_:0),ottoaddressid(DEFAULT:Location_:0|DEFAULT:Otto_Address_Id_:\'\'),ottossnid(DEFAULT:_r_Ssn_:0|DEFAULT:Otto_S_S_N_Id_:\'\'),phonenumber(DEFAULT:_r_Phone_:0|DEFAULT:Phone_Number_:\'\'),ottoemailid(DEFAULT:_r_Email_:0|DEFAULT:Otto_Email_Id_:\'\'),ip_address(DEFAULT:_r_Internet_Protocol_:0),ottobankaccountid(DEFAULT:_r_Bank_Account_:0|DEFAULT:Otto_Bank_Account_Id_:\'\'),ottodriverslicenseid(DEFAULT:_r_Drivers_License_:0|DEFAULT:Otto_Drivers_License_Id_:\'\'),rin_source(DEFAULT:_rin__source_:0),ottoipaddressid(DEFAULT:Otto_Ip_Address_Id_:\'\'),caseid(DEFAULT:Case_Id_:\'\'),clientid(DEFAULT:Client_Id_:\'\'),record_id(DEFAULT:Record_Id_:0),eventdate(DEFAULT:Event_Date_:DATE),title(DEFAULT:Title_),firstname(DEFAULT:First_Name_),middlename(DEFAULT:Middle_Name_),lastname(DEFAULT:Last_Name_),namesuffix(DEFAULT:Name_Suffix_),unique_number(DEFAULT:_unique__number_:\'\'),mac_address(DEFAULT:_mac__address_:\'\'),serial_number(DEFAULT:_serial__number_:\'\'),device_type(DEFAULT:_device__type_:\'\'),device_identification_provider(DEFAULT:_device__identification__provider_:\'\'),addresspobox(DEFAULT:_addresspobox_),addresscmra(DEFAULT:_addresscmra_),primaryrange(DEFAULT:Primary_Range_),predirectional(DEFAULT:Predirectional_),primaryname(DEFAULT:Primary_Name_),suffix(DEFAULT:Suffix_),postdirectional(DEFAULT:Postdirectional_),unitdesignation(DEFAULT:Unit_Designation_),secondaryrange(DEFAULT:Secondary_Range_),postalcity(DEFAULT:Postal_City_),vanitycity(DEFAULT:Vanity_City_),state(DEFAULT:State_),zip(DEFAULT:Zip_),zip4(DEFAULT:Zip4_),carrierroutenumber(DEFAULT:Carrier_Route_Number_),carrierroutesortationatzip(DEFAULT:Carrier_Route_Sortation_At_Z_I_P_),lineoftravel(DEFAULT:Line_Of_Travel_),lineoftravelorder(DEFAULT:Line_Of_Travel_Order_),deliverypointbarcode(DEFAULT:Delivery_Point_Barcode_),deliverypointbarcodecheckdigit(DEFAULT:Delivery_Point_Barcode_Check_Digit_),typecode(DEFAULT:Type_Code_),county(DEFAULT:County_),latitude(DEFAULT:Latitude_),longitude(DEFAULT:Longitude_),metropolitanstatisticalarea(DEFAULT:Metropolitan_Statistical_Area_),geoblock(DEFAULT:Geo_Block_),geomatch(DEFAULT:Geo_Match_),acecleanererrorcode(DEFAULT:A_C_E_Cleaner_Error_Code_),isadditional(DEFAULT:_is_Additional_),address_vacancy_indicator(DEFAULT:_address__vacancy__indicator_:\'\'),addrvalflag(DEFAULT:_addrvalflag_:\'\'),drop_indicator(DEFAULT:_drop__indicator_:\'\'),phoneformatted(DEFAULT:Phone_Formatted_:\'\'),phonesmetahit(DEFAULT:Phones_Meta_Hit_),phone_prepaid(DEFAULT:_phone__prepaid_:\'\'),licensenumber(DEFAULT:License_Number_:\'\'),licensestate(DEFAULT:License_State_:\'\'),emailaddress(DEFAULT:Email_Address_:\'\'),type(DEFAULT:Type_:\'\'),createdon(DEFAULT:Created_On_:DATE),host(DEFAULT:Host_:\'\'),emaillastdomain(DEFAULT:Email_Last_Domain_:\'\'),isdisposableemail(DEFAULT:_isdisposableemail_:0),ssn(DEFAULT:Ssn_:\'\'),ssnformatted(DEFAULT:Ssn_Formatted_:\'\'),routingnumber(DEFAULT:Routing_Number_:\'\'),fullbankname(DEFAULT:Full_Bankname_:\'\'),abbreviatedbankname(DEFAULT:Abbreviated_Bankname_:\'\'),fractionalroutingnumber(DEFAULT:Fractional_Routingnumber_:\'\'),headofficeroutingnumber(DEFAULT:Headoffice_Routingnumber_:\'\'),headofficebranchcodes(DEFAULT:Headoffice_Branchcodes_:\'\'),accountnumber(DEFAULT:Account_Number_:\'\'),bankhit(DEFAULT:Bank_Hit_:\'\'),confidence_that_activity_was_deceitful_id(DEFAULT:Confidence__that__activity__was__deceitful__id_:0),name_risk_code(DEFAULT:_name__risk__code_:0),dob_risk_code(DEFAULT:_dob__risk__code_:0),ssn_risk_code(DEFAULT:_ssn__risk__code_:0),drivers_license_risk_code(DEFAULT:_drivers__license__risk__code_:0),physical_address_risk_code(DEFAULT:_physical__address__risk__code_:0),phone_risk_code(DEFAULT:_phone__risk__code_:0),cell_phone_risk_code(DEFAULT:_cell__phone__risk__code_:0),work_phone_risk_code(DEFAULT:_work__phone__risk__code_:0),bank_account_1_risk_code(DEFAULT:_bank__account__1__risk__code_:0),bank_account_2_risk_code(DEFAULT:_bank__account__2__risk__code_:0),email_address_risk_code(DEFAULT:_email__address__risk__code_:0),ip_address_fraud_code(DEFAULT:_ip__address__fraud__code_:0),business_risk_code(DEFAULT:_business__risk__code_:0),mailing_address_risk_code(DEFAULT:_mailing__address__risk__code_:0),device_risk_code(DEFAULT:_device__risk__code_:0),identity_risk_code(DEFAULT:_identity__risk__code_:0),event_type_1(DEFAULT:_event__type__1_:0),event_type_2(DEFAULT:_event__type__2_:0),event_type_3(DEFAULT:_event__type__3_:0),dateofbirth(DEFAULT:Date_Of_Birth_:DATE),bocashellhit(DEFAULT:Bocashell_Hit_),bocashelllexid(DEFAULT:Bocashell_Lex_Id_:0),nap_summary(DEFAULT:_nap__summary_:0),nas_summary(DEFAULT:_nas__summary_:0),cvi(DEFAULT:_cvi_:0),fp3_stolenidentityindex(DEFAULT:_fp3__stolenidentityindex_:0),syntheticidentityindex_v3(DEFAULT:_syntheticidentityindex__v3_:0),manipulatedidentityindex_v3(DEFAULT:_manipulatedidentityindex__v3_:0),socsdobflag(DEFAULT:_socsdobflag_:0),pwsocsdobflag(DEFAULT:_pwsocsdobflag_:0),dobmatchlevel(DEFAULT:_dobmatchlevel_:0),sourcerisklevel(DEFAULT:_sourcerisklevel_:0),reason1(DEFAULT:_reason1_:\'\'),reason2(DEFAULT:_reason2_:\'\'),reason3(DEFAULT:_reason3_:\'\'),reason4(DEFAULT:_reason4_:\'\'),reason5(DEFAULT:_reason5_:\'\'),reason6(DEFAULT:_reason6_:\'\'),socsvalflag(DEFAULT:_socsvalflag_:0),drlcvalflag(DEFAULT:_drlcvalflag_:0),hphonevalflag(DEFAULT:_hphonevalflag_:0),truedid(DEFAULT:_truedid_),best_flags.fname(DEFAULT:_best__fname_:\'\'),best_flags.lname(DEFAULT:_best__lname_:\'\'),best_flags.ssn(DEFAULT:_best__ssn_:\'\'),input_fname_isbestmatch(DEFAULT:_input__fname__isbestmatch_:\'\'),input_lname_isbestmatch(DEFAULT:_input__lname__isbestmatch_:\'\'),input_ssn_isbestmatch(DEFAULT:_input__ssn__isbestmatch_:\'\'),add_curr_pop(DEFAULT:_add__curr__pop_),add_curr_prim_range(DEFAULT:_add__curr__prim__range_:\'\'),add_curr_predir(DEFAULT:_add__curr__predir_:\'\'),add_curr_prim_name(DEFAULT:_add__curr__prim__name_:\'\'),add_curr_addr_suffix(DEFAULT:_add__curr__addr__suffix_:\'\'),add_curr_postdir(DEFAULT:_add__curr__postdir_:\'\'),add_curr_unit_desig(DEFAULT:_add__curr__unit__desig_:\'\'),add_curr_sec_range(DEFAULT:_add__curr__sec__range_:\'\'),add_curr_city_name(DEFAULT:_add__curr__city__name_:\'\'),add_curr_st(DEFAULT:_add__curr__st_:\'\'),add_curr_zip5(DEFAULT:_add__curr__zip5_:\'\'),add_curr_county(DEFAULT:_add__curr__county_:\'\'),add_curr_geo_blk(DEFAULT:_add__curr__geo__blk_:\'\'),add_curr_lat(DEFAULT:_add__curr__lat_:\'\'),add_curr_long(DEFAULT:_add__curr__long_:\'\'),add_input_isbestmatch(DEFAULT:_add__input__isbestmatch_),bocashell_addr1_dt_first_seen(DEFAULT:_bocashell__addr1__dt__first__seen_:DATE),bocashell_addr1_date_last_seen(DEFAULT:_bocashell__addr1__date__last__seen_:DATE),historydatetimestamp(DEFAULT:_historydatetimestamp_:\'\'),reported_dob(DEFAULT:_reported__dob_:DATE),diddeceased(DEFAULT:_diddeceased_),diddeceaseddate(DEFAULT:_diddeceaseddate_:DATE),fraudpoint_v3(DEFAULT:_fraudpoint__v3_:\'\'),besthit(DEFAULT:Best_Hit_),best_phone(DEFAULT:_best__phone_:\'\'),best_drivers_license_state(DEFAULT:_best__drivers__license__state_:\'\'),best_drivers_license(DEFAULT:_best__drivers__license_:\'\'),best_drivers_license_exp(DEFAULT:_best__drivers__license__exp_:\'\'),deceaseddate(DEFAULT:Deceased_Date_:DATE),deceaseddateofbirth(DEFAULT:Deceased_Date_Of_Birth_:DATE),deceasedfirst(DEFAULT:Deceased_First_:\'\'),deceasedmiddle(DEFAULT:Deceased_Middle_:\'\'),deceasedlast(DEFAULT:Deceased_Last_:\'\'),deceasedmatchcode(DEFAULT:Deceased_Match_Code_:\'\'),isdeepdive(DEFAULT:_isdeepdive_),county_death(DEFAULT:_county__death_:\'\'),deceasedssn(DEFAULT:Deceased_Ssn_:\'\'),state_death_flag(DEFAULT:_state__death__flag_:\'\'),death_rec_src(DEFAULT:_death__rec__src_:\'\'),state_death_id(DEFAULT:_state__death__id_:\'\'),crimhit(DEFAULT:Crim_Hit_),curr_incar_flag(DEFAULT:_curr__incar__flag_:\'\'),off_cat_list(DEFAULT:_off__cat__list_:\'\'),name_ssn_dob_match(DEFAULT:_name__ssn__dob__match_:0),ipaddress(DEFAULT:Ip_Address_:\'\'),iprngbeg(DEFAULT:_iprngbeg_:\'\'),iprngend(DEFAULT:_iprngend_:\'\'),edgecountry(DEFAULT:_edgecountry_:\'\'),edgeregion(DEFAULT:_edgeregion_:\'\'),edgecity(DEFAULT:_edgecity_:\'\'),edgeconnspeed(DEFAULT:_edgeconnspeed_:\'\'),edgemetrocode(DEFAULT:_edgemetrocode_:\'\'),edgelatitude(DEFAULT:_edgelatitude_:\'\'),edgelongitude(DEFAULT:_edgelongitude_:\'\'),edgepostalcode(DEFAULT:_edgepostalcode_:\'\'),edgecountrycode(DEFAULT:_edgecountrycode_:\'\'),edgeregioncode(DEFAULT:_edgeregioncode_:\'\'),edgecitycode(DEFAULT:_edgecitycode_:\'\'),edgecontinentcode(DEFAULT:_edgecontinentcode_:\'\'),edgetwolettercountry(DEFAULT:_edgetwolettercountry_:\'\'),edgeinternalcode(DEFAULT:_edgeinternalcode_:\'\'),edgeareacodes(DEFAULT:_edgeareacodes_:\'\'),edgecountryconf(DEFAULT:_edgecountryconf_:\'\'),edgeregionconf(DEFAULT:_edgeregionconf_:\'\'),edgecitycong(DEFAULT:_edgecitycong_:\'\'),edgepostalconf(DEFAULT:_edgepostalconf_:\'\'),edgegmtoffset(DEFAULT:_edgegmtoffset_:\'\'),edgeindst(DEFAULT:_edgeindst_:\'\'),siccode(DEFAULT:_siccode_:\'\'),domainname(DEFAULT:_domainname_:\'\'),ispname(DEFAULT:_ispname_:\'\'),homebiztype(DEFAULT:_homebiztype_:\'\'),asn(DEFAULT:_asn_:\'\'),asnname(DEFAULT:_asnname_:\'\'),primarylang(DEFAULT:_primarylang_:\'\'),secondarylang(DEFAULT:_secondarylang_:\'\'),proxytype(DEFAULT:_proxytype_:\'\'),proxydescription(DEFAULT:_proxydescription_:\'\'),isanisp(DEFAULT:_isanisp_:\'\'),companyname(DEFAULT:_companyname_:\'\'),ranks(DEFAULT:_ranks_:\'\'),households(DEFAULT:_households_:\'\'),women(DEFAULT:_women_:\'\'),women18to34(DEFAULT:_women18to34_:\'\'),women35to49(DEFAULT:_women35to49_:\'\'),men(DEFAULT:_men_:\'\'),men18to34(DEFAULT:_men18to34_:\'\'),men35to49(DEFAULT:_men35to49_:\'\'),teens(DEFAULT:_teens_:\'\'),kids(DEFAULT:_kids_:\'\'),naicscode(DEFAULT:_naicscode_:\'\'),cbsacode(DEFAULT:_cbsacode_:\'\'),cbsatitle(DEFAULT:_cbsatitle_:\'\'),cbsatype(DEFAULT:_cbsatype_:\'\'),csacode(DEFAULT:_csacode_:\'\'),csatitle(DEFAULT:_csatitle_:\'\'),mdcode(DEFAULT:_mdcode_:\'\'),mdtitle(DEFAULT:_mdtitle_:\'\'),organizationname(DEFAULT:_organizationname_:\'\'),advo_hitflag(DEFAULT:_advo__hitflag_:\'\'),advo_vacancyindicator(DEFAULT:_advo__vacancyindicator_:\'\'),advo_addressstyle(DEFAULT:_advo__addressstyle_:\'\'),advo_dropindicator(DEFAULT:_advo__dropindicator_:\'\'),advo_residentialorbusinessindicator(DEFAULT:_advo__residentialorbusinessindicator_:\'\'),advo_addresstype(DEFAULT:_advo__addresstype_:\'\'),advo_addressusagetype(DEFAULT:_advo__addressusagetype_:\'\')';
  EXPORT VIRTUAL DATASET(InLayout) InData := DATASET([],InLayout);
  EXPORT Layout := RECORD
    KEL.typ.nuid UID;
    KEL.typ.nint Record_Id_;
    KEL.typ.nkdate Event_Date_;
    KEL.typ.ntyp(E_Customer.Typ) _r_Customer_;
    KEL.typ.ntyp(E_Customer.Typ) _r_Source_Customer_;
    KEL.typ.ntyp(E_Person.Typ) Subject_;
    KEL.typ.ntyp(E_Email.Typ) _r_Email_;
    KEL.typ.ntyp(E_Social_Security_Number.Typ) _r_Ssn_;
    KEL.typ.ntyp(E_Address.Typ) Location_;
    KEL.typ.ntyp(E_Phone.Typ) _r_Phone_;
    KEL.typ.ntyp(E_Internet_Protocol.Typ) _r_Internet_Protocol_;
    KEL.typ.ntyp(E_Bank_Account.Typ) _r_Bank_Account_;
    KEL.typ.ntyp(E_Drivers_License.Typ) _r_Drivers_License_;
    KEL.typ.nstr Otto_Email_Id_;
    KEL.typ.nstr Otto_Ip_Address_Id_;
    KEL.typ.nstr Otto_S_S_N_Id_;
    KEL.typ.nstr Case_Id_;
    KEL.typ.nstr Client_Id_;
    KEL.typ.nstr Otto_Drivers_License_Id_;
    KEL.typ.nstr Otto_Bank_Account_Id_;
    KEL.typ.nint _rin__source_;
    KEL.typ.nint Lex_Id_;
    KEL.typ.nstr Otto_Address_Id_;
    KEL.typ.nstr Phone_Number_;
    KEL.typ.nstr Title_;
    KEL.typ.nstr First_Name_;
    KEL.typ.nstr Middle_Name_;
    KEL.typ.nstr Last_Name_;
    KEL.typ.nstr Name_Suffix_;
    KEL.typ.nkdate Date_Of_Birth_;
    KEL.typ.nkdate Deceased_Date_;
    KEL.typ.nkdate Deceased_Date_Of_Birth_;
    KEL.typ.nstr Deceased_First_;
    KEL.typ.nstr Deceased_Middle_;
    KEL.typ.nstr Deceased_Last_;
    KEL.typ.nstr _unique__number_;
    KEL.typ.nstr _mac__address_;
    KEL.typ.nstr _serial__number_;
    KEL.typ.nstr _device__type_;
    KEL.typ.nstr _device__identification__provider_;
    KEL.typ.nstr Deceased_Match_Code_;
    KEL.typ.nbool _isdeepdive_;
    KEL.typ.nbool Bocashell_Hit_;
    KEL.typ.nint Bocashell_Lex_Id_;
    KEL.typ.nint _nap__summary_;
    KEL.typ.nint _nas__summary_;
    KEL.typ.nint _cvi_;
    KEL.typ.nint _fp3__stolenidentityindex_;
    KEL.typ.nint _syntheticidentityindex__v3_;
    KEL.typ.nint _manipulatedidentityindex__v3_;
    KEL.typ.nint _socsdobflag_;
    KEL.typ.nint _pwsocsdobflag_;
    KEL.typ.nint _dobmatchlevel_;
    KEL.typ.nint _sourcerisklevel_;
    KEL.typ.nstr _reason1_;
    KEL.typ.nstr _reason2_;
    KEL.typ.nstr _reason3_;
    KEL.typ.nstr _reason4_;
    KEL.typ.nstr _reason5_;
    KEL.typ.nstr _reason6_;
    KEL.typ.nint _socsvalflag_;
    KEL.typ.nint _drlcvalflag_;
    KEL.typ.nint _hphonevalflag_;
    KEL.typ.nstr _historydatetimestamp_;
    KEL.typ.nkdate _reported__dob_;
    KEL.typ.nkdate _bocashell__addr1__dt__first__seen_;
    KEL.typ.nkdate _bocashell__addr1__date__last__seen_;
    KEL.typ.nbool _diddeceased_;
    KEL.typ.nkdate _diddeceaseddate_;
    KEL.typ.nstr _fraudpoint__v3_;
    KEL.typ.nbool Best_Hit_;
    KEL.typ.nstr _best__phone_;
    KEL.typ.nstr _best__drivers__license__state_;
    KEL.typ.nstr _best__drivers__license_;
    KEL.typ.nstr _best__drivers__license__exp_;
    KEL.typ.nbool _truedid_;
    KEL.typ.nstr _best__fname_;
    KEL.typ.nstr _best__lname_;
    KEL.typ.nstr _best__ssn_;
    KEL.typ.nstr _input__fname__isbestmatch_;
    KEL.typ.nstr _input__lname__isbestmatch_;
    KEL.typ.nstr _input__ssn__isbestmatch_;
    KEL.typ.nbool _add__curr__pop_;
    KEL.typ.nstr _add__curr__prim__range_;
    KEL.typ.nstr _add__curr__predir_;
    KEL.typ.nstr _add__curr__prim__name_;
    KEL.typ.nstr _add__curr__addr__suffix_;
    KEL.typ.nstr _add__curr__postdir_;
    KEL.typ.nstr _add__curr__unit__desig_;
    KEL.typ.nstr _add__curr__sec__range_;
    KEL.typ.nstr _add__curr__city__name_;
    KEL.typ.nstr _add__curr__st_;
    KEL.typ.nstr _add__curr__zip5_;
    KEL.typ.nstr _add__curr__county_;
    KEL.typ.nstr _add__curr__geo__blk_;
    KEL.typ.nstr _add__curr__lat_;
    KEL.typ.nstr _add__curr__long_;
    KEL.typ.nbool _add__input__isbestmatch_;
    KEL.typ.nstr _county__death_;
    KEL.typ.nstr Deceased_Ssn_;
    KEL.typ.nstr _state__death__flag_;
    KEL.typ.nstr _death__rec__src_;
    KEL.typ.nstr _state__death__id_;
    KEL.typ.nbool _addresspobox_;
    KEL.typ.nbool _addresscmra_;
    KEL.typ.nstr Primary_Range_;
    KEL.typ.nstr Predirectional_;
    KEL.typ.nstr Primary_Name_;
    KEL.typ.nstr Suffix_;
    KEL.typ.nstr Postdirectional_;
    KEL.typ.nstr Unit_Designation_;
    KEL.typ.nstr Secondary_Range_;
    KEL.typ.nstr Postal_City_;
    KEL.typ.nstr Vanity_City_;
    KEL.typ.nstr State_;
    KEL.typ.nstr Zip_;
    KEL.typ.nstr Zip4_;
    KEL.typ.nstr Carrier_Route_Number_;
    KEL.typ.nstr Carrier_Route_Sortation_At_Z_I_P_;
    KEL.typ.nint Line_Of_Travel_;
    KEL.typ.nstr Line_Of_Travel_Order_;
    KEL.typ.nint Delivery_Point_Barcode_;
    KEL.typ.nint Delivery_Point_Barcode_Check_Digit_;
    KEL.typ.nstr Type_Code_;
    KEL.typ.nint County_;
    KEL.typ.nfloat Latitude_;
    KEL.typ.nfloat Longitude_;
    KEL.typ.nint Metropolitan_Statistical_Area_;
    KEL.typ.nint Geo_Block_;
    KEL.typ.nstr Geo_Match_;
    KEL.typ.nstr A_C_E_Cleaner_Error_Code_;
    KEL.typ.nbool _is_Additional_;
    KEL.typ.nstr _address__vacancy__indicator_;
    KEL.typ.nstr _addrvalflag_;
    KEL.typ.nstr _drop__indicator_;
    KEL.typ.nstr License_Number_;
    KEL.typ.nstr License_State_;
    KEL.typ.nstr Phone_Formatted_;
    KEL.typ.nbool Phones_Meta_Hit_;
    KEL.typ.nstr _phone__prepaid_;
    KEL.typ.nstr Email_Address_;
    KEL.typ.nstr Type_;
    KEL.typ.nkdate Created_On_;
    KEL.typ.nstr Host_;
    KEL.typ.nstr Email_Last_Domain_;
    KEL.typ.nint _isdisposableemail_;
    KEL.typ.nstr Ssn_;
    KEL.typ.nstr Ssn_Formatted_;
    KEL.typ.nstr Routing_Number_;
    KEL.typ.nstr Full_Bankname_;
    KEL.typ.nstr Abbreviated_Bankname_;
    KEL.typ.nstr Fractional_Routingnumber_;
    KEL.typ.nstr Headoffice_Routingnumber_;
    KEL.typ.nstr Headoffice_Branchcodes_;
    KEL.typ.nstr Account_Number_;
    KEL.typ.nstr Bank_Hit_;
    KEL.typ.nbool Crim_Hit_;
    KEL.typ.nstr _curr__incar__flag_;
    KEL.typ.nstr _off__cat__list_;
    KEL.typ.nint _name__ssn__dob__match_;
    KEL.typ.nstr Ip_Address_;
    KEL.typ.nstr _iprngbeg_;
    KEL.typ.nstr _iprngend_;
    KEL.typ.nstr _edgecountry_;
    KEL.typ.nstr _edgeregion_;
    KEL.typ.nstr _edgecity_;
    KEL.typ.nstr _edgeconnspeed_;
    KEL.typ.nstr _edgemetrocode_;
    KEL.typ.nstr _edgelatitude_;
    KEL.typ.nstr _edgelongitude_;
    KEL.typ.nstr _edgepostalcode_;
    KEL.typ.nstr _edgecountrycode_;
    KEL.typ.nstr _edgeregioncode_;
    KEL.typ.nstr _edgecitycode_;
    KEL.typ.nstr _edgecontinentcode_;
    KEL.typ.nstr _edgetwolettercountry_;
    KEL.typ.nstr _edgeinternalcode_;
    KEL.typ.nstr _edgeareacodes_;
    KEL.typ.nstr _edgecountryconf_;
    KEL.typ.nstr _edgeregionconf_;
    KEL.typ.nstr _edgecitycong_;
    KEL.typ.nstr _edgepostalconf_;
    KEL.typ.nstr _edgegmtoffset_;
    KEL.typ.nstr _edgeindst_;
    KEL.typ.nstr _siccode_;
    KEL.typ.nstr _domainname_;
    KEL.typ.nstr _ispname_;
    KEL.typ.nstr _homebiztype_;
    KEL.typ.nstr _asn_;
    KEL.typ.nstr _asnname_;
    KEL.typ.nstr _primarylang_;
    KEL.typ.nstr _secondarylang_;
    KEL.typ.nstr _proxytype_;
    KEL.typ.nstr _proxydescription_;
    KEL.typ.nstr _isanisp_;
    KEL.typ.nstr _companyname_;
    KEL.typ.nstr _ranks_;
    KEL.typ.nstr _households_;
    KEL.typ.nstr _women_;
    KEL.typ.nstr _women18to34_;
    KEL.typ.nstr _women35to49_;
    KEL.typ.nstr _men_;
    KEL.typ.nstr _men18to34_;
    KEL.typ.nstr _men35to49_;
    KEL.typ.nstr _teens_;
    KEL.typ.nstr _kids_;
    KEL.typ.nstr _naicscode_;
    KEL.typ.nstr _cbsacode_;
    KEL.typ.nstr _cbsatitle_;
    KEL.typ.nstr _cbsatype_;
    KEL.typ.nstr _csacode_;
    KEL.typ.nstr _csatitle_;
    KEL.typ.nstr _mdcode_;
    KEL.typ.nstr _mdtitle_;
    KEL.typ.nstr _organizationname_;
    KEL.typ.nint Confidence__that__activity__was__deceitful__id_;
    KEL.typ.nint _event__type__1_;
    KEL.typ.nint _event__type__2_;
    KEL.typ.nint _event__type__3_;
    KEL.typ.nint _name__risk__code_;
    KEL.typ.nint _dob__risk__code_;
    KEL.typ.nint _ssn__risk__code_;
    KEL.typ.nint _drivers__license__risk__code_;
    KEL.typ.nint _physical__address__risk__code_;
    KEL.typ.nint _phone__risk__code_;
    KEL.typ.nint _cell__phone__risk__code_;
    KEL.typ.nint _work__phone__risk__code_;
    KEL.typ.nint _bank__account__1__risk__code_;
    KEL.typ.nint _bank__account__2__risk__code_;
    KEL.typ.nint _email__address__risk__code_;
    KEL.typ.nint _ip__address__fraud__code_;
    KEL.typ.nint _business__risk__code_;
    KEL.typ.nint _mailing__address__risk__code_;
    KEL.typ.nint _device__risk__code_;
    KEL.typ.nint _identity__risk__code_;
    KEL.typ.nstr _advo__hitflag_;
    KEL.typ.nstr _advo__vacancyindicator_;
    KEL.typ.nstr _advo__addressstyle_;
    KEL.typ.nstr _advo__dropindicator_;
    KEL.typ.nstr _advo__residentialorbusinessindicator_;
    KEL.typ.nstr _advo__addresstype_;
    KEL.typ.nstr _advo__addressusagetype_;
    KEL.typ.int __RecordCount := 0;
    UNSIGNED4 __Part := 0;
  END;
  EXPORT __PostFilter := __GroupedFilter(GROUP(DISTRIBUTE(InData,HASH(UID)),UID,__Part,LOCAL,ALL));
  Event_Group := __PostFilter;
  Layout Event__Rollup(InLayout __r, DATASET(InLayout) __recs) := TRANSFORM
    SELF.Record_Id_ := KEL.Intake.SingleValue(__recs,Record_Id_);
    SELF.Event_Date_ := KEL.Intake.SingleValue(__recs,Event_Date_);
    SELF._r_Customer_ := KEL.Intake.SingleValue(__recs,_r_Customer_);
    SELF._r_Source_Customer_ := KEL.Intake.SingleValue(__recs,_r_Source_Customer_);
    SELF.Subject_ := KEL.Intake.SingleValue(__recs,Subject_);
    SELF._r_Email_ := KEL.Intake.SingleValue(__recs,_r_Email_);
    SELF._r_Ssn_ := KEL.Intake.SingleValue(__recs,_r_Ssn_);
    SELF.Location_ := KEL.Intake.SingleValue(__recs,Location_);
    SELF._r_Phone_ := KEL.Intake.SingleValue(__recs,_r_Phone_);
    SELF._r_Internet_Protocol_ := KEL.Intake.SingleValue(__recs,_r_Internet_Protocol_);
    SELF._r_Bank_Account_ := KEL.Intake.SingleValue(__recs,_r_Bank_Account_);
    SELF._r_Drivers_License_ := KEL.Intake.SingleValue(__recs,_r_Drivers_License_);
    SELF.Otto_Email_Id_ := KEL.Intake.SingleValue(__recs,Otto_Email_Id_);
    SELF.Otto_Ip_Address_Id_ := KEL.Intake.SingleValue(__recs,Otto_Ip_Address_Id_);
    SELF.Otto_S_S_N_Id_ := KEL.Intake.SingleValue(__recs,Otto_S_S_N_Id_);
    SELF.Case_Id_ := KEL.Intake.SingleValue(__recs,Case_Id_);
    SELF.Client_Id_ := KEL.Intake.SingleValue(__recs,Client_Id_);
    SELF.Otto_Drivers_License_Id_ := KEL.Intake.SingleValue(__recs,Otto_Drivers_License_Id_);
    SELF.Otto_Bank_Account_Id_ := KEL.Intake.SingleValue(__recs,Otto_Bank_Account_Id_);
    SELF._rin__source_ := KEL.Intake.SingleValue(__recs,_rin__source_);
    SELF.Lex_Id_ := KEL.Intake.SingleValue(__recs,Lex_Id_);
    SELF.Otto_Address_Id_ := KEL.Intake.SingleValue(__recs,Otto_Address_Id_);
    SELF.Phone_Number_ := KEL.Intake.SingleValue(__recs,Phone_Number_);
    SELF.Title_ := KEL.Intake.SingleValue(__recs,Title_);
    SELF.First_Name_ := KEL.Intake.SingleValue(__recs,First_Name_);
    SELF.Middle_Name_ := KEL.Intake.SingleValue(__recs,Middle_Name_);
    SELF.Last_Name_ := KEL.Intake.SingleValue(__recs,Last_Name_);
    SELF.Name_Suffix_ := KEL.Intake.SingleValue(__recs,Name_Suffix_);
    SELF.Date_Of_Birth_ := KEL.Intake.SingleValue(__recs,Date_Of_Birth_);
    SELF.Deceased_Date_ := KEL.Intake.SingleValue(__recs,Deceased_Date_);
    SELF.Deceased_Date_Of_Birth_ := KEL.Intake.SingleValue(__recs,Deceased_Date_Of_Birth_);
    SELF.Deceased_First_ := KEL.Intake.SingleValue(__recs,Deceased_First_);
    SELF.Deceased_Middle_ := KEL.Intake.SingleValue(__recs,Deceased_Middle_);
    SELF.Deceased_Last_ := KEL.Intake.SingleValue(__recs,Deceased_Last_);
    SELF._unique__number_ := KEL.Intake.SingleValue(__recs,_unique__number_);
    SELF._mac__address_ := KEL.Intake.SingleValue(__recs,_mac__address_);
    SELF._serial__number_ := KEL.Intake.SingleValue(__recs,_serial__number_);
    SELF._device__type_ := KEL.Intake.SingleValue(__recs,_device__type_);
    SELF._device__identification__provider_ := KEL.Intake.SingleValue(__recs,_device__identification__provider_);
    SELF.Deceased_Match_Code_ := KEL.Intake.SingleValue(__recs,Deceased_Match_Code_);
    SELF._isdeepdive_ := KEL.Intake.SingleValue(__recs,_isdeepdive_);
    SELF.Bocashell_Hit_ := KEL.Intake.SingleValue(__recs,Bocashell_Hit_);
    SELF.Bocashell_Lex_Id_ := KEL.Intake.SingleValue(__recs,Bocashell_Lex_Id_);
    SELF._nap__summary_ := KEL.Intake.SingleValue(__recs,_nap__summary_);
    SELF._nas__summary_ := KEL.Intake.SingleValue(__recs,_nas__summary_);
    SELF._cvi_ := KEL.Intake.SingleValue(__recs,_cvi_);
    SELF._fp3__stolenidentityindex_ := KEL.Intake.SingleValue(__recs,_fp3__stolenidentityindex_);
    SELF._syntheticidentityindex__v3_ := KEL.Intake.SingleValue(__recs,_syntheticidentityindex__v3_);
    SELF._manipulatedidentityindex__v3_ := KEL.Intake.SingleValue(__recs,_manipulatedidentityindex__v3_);
    SELF._socsdobflag_ := KEL.Intake.SingleValue(__recs,_socsdobflag_);
    SELF._pwsocsdobflag_ := KEL.Intake.SingleValue(__recs,_pwsocsdobflag_);
    SELF._dobmatchlevel_ := KEL.Intake.SingleValue(__recs,_dobmatchlevel_);
    SELF._sourcerisklevel_ := KEL.Intake.SingleValue(__recs,_sourcerisklevel_);
    SELF._reason1_ := KEL.Intake.SingleValue(__recs,_reason1_);
    SELF._reason2_ := KEL.Intake.SingleValue(__recs,_reason2_);
    SELF._reason3_ := KEL.Intake.SingleValue(__recs,_reason3_);
    SELF._reason4_ := KEL.Intake.SingleValue(__recs,_reason4_);
    SELF._reason5_ := KEL.Intake.SingleValue(__recs,_reason5_);
    SELF._reason6_ := KEL.Intake.SingleValue(__recs,_reason6_);
    SELF._socsvalflag_ := KEL.Intake.SingleValue(__recs,_socsvalflag_);
    SELF._drlcvalflag_ := KEL.Intake.SingleValue(__recs,_drlcvalflag_);
    SELF._hphonevalflag_ := KEL.Intake.SingleValue(__recs,_hphonevalflag_);
    SELF._historydatetimestamp_ := KEL.Intake.SingleValue(__recs,_historydatetimestamp_);
    SELF._reported__dob_ := KEL.Intake.SingleValue(__recs,_reported__dob_);
    SELF._bocashell__addr1__dt__first__seen_ := KEL.Intake.SingleValue(__recs,_bocashell__addr1__dt__first__seen_);
    SELF._bocashell__addr1__date__last__seen_ := KEL.Intake.SingleValue(__recs,_bocashell__addr1__date__last__seen_);
    SELF._diddeceased_ := KEL.Intake.SingleValue(__recs,_diddeceased_);
    SELF._diddeceaseddate_ := KEL.Intake.SingleValue(__recs,_diddeceaseddate_);
    SELF._fraudpoint__v3_ := KEL.Intake.SingleValue(__recs,_fraudpoint__v3_);
    SELF.Best_Hit_ := KEL.Intake.SingleValue(__recs,Best_Hit_);
    SELF._best__phone_ := KEL.Intake.SingleValue(__recs,_best__phone_);
    SELF._best__drivers__license__state_ := KEL.Intake.SingleValue(__recs,_best__drivers__license__state_);
    SELF._best__drivers__license_ := KEL.Intake.SingleValue(__recs,_best__drivers__license_);
    SELF._best__drivers__license__exp_ := KEL.Intake.SingleValue(__recs,_best__drivers__license__exp_);
    SELF._truedid_ := KEL.Intake.SingleValue(__recs,_truedid_);
    SELF._best__fname_ := KEL.Intake.SingleValue(__recs,_best__fname_);
    SELF._best__lname_ := KEL.Intake.SingleValue(__recs,_best__lname_);
    SELF._best__ssn_ := KEL.Intake.SingleValue(__recs,_best__ssn_);
    SELF._input__fname__isbestmatch_ := KEL.Intake.SingleValue(__recs,_input__fname__isbestmatch_);
    SELF._input__lname__isbestmatch_ := KEL.Intake.SingleValue(__recs,_input__lname__isbestmatch_);
    SELF._input__ssn__isbestmatch_ := KEL.Intake.SingleValue(__recs,_input__ssn__isbestmatch_);
    SELF._add__curr__pop_ := KEL.Intake.SingleValue(__recs,_add__curr__pop_);
    SELF._add__curr__prim__range_ := KEL.Intake.SingleValue(__recs,_add__curr__prim__range_);
    SELF._add__curr__predir_ := KEL.Intake.SingleValue(__recs,_add__curr__predir_);
    SELF._add__curr__prim__name_ := KEL.Intake.SingleValue(__recs,_add__curr__prim__name_);
    SELF._add__curr__addr__suffix_ := KEL.Intake.SingleValue(__recs,_add__curr__addr__suffix_);
    SELF._add__curr__postdir_ := KEL.Intake.SingleValue(__recs,_add__curr__postdir_);
    SELF._add__curr__unit__desig_ := KEL.Intake.SingleValue(__recs,_add__curr__unit__desig_);
    SELF._add__curr__sec__range_ := KEL.Intake.SingleValue(__recs,_add__curr__sec__range_);
    SELF._add__curr__city__name_ := KEL.Intake.SingleValue(__recs,_add__curr__city__name_);
    SELF._add__curr__st_ := KEL.Intake.SingleValue(__recs,_add__curr__st_);
    SELF._add__curr__zip5_ := KEL.Intake.SingleValue(__recs,_add__curr__zip5_);
    SELF._add__curr__county_ := KEL.Intake.SingleValue(__recs,_add__curr__county_);
    SELF._add__curr__geo__blk_ := KEL.Intake.SingleValue(__recs,_add__curr__geo__blk_);
    SELF._add__curr__lat_ := KEL.Intake.SingleValue(__recs,_add__curr__lat_);
    SELF._add__curr__long_ := KEL.Intake.SingleValue(__recs,_add__curr__long_);
    SELF._add__input__isbestmatch_ := KEL.Intake.SingleValue(__recs,_add__input__isbestmatch_);
    SELF._county__death_ := KEL.Intake.SingleValue(__recs,_county__death_);
    SELF.Deceased_Ssn_ := KEL.Intake.SingleValue(__recs,Deceased_Ssn_);
    SELF._state__death__flag_ := KEL.Intake.SingleValue(__recs,_state__death__flag_);
    SELF._death__rec__src_ := KEL.Intake.SingleValue(__recs,_death__rec__src_);
    SELF._state__death__id_ := KEL.Intake.SingleValue(__recs,_state__death__id_);
    SELF._addresspobox_ := KEL.Intake.SingleValue(__recs,_addresspobox_);
    SELF._addresscmra_ := KEL.Intake.SingleValue(__recs,_addresscmra_);
    SELF.Primary_Range_ := KEL.Intake.SingleValue(__recs,Primary_Range_);
    SELF.Predirectional_ := KEL.Intake.SingleValue(__recs,Predirectional_);
    SELF.Primary_Name_ := KEL.Intake.SingleValue(__recs,Primary_Name_);
    SELF.Suffix_ := KEL.Intake.SingleValue(__recs,Suffix_);
    SELF.Postdirectional_ := KEL.Intake.SingleValue(__recs,Postdirectional_);
    SELF.Unit_Designation_ := KEL.Intake.SingleValue(__recs,Unit_Designation_);
    SELF.Secondary_Range_ := KEL.Intake.SingleValue(__recs,Secondary_Range_);
    SELF.Postal_City_ := KEL.Intake.SingleValue(__recs,Postal_City_);
    SELF.Vanity_City_ := KEL.Intake.SingleValue(__recs,Vanity_City_);
    SELF.State_ := KEL.Intake.SingleValue(__recs,State_);
    SELF.Zip_ := KEL.Intake.SingleValue(__recs,Zip_);
    SELF.Zip4_ := KEL.Intake.SingleValue(__recs,Zip4_);
    SELF.Carrier_Route_Number_ := KEL.Intake.SingleValue(__recs,Carrier_Route_Number_);
    SELF.Carrier_Route_Sortation_At_Z_I_P_ := KEL.Intake.SingleValue(__recs,Carrier_Route_Sortation_At_Z_I_P_);
    SELF.Line_Of_Travel_ := KEL.Intake.SingleValue(__recs,Line_Of_Travel_);
    SELF.Line_Of_Travel_Order_ := KEL.Intake.SingleValue(__recs,Line_Of_Travel_Order_);
    SELF.Delivery_Point_Barcode_ := KEL.Intake.SingleValue(__recs,Delivery_Point_Barcode_);
    SELF.Delivery_Point_Barcode_Check_Digit_ := KEL.Intake.SingleValue(__recs,Delivery_Point_Barcode_Check_Digit_);
    SELF.Type_Code_ := KEL.Intake.SingleValue(__recs,Type_Code_);
    SELF.County_ := KEL.Intake.SingleValue(__recs,County_);
    SELF.Latitude_ := KEL.Intake.SingleValue(__recs,Latitude_);
    SELF.Longitude_ := KEL.Intake.SingleValue(__recs,Longitude_);
    SELF.Metropolitan_Statistical_Area_ := KEL.Intake.SingleValue(__recs,Metropolitan_Statistical_Area_);
    SELF.Geo_Block_ := KEL.Intake.SingleValue(__recs,Geo_Block_);
    SELF.Geo_Match_ := KEL.Intake.SingleValue(__recs,Geo_Match_);
    SELF.A_C_E_Cleaner_Error_Code_ := KEL.Intake.SingleValue(__recs,A_C_E_Cleaner_Error_Code_);
    SELF._is_Additional_ := KEL.Intake.SingleValue(__recs,_is_Additional_);
    SELF._address__vacancy__indicator_ := KEL.Intake.SingleValue(__recs,_address__vacancy__indicator_);
    SELF._addrvalflag_ := KEL.Intake.SingleValue(__recs,_addrvalflag_);
    SELF._drop__indicator_ := KEL.Intake.SingleValue(__recs,_drop__indicator_);
    SELF.License_Number_ := KEL.Intake.SingleValue(__recs,License_Number_);
    SELF.License_State_ := KEL.Intake.SingleValue(__recs,License_State_);
    SELF.Phone_Formatted_ := KEL.Intake.SingleValue(__recs,Phone_Formatted_);
    SELF.Phones_Meta_Hit_ := KEL.Intake.SingleValue(__recs,Phones_Meta_Hit_);
    SELF._phone__prepaid_ := KEL.Intake.SingleValue(__recs,_phone__prepaid_);
    SELF.Email_Address_ := KEL.Intake.SingleValue(__recs,Email_Address_);
    SELF.Type_ := KEL.Intake.SingleValue(__recs,Type_);
    SELF.Created_On_ := KEL.Intake.SingleValue(__recs,Created_On_);
    SELF.Host_ := KEL.Intake.SingleValue(__recs,Host_);
    SELF.Email_Last_Domain_ := KEL.Intake.SingleValue(__recs,Email_Last_Domain_);
    SELF._isdisposableemail_ := KEL.Intake.SingleValue(__recs,_isdisposableemail_);
    SELF.Ssn_ := KEL.Intake.SingleValue(__recs,Ssn_);
    SELF.Ssn_Formatted_ := KEL.Intake.SingleValue(__recs,Ssn_Formatted_);
    SELF.Routing_Number_ := KEL.Intake.SingleValue(__recs,Routing_Number_);
    SELF.Full_Bankname_ := KEL.Intake.SingleValue(__recs,Full_Bankname_);
    SELF.Abbreviated_Bankname_ := KEL.Intake.SingleValue(__recs,Abbreviated_Bankname_);
    SELF.Fractional_Routingnumber_ := KEL.Intake.SingleValue(__recs,Fractional_Routingnumber_);
    SELF.Headoffice_Routingnumber_ := KEL.Intake.SingleValue(__recs,Headoffice_Routingnumber_);
    SELF.Headoffice_Branchcodes_ := KEL.Intake.SingleValue(__recs,Headoffice_Branchcodes_);
    SELF.Account_Number_ := KEL.Intake.SingleValue(__recs,Account_Number_);
    SELF.Bank_Hit_ := KEL.Intake.SingleValue(__recs,Bank_Hit_);
    SELF.Crim_Hit_ := KEL.Intake.SingleValue(__recs,Crim_Hit_);
    SELF._curr__incar__flag_ := KEL.Intake.SingleValue(__recs,_curr__incar__flag_);
    SELF._off__cat__list_ := KEL.Intake.SingleValue(__recs,_off__cat__list_);
    SELF._name__ssn__dob__match_ := KEL.Intake.SingleValue(__recs,_name__ssn__dob__match_);
    SELF.Ip_Address_ := KEL.Intake.SingleValue(__recs,Ip_Address_);
    SELF._iprngbeg_ := KEL.Intake.SingleValue(__recs,_iprngbeg_);
    SELF._iprngend_ := KEL.Intake.SingleValue(__recs,_iprngend_);
    SELF._edgecountry_ := KEL.Intake.SingleValue(__recs,_edgecountry_);
    SELF._edgeregion_ := KEL.Intake.SingleValue(__recs,_edgeregion_);
    SELF._edgecity_ := KEL.Intake.SingleValue(__recs,_edgecity_);
    SELF._edgeconnspeed_ := KEL.Intake.SingleValue(__recs,_edgeconnspeed_);
    SELF._edgemetrocode_ := KEL.Intake.SingleValue(__recs,_edgemetrocode_);
    SELF._edgelatitude_ := KEL.Intake.SingleValue(__recs,_edgelatitude_);
    SELF._edgelongitude_ := KEL.Intake.SingleValue(__recs,_edgelongitude_);
    SELF._edgepostalcode_ := KEL.Intake.SingleValue(__recs,_edgepostalcode_);
    SELF._edgecountrycode_ := KEL.Intake.SingleValue(__recs,_edgecountrycode_);
    SELF._edgeregioncode_ := KEL.Intake.SingleValue(__recs,_edgeregioncode_);
    SELF._edgecitycode_ := KEL.Intake.SingleValue(__recs,_edgecitycode_);
    SELF._edgecontinentcode_ := KEL.Intake.SingleValue(__recs,_edgecontinentcode_);
    SELF._edgetwolettercountry_ := KEL.Intake.SingleValue(__recs,_edgetwolettercountry_);
    SELF._edgeinternalcode_ := KEL.Intake.SingleValue(__recs,_edgeinternalcode_);
    SELF._edgeareacodes_ := KEL.Intake.SingleValue(__recs,_edgeareacodes_);
    SELF._edgecountryconf_ := KEL.Intake.SingleValue(__recs,_edgecountryconf_);
    SELF._edgeregionconf_ := KEL.Intake.SingleValue(__recs,_edgeregionconf_);
    SELF._edgecitycong_ := KEL.Intake.SingleValue(__recs,_edgecitycong_);
    SELF._edgepostalconf_ := KEL.Intake.SingleValue(__recs,_edgepostalconf_);
    SELF._edgegmtoffset_ := KEL.Intake.SingleValue(__recs,_edgegmtoffset_);
    SELF._edgeindst_ := KEL.Intake.SingleValue(__recs,_edgeindst_);
    SELF._siccode_ := KEL.Intake.SingleValue(__recs,_siccode_);
    SELF._domainname_ := KEL.Intake.SingleValue(__recs,_domainname_);
    SELF._ispname_ := KEL.Intake.SingleValue(__recs,_ispname_);
    SELF._homebiztype_ := KEL.Intake.SingleValue(__recs,_homebiztype_);
    SELF._asn_ := KEL.Intake.SingleValue(__recs,_asn_);
    SELF._asnname_ := KEL.Intake.SingleValue(__recs,_asnname_);
    SELF._primarylang_ := KEL.Intake.SingleValue(__recs,_primarylang_);
    SELF._secondarylang_ := KEL.Intake.SingleValue(__recs,_secondarylang_);
    SELF._proxytype_ := KEL.Intake.SingleValue(__recs,_proxytype_);
    SELF._proxydescription_ := KEL.Intake.SingleValue(__recs,_proxydescription_);
    SELF._isanisp_ := KEL.Intake.SingleValue(__recs,_isanisp_);
    SELF._companyname_ := KEL.Intake.SingleValue(__recs,_companyname_);
    SELF._ranks_ := KEL.Intake.SingleValue(__recs,_ranks_);
    SELF._households_ := KEL.Intake.SingleValue(__recs,_households_);
    SELF._women_ := KEL.Intake.SingleValue(__recs,_women_);
    SELF._women18to34_ := KEL.Intake.SingleValue(__recs,_women18to34_);
    SELF._women35to49_ := KEL.Intake.SingleValue(__recs,_women35to49_);
    SELF._men_ := KEL.Intake.SingleValue(__recs,_men_);
    SELF._men18to34_ := KEL.Intake.SingleValue(__recs,_men18to34_);
    SELF._men35to49_ := KEL.Intake.SingleValue(__recs,_men35to49_);
    SELF._teens_ := KEL.Intake.SingleValue(__recs,_teens_);
    SELF._kids_ := KEL.Intake.SingleValue(__recs,_kids_);
    SELF._naicscode_ := KEL.Intake.SingleValue(__recs,_naicscode_);
    SELF._cbsacode_ := KEL.Intake.SingleValue(__recs,_cbsacode_);
    SELF._cbsatitle_ := KEL.Intake.SingleValue(__recs,_cbsatitle_);
    SELF._cbsatype_ := KEL.Intake.SingleValue(__recs,_cbsatype_);
    SELF._csacode_ := KEL.Intake.SingleValue(__recs,_csacode_);
    SELF._csatitle_ := KEL.Intake.SingleValue(__recs,_csatitle_);
    SELF._mdcode_ := KEL.Intake.SingleValue(__recs,_mdcode_);
    SELF._mdtitle_ := KEL.Intake.SingleValue(__recs,_mdtitle_);
    SELF._organizationname_ := KEL.Intake.SingleValue(__recs,_organizationname_);
    SELF.Confidence__that__activity__was__deceitful__id_ := KEL.Intake.SingleValue(__recs,Confidence__that__activity__was__deceitful__id_);
    SELF._event__type__1_ := KEL.Intake.SingleValue(__recs,_event__type__1_);
    SELF._event__type__2_ := KEL.Intake.SingleValue(__recs,_event__type__2_);
    SELF._event__type__3_ := KEL.Intake.SingleValue(__recs,_event__type__3_);
    SELF._name__risk__code_ := KEL.Intake.SingleValue(__recs,_name__risk__code_);
    SELF._dob__risk__code_ := KEL.Intake.SingleValue(__recs,_dob__risk__code_);
    SELF._ssn__risk__code_ := KEL.Intake.SingleValue(__recs,_ssn__risk__code_);
    SELF._drivers__license__risk__code_ := KEL.Intake.SingleValue(__recs,_drivers__license__risk__code_);
    SELF._physical__address__risk__code_ := KEL.Intake.SingleValue(__recs,_physical__address__risk__code_);
    SELF._phone__risk__code_ := KEL.Intake.SingleValue(__recs,_phone__risk__code_);
    SELF._cell__phone__risk__code_ := KEL.Intake.SingleValue(__recs,_cell__phone__risk__code_);
    SELF._work__phone__risk__code_ := KEL.Intake.SingleValue(__recs,_work__phone__risk__code_);
    SELF._bank__account__1__risk__code_ := KEL.Intake.SingleValue(__recs,_bank__account__1__risk__code_);
    SELF._bank__account__2__risk__code_ := KEL.Intake.SingleValue(__recs,_bank__account__2__risk__code_);
    SELF._email__address__risk__code_ := KEL.Intake.SingleValue(__recs,_email__address__risk__code_);
    SELF._ip__address__fraud__code_ := KEL.Intake.SingleValue(__recs,_ip__address__fraud__code_);
    SELF._business__risk__code_ := KEL.Intake.SingleValue(__recs,_business__risk__code_);
    SELF._mailing__address__risk__code_ := KEL.Intake.SingleValue(__recs,_mailing__address__risk__code_);
    SELF._device__risk__code_ := KEL.Intake.SingleValue(__recs,_device__risk__code_);
    SELF._identity__risk__code_ := KEL.Intake.SingleValue(__recs,_identity__risk__code_);
    SELF._advo__hitflag_ := KEL.Intake.SingleValue(__recs,_advo__hitflag_);
    SELF._advo__vacancyindicator_ := KEL.Intake.SingleValue(__recs,_advo__vacancyindicator_);
    SELF._advo__addressstyle_ := KEL.Intake.SingleValue(__recs,_advo__addressstyle_);
    SELF._advo__dropindicator_ := KEL.Intake.SingleValue(__recs,_advo__dropindicator_);
    SELF._advo__residentialorbusinessindicator_ := KEL.Intake.SingleValue(__recs,_advo__residentialorbusinessindicator_);
    SELF._advo__addresstype_ := KEL.Intake.SingleValue(__recs,_advo__addresstype_);
    SELF._advo__addressusagetype_ := KEL.Intake.SingleValue(__recs,_advo__addressusagetype_);
    SELF.__RecordCount := COUNT(__recs);
    SELF := __r;
  END;
  Layout Event__Single_Rollup(InLayout __r) := TRANSFORM
    SELF.__RecordCount := 1;
    SELF := __r;
  END;
  EXPORT __PreResult := ROLLUP(HAVING(Event_Group,COUNT(ROWS(LEFT))=1),GROUP,Event__Single_Rollup(LEFT)) + ROLLUP(HAVING(Event_Group,COUNT(ROWS(LEFT))>1),GROUP,Event__Rollup(LEFT, ROWS(LEFT)));
  EXPORT __Result := __CLEARFLAGS(__PreResult);
  EXPORT Result := __UNWRAP(__Result);
  EXPORT UIDSourceCounts := TABLE(InData,{KEL.typ.uid UID := MIN(GROUP,__T(UID)),KEL.typ.int Cnt := COUNT(GROUP)},UID);
  EXPORT TopSourcedUIDs(KEL.typ.int n = 10) := TOPN(UIDSourceCounts,n,-Cnt);
  EXPORT UIDSourceDistribution := SORT(TABLE(UIDSourceCounts,{Cnt,KEL.typ.int uidCount := COUNT(GROUP),KEL.typ.uid rep := MIN(GROUP,UID)},Cnt),-Cnt);
  EXPORT Record_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Record_Id_);
  EXPORT Event_Date__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Event_Date_);
  EXPORT _r_Customer__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_r_Customer_);
  EXPORT _r_Source_Customer__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_r_Source_Customer_);
  EXPORT Subject__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Subject_);
  EXPORT _r_Email__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_r_Email_);
  EXPORT _r_Ssn__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_r_Ssn_);
  EXPORT Location__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Location_);
  EXPORT _r_Phone__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_r_Phone_);
  EXPORT _r_Internet_Protocol__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_r_Internet_Protocol_);
  EXPORT _r_Bank_Account__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_r_Bank_Account_);
  EXPORT _r_Drivers_License__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_r_Drivers_License_);
  EXPORT Otto_Email_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Otto_Email_Id_);
  EXPORT Otto_Ip_Address_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Otto_Ip_Address_Id_);
  EXPORT Otto_S_S_N_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Otto_S_S_N_Id_);
  EXPORT Case_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Case_Id_);
  EXPORT Client_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Client_Id_);
  EXPORT Otto_Drivers_License_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Otto_Drivers_License_Id_);
  EXPORT Otto_Bank_Account_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Otto_Bank_Account_Id_);
  EXPORT _rin__source__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_rin__source_);
  EXPORT Lex_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Lex_Id_);
  EXPORT Otto_Address_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Otto_Address_Id_);
  EXPORT Phone_Number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Phone_Number_);
  EXPORT Title__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Title_);
  EXPORT First_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,First_Name_);
  EXPORT Middle_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Middle_Name_);
  EXPORT Last_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Last_Name_);
  EXPORT Name_Suffix__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Name_Suffix_);
  EXPORT Date_Of_Birth__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Date_Of_Birth_);
  EXPORT Deceased_Date__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Deceased_Date_);
  EXPORT Deceased_Date_Of_Birth__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Deceased_Date_Of_Birth_);
  EXPORT Deceased_First__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Deceased_First_);
  EXPORT Deceased_Middle__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Deceased_Middle_);
  EXPORT Deceased_Last__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Deceased_Last_);
  EXPORT _unique__number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_unique__number_);
  EXPORT _mac__address__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_mac__address_);
  EXPORT _serial__number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_serial__number_);
  EXPORT _device__type__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_device__type_);
  EXPORT _device__identification__provider__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_device__identification__provider_);
  EXPORT Deceased_Match_Code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Deceased_Match_Code_);
  EXPORT _isdeepdive__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_isdeepdive_);
  EXPORT Bocashell_Hit__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Bocashell_Hit_);
  EXPORT Bocashell_Lex_Id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Bocashell_Lex_Id_);
  EXPORT _nap__summary__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_nap__summary_);
  EXPORT _nas__summary__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_nas__summary_);
  EXPORT _cvi__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_cvi_);
  EXPORT _fp3__stolenidentityindex__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_fp3__stolenidentityindex_);
  EXPORT _syntheticidentityindex__v3__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_syntheticidentityindex__v3_);
  EXPORT _manipulatedidentityindex__v3__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_manipulatedidentityindex__v3_);
  EXPORT _socsdobflag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_socsdobflag_);
  EXPORT _pwsocsdobflag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_pwsocsdobflag_);
  EXPORT _dobmatchlevel__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_dobmatchlevel_);
  EXPORT _sourcerisklevel__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_sourcerisklevel_);
  EXPORT _reason1__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_reason1_);
  EXPORT _reason2__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_reason2_);
  EXPORT _reason3__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_reason3_);
  EXPORT _reason4__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_reason4_);
  EXPORT _reason5__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_reason5_);
  EXPORT _reason6__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_reason6_);
  EXPORT _socsvalflag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_socsvalflag_);
  EXPORT _drlcvalflag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_drlcvalflag_);
  EXPORT _hphonevalflag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_hphonevalflag_);
  EXPORT _historydatetimestamp__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_historydatetimestamp_);
  EXPORT _reported__dob__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_reported__dob_);
  EXPORT _bocashell__addr1__dt__first__seen__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_bocashell__addr1__dt__first__seen_);
  EXPORT _bocashell__addr1__date__last__seen__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_bocashell__addr1__date__last__seen_);
  EXPORT _diddeceased__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_diddeceased_);
  EXPORT _diddeceaseddate__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_diddeceaseddate_);
  EXPORT _fraudpoint__v3__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_fraudpoint__v3_);
  EXPORT Best_Hit__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Best_Hit_);
  EXPORT _best__phone__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_best__phone_);
  EXPORT _best__drivers__license__state__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_best__drivers__license__state_);
  EXPORT _best__drivers__license__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_best__drivers__license_);
  EXPORT _best__drivers__license__exp__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_best__drivers__license__exp_);
  EXPORT _truedid__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_truedid_);
  EXPORT _best__fname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_best__fname_);
  EXPORT _best__lname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_best__lname_);
  EXPORT _best__ssn__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_best__ssn_);
  EXPORT _input__fname__isbestmatch__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_input__fname__isbestmatch_);
  EXPORT _input__lname__isbestmatch__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_input__lname__isbestmatch_);
  EXPORT _input__ssn__isbestmatch__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_input__ssn__isbestmatch_);
  EXPORT _add__curr__pop__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__pop_);
  EXPORT _add__curr__prim__range__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__prim__range_);
  EXPORT _add__curr__predir__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__predir_);
  EXPORT _add__curr__prim__name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__prim__name_);
  EXPORT _add__curr__addr__suffix__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__addr__suffix_);
  EXPORT _add__curr__postdir__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__postdir_);
  EXPORT _add__curr__unit__desig__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__unit__desig_);
  EXPORT _add__curr__sec__range__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__sec__range_);
  EXPORT _add__curr__city__name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__city__name_);
  EXPORT _add__curr__st__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__st_);
  EXPORT _add__curr__zip5__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__zip5_);
  EXPORT _add__curr__county__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__county_);
  EXPORT _add__curr__geo__blk__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__geo__blk_);
  EXPORT _add__curr__lat__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__lat_);
  EXPORT _add__curr__long__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__curr__long_);
  EXPORT _add__input__isbestmatch__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_add__input__isbestmatch_);
  EXPORT _county__death__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_county__death_);
  EXPORT Deceased_Ssn__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Deceased_Ssn_);
  EXPORT _state__death__flag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_state__death__flag_);
  EXPORT _death__rec__src__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_death__rec__src_);
  EXPORT _state__death__id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_state__death__id_);
  EXPORT _addresspobox__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_addresspobox_);
  EXPORT _addresscmra__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_addresscmra_);
  EXPORT Primary_Range__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Primary_Range_);
  EXPORT Predirectional__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Predirectional_);
  EXPORT Primary_Name__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Primary_Name_);
  EXPORT Suffix__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Suffix_);
  EXPORT Postdirectional__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Postdirectional_);
  EXPORT Unit_Designation__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Unit_Designation_);
  EXPORT Secondary_Range__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Secondary_Range_);
  EXPORT Postal_City__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Postal_City_);
  EXPORT Vanity_City__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Vanity_City_);
  EXPORT State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,State_);
  EXPORT Zip__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Zip_);
  EXPORT Zip4__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Zip4_);
  EXPORT Carrier_Route_Number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Carrier_Route_Number_);
  EXPORT Carrier_Route_Sortation_At_Z_I_P__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Carrier_Route_Sortation_At_Z_I_P_);
  EXPORT Line_Of_Travel__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Line_Of_Travel_);
  EXPORT Line_Of_Travel_Order__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Line_Of_Travel_Order_);
  EXPORT Delivery_Point_Barcode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Delivery_Point_Barcode_);
  EXPORT Delivery_Point_Barcode_Check_Digit__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Delivery_Point_Barcode_Check_Digit_);
  EXPORT Type_Code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Type_Code_);
  EXPORT County__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,County_);
  EXPORT Latitude__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Latitude_);
  EXPORT Longitude__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Longitude_);
  EXPORT Metropolitan_Statistical_Area__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Metropolitan_Statistical_Area_);
  EXPORT Geo_Block__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Geo_Block_);
  EXPORT Geo_Match__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Geo_Match_);
  EXPORT A_C_E_Cleaner_Error_Code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,A_C_E_Cleaner_Error_Code_);
  EXPORT _is_Additional__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_is_Additional_);
  EXPORT _address__vacancy__indicator__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_address__vacancy__indicator_);
  EXPORT _addrvalflag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_addrvalflag_);
  EXPORT _drop__indicator__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_drop__indicator_);
  EXPORT License_Number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,License_Number_);
  EXPORT License_State__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,License_State_);
  EXPORT Phone_Formatted__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Phone_Formatted_);
  EXPORT Phones_Meta_Hit__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Phones_Meta_Hit_);
  EXPORT _phone__prepaid__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_phone__prepaid_);
  EXPORT Email_Address__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Email_Address_);
  EXPORT Type__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Type_);
  EXPORT Created_On__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Created_On_);
  EXPORT Host__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Host_);
  EXPORT Email_Last_Domain__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Email_Last_Domain_);
  EXPORT _isdisposableemail__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_isdisposableemail_);
  EXPORT Ssn__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Ssn_);
  EXPORT Ssn_Formatted__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Ssn_Formatted_);
  EXPORT Routing_Number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Routing_Number_);
  EXPORT Full_Bankname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Full_Bankname_);
  EXPORT Abbreviated_Bankname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Abbreviated_Bankname_);
  EXPORT Fractional_Routingnumber__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Fractional_Routingnumber_);
  EXPORT Headoffice_Routingnumber__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Headoffice_Routingnumber_);
  EXPORT Headoffice_Branchcodes__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Headoffice_Branchcodes_);
  EXPORT Account_Number__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Account_Number_);
  EXPORT Bank_Hit__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Bank_Hit_);
  EXPORT Crim_Hit__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Crim_Hit_);
  EXPORT _curr__incar__flag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_curr__incar__flag_);
  EXPORT _off__cat__list__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_off__cat__list_);
  EXPORT _name__ssn__dob__match__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_name__ssn__dob__match_);
  EXPORT Ip_Address__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Ip_Address_);
  EXPORT _iprngbeg__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_iprngbeg_);
  EXPORT _iprngend__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_iprngend_);
  EXPORT _edgecountry__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgecountry_);
  EXPORT _edgeregion__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgeregion_);
  EXPORT _edgecity__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgecity_);
  EXPORT _edgeconnspeed__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgeconnspeed_);
  EXPORT _edgemetrocode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgemetrocode_);
  EXPORT _edgelatitude__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgelatitude_);
  EXPORT _edgelongitude__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgelongitude_);
  EXPORT _edgepostalcode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgepostalcode_);
  EXPORT _edgecountrycode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgecountrycode_);
  EXPORT _edgeregioncode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgeregioncode_);
  EXPORT _edgecitycode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgecitycode_);
  EXPORT _edgecontinentcode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgecontinentcode_);
  EXPORT _edgetwolettercountry__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgetwolettercountry_);
  EXPORT _edgeinternalcode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgeinternalcode_);
  EXPORT _edgeareacodes__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgeareacodes_);
  EXPORT _edgecountryconf__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgecountryconf_);
  EXPORT _edgeregionconf__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgeregionconf_);
  EXPORT _edgecitycong__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgecitycong_);
  EXPORT _edgepostalconf__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgepostalconf_);
  EXPORT _edgegmtoffset__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgegmtoffset_);
  EXPORT _edgeindst__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_edgeindst_);
  EXPORT _siccode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_siccode_);
  EXPORT _domainname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_domainname_);
  EXPORT _ispname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_ispname_);
  EXPORT _homebiztype__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_homebiztype_);
  EXPORT _asn__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_asn_);
  EXPORT _asnname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_asnname_);
  EXPORT _primarylang__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_primarylang_);
  EXPORT _secondarylang__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_secondarylang_);
  EXPORT _proxytype__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_proxytype_);
  EXPORT _proxydescription__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_proxydescription_);
  EXPORT _isanisp__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_isanisp_);
  EXPORT _companyname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_companyname_);
  EXPORT _ranks__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_ranks_);
  EXPORT _households__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_households_);
  EXPORT _women__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_women_);
  EXPORT _women18to34__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_women18to34_);
  EXPORT _women35to49__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_women35to49_);
  EXPORT _men__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_men_);
  EXPORT _men18to34__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_men18to34_);
  EXPORT _men35to49__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_men35to49_);
  EXPORT _teens__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_teens_);
  EXPORT _kids__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_kids_);
  EXPORT _naicscode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_naicscode_);
  EXPORT _cbsacode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_cbsacode_);
  EXPORT _cbsatitle__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_cbsatitle_);
  EXPORT _cbsatype__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_cbsatype_);
  EXPORT _csacode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_csacode_);
  EXPORT _csatitle__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_csatitle_);
  EXPORT _mdcode__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_mdcode_);
  EXPORT _mdtitle__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_mdtitle_);
  EXPORT _organizationname__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_organizationname_);
  EXPORT Confidence__that__activity__was__deceitful__id__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,Confidence__that__activity__was__deceitful__id_);
  EXPORT _event__type__1__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_event__type__1_);
  EXPORT _event__type__2__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_event__type__2_);
  EXPORT _event__type__3__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_event__type__3_);
  EXPORT _name__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_name__risk__code_);
  EXPORT _dob__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_dob__risk__code_);
  EXPORT _ssn__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_ssn__risk__code_);
  EXPORT _drivers__license__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_drivers__license__risk__code_);
  EXPORT _physical__address__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_physical__address__risk__code_);
  EXPORT _phone__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_phone__risk__code_);
  EXPORT _cell__phone__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_cell__phone__risk__code_);
  EXPORT _work__phone__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_work__phone__risk__code_);
  EXPORT _bank__account__1__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_bank__account__1__risk__code_);
  EXPORT _bank__account__2__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_bank__account__2__risk__code_);
  EXPORT _email__address__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_email__address__risk__code_);
  EXPORT _ip__address__fraud__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_ip__address__fraud__code_);
  EXPORT _business__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_business__risk__code_);
  EXPORT _mailing__address__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_mailing__address__risk__code_);
  EXPORT _device__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_device__risk__code_);
  EXPORT _identity__risk__code__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_identity__risk__code_);
  EXPORT _advo__hitflag__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_advo__hitflag_);
  EXPORT _advo__vacancyindicator__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_advo__vacancyindicator_);
  EXPORT _advo__addressstyle__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_advo__addressstyle_);
  EXPORT _advo__dropindicator__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_advo__dropindicator_);
  EXPORT _advo__residentialorbusinessindicator__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_advo__residentialorbusinessindicator_);
  EXPORT _advo__addresstype__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_advo__addresstype_);
  EXPORT _advo__addressusagetype__SingleValue_Invalid := KEL.Intake.DetectMultipleValues(__PreResult,_advo__addressusagetype_);
  EXPORT _r_Customer__Orphan := JOIN(InData(__NN(_r_Customer_)),E_Customer.__Result,__EEQP(LEFT._r_Customer_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT _r_Source_Customer__Orphan := JOIN(InData(__NN(_r_Source_Customer_)),E_Customer.__Result,__EEQP(LEFT._r_Source_Customer_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT Subject__Orphan := JOIN(InData(__NN(Subject_)),E_Person.__Result,__EEQP(LEFT.Subject_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT Location__Orphan := JOIN(InData(__NN(Location_)),E_Address.__Result,__EEQP(LEFT.Location_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT _r_Ssn__Orphan := JOIN(InData(__NN(_r_Ssn_)),E_Social_Security_Number.__Result,__EEQP(LEFT._r_Ssn_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT _r_Phone__Orphan := JOIN(InData(__NN(_r_Phone_)),E_Phone.__Result,__EEQP(LEFT._r_Phone_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT _r_Email__Orphan := JOIN(InData(__NN(_r_Email_)),E_Email.__Result,__EEQP(LEFT._r_Email_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT _r_Internet_Protocol__Orphan := JOIN(InData(__NN(_r_Internet_Protocol_)),E_Internet_Protocol.__Result,__EEQP(LEFT._r_Internet_Protocol_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT _r_Bank_Account__Orphan := JOIN(InData(__NN(_r_Bank_Account_)),E_Bank_Account.__Result,__EEQP(LEFT._r_Bank_Account_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT _r_Drivers_License__Orphan := JOIN(InData(__NN(_r_Drivers_License_)),E_Drivers_License.__Result,__EEQP(LEFT._r_Drivers_License_, RIGHT.UID),TRANSFORM(InLayout,SELF := LEFT,SELF:=[]),LEFT ONLY, HASH);
  EXPORT SanityCheck := DATASET([{COUNT(_r_Customer__Orphan),COUNT(_r_Source_Customer__Orphan),COUNT(Subject__Orphan),COUNT(Location__Orphan),COUNT(_r_Ssn__Orphan),COUNT(_r_Phone__Orphan),COUNT(_r_Email__Orphan),COUNT(_r_Internet_Protocol__Orphan),COUNT(_r_Bank_Account__Orphan),COUNT(_r_Drivers_License__Orphan),COUNT(Record_Id__SingleValue_Invalid),COUNT(Event_Date__SingleValue_Invalid),COUNT(_r_Customer__SingleValue_Invalid),COUNT(_r_Source_Customer__SingleValue_Invalid),COUNT(Subject__SingleValue_Invalid),COUNT(_r_Email__SingleValue_Invalid),COUNT(_r_Ssn__SingleValue_Invalid),COUNT(Location__SingleValue_Invalid),COUNT(_r_Phone__SingleValue_Invalid),COUNT(_r_Internet_Protocol__SingleValue_Invalid),COUNT(_r_Bank_Account__SingleValue_Invalid),COUNT(_r_Drivers_License__SingleValue_Invalid),COUNT(Otto_Email_Id__SingleValue_Invalid),COUNT(Otto_Ip_Address_Id__SingleValue_Invalid),COUNT(Otto_S_S_N_Id__SingleValue_Invalid),COUNT(Case_Id__SingleValue_Invalid),COUNT(Client_Id__SingleValue_Invalid),COUNT(Otto_Drivers_License_Id__SingleValue_Invalid),COUNT(Otto_Bank_Account_Id__SingleValue_Invalid),COUNT(_rin__source__SingleValue_Invalid),COUNT(Lex_Id__SingleValue_Invalid),COUNT(Otto_Address_Id__SingleValue_Invalid),COUNT(Phone_Number__SingleValue_Invalid),COUNT(Title__SingleValue_Invalid),COUNT(First_Name__SingleValue_Invalid),COUNT(Middle_Name__SingleValue_Invalid),COUNT(Last_Name__SingleValue_Invalid),COUNT(Name_Suffix__SingleValue_Invalid),COUNT(Date_Of_Birth__SingleValue_Invalid),COUNT(Deceased_Date__SingleValue_Invalid),COUNT(Deceased_Date_Of_Birth__SingleValue_Invalid),COUNT(Deceased_First__SingleValue_Invalid),COUNT(Deceased_Middle__SingleValue_Invalid),COUNT(Deceased_Last__SingleValue_Invalid),COUNT(_unique__number__SingleValue_Invalid),COUNT(_mac__address__SingleValue_Invalid),COUNT(_serial__number__SingleValue_Invalid),COUNT(_device__type__SingleValue_Invalid),COUNT(_device__identification__provider__SingleValue_Invalid),COUNT(Deceased_Match_Code__SingleValue_Invalid),COUNT(_isdeepdive__SingleValue_Invalid),COUNT(Bocashell_Hit__SingleValue_Invalid),COUNT(Bocashell_Lex_Id__SingleValue_Invalid),COUNT(_nap__summary__SingleValue_Invalid),COUNT(_nas__summary__SingleValue_Invalid),COUNT(_cvi__SingleValue_Invalid),COUNT(_fp3__stolenidentityindex__SingleValue_Invalid),COUNT(_syntheticidentityindex__v3__SingleValue_Invalid),COUNT(_manipulatedidentityindex__v3__SingleValue_Invalid),COUNT(_socsdobflag__SingleValue_Invalid),COUNT(_pwsocsdobflag__SingleValue_Invalid),COUNT(_dobmatchlevel__SingleValue_Invalid),COUNT(_sourcerisklevel__SingleValue_Invalid),COUNT(_reason1__SingleValue_Invalid),COUNT(_reason2__SingleValue_Invalid),COUNT(_reason3__SingleValue_Invalid),COUNT(_reason4__SingleValue_Invalid),COUNT(_reason5__SingleValue_Invalid),COUNT(_reason6__SingleValue_Invalid),COUNT(_socsvalflag__SingleValue_Invalid),COUNT(_drlcvalflag__SingleValue_Invalid),COUNT(_hphonevalflag__SingleValue_Invalid),COUNT(_historydatetimestamp__SingleValue_Invalid),COUNT(_reported__dob__SingleValue_Invalid),COUNT(_bocashell__addr1__dt__first__seen__SingleValue_Invalid),COUNT(_bocashell__addr1__date__last__seen__SingleValue_Invalid),COUNT(_diddeceased__SingleValue_Invalid),COUNT(_diddeceaseddate__SingleValue_Invalid),COUNT(_fraudpoint__v3__SingleValue_Invalid),COUNT(Best_Hit__SingleValue_Invalid),COUNT(_best__phone__SingleValue_Invalid),COUNT(_best__drivers__license__state__SingleValue_Invalid),COUNT(_best__drivers__license__SingleValue_Invalid),COUNT(_best__drivers__license__exp__SingleValue_Invalid),COUNT(_truedid__SingleValue_Invalid),COUNT(_best__fname__SingleValue_Invalid),COUNT(_best__lname__SingleValue_Invalid),COUNT(_best__ssn__SingleValue_Invalid),COUNT(_input__fname__isbestmatch__SingleValue_Invalid),COUNT(_input__lname__isbestmatch__SingleValue_Invalid),COUNT(_input__ssn__isbestmatch__SingleValue_Invalid),COUNT(_add__curr__pop__SingleValue_Invalid),COUNT(_add__curr__prim__range__SingleValue_Invalid),COUNT(_add__curr__predir__SingleValue_Invalid),COUNT(_add__curr__prim__name__SingleValue_Invalid),COUNT(_add__curr__addr__suffix__SingleValue_Invalid),COUNT(_add__curr__postdir__SingleValue_Invalid),COUNT(_add__curr__unit__desig__SingleValue_Invalid),COUNT(_add__curr__sec__range__SingleValue_Invalid),COUNT(_add__curr__city__name__SingleValue_Invalid),COUNT(_add__curr__st__SingleValue_Invalid),COUNT(_add__curr__zip5__SingleValue_Invalid),COUNT(_add__curr__county__SingleValue_Invalid),COUNT(_add__curr__geo__blk__SingleValue_Invalid),COUNT(_add__curr__lat__SingleValue_Invalid),COUNT(_add__curr__long__SingleValue_Invalid),COUNT(_add__input__isbestmatch__SingleValue_Invalid),COUNT(_county__death__SingleValue_Invalid),COUNT(Deceased_Ssn__SingleValue_Invalid),COUNT(_state__death__flag__SingleValue_Invalid),COUNT(_death__rec__src__SingleValue_Invalid),COUNT(_state__death__id__SingleValue_Invalid),COUNT(_addresspobox__SingleValue_Invalid),COUNT(_addresscmra__SingleValue_Invalid),COUNT(Primary_Range__SingleValue_Invalid),COUNT(Predirectional__SingleValue_Invalid),COUNT(Primary_Name__SingleValue_Invalid),COUNT(Suffix__SingleValue_Invalid),COUNT(Postdirectional__SingleValue_Invalid),COUNT(Unit_Designation__SingleValue_Invalid),COUNT(Secondary_Range__SingleValue_Invalid),COUNT(Postal_City__SingleValue_Invalid),COUNT(Vanity_City__SingleValue_Invalid),COUNT(State__SingleValue_Invalid),COUNT(Zip__SingleValue_Invalid),COUNT(Zip4__SingleValue_Invalid),COUNT(Carrier_Route_Number__SingleValue_Invalid),COUNT(Carrier_Route_Sortation_At_Z_I_P__SingleValue_Invalid),COUNT(Line_Of_Travel__SingleValue_Invalid),COUNT(Line_Of_Travel_Order__SingleValue_Invalid),COUNT(Delivery_Point_Barcode__SingleValue_Invalid),COUNT(Delivery_Point_Barcode_Check_Digit__SingleValue_Invalid),COUNT(Type_Code__SingleValue_Invalid),COUNT(County__SingleValue_Invalid),COUNT(Latitude__SingleValue_Invalid),COUNT(Longitude__SingleValue_Invalid),COUNT(Metropolitan_Statistical_Area__SingleValue_Invalid),COUNT(Geo_Block__SingleValue_Invalid),COUNT(Geo_Match__SingleValue_Invalid),COUNT(A_C_E_Cleaner_Error_Code__SingleValue_Invalid),COUNT(_is_Additional__SingleValue_Invalid),COUNT(_address__vacancy__indicator__SingleValue_Invalid),COUNT(_addrvalflag__SingleValue_Invalid),COUNT(_drop__indicator__SingleValue_Invalid),COUNT(License_Number__SingleValue_Invalid),COUNT(License_State__SingleValue_Invalid),COUNT(Phone_Formatted__SingleValue_Invalid),COUNT(Phones_Meta_Hit__SingleValue_Invalid),COUNT(_phone__prepaid__SingleValue_Invalid),COUNT(Email_Address__SingleValue_Invalid),COUNT(Type__SingleValue_Invalid),COUNT(Created_On__SingleValue_Invalid),COUNT(Host__SingleValue_Invalid),COUNT(Email_Last_Domain__SingleValue_Invalid),COUNT(_isdisposableemail__SingleValue_Invalid),COUNT(Ssn__SingleValue_Invalid),COUNT(Ssn_Formatted__SingleValue_Invalid),COUNT(Routing_Number__SingleValue_Invalid),COUNT(Full_Bankname__SingleValue_Invalid),COUNT(Abbreviated_Bankname__SingleValue_Invalid),COUNT(Fractional_Routingnumber__SingleValue_Invalid),COUNT(Headoffice_Routingnumber__SingleValue_Invalid),COUNT(Headoffice_Branchcodes__SingleValue_Invalid),COUNT(Account_Number__SingleValue_Invalid),COUNT(Bank_Hit__SingleValue_Invalid),COUNT(Crim_Hit__SingleValue_Invalid),COUNT(_curr__incar__flag__SingleValue_Invalid),COUNT(_off__cat__list__SingleValue_Invalid),COUNT(_name__ssn__dob__match__SingleValue_Invalid),COUNT(Ip_Address__SingleValue_Invalid),COUNT(_iprngbeg__SingleValue_Invalid),COUNT(_iprngend__SingleValue_Invalid),COUNT(_edgecountry__SingleValue_Invalid),COUNT(_edgeregion__SingleValue_Invalid),COUNT(_edgecity__SingleValue_Invalid),COUNT(_edgeconnspeed__SingleValue_Invalid),COUNT(_edgemetrocode__SingleValue_Invalid),COUNT(_edgelatitude__SingleValue_Invalid),COUNT(_edgelongitude__SingleValue_Invalid),COUNT(_edgepostalcode__SingleValue_Invalid),COUNT(_edgecountrycode__SingleValue_Invalid),COUNT(_edgeregioncode__SingleValue_Invalid),COUNT(_edgecitycode__SingleValue_Invalid),COUNT(_edgecontinentcode__SingleValue_Invalid),COUNT(_edgetwolettercountry__SingleValue_Invalid),COUNT(_edgeinternalcode__SingleValue_Invalid),COUNT(_edgeareacodes__SingleValue_Invalid),COUNT(_edgecountryconf__SingleValue_Invalid),COUNT(_edgeregionconf__SingleValue_Invalid),COUNT(_edgecitycong__SingleValue_Invalid),COUNT(_edgepostalconf__SingleValue_Invalid),COUNT(_edgegmtoffset__SingleValue_Invalid),COUNT(_edgeindst__SingleValue_Invalid),COUNT(_siccode__SingleValue_Invalid),COUNT(_domainname__SingleValue_Invalid),COUNT(_ispname__SingleValue_Invalid),COUNT(_homebiztype__SingleValue_Invalid),COUNT(_asn__SingleValue_Invalid),COUNT(_asnname__SingleValue_Invalid),COUNT(_primarylang__SingleValue_Invalid),COUNT(_secondarylang__SingleValue_Invalid),COUNT(_proxytype__SingleValue_Invalid),COUNT(_proxydescription__SingleValue_Invalid),COUNT(_isanisp__SingleValue_Invalid),COUNT(_companyname__SingleValue_Invalid),COUNT(_ranks__SingleValue_Invalid),COUNT(_households__SingleValue_Invalid),COUNT(_women__SingleValue_Invalid),COUNT(_women18to34__SingleValue_Invalid),COUNT(_women35to49__SingleValue_Invalid),COUNT(_men__SingleValue_Invalid),COUNT(_men18to34__SingleValue_Invalid),COUNT(_men35to49__SingleValue_Invalid),COUNT(_teens__SingleValue_Invalid),COUNT(_kids__SingleValue_Invalid),COUNT(_naicscode__SingleValue_Invalid),COUNT(_cbsacode__SingleValue_Invalid),COUNT(_cbsatitle__SingleValue_Invalid),COUNT(_cbsatype__SingleValue_Invalid),COUNT(_csacode__SingleValue_Invalid),COUNT(_csatitle__SingleValue_Invalid),COUNT(_mdcode__SingleValue_Invalid),COUNT(_mdtitle__SingleValue_Invalid),COUNT(_organizationname__SingleValue_Invalid),COUNT(Confidence__that__activity__was__deceitful__id__SingleValue_Invalid),COUNT(_event__type__1__SingleValue_Invalid),COUNT(_event__type__2__SingleValue_Invalid),COUNT(_event__type__3__SingleValue_Invalid),COUNT(_name__risk__code__SingleValue_Invalid),COUNT(_dob__risk__code__SingleValue_Invalid),COUNT(_ssn__risk__code__SingleValue_Invalid),COUNT(_drivers__license__risk__code__SingleValue_Invalid),COUNT(_physical__address__risk__code__SingleValue_Invalid),COUNT(_phone__risk__code__SingleValue_Invalid),COUNT(_cell__phone__risk__code__SingleValue_Invalid),COUNT(_work__phone__risk__code__SingleValue_Invalid),COUNT(_bank__account__1__risk__code__SingleValue_Invalid),COUNT(_bank__account__2__risk__code__SingleValue_Invalid),COUNT(_email__address__risk__code__SingleValue_Invalid),COUNT(_ip__address__fraud__code__SingleValue_Invalid),COUNT(_business__risk__code__SingleValue_Invalid),COUNT(_mailing__address__risk__code__SingleValue_Invalid),COUNT(_device__risk__code__SingleValue_Invalid),COUNT(_identity__risk__code__SingleValue_Invalid),COUNT(_advo__hitflag__SingleValue_Invalid),COUNT(_advo__vacancyindicator__SingleValue_Invalid),COUNT(_advo__addressstyle__SingleValue_Invalid),COUNT(_advo__dropindicator__SingleValue_Invalid),COUNT(_advo__residentialorbusinessindicator__SingleValue_Invalid),COUNT(_advo__addresstype__SingleValue_Invalid),COUNT(_advo__addressusagetype__SingleValue_Invalid),TopSourcedUIDs(1)}],{KEL.typ.int _r_Customer__Orphan,KEL.typ.int _r_Source_Customer__Orphan,KEL.typ.int Subject__Orphan,KEL.typ.int Location__Orphan,KEL.typ.int _r_Ssn__Orphan,KEL.typ.int _r_Phone__Orphan,KEL.typ.int _r_Email__Orphan,KEL.typ.int _r_Internet_Protocol__Orphan,KEL.typ.int _r_Bank_Account__Orphan,KEL.typ.int _r_Drivers_License__Orphan,KEL.typ.int Record_Id__SingleValue_Invalid,KEL.typ.int Event_Date__SingleValue_Invalid,KEL.typ.int _r_Customer__SingleValue_Invalid,KEL.typ.int _r_Source_Customer__SingleValue_Invalid,KEL.typ.int Subject__SingleValue_Invalid,KEL.typ.int _r_Email__SingleValue_Invalid,KEL.typ.int _r_Ssn__SingleValue_Invalid,KEL.typ.int Location__SingleValue_Invalid,KEL.typ.int _r_Phone__SingleValue_Invalid,KEL.typ.int _r_Internet_Protocol__SingleValue_Invalid,KEL.typ.int _r_Bank_Account__SingleValue_Invalid,KEL.typ.int _r_Drivers_License__SingleValue_Invalid,KEL.typ.int Otto_Email_Id__SingleValue_Invalid,KEL.typ.int Otto_Ip_Address_Id__SingleValue_Invalid,KEL.typ.int Otto_S_S_N_Id__SingleValue_Invalid,KEL.typ.int Case_Id__SingleValue_Invalid,KEL.typ.int Client_Id__SingleValue_Invalid,KEL.typ.int Otto_Drivers_License_Id__SingleValue_Invalid,KEL.typ.int Otto_Bank_Account_Id__SingleValue_Invalid,KEL.typ.int _rin__source__SingleValue_Invalid,KEL.typ.int Lex_Id__SingleValue_Invalid,KEL.typ.int Otto_Address_Id__SingleValue_Invalid,KEL.typ.int Phone_Number__SingleValue_Invalid,KEL.typ.int Title__SingleValue_Invalid,KEL.typ.int First_Name__SingleValue_Invalid,KEL.typ.int Middle_Name__SingleValue_Invalid,KEL.typ.int Last_Name__SingleValue_Invalid,KEL.typ.int Name_Suffix__SingleValue_Invalid,KEL.typ.int Date_Of_Birth__SingleValue_Invalid,KEL.typ.int Deceased_Date__SingleValue_Invalid,KEL.typ.int Deceased_Date_Of_Birth__SingleValue_Invalid,KEL.typ.int Deceased_First__SingleValue_Invalid,KEL.typ.int Deceased_Middle__SingleValue_Invalid,KEL.typ.int Deceased_Last__SingleValue_Invalid,KEL.typ.int _unique__number__SingleValue_Invalid,KEL.typ.int _mac__address__SingleValue_Invalid,KEL.typ.int _serial__number__SingleValue_Invalid,KEL.typ.int _device__type__SingleValue_Invalid,KEL.typ.int _device__identification__provider__SingleValue_Invalid,KEL.typ.int Deceased_Match_Code__SingleValue_Invalid,KEL.typ.int _isdeepdive__SingleValue_Invalid,KEL.typ.int Bocashell_Hit__SingleValue_Invalid,KEL.typ.int Bocashell_Lex_Id__SingleValue_Invalid,KEL.typ.int _nap__summary__SingleValue_Invalid,KEL.typ.int _nas__summary__SingleValue_Invalid,KEL.typ.int _cvi__SingleValue_Invalid,KEL.typ.int _fp3__stolenidentityindex__SingleValue_Invalid,KEL.typ.int _syntheticidentityindex__v3__SingleValue_Invalid,KEL.typ.int _manipulatedidentityindex__v3__SingleValue_Invalid,KEL.typ.int _socsdobflag__SingleValue_Invalid,KEL.typ.int _pwsocsdobflag__SingleValue_Invalid,KEL.typ.int _dobmatchlevel__SingleValue_Invalid,KEL.typ.int _sourcerisklevel__SingleValue_Invalid,KEL.typ.int _reason1__SingleValue_Invalid,KEL.typ.int _reason2__SingleValue_Invalid,KEL.typ.int _reason3__SingleValue_Invalid,KEL.typ.int _reason4__SingleValue_Invalid,KEL.typ.int _reason5__SingleValue_Invalid,KEL.typ.int _reason6__SingleValue_Invalid,KEL.typ.int _socsvalflag__SingleValue_Invalid,KEL.typ.int _drlcvalflag__SingleValue_Invalid,KEL.typ.int _hphonevalflag__SingleValue_Invalid,KEL.typ.int _historydatetimestamp__SingleValue_Invalid,KEL.typ.int _reported__dob__SingleValue_Invalid,KEL.typ.int _bocashell__addr1__dt__first__seen__SingleValue_Invalid,KEL.typ.int _bocashell__addr1__date__last__seen__SingleValue_Invalid,KEL.typ.int _diddeceased__SingleValue_Invalid,KEL.typ.int _diddeceaseddate__SingleValue_Invalid,KEL.typ.int _fraudpoint__v3__SingleValue_Invalid,KEL.typ.int Best_Hit__SingleValue_Invalid,KEL.typ.int _best__phone__SingleValue_Invalid,KEL.typ.int _best__drivers__license__state__SingleValue_Invalid,KEL.typ.int _best__drivers__license__SingleValue_Invalid,KEL.typ.int _best__drivers__license__exp__SingleValue_Invalid,KEL.typ.int _truedid__SingleValue_Invalid,KEL.typ.int _best__fname__SingleValue_Invalid,KEL.typ.int _best__lname__SingleValue_Invalid,KEL.typ.int _best__ssn__SingleValue_Invalid,KEL.typ.int _input__fname__isbestmatch__SingleValue_Invalid,KEL.typ.int _input__lname__isbestmatch__SingleValue_Invalid,KEL.typ.int _input__ssn__isbestmatch__SingleValue_Invalid,KEL.typ.int _add__curr__pop__SingleValue_Invalid,KEL.typ.int _add__curr__prim__range__SingleValue_Invalid,KEL.typ.int _add__curr__predir__SingleValue_Invalid,KEL.typ.int _add__curr__prim__name__SingleValue_Invalid,KEL.typ.int _add__curr__addr__suffix__SingleValue_Invalid,KEL.typ.int _add__curr__postdir__SingleValue_Invalid,KEL.typ.int _add__curr__unit__desig__SingleValue_Invalid,KEL.typ.int _add__curr__sec__range__SingleValue_Invalid,KEL.typ.int _add__curr__city__name__SingleValue_Invalid,KEL.typ.int _add__curr__st__SingleValue_Invalid,KEL.typ.int _add__curr__zip5__SingleValue_Invalid,KEL.typ.int _add__curr__county__SingleValue_Invalid,KEL.typ.int _add__curr__geo__blk__SingleValue_Invalid,KEL.typ.int _add__curr__lat__SingleValue_Invalid,KEL.typ.int _add__curr__long__SingleValue_Invalid,KEL.typ.int _add__input__isbestmatch__SingleValue_Invalid,KEL.typ.int _county__death__SingleValue_Invalid,KEL.typ.int Deceased_Ssn__SingleValue_Invalid,KEL.typ.int _state__death__flag__SingleValue_Invalid,KEL.typ.int _death__rec__src__SingleValue_Invalid,KEL.typ.int _state__death__id__SingleValue_Invalid,KEL.typ.int _addresspobox__SingleValue_Invalid,KEL.typ.int _addresscmra__SingleValue_Invalid,KEL.typ.int Primary_Range__SingleValue_Invalid,KEL.typ.int Predirectional__SingleValue_Invalid,KEL.typ.int Primary_Name__SingleValue_Invalid,KEL.typ.int Suffix__SingleValue_Invalid,KEL.typ.int Postdirectional__SingleValue_Invalid,KEL.typ.int Unit_Designation__SingleValue_Invalid,KEL.typ.int Secondary_Range__SingleValue_Invalid,KEL.typ.int Postal_City__SingleValue_Invalid,KEL.typ.int Vanity_City__SingleValue_Invalid,KEL.typ.int State__SingleValue_Invalid,KEL.typ.int Zip__SingleValue_Invalid,KEL.typ.int Zip4__SingleValue_Invalid,KEL.typ.int Carrier_Route_Number__SingleValue_Invalid,KEL.typ.int Carrier_Route_Sortation_At_Z_I_P__SingleValue_Invalid,KEL.typ.int Line_Of_Travel__SingleValue_Invalid,KEL.typ.int Line_Of_Travel_Order__SingleValue_Invalid,KEL.typ.int Delivery_Point_Barcode__SingleValue_Invalid,KEL.typ.int Delivery_Point_Barcode_Check_Digit__SingleValue_Invalid,KEL.typ.int Type_Code__SingleValue_Invalid,KEL.typ.int County__SingleValue_Invalid,KEL.typ.int Latitude__SingleValue_Invalid,KEL.typ.int Longitude__SingleValue_Invalid,KEL.typ.int Metropolitan_Statistical_Area__SingleValue_Invalid,KEL.typ.int Geo_Block__SingleValue_Invalid,KEL.typ.int Geo_Match__SingleValue_Invalid,KEL.typ.int A_C_E_Cleaner_Error_Code__SingleValue_Invalid,KEL.typ.int _is_Additional__SingleValue_Invalid,KEL.typ.int _address__vacancy__indicator__SingleValue_Invalid,KEL.typ.int _addrvalflag__SingleValue_Invalid,KEL.typ.int _drop__indicator__SingleValue_Invalid,KEL.typ.int License_Number__SingleValue_Invalid,KEL.typ.int License_State__SingleValue_Invalid,KEL.typ.int Phone_Formatted__SingleValue_Invalid,KEL.typ.int Phones_Meta_Hit__SingleValue_Invalid,KEL.typ.int _phone__prepaid__SingleValue_Invalid,KEL.typ.int Email_Address__SingleValue_Invalid,KEL.typ.int Type__SingleValue_Invalid,KEL.typ.int Created_On__SingleValue_Invalid,KEL.typ.int Host__SingleValue_Invalid,KEL.typ.int Email_Last_Domain__SingleValue_Invalid,KEL.typ.int _isdisposableemail__SingleValue_Invalid,KEL.typ.int Ssn__SingleValue_Invalid,KEL.typ.int Ssn_Formatted__SingleValue_Invalid,KEL.typ.int Routing_Number__SingleValue_Invalid,KEL.typ.int Full_Bankname__SingleValue_Invalid,KEL.typ.int Abbreviated_Bankname__SingleValue_Invalid,KEL.typ.int Fractional_Routingnumber__SingleValue_Invalid,KEL.typ.int Headoffice_Routingnumber__SingleValue_Invalid,KEL.typ.int Headoffice_Branchcodes__SingleValue_Invalid,KEL.typ.int Account_Number__SingleValue_Invalid,KEL.typ.int Bank_Hit__SingleValue_Invalid,KEL.typ.int Crim_Hit__SingleValue_Invalid,KEL.typ.int _curr__incar__flag__SingleValue_Invalid,KEL.typ.int _off__cat__list__SingleValue_Invalid,KEL.typ.int _name__ssn__dob__match__SingleValue_Invalid,KEL.typ.int Ip_Address__SingleValue_Invalid,KEL.typ.int _iprngbeg__SingleValue_Invalid,KEL.typ.int _iprngend__SingleValue_Invalid,KEL.typ.int _edgecountry__SingleValue_Invalid,KEL.typ.int _edgeregion__SingleValue_Invalid,KEL.typ.int _edgecity__SingleValue_Invalid,KEL.typ.int _edgeconnspeed__SingleValue_Invalid,KEL.typ.int _edgemetrocode__SingleValue_Invalid,KEL.typ.int _edgelatitude__SingleValue_Invalid,KEL.typ.int _edgelongitude__SingleValue_Invalid,KEL.typ.int _edgepostalcode__SingleValue_Invalid,KEL.typ.int _edgecountrycode__SingleValue_Invalid,KEL.typ.int _edgeregioncode__SingleValue_Invalid,KEL.typ.int _edgecitycode__SingleValue_Invalid,KEL.typ.int _edgecontinentcode__SingleValue_Invalid,KEL.typ.int _edgetwolettercountry__SingleValue_Invalid,KEL.typ.int _edgeinternalcode__SingleValue_Invalid,KEL.typ.int _edgeareacodes__SingleValue_Invalid,KEL.typ.int _edgecountryconf__SingleValue_Invalid,KEL.typ.int _edgeregionconf__SingleValue_Invalid,KEL.typ.int _edgecitycong__SingleValue_Invalid,KEL.typ.int _edgepostalconf__SingleValue_Invalid,KEL.typ.int _edgegmtoffset__SingleValue_Invalid,KEL.typ.int _edgeindst__SingleValue_Invalid,KEL.typ.int _siccode__SingleValue_Invalid,KEL.typ.int _domainname__SingleValue_Invalid,KEL.typ.int _ispname__SingleValue_Invalid,KEL.typ.int _homebiztype__SingleValue_Invalid,KEL.typ.int _asn__SingleValue_Invalid,KEL.typ.int _asnname__SingleValue_Invalid,KEL.typ.int _primarylang__SingleValue_Invalid,KEL.typ.int _secondarylang__SingleValue_Invalid,KEL.typ.int _proxytype__SingleValue_Invalid,KEL.typ.int _proxydescription__SingleValue_Invalid,KEL.typ.int _isanisp__SingleValue_Invalid,KEL.typ.int _companyname__SingleValue_Invalid,KEL.typ.int _ranks__SingleValue_Invalid,KEL.typ.int _households__SingleValue_Invalid,KEL.typ.int _women__SingleValue_Invalid,KEL.typ.int _women18to34__SingleValue_Invalid,KEL.typ.int _women35to49__SingleValue_Invalid,KEL.typ.int _men__SingleValue_Invalid,KEL.typ.int _men18to34__SingleValue_Invalid,KEL.typ.int _men35to49__SingleValue_Invalid,KEL.typ.int _teens__SingleValue_Invalid,KEL.typ.int _kids__SingleValue_Invalid,KEL.typ.int _naicscode__SingleValue_Invalid,KEL.typ.int _cbsacode__SingleValue_Invalid,KEL.typ.int _cbsatitle__SingleValue_Invalid,KEL.typ.int _cbsatype__SingleValue_Invalid,KEL.typ.int _csacode__SingleValue_Invalid,KEL.typ.int _csatitle__SingleValue_Invalid,KEL.typ.int _mdcode__SingleValue_Invalid,KEL.typ.int _mdtitle__SingleValue_Invalid,KEL.typ.int _organizationname__SingleValue_Invalid,KEL.typ.int Confidence__that__activity__was__deceitful__id__SingleValue_Invalid,KEL.typ.int _event__type__1__SingleValue_Invalid,KEL.typ.int _event__type__2__SingleValue_Invalid,KEL.typ.int _event__type__3__SingleValue_Invalid,KEL.typ.int _name__risk__code__SingleValue_Invalid,KEL.typ.int _dob__risk__code__SingleValue_Invalid,KEL.typ.int _ssn__risk__code__SingleValue_Invalid,KEL.typ.int _drivers__license__risk__code__SingleValue_Invalid,KEL.typ.int _physical__address__risk__code__SingleValue_Invalid,KEL.typ.int _phone__risk__code__SingleValue_Invalid,KEL.typ.int _cell__phone__risk__code__SingleValue_Invalid,KEL.typ.int _work__phone__risk__code__SingleValue_Invalid,KEL.typ.int _bank__account__1__risk__code__SingleValue_Invalid,KEL.typ.int _bank__account__2__risk__code__SingleValue_Invalid,KEL.typ.int _email__address__risk__code__SingleValue_Invalid,KEL.typ.int _ip__address__fraud__code__SingleValue_Invalid,KEL.typ.int _business__risk__code__SingleValue_Invalid,KEL.typ.int _mailing__address__risk__code__SingleValue_Invalid,KEL.typ.int _device__risk__code__SingleValue_Invalid,KEL.typ.int _identity__risk__code__SingleValue_Invalid,KEL.typ.int _advo__hitflag__SingleValue_Invalid,KEL.typ.int _advo__vacancyindicator__SingleValue_Invalid,KEL.typ.int _advo__addressstyle__SingleValue_Invalid,KEL.typ.int _advo__dropindicator__SingleValue_Invalid,KEL.typ.int _advo__residentialorbusinessindicator__SingleValue_Invalid,KEL.typ.int _advo__addresstype__SingleValue_Invalid,KEL.typ.int _advo__addressusagetype__SingleValue_Invalid,DATASET(RECORDOF(UIDSourceCounts)) topSourcedUID});
  EXPORT NullCounts := DATASET([
    ]
  ,{KEL.typ.str entity,KEL.typ.str fileName,KEL.typ.str fieldName,KEL.typ.int nullCount,KEL.typ.int notNullCount});
END;
