IMPORT corp2, corp2_raw_ia;

EXPORT FUNCTIONs := Module
  
	EXPORT GetStatusDesc(string s1, string s2) := FUNCTION
				StatCd := corp2.t2u(s1);
				DeadCd := corp2.t2u(s2);
				
				RETURN map(StatCd = 'A'                  => 'ACTIVE',
									 StatCd = 'R' 								 => 'ACTIVE REGISTERED AGENT RESIGNED',
									 StatCd = 'D' and DeadCd = 'A' => 'NO REGISTERED AGENT ON FILE; AGENT RESIGNED',
									 StatCd = 'D' and DeadCd = 'C' => 'CONSOLIDATION',
									 StatCd = 'D' and DeadCd = 'D' => 'DISSOLUTION',
									 StatCd = 'D' and DeadCd = 'E' => 'EXPIRED',
									 StatCd = 'D' and DeadCd = 'M' => 'MERGED',
									 StatCd = 'D' and DeadCd = 'N' => 'ACTIVE',
									 StatCd = 'D' and DeadCd = 'O' => 'OTHER',
									 StatCd = 'D' and DeadCd = 'R' => 'ANNUAL/BIENNIAL REPORT NOT FILED',
									 StatCd = 'D' and DeadCd = 'V' => 'REVOKED',
									 StatCd = 'D' and DeadCd = 'W' => 'WITHDRAWAL',
									 StatCd = 'D' and DeadCd = 'X' => 'DELETED',
									 StatCd = 'D' and DeadCd = ''  => 'INACTIVE',
									 '' );
    END;

    EXPORT GetCorpNameComment(string apType, string nameStatus, string desc, string certNo) := FUNCTION
	     
			 apDesc	:= map (corp2.t2u(apType) = 'I' => 'APPLICANT TYPE: INDIVIDUAL',
											corp2.t2u(apType) = 'C' => 'APPLICANT TYPE: CORPORATION',
											corp2.t2u(apType) = 'P' => 'APPLICANT TYPE: PARTNERSHIP',
											corp2.t2u(apType) = 'O' => 'APPLICANT TYPE: OTHER',
											'');
			
			status	:= map (corp2.t2u(nameStatus) = 'A' => 'ACTIVE',
											corp2.t2u(nameStatus) = 'D' => 'INACTIVE',
											'');
													   
			cert		:= if (corp2.t2u(certNo) <> '',	'CERTIFICATE NUMBER: ' + corp2.t2u(certNo), '');
													   
			concatComment	:= corp2.t2u(apDesc) + ';' + 
											 corp2.t2u(status) + ';' +
											 corp2.t2u(cert)   + ';' + 
											 corp2.t2u(desc[1..200]); 
																	
			commentExp		:= regexreplace('[;]*$',concatComment,'',NOCASE);
			commentExp2	  := regexreplace('^[;]*',commentExp,'',NOCASE);
			
			RETURN regexreplace('[;]+',commentExp2,';',NOCASE);	
			
		END;
		
		EXPORT GetNameTypeDesc(string code)
		    := case(corp2.t2u(code),
					'AI'  => 'AUTHORIZED INDISTINGUISHABLE',
					'DF'  => 'DOMESTIC FICTITIOUS',
					'F' 	=> 'FORMER',
					'FA'  => 'FORMER ASSUMED',
					'FF'  => 'FOREIGN FICTITIOUS',
					'FN'  => 'FICTITIOUS NAME',
					'I' 	=> 'IDENTIFYING',
					'L' 	=> 'LEGAL',
					'LF'  => 'LEGAL (FORGN USING FICTITIOUS)',
					'R' 	=> 'RESERVED',
					'RG'  => 'REGISTERED',
					'RN'  => 'RESERVED - NON PROFIT',
					'RP'  => 'RESERVED PROFIT',
					'RU'  => 'REGISTERED',
				  'T' 	=> 'TEMPORARY',
					'');
		
		EXPORT GetState(string code) 
	        := map (corp2.t2u(code) in ['AL' ,'AK' ,'AS' ,'AZ' ,'AR' ,'CA' ,'CO' ,'CT' ,'DE' ,'DC' ,'FM' ,'FL' ,'GA',
																						'GU' ,'HI' ,'ID' ,'IL' ,'IN' ,'IA' ,'KS' ,'KY' ,'LA' ,'ME' ,'MH' ,'MD' ,'MA',
																						'MI' ,'MN' ,'MS' ,'MO' ,'MT' ,'NE' ,'NV' ,'NH' ,'NJ' ,'NM' ,'NY' ,'NC' ,'ND',
																						'MP' ,'OH' ,'OK' ,'OR' ,'PW' ,'PA' ,'PR' ,'RI' ,'SC' ,'SD' ,'TN' ,'TX' ,'UT',
																						'VT' ,'VI' ,'VA' ,'WA' ,'WV' ,'WI' ,'WY' ,'AE' ,'AP' ,'AA' ,'CZ' ,'',
																						'AFG','ANT','AU' ,'BEL','BH' ,'BHS','BL' ,'BLZ','BR' ,'BRA','BRB','CAN',
																						'CD' ,'CH' ,'CHE','CMR','COL','CPV','CYM','DEU','ECU','EGY','FR' ,'FRA',
																					  'GBR','GE' ,'GHA','GUM','II' ,'IND','IRL','ITA','JPN','KEN','LS' ,'LUX',
																					  'MUS','MYS','NA' ,'NI' ,'NLD','PAN','PHL','PRI','SGP','SP' ,'SVK','SW',
																						'SWZ','UK' ,'UKR','URY','US' ,'VI' ,'VIR','ZAF','ARE','ARG','ESP','KNA',
																						'TWN'] => corp2.t2u(code),																						 
																					  '');

		EXPORT DecodeState(string code) 
				:= case(corp2.t2u(code),
			  'AL'  => 'ALABAMA',
				'AK'  => 'ALASKA',
				'AS'  => 'AMERICAN SAMOA',
				'AZ'  => 'ARIZONA',
				'AR'  => 'ARKANSAS',
				'CA'  => 'CALIFORNIA',
				'CO'  => 'COLORADO',
				'CT'  => 'CONNECTICUT',
				'DE'  => 'DELAWARE',
				'DC'  => 'DISTRICT OF COLUMBIA',
				'FM'  => 'FEDERATED STATES OF MICRONESIA',
				'FL'  => 'FLORIDA',
				'GA'  => 'GEORGIA',
				'GU'  => 'GUAM',
				'HI'  => 'HAWAII',
				'ID'  => 'IDAHO',
				'IL'  => 'ILLINOIS',
				'IN'  => 'INDIANA',
				'IA'  => 'IOWA',
				'KS'  => 'KANSAS',
				'KY'  => 'KENTUCKY',
				'LA'  => 'LOUISIANA',
				'ME'  => 'MAINE',
				'MH'  => 'MARSHALL ISLANDS',
				'MD'  => 'MARYLAND',
				'MA'  => 'MASSACHUSETTS',
				'MI'  => 'MICHIGAN',
				'MN'  => 'MINNESOTA',
				'MS'  => 'MISSISSIPPI',
				'MO'  => 'MISSOURI',
				'MT'  => 'MONTANA',
				'NE'  => 'NEBRASKA',
				'NV'  => 'NEVADA',
				'NH'  => 'NEW HAMPSHIRE',
				'NJ'  => 'NEW JERSEY',
				'NM'  => 'NEW MEXICO',
				'NY'  => 'NEW YORK',
				'NC'  => 'NORTH CAROLINA',
				'ND'  => 'NORTH DAKOTA',
				'MP'  => 'NORTHERN MARIANA ISLANDS',
				'OH'  => 'OHIO',
				'OK'  => 'OKLAHOMA',
				'OR'  => 'OREGON',
				'PW'  => 'PALAU',
				'PA'  => 'PENNSYLVANIA',
				'PR'  => 'PUERTO RICO',
				'RI'  => 'RHODE ISLAND',
				'SC'  => 'SOUTH CAROLINA',
				'SD'  => 'SOUTH DAKOTA',
				'TN'  => 'TENNESSEE',
				'TX'  => 'TEXAS',
				'UT'  => 'UTAH',
				'VT'  => 'VERMONT',
				'VI'  => 'VIRGIN ISLANDS',
				'VA'  => 'VIRGINIA',
				'WA'  => 'WASHINGTON',
				'WV'  => 'WEST VIRGINIA',
				'WI'  => 'WISCONSIN',
				'WY'  => 'WYOMING',
				'AE'  => 'ARMED FORCES EUROPE, THE MIDDLE EAST AND CANADA',
				'AP'  => 'ARMED FORCES PACIFIC',
				'AA'  => 'ARMED FORCES AMERICAS EXCEPT CANADA',
        'CZ'  => 'CANAL ZONE',
				'AFG' => 'AFGHANISTAN',
				'ANT' => 'NETHERLANDS ANTILLES',
				'ARE' => 'UNITED ARAB EMIRATES',
				'ARG' => 'ARGENTINA',
				'AU'  => 'AUSTRALIA',
				'BEL' => 'BELGIUM',
				'BH'  => 'BAHAMAS',
				'BHS' => 'BAHAMAS',
				'BL'  => 'BELGIUM',
				'BLZ' => 'BELIZE',
				'BR'  => 'BRAZIL',
				'BRA' => 'BRAZIL',
				'BRB' => 'BARBADOS',
				'CAN' => 'CANADA',
				'CD'  => 'CANADA',
				'CH'  => 'CHINA',
				'CHE' => 'SWITZERLAND',
				'CMR' => 'CAMEROON',
				'COL' => 'COLUMBIA',
				'CPV' => 'CAPE VERDE',
				'CYM' => 'CAYMAN ISLANDS',
				'DEU' => 'GERMANY',
				'ECU' => 'ECUADOR',
				'EGY' => 'EGYPT',
				'ESP' => 'SPAIN',
				'FR'  => 'FRANCE',
				'FRA' => 'FRANCE',
				'GBR' => 'UNITED KINGDOM',
				'GE'  => 'GERMANY',
				'GHA' => 'GHANA',
				'GUM' => 'GUAM',
				'II'  => 'INDIA',
				'IND' => 'INDIA',
				'IRL' => 'IRELAND',
				'ITA' => 'ITALY',
				'JPN' => 'JAPAN',
				'KEN' => 'KENYA',
				'KNA' => 'SAINT KITTS AND NEVIS',
				'LS'  => 'LIECHTENSTEIN',
				'LUX' => 'LUXEMBOURG',
				'MUS' => 'MAURITIUS',
				'MYS' => 'MALAYSIA',
				'NA'  => 'NETHERLANDS',
				'NI'  => 'NIGERIA',
				'NLD' => 'NETHERLANDS',
				'PAN' => 'PANAMA',
				'PHL' => 'PHILIPPINES',
				'PRI' => 'PUERTO RICO',
				'SGP' => 'SINGAPORE',
				'SP'  => 'SPAIN',
				'SVK' => 'SLOVAKIA (SLOVAK REPUBLIC)',
				'SW'  => 'SWITZERLAND',
				'SWZ' => 'SWAZILAND',
				'TWN' => 'TAIWAN',
				'UK'  => 'UNITED KINGDOM',
				'UKR' => 'UKRAINE',
				'URY' => 'URUGUAY',
				'US'  => 'US',
				'VIR' => 'VIRGIN ISLANDS',
				'ZAF' => 'SOUTH AFRICA',
				''    => '',
				'**|' + corp2.t2u(code));
				
		EXPORT GetChapterDesc(string code) 
		    := case(corp2.t2u(code),
						'CGPSHP' => 'COUNTY GENERAL PARTNERSHIP; CONVENED AT STATE',
						'COUNTY' => 'COUNTY',
						'COVER'  => 'COVER LETTER',
						'FED'    => 'FEDERALLY CHARTERED (NOT UNDER IOWA CHAPTER)',
						'NON EX' => 'CERT OF NON EXISTENCE',
						'1090DF' => 'CODE 469A SEC. 8 DOM. & FOR. RESERV OF NAME',
						'1120DF' => 'CODE 504A SEC. 7 DOM. & FOR. RESERV. OF NAME',
						'172CFC' => 'CODE 172C FARM CORP (NOT REGIST.)',
						'172CLP' => 'CODE 172C FARM LIMITED PART. (NOT REGIST)',
						'172NRA' => 'CODE 172 FARM CORP TRUST',
						'172TRU' => 'CODE 172 FARM CORP NON RES ALIEN',
						'3460DA' => 'CODE 346 COUNTY AND CITY AUTHORITY',
						'486LLP' => 'CODE 486 DOMESTIC LIMITED LIABILITY PARTNERSHIP',
						'486AGP' => 'CODE 486A GENERAL PARTNERSHIP',
						'486ADL' => 'CODE 486A DOMESTIC LIMITED LIABILITY PARTNERSHIP',
						'486AFL' => 'CODE 486A FOREIGN LIMITED LIABILITY PARTNERSHIP',
						'486IGP' => '',
						'487DLL' => 'CODE 487 DOMESTIC LTD. LIABILITY LTD. PARTNERSHIP',
						'487FLL' => 'CODE 487 FOREIGN LTD. LIABILTY LTD. PARTNERSHIP',
						'488DLP' => 'CODE 488 DOMESTIC LIMITED PARTNERSHIP',
						'488FLP' => 'CODE 488 FOREIGN LIMITED PARTNERSHIP',
						'488DLL' => 'CODE 488 DOMESTIC LTD. LIABILITY LTD. PARTNERSHIP',
						'488FLL' => 'CODE 488 FOREIGN LTD. LIABILITY LTD. PARTNERSHIP',
						'489DLC' => 'CODE 489 DOMESTIC LIMITED LIABILITY COMPANY',
						'489DPL' => 'CODE 489 DOMESTIC PROFESSIONAL LIMITED LIABILITY COMPANY',
						'489FLC' => 'CODE 489 FOREIGN LIMITED LIABILITY COMPANY',
						'489FPL' => 'CODE 489 FOREIGN PROFESSIONAL LIMITED LIABILITY COMPANY',
						'490 DP' => 'CODE 490 DOMESTIC PROFIT',
						'490 FP' => 'CODE 490 FOREIGN PROFIT',
						'490DLC' => 'CODE 490A DOMESTIC LIMITED LIABILITY COMPANY',
						'490FLC' => 'CODE 490A FOREIGN LIMITED LIABILITY COMPANY',
						'490DPL' => 'CODE 490 DOMESTIC PROF. LIMITED LIABILITY COMPANY',
						'490FPL' => 'CODE 490 FOREIGN PROF. LIMITED LIABILITY COMPANY',
						'4910DI' => 'CODE 491 INSURANCE COMPANIES',
						'4910DP' => 'CODE 491 PECUNIARY PROFIT',
						'496CDP' => 'CODE 496C DOMESTIC PROFESSIONAL',
						'496CFP' => 'CODE 496C FOREIGN PROFESSIONAL',
						'4970CP' => 'CODE 497 COOP PROFIT',
						'4980CN' => 'CODE 498 COOP NON-PROFIT',
						'4988FLP'=> 'CODE 488 FOREIGN LIMITED PARTNERSHIP',
						'499ADH' => 'CODE 499A COOP MULTIPLE HOUSING ACT',
						'4990CS' => 'CODE 499 COOP STOCK',
						'4990CT' => 'CODE 499 COOP NON-STOCK',
						'499OCT' => 'CODE 499 COOP NON-STOCK',
						'501ADC' => 'CODE 501A DOMESTIC COOPERATIVE',
						'501AFC' => 'CODE 501A FOREIGN COOPERATIVE',
						'501B'   => 'CODE 501B - REVISED UNIFORM UNINCORPORATED NON-PROFIT ASSOC',
						'5010CV' => 'CODE 499 COOP STOCK, VALUE ADDED',
						'504ADN' => 'CODE 504A DOMESTIC NON-PROFIT',
						'504AFN' => 'CODE 504A FOREIGN NON-PROFIT',
						'504RDN' => 'CODE 504 REVISED DOMESTIC NON-PROFIT',
						'504RFN' => 'CODE 504 REVISED FOREIGN NON-PROFIT',
						'5240DB' => 'CODE 524 DOMESTIC BANKS',
						'5340DS' => 'CODE 534 DOMESTIC SAVING & LOAN',
						'487DLP' => 'CODE 487 DOMESTIC LTD PARTNERSHIP',
						'487FLP' => 'CODE 487 FOREIGN LTD PARTNERSHIP',
						'5480TM' => 'CODE 548 TRADEMARK OR SERVICE MARK',
						'');	
	
	  EXPORT GetOfficerDesc(string code) 
		    := case(corp2.t2u(code),				
					'00'  =>  'CHAIRMAN OF THE BOARD',
					'01'  =>  'CHIEF EXECUTIVE OFFICER',
					'02'  =>  'CHAIRPERSON',
					'03'  =>  'VICE CHAIRMAN',
					'04'  =>  'VICE CHAIRPERSON',
					'10'  =>  'PRESIDENT',
					'11'  =>  'COMMANDER',
					'12'  =>  'CHANCELLOR COMMANDER',
					'13'  =>  'PASTOR',
					'14'  =>  'MODERATOR',
					'20'  =>  'VICE PRESIDENT',
					'21'  =>  'VICE COMMANDER',
					'22'  =>  'VICE CHANCELLOR',
					'23'  =>  'ASSISTANT VICE PRESIDENT',
					'30'  =>  'SECRETARY',
					'31'  =>  'ASSISTANT SECRETARY',
					'32'  =>  'ADJUTANT',
					'33'  =>  'CLERK',
					'34'  =>  'RECORDING CLERK',
					'40'  =>  'TREASURER',
					'41'  =>  'ASSISTANT TREASURER',
					'42'  =>  'FINANCE OFFICER',
					'50'  =>  'CONTROLLER',
					'51'  =>  'COMPTROLLER',
					'60'  =>  'GENERAL COUNSEL',
					'61'  =>  'ASSISTANT GENERAL COUNSEL',
					'65'  =>  'PARTNER',
					'66'  =>  'PARTNER (AUTHORIZED)',
					'70'  =>  'DEACON',
					'72'  =>  'CHAPLAIN',
					'74'  =>  'SERGEANT-AT-ARMS',
					'78'  =>  'SERVICE OFFICER',
					'80'  =>  'TRUSTEE',
					'82'  =>  'OFFICER',
					'90'  =>  'DIRECTOR',
					'95'  =>  'SHAREHOLDER',
					'97'  =>  'INCORPORATOR',
					'98'  =>  'OTHER',
					'99'  =>  'MORE ON FILE',
					''    =>  '',
					'85'  =>  '',
					'USA' =>  '',                                                     
					'IND' =>  '',                                                     
					'52003' => '',                                                  
					'90501' => '',                                                   
					'50047' => '',                                                    
					'103-0023'=> '',
					'**|'+ corp2.t2u(code));		
		
		
		EXPORT GetFilingDesc(string code) 
		    := case(corp2.t2u(code),	
  				'ACAN'  =>  'AMENDED CERTIFICATE OF AUTHORITY - CHANGE NAME',
					'ACAP'  =>  'AMENDED CERTIFICATE OF AUTHORITY - CHANGE PURPOSE OF BUS',
					'ACAU'  =>  'APPLICATION FOR AMENDED CERTIFICATE OF AUTHORITY',
					'ACHG'  =>  'REGISTERED AGENTS CHANGE OF REGISTERED OFFICE',
					'ADIS'  =>  'ADMINISTRATIVE DISSOLUTION',
					'ADMF'  =>  'ADMINISTRATIVE DISS. - FAILURE TO PAY',
					'ADMS'  =>  'ADMINISTRATIVE DISSOLUTION (DURATION EXPIRED)',
					'AFLP'  =>  'AMENDMENT TO CERTIFICATE OF REGISTRATION OF FOREIGN LP',
					'AG'    =>  'AGRICULTURAL REPORT',
					'AINT'  =>  'ARTICLES OF INTENT',
					'AMEL'  =>  'ARTICLES OF AMENDMENT TO VOLUNTARY ELECT REV. NON PROFIT CORP',
					'AMDQ'  =>  'AMENDMENT TO STATEMENT OF QUALIFICATION (DOMESTIC)',
					'AMEN'  =>  'AMENDED ARTICLES OF INCORPORATION',
					'AMFQ'  =>  'AMENDMENT TO STATEMENT OF FOREIGN QUALIFICATION',
					'AMLL'  =>  'AMENDMENT TO CERTIFICATE OF LIMITED LIABILITY PARTNERSHIP',
					'AMLP'  =>  'AMENDMENT TO CERTIFICATE OF LIMITED PARTNERSHIP',
					'AMLR'  =>  'AMENDMENT TO CERTIFICATE OF LIMITED PARTNERSHIP',
					'AMPA'  =>  'AMENDMENT TO STATEMENT OF PARTNERSHIP AUTHORITY',
					'AMPR'  =>  'AMENDMENT PURSUANT TO REORGANIZATION',
					'ANAM'  =>  'AMENDMENT OF NAME',
					'ANEX'  =>  'ASSUMED NAME EXPIRATION',
					'ANNR'  =>  'ANNUAL REPORT FILED',
					'AOTM'  =>  'ASSIGNMENT OF TRADEMARK',
					'APAG'  =>  'APPOINTMENT OF AGENT',
					'APAN'  =>  'APPLICATION TO ADOPT AN ASSUMED NAME',
					'APPR'  =>  'APPLICATION TO REGISTER CORPORATE NAME',
					'APPW'  =>  'APPLICATION FOR WITHDRAWAL',
					'APRN'  =>  'APPLICATION TO RESERVE A CORPORATE NAME',
					'ARDO'  =>  'ARTICLES OF DOMESTICATION',
					'ARTC'  =>  'ARTICLES OF CONVERSION',
					'ARTD'  =>  'ARTICLES OF DISSOLUTION',
					'ARTI'  =>  'ARTICLES OF INCORPORATION',
					'ARTO'  =>  'ARTICLES OF ORGANIZATION',
					'ASAR'  =>  'AMENDED AND SUBSTITUTED ARTICLES',
					'ASTA'  =>  'STATE AMENDMENT',
					'ASTK'  =>  'AMENDMENT OF STOCK',
					'ATRM'  =>  'AMENDMENT OF TERM (DURATION)',
					'AUIN'  =>  'APPLICATION FOR USE OF INDISTINGUISHABLE NAME',
					'BIEN'  =>  'BIENNIAL REPORT FILED',
					'C486'  =>  'STATEMENT OF QUALIFICATION (CONVERSION TO CHAPTER 486A)',
					'C487'  =>  'STATEMENT OF QUALIFICATION (CONVERSION TO CHAPTER 487)',
					'CANA'  =>  'CANCELLATION',
					'CANC'  =>  'CERTIFICATE OF CANCELLATION',
					'CAUT'  =>  'CERTIFICATE OF AUTHORITY',
					'CCLP'  =>  'CERTIFICATE OF CANCELLATION OF DOMESTIC LIMITED PARTNERSHIP',
					'CFLL'  =>  'CERTIFICATE OF CANCELLATION OF REGISTRATION OF FOREIGN LP',
					'CFLP'  =>  'CERTIFICATE OF CANCELLATION OF REGISTRATION OF FOREIGN LP',
					'CFRP'  =>  'CERTIFICATE OF CANCELLATION OF REGISTRATION OF FORGN LL LP',
					'CGPS'  =>  'COUNTY GP; ORIGINAL FILING AT COUNTY, CONVERTED AT STATE',
					'CHAR'  =>  'CHARITY (OLD CHAPTER 5040DN - CHANGED TO ARTI ON 3/16/90)',
					'CHGA'  =>  'CHANGE OF REGISTERED AGENT',
					'CHGO'  =>  'CHANGE OF REGISTERED OFFICE',
					'CHOA'  =>  'CHANGE OF REGISTERED OFFICE AND/OR AGENT',
					'CICC'  =>  'CERTIFICATE OF ISSUANCE OF CAPITAL STOCK',
					'CODQ'  =>  'CANCELLATION OF STATEMENT OF QUALIFICATION (DOMESTIC)',
					'COFQ'  =>  'CANCELLATION OF STATEMENT OF FOREIGN QUALIFICATION',
					'CONG'  =>  'ARTICLES OF CONVERSION TO 5450DP',
					'CONO'  =>  'ARTICLES OF CONVERSION TO 490DLC',
					'CONS'  =>  'ARTICLES OF CONSOLIDATION',
					'CORG'  =>  'CERTIFICATE OF ORGANIZATION',
					'CORR'  =>  'ARTICLES OF CORRECTION',
					'COTM'  =>  'CANCELLATION OF TRADEMARK',
					'CRQS'  =>  'CANCELLATION OF REACQUIRED SHARES',
					'DCDI'  =>  'DECLARATION OF DISSOLUTION',
					'DCRE'  =>  'DECLARATION OF REINSTATEMENT',
					'DENI'  =>  'STATEMENT OF DENIAL OF PARTNERSHIP AUTHORITY',
					'DFIC'  =>  'RESOLUTION OF DOMESTIC CORPORATION ADOPTING FICTITIOUS NAME',
					'DISD'  =>  'ARTICLES OF DISSOLUTION BY INCORPORATORS,DIRECTORS,3RD PERS.',
					'DISI'  =>  'ARTICLES OF DISSOLUTION OF INCORPORATORS/INITIAL DIRECTORS',
					'DISM'  =>  'ARTICLES OF DISSOLUTION BY DIRECTORS/MEMBERS/THIRD PERSONS',
					'DISO'  =>  'STATEMENT OF PARTNERSHIP DISSASSOCIATION',
					'DISS'  =>  'ARTICLES OF DISSOLUTION BY BOARD OF DIRECTORS & SHAREHOLDERS',
					'DSPA'  =>  'STATEMENT OF DISSOLUTION TO STMT OF PARTNERSHIP AUTHORITY',
					'FAMN'  =>  'FOREIGN AMENDMENT',
					'FFIC'  =>  'RESOLUTION OF FOREIGN CORPORATION ADOPTION FICTITIOUS NAME',
					'FMER'  =>  'FOREIGN MERGER',
					'FQUA'  =>  'STATEMENT OF FOREIGN QUALIFICATION (FOREIGN LLP)',
					'FREI'  =>  'FOREIGN REINSTATEMENT',
					'FRES'  =>  'FOREIGN RESTATED ARTICLES',
					'INSL'  =>  'INCORPORATION - INSURANCE (LIFE) (FOREIGN BECOMING DOMESTIC)',
					'INSM'  =>  'INCORPORATION - COUNTY MUTUAL',
					'INSO'  =>  'INCORP. - INSURANCE OTHER THAN LIFE(FORGN BECOMING DOMESTIC)',
					'INTD'  =>  'INTENT TO DISSOLVE',
					'JDIS'  =>  'JUDICIAL DISSOLUTION',
					'LTDP'  =>  'CERTIFICATE OF LIMITED PARTNERSHIP',
					'MCON'  =>  'MANDATORY CONVERSION',
					'MERG'  =>  'ARTICLES OF MERGER',
					'MISC'  =>  'MISCELLANEOUS FILING',
					'NRRA'  =>  'NOTICE OF RESIGNATION OF REGISTERED AGENT',
					'NTRN'  =>  'NOTICE OF TRANSFER OF RESERVED CORPORATE NAME',
					'PAUT'  =>  'STATEMENT OF PARTNERSHIP AUTHORITY',
					'POPA'  =>  'PROOF OF PUBLICATION',
					'POPD'  =>  'PROOF OF PUBLICATION - DISSOLUTION',
					'PMT'   =>  'PAYMENT FOR BIENNIAL REPORT',
					'QFLL'  =>  'APPLICATION FOR REGISTRATION OF FOREIGN LL LP',
					'QUAL'  =>  'STATEMENT OF QUALIFICATION (DOMESTIC LLP)',
					'RART'  =>  'RESTATED ARTICLES OF INCORPORATION',
					'RASA'  =>  'RENEWED, AMENDED, AND SUBSTITUTED ARTICLES',
					'RASN'  =>  'RENEWAL OF ASSUMED NAME',
					'RCAP'  =>  'REDUCTION OF STATED CAPITAL',
					'RCLP'  =>  'RESTATED CERT OF LMT PART',
					'RE-I'  =>  'RE-INCORPORATED (OLD CHAPTER 5040DN)',
					'REEL'  =>  'RESTATED ARTICLES OF INCORP - VOL ELECT REV NONPROF CORP ACT',
					'REIC'  =>  'REINSTATEMENT BY COURT ORDER',
					'REIN'  =>  'REINSTATEMENT OR COMPROMISE',
					'RENR'  =>  'RENEWAL OF REGISTRATION OF NAME',
					'RENW'  =>  'RENEWAL ARTICLES OF INCORPORATION',
					'REOG'  =>  'ARTICLES OF REORGANIZATION',
					'RERF'  =>  'RE-RECORDINGS (FOREIGN)',
					'REVD'  =>  'REVOCATION OF VOLUNTARY DISSOLUTION',
					'REVO'  =>  'REVOCATION',
					'RFLP'  =>  'CERTIFICATE OF REGISTRATION OF FOREIGN LIMITED PARTNERSHIP',
					'RLLP'  =>  'REGISTRATION OF LIMITED LIABILITY PARTNERSHIP',
					'RNTM'  =>  'RENEWAL OF TRADEMARK',
					'ROAR'  =>  'RECORDING OF ORIGINAL ARTICLES',
					'ROTM'  =>  'REGISTRATION OF TRADEMARK',
					'RRES'  =>  'RENEWAL OF RESERVATION OF NAME',
					'RRLP'  =>  'RENEWAL OF LIMITED LIABILITY PARTNERSHIP',
					'SCRS'  =>  'STATEMENT OF CANCELLATION OF REDEEMABLE SHARES',
					'SESS'  =>  'STATEMENT ESTABLISHING A SERIES OF SHARES',
					'SHEX'  =>  'ARTICLES OF SHARE EXCHANGE',
					'SMRG'  =>  'STATEMENT OF MERGER',
					'SRRA'  =>  'RESIGN. OF REGISTERED AGENT',
					'STAG'  =>  'STATEMENT OF RESIGNATION',
					'STAM'  =>  'STATEMENT OF ABANDENDMENT OF MERGER',
					'STAU'  =>  'STATEMENT OF AUTHORITY',
					'STCA'  =>  'STATEMENT OF CANCELLATION',
					'STCH'  =>  'STATEMENT OF CHANGE OF REGISTERED OFFICE AND/OR REG. AGENT',
					'STCO'  =>  'STATEMENT OF CORRECTION',
					'STDI'  =>  'STATEMENT OF DISASSOCIATION',
					'STDP'  =>  'STATEMENT OF DISSOLUTION',
					'STDS'  =>  'STATEMENT OF DISSOLUTION',
					'STNR'  =>  'STATEMENT OF NAME RESERVATION',
  				'STTM'  =>  'STATUTORY TERMINATION -FAILURE TO APPOINT BEF 7/1/97 CH 5040',
					'STTN'  =>  'STATEMENT OF TERMINATION',
					'STSU'  =>  'STATEMENT SURRENDERING CERTIFICATE',
					'STRA'  =>  'STATEMENT OF RESIGNATION OF REGISTERED AGENT',
					'VOLE'  =>  'VOLUNTARY ELECTION TO ADOPT',
					'VOLA'  =>  'VOLUNTARY ELECTION TO ADOPT PURSUANT TO IA CODE 504.1701',
					'VOLR'  =>  'VOLUNTARY ELECTION OF ADOPTION AND RESTATED ARTICLES',
					'WOTW'  =>  'WAIVER OF TERMINATION AND WIND UP',
					corp2.t2u(code));					

   EXPORT GetCountryDesc(string code) 
			:= map(
					corp2.t2u(code) = 'AFG'=> 'AFGHANISTAN',
					corp2.t2u(code) = 'ALB'=> 'ALBANIA',
					corp2.t2u(code) = 'ALA'=> 'ALAND ISLANDS',
					corp2.t2u(code) = 'DZA'=> 'ALGERIA',
					corp2.t2u(code) = 'ASM'=> 'AMERICAN SAMOA',
					corp2.t2u(code) = 'AND'=> 'ANDORRA',
					corp2.t2u(code) = 'AGO'=> 'ANGOLA',
					corp2.t2u(code) = 'AIA'=> 'ANGUILLA',
					corp2.t2u(code) = 'ATA'=> 'ANTARCTICA',
					corp2.t2u(code) = 'ATG'=> 'ANTIGUA AND BARBUDA',
					corp2.t2u(code) = 'ARG'=> 'ARGENTINA',
					corp2.t2u(code) = 'ARM'=> 'ARMENIA',
					corp2.t2u(code) = 'ABW'=> 'ARUBA',
					corp2.t2u(code) = 'AUS'=> 'AUSTRALIA',
					corp2.t2u(code) = 'AU' => 'AUSTRALIA',
					corp2.t2u(code) = 'AUT'=> 'AUSTRIA',
				  corp2.t2u(code) = 'AZE'=> 'AZERBAIJAN',
					corp2.t2u(code) = 'BHS'=> 'BAHAMAS',
					corp2.t2u(code) = 'BHR'=> 'BAHRAIN',
					corp2.t2u(code) = 'BH' => 'BAHRAIN',
					corp2.t2u(code) = 'BGD'=> 'BANGLADESH',
					corp2.t2u(code) = 'BRB'=> 'BARBADOS',
					corp2.t2u(code) = 'BLR'=> 'BELARUS',
					corp2.t2u(code) = 'BEL'=> 'BELGIUM',
					corp2.t2u(code) = 'BLZ'=> 'BELIZE',
					corp2.t2u(code) = 'BEN'=> 'BENIN',
					corp2.t2u(code) = 'BMU'=> 'BERMUDA',
					corp2.t2u(code) = 'BTN'=> 'BHUTAN',
					corp2.t2u(code) = 'BOL'=> 'BOLIVIA',
					corp2.t2u(code) = 'BIH'=> 'BOSNIA AND HERZEGOWINA',
					corp2.t2u(code) = 'BWA'=> 'BOTSWANA',
					corp2.t2u(code) = 'BVT'=> 'BOUVET ISLAND',
					corp2.t2u(code) = 'BRA'=> 'BRAZIL',
					corp2.t2u(code) = 'BR' => 'BRAZIL',
					corp2.t2u(code) = 'IOT'=> 'BRITISH INDIAN OCEAN TERRITORY',
					corp2.t2u(code) = 'BRN'=> 'BRUNEI DARUSSALAM',
					corp2.t2u(code) = 'BGR'=> 'BULGARIA',
					corp2.t2u(code) = 'BFA'=> 'BURKINA FASO',
					corp2.t2u(code) = 'BDI'=> 'BURUNDI',
					corp2.t2u(code) = 'KHM'=> 'CAMBODIA',
					corp2.t2u(code) = 'CMR'=> 'CAMEROON',
					corp2.t2u(code) = 'CAN'=> 'CANADA',
					corp2.t2u(code) = 'CD' => 'DEMOCRATIC REPUBLIC OF THE CONGO',
					corp2.t2u(code) = 'CPV'=> 'CAPE VERDE',
					corp2.t2u(code) = 'CYM'=> 'CAYMAN ISLANDS',
					corp2.t2u(code) = 'CAF'=> 'CENTRAL AFRICAN REPUBLIC',
					corp2.t2u(code) = 'TCD'=> 'CHAD',
					corp2.t2u(code) = 'CHL'=> 'CHILE',
					corp2.t2u(code) = 'CHN'=> 'CHINA',
					corp2.t2u(code) = 'CXR'=> 'CHRISTMAS ISLAND',
				  corp2.t2u(code) = 'CCK'=> 'COCOS (KEELING) ISLANDS',
					corp2.t2u(code) = 'COL'=> 'COLOMBIA',
					corp2.t2u(code) = 'COM'=> 'COMOROS',
					corp2.t2u(code) = 'COG'=> 'CONGO',
					corp2.t2u(code) = 'COD'=> 'CONGO, THE DRC',
					corp2.t2u(code) = 'COK'=> 'COOK ISLANDS',
					corp2.t2u(code) = 'CRI'=> 'COSTA RICA',
					corp2.t2u(code) = 'CIV'=> 'COTE DIVOIRE',
					corp2.t2u(code) = 'HRV'=> 'CROATIA',
					corp2.t2u(code) = 'CUB'=> 'CUBA',
					corp2.t2u(code) = 'CYP'=> 'CYPRUS',
					corp2.t2u(code) = 'CZE'=> 'CZECH REPUBLIC',
					corp2.t2u(code) = 'DNK'=> 'DENMARK',
					corp2.t2u(code) = 'DJI'=> 'DJIBOUTI',
					corp2.t2u(code) = 'DMA'=> 'DOMINICA',
					corp2.t2u(code) = 'DOM'=> 'DOMINICAN REPUBLIC',
					corp2.t2u(code) = 'TMP'=> 'EAST TIMOR',
					corp2.t2u(code) = 'ECU'=> 'ECUADOR',
					corp2.t2u(code) = 'EGY'=> 'EGYPT',
					corp2.t2u(code) = 'SLV'=> 'EL SALVADOR',
					corp2.t2u(code) = 'ENG'=> 'ENGLAND',
					corp2.t2u(code) = 'GNQ'=> 'EQUATORIAL GUINEA',
					corp2.t2u(code) = 'ERI'=> 'ERITREA',
					corp2.t2u(code) = 'EST'=> 'ESTONIA',
					corp2.t2u(code) = 'ETH'=> 'ETHIOPIA',
					corp2.t2u(code) = 'FLK'=> 'FALKLAND ISLANDS (MALVINAS)',
					corp2.t2u(code) = 'FRO'=> 'FAROE ISLANDS',
					corp2.t2u(code) = 'FJI'=> 'FIJI',
					corp2.t2u(code) = 'FIN'=> 'FINLAND',
					corp2.t2u(code) = 'FRA'=> 'FRANCE',
					corp2.t2u(code) = 'FR' => 'FRANCE',
					corp2.t2u(code) = 'FXX'=> 'FRANCE, METROPOLITAN',
					corp2.t2u(code) = 'GUF'=> 'FRENCH GUIANA',
					corp2.t2u(code) = 'PYF'=> 'FRENCH POLYNESIA',
					corp2.t2u(code) = 'ATF'=> 'FRENCH SOUTHERN TERRITORIES',
					corp2.t2u(code) = 'GAB'=> 'GABON',
					corp2.t2u(code) = 'GMB'=> 'GAMBIA',
					corp2.t2u(code) = 'GEO'=> 'GEORGIA, COUNTRY OF',
					corp2.t2u(code) = 'GE' => 'GEORGIA, COUNTRY OF',
					corp2.t2u(code) = 'DEU'=> 'GERMANY',
					corp2.t2u(code) = 'GHA'=> 'GHANA',
					corp2.t2u(code) = 'GIB'=> 'GIBRALTAR',
					corp2.t2u(code) = 'GRC'=> 'GREECE',
					corp2.t2u(code) = 'GRL'=> 'GREENLAND',
					corp2.t2u(code) = 'GRD'=> 'GRENADA',
					corp2.t2u(code) = 'GLP'=> 'GUADELOUPE',
					corp2.t2u(code) = 'GUM'=> 'GUAM',
					corp2.t2u(code) = 'GTM'=> 'GUATEMALA',
					corp2.t2u(code) = 'GIN'=> 'GUINEA',
					corp2.t2u(code) = 'GNB'=> 'GUINEA-BISSAU',
					corp2.t2u(code) = 'GUY'=> 'GUYANA',
					corp2.t2u(code) = 'HTI'=> 'HAITI',
					corp2.t2u(code) = 'HMD'=> 'HEARD AND MC DONALD ISLANDS',
					corp2.t2u(code) = 'VAT'=> 'HOLY SEE (VATICAN CITY STATE)',
					corp2.t2u(code) = 'HND'=> 'HONDURAS',
					corp2.t2u(code) = 'HKG'=> 'HONG KONG',
					corp2.t2u(code) = 'HUN'=> 'HUNGARY',
					corp2.t2u(code) = 'ISL'=> 'ICELAND',
					corp2.t2u(code) = 'IND'=> 'INDIA',
					corp2.t2u(code) = 'IDN'=> 'INDONESIA',
					corp2.t2u(code) = 'IRN'=> 'IRAN (ISLAMIC REPUBLIC OF)',
					corp2.t2u(code) = 'IRQ'=> 'IRAQ',
					corp2.t2u(code) = 'IRL'=> 'IRELAND',
					corp2.t2u(code) = 'IMN'=> 'ISLE OF MAN',
					corp2.t2u(code) = 'ISR'=> 'ISRAEL',
					corp2.t2u(code) = 'ITA'=> 'ITALY',
					corp2.t2u(code) = 'JAM'=> 'JAMAICA',
					corp2.t2u(code) = 'JPN'=> 'JAPAN',
					corp2.t2u(code) = 'JEY'=> 'JERSEY',
					corp2.t2u(code) = 'JOR'=> 'JORDAN',
					corp2.t2u(code) = 'KAZ'=> 'KAZAKHSTAN',
					corp2.t2u(code) = 'KEN'=> 'KENYA',
					corp2.t2u(code) = 'KIR'=> 'KIRIBATI',
					corp2.t2u(code) = 'PRK'=> 'KOREA, D.P.R.O.',
					corp2.t2u(code) = 'KOR'=> 'KOREA, REPUBLIC OF',
					corp2.t2u(code) = 'KWT'=> 'KUWAIT',
					corp2.t2u(code) = 'KGZ'=> 'KYRGYZSTAN',
					corp2.t2u(code) = 'LAO'=> 'LAOS',
					corp2.t2u(code) = 'LVA'=> 'LATVIA',
					corp2.t2u(code) = 'LBN'=> 'LEBANON',
					corp2.t2u(code) = 'LSO'=> 'LESOTHO',
					corp2.t2u(code) = 'LS' => 'LESOTHO',
					corp2.t2u(code) = 'LBR'=> 'LIBERIA',
					corp2.t2u(code) = 'LBY'=> 'LIBYAN ARAB JAMAHIRIYA',
					corp2.t2u(code) = 'LIE'=> 'LIECHTENSTEIN',
					corp2.t2u(code) = 'LTU'=> 'LITHUANIA',
					corp2.t2u(code) = 'LUX'=> 'LUXEMBOURG',
					corp2.t2u(code) = 'MAC'=> 'MACAU',
					corp2.t2u(code) = 'MKD'=> 'MACEDONIA',
					corp2.t2u(code) = 'MDG'=> 'MADAGASCAR',
					corp2.t2u(code) = 'MWI'=> 'MALAWI',
					corp2.t2u(code) = 'MYS'=> 'MALAYSIA',
					corp2.t2u(code) = 'MDV'=> 'MALDIVES',
					corp2.t2u(code) = 'MLI'=> 'MALI',
					corp2.t2u(code) = 'MLT'=> 'MALTA',
					corp2.t2u(code) = 'MHL'=> 'MARSHALL ISLANDS',
					corp2.t2u(code) = 'MTQ'=> 'MARTINIQUE',
					corp2.t2u(code) = 'MRT'=> 'MAURITANIA',
					corp2.t2u(code) = 'MUS'=> 'MAURITIUS',
					corp2.t2u(code) = 'MYT'=> 'MAYOTTE',
					corp2.t2u(code) = 'MEX'=> 'MEXICO',
					corp2.t2u(code) = 'FSM'=> 'MICRONESIA, FEDERATED STATES OF',
					corp2.t2u(code) = 'MDA'=> 'MOLDOVA, REPUBLIC OF',
					corp2.t2u(code) = 'MCO'=> 'MONACO',
					corp2.t2u(code) = 'MNG'=> 'MONGOLIA',
					corp2.t2u(code) = 'MNE'=> 'MONTENEGRO',
					corp2.t2u(code) = 'MSR'=> 'MONTSERRAT',
					corp2.t2u(code) = 'MAR'=> 'MOROCCO',
					corp2.t2u(code) = 'MOZ'=> 'MOZAMBIQUE',
					corp2.t2u(code) = 'MMR'=> 'MYANMAR (Burma)',
					corp2.t2u(code) = 'NAM'=> 'NAMIBIA',
					corp2.t2u(code) = 'NA' => 'NAMIBIA',
					corp2.t2u(code) = 'NRU'=> 'NAURU',
					corp2.t2u(code) = 'NPL'=> 'NEPAL',
					corp2.t2u(code) = 'NLD'=> 'NETHERLANDS',
					corp2.t2u(code) = 'ANT'=> 'NETHERLANDS ANTILLES',
					corp2.t2u(code) = 'NCL'=> 'NEW CALEDONIA',
					corp2.t2u(code) = 'NZL'=> 'NEW ZEALAND',
					corp2.t2u(code) = 'NIC'=> 'NICARAGUA',
					corp2.t2u(code) = 'NI' => 'NICARAGUA',
					corp2.t2u(code) = 'NER'=> 'NIGER',
					corp2.t2u(code) = 'NGA'=> 'NIGERIA',
					corp2.t2u(code) = 'NIU'=> 'NIUE',
					corp2.t2u(code) = 'NFK'=> 'NORFOLK ISLAND',
					corp2.t2u(code) = 'MNP'=> 'NORTHERN MARIANA ISLANDS',
					corp2.t2u(code) = 'NOR'=> 'NORWAY',
				  corp2.t2u(code) = 'OMN'=> 'OMAN',
					corp2.t2u(code) = 'PAK'=> 'PAKISTAN',
					corp2.t2u(code) = 'PLW'=> 'PALAU',
					corp2.t2u(code) = 'PSE'=> 'PALESTINIAN TERRITORY, OCCUPIED',
					corp2.t2u(code) = 'PAN'=> 'PANAMA',
					corp2.t2u(code) = 'PNG'=> 'PAPUA NEW GUINEA',
					corp2.t2u(code) = 'PRY'=> 'PARAGUAY',
					corp2.t2u(code) = 'PER'=> 'PERU',
					corp2.t2u(code) = 'PHL'=> 'PHILIPPINES',
					corp2.t2u(code) = 'PCN'=> 'PITCAIRN',
					corp2.t2u(code) = 'POL'=> 'POLAND',
					corp2.t2u(code) = 'PRT'=> 'PORTUGAL',
					corp2.t2u(code) = 'PRI'=> 'PUERTO RICO',
				  corp2.t2u(code) = 'QAT'=> 'QATAR',
					corp2.t2u(code) = 'REU'=> 'REUNION',
					corp2.t2u(code) = 'ROM'=> 'ROMANIA',
					corp2.t2u(code) = 'ROU'=> 'ROMANIA',
					corp2.t2u(code) = 'RUS'=> 'RUSSIAN FEDERATION',
					corp2.t2u(code) = 'RWA'=> 'RWANDA',
					corp2.t2u(code) = 'BLM'=> 'SAINT-BARTHELEMY',
					corp2.t2u(code) = 'BL' => 'SAINT-BARTHELEMY',
					corp2.t2u(code) = 'MAF'=> 'SAINT-MARTIN (FRENCH PART)',
					corp2.t2u(code) = 'KNA'=> 'SAINT KITTS AND NEVIS',
					corp2.t2u(code) = 'LCA'=> 'SAINT LUCIA',
					corp2.t2u(code) = 'VCT'=> 'SAINT VINCENT AND THE GRENADINES',
					corp2.t2u(code) = 'WSM'=> 'SAMOA',
					corp2.t2u(code) = 'SMR'=> 'SAN MARINO',
					corp2.t2u(code) = 'STP'=> 'SAO TOME AND PRINCIPE',
					corp2.t2u(code) = 'SAU'=> 'SAUDI ARABIA',
					corp2.t2u(code) = 'SEN'=> 'SENEGAL',
					corp2.t2u(code) = 'SRB'=> 'SERBIA',
					corp2.t2u(code) = 'SYC'=> 'SEYCHELLES',
					corp2.t2u(code) = 'SLE'=> 'SIERRA LEONE',
					corp2.t2u(code) = 'SGP'=> 'SINGAPORE',
					corp2.t2u(code) = 'SVK'=> 'SLOVAKIA (Slovak Republic)',
					corp2.t2u(code) = 'SVN'=> 'SLOVENIA',
					corp2.t2u(code) = 'SLB'=> 'SOLOMON ISLANDS',
					corp2.t2u(code) = 'SOM'=> 'SOMALIA',
					corp2.t2u(code) = 'ZAF'=> 'SOUTH AFRICA',
					corp2.t2u(code) = 'SSD'=> 'SOUTH SUDAN',
					corp2.t2u(code) = 'SGS'=> 'SOUTH GEORGIA AND SOUTH S.S.',
					corp2.t2u(code) = 'ESP'=> 'SPAIN',
					corp2.t2u(code) = 'SP' => 'SPAIN',
					corp2.t2u(code) = 'LKA'=> 'SRI LANKA',
					corp2.t2u(code) = 'SHN'=> 'ST. HELENA',
					corp2.t2u(code) = 'SPM'=> 'ST. PIERRE AND MIQUELON',
					corp2.t2u(code) = 'SDN'=> 'SUDAN',
					corp2.t2u(code) = 'SUR'=> 'SURINAME',
					corp2.t2u(code) = 'SJM'=> 'SVALBARD AND JAN MAYEN ISLANDS',
					corp2.t2u(code) = 'SWZ'=> 'SWAZILAND',
					corp2.t2u(code) = 'SWE'=> 'SWEDEN',
					corp2.t2u(code) = 'CHE'=> 'SWITZERLAND',
					corp2.t2u(code) = 'CH' => 'SWITZERLAND',
					corp2.t2u(code) = 'SW' => 'SWITZERLAND',
					corp2.t2u(code) = 'SYR'=> 'SYRIAN ARAB REPUBLIC',
					corp2.t2u(code) = 'TWN'=> 'TAIWAN, PROVINCE OF CHINA',
					corp2.t2u(code) = 'TJK'=> 'TAJIKISTAN',
					corp2.t2u(code) = 'TZA'=> 'TANZANIA, UNITED REPUBLIC OF',
					corp2.t2u(code) = 'THA'=> 'THAILAND',
					corp2.t2u(code) = 'TGO'=> 'TOGO',
					corp2.t2u(code) = 'TKL'=> 'TOKELAU',
					corp2.t2u(code) = 'TON'=> 'TONGA',
					corp2.t2u(code) = 'TTO'=> 'TRINIDAD AND TOBAGO',
					corp2.t2u(code) = 'TUN'=> 'TUNISIA',
					corp2.t2u(code) = 'TUR'=> 'TURKEY',
					corp2.t2u(code) = 'TKM'=> 'TURKMENISTAN',
				  corp2.t2u(code) =	'TCA'=> 'TURKS AND CAICOS ISLANDS',
					corp2.t2u(code) = 'TUV'=> 'TUVALU',
					corp2.t2u(code) = 'UGA'=> 'UGANDA',
					corp2.t2u(code) = 'UKR'=> 'UKRAINE',
					corp2.t2u(code) = 'ARE'=> 'UNITED ARAB EMIRATES',
					corp2.t2u(code) = 'GBR'=> 'UNITED KINGDOM',
					corp2.t2u(code) = 'GRB'=> 'UNITED KINGDOM',
					corp2.t2u(code) = 'UK' => 'UNITED KINGDOM',
					corp2.t2u(code) = 'UMI'=> 'U.S. MINOR ISLANDS',
					corp2.t2u(code) = 'URY'=> 'URUGUAY',
					corp2.t2u(code) = 'USA'=> 'US',
					corp2.t2u(code) = 'UZB'=> 'UZBEKISTAN',
					corp2.t2u(code) = 'VUT'=> 'VANUATU',
					corp2.t2u(code) = 'VEN'=> 'VENEZUELA',
					corp2.t2u(code) = 'VNM'=> 'VIET NAM',
					corp2.t2u(code) = 'VGB'=> 'VIRGIN ISLANDS (BRITISH)',
					corp2.t2u(code) = 'VIR'=> 'VIRGIN ISLANDS (U.S.)',
					corp2.t2u(code) = 'WLF'=> 'WALLIS AND FUTUNA ISLANDS',
					corp2.t2u(code) = 'ESH'=> 'WESTERN SAHARA',
					corp2.t2u(code) = 'YEM'=> 'YEMEN',
					corp2.t2u(code) = 'ZMB'=> 'ZAMBIA',
					corp2.t2u(code) = 'ZWE'=> 'ZIMBABWE',
					corp2.t2u(code) in ['AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA',
															  		'GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA',
																		'MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND',
																		'MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT',
																		'VT','VI','VA','WA','WV','WI','WY','AE','AP','AA','CZ','US',''] => '',
					corp2.t2u(code));																	
				
END;
