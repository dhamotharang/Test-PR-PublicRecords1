/*--SOAP--
<message name="vehicle_registration_dl_number_key_fetch">
  <part name="dl_number" type="xsd:string"/>
  <part name="max_count" type="xsd:integer"/>
  <part name="return_count" type="xsd:integer"/>
  <part name="partial" type="xsd:boolean"/>
</message>
*/

// Generated by def2ecl.pl on Tue Feb 15 14:50:36 GMT 2005

export vehicle_registration_dl_number_key_fetch := MACRO

// beginning of fill in values
keyfilename := '~thor_data400::key::moxie.mv.dl_number.key';
payloadkey_filename := '~thor_data400::key::moxie.vehicles.fpos.data.key';
datasetlayout := RECORD
  VehLic.Layout_Vehreg_ToMike;
  unsigned integer8 fpos{virtual(fileposition)};
END;
// end of fill in values

STRING13 dl_number_val := '' : STORED('dl_number');
INTEGER max_count_value := 10000 : STORED('max_count');
INTEGER return_count_value := 1000 : STORED('return_count');
BOOLEAN partial := false : STORED('partial');

key := INDEX(dataset([],datasetlayout),{own_1_driver_license_number,fpos},keyfilename);
#uniquename(f)
payloadkey := INDEX(dataset([],datasetlayout),{unsigned8 %f% := fpos},{datasetlayout},payloadkey_filename);

res := key(
            keyed((partial AND own_1_driver_license_number[1..LENGTH(TRIM(dl_number_val))]=dl_number_val OR
				own_1_driver_license_number=dl_number_val))
);

lim_res := LIMIT(res,max_count_value,FAIL(11, doxie.ErrorCodes(11)),keyed);

output(TOPN(lim_res,return_count_value,RECORD))

ENDMACRO;
