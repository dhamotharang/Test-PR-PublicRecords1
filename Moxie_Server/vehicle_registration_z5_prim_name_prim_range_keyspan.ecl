/*--SOAP--
<message name="vehicle_registration_z5_prim_name_prim_range_keyspan">
  <part name="z5" type="xsd:string"/>
  <part name="prim_name" type="xsd:string"/>
  <part name="prim_range" type="xsd:string"/>
  <part name="max_count" type="xsd:integer"/>
  <part name="return_count" type="xsd:integer"/>
  <part name="partial" type="xsd:boolean"/>
</message>
*/

// Generated by def2ecl.pl on Tue Feb 15 14:50:36 GMT 2005

export vehicle_registration_z5_prim_name_prim_range_keyspan := MACRO

// beginning of fill in values
keyfilename := '~thor_data400::key::moxie.mv.z5.prim_name.prim_range.key';
payloadkey_filename := '~thor_data400::key::moxie.mv.fpos.data.key';
datasetlayout := RECORD
  VehLic.Layout_Vehreg_ToMike;
  unsigned integer8 fpos{virtual(fileposition)};
END;
// end of fill in values

STRING5 z5_val := '' : STORED('z5');
STRING28 prim_name_val := '' : STORED('prim_name');
STRING10 prim_range_val := '' : STORED('prim_range');
INTEGER max_count_value := 10000 : STORED('max_count');
INTEGER return_count_value := 1000 : STORED('return_count');
BOOLEAN partial := false : STORED('partial');

key := INDEX(dataset([],datasetlayout),{own_1_zip5,own_1_prim_name,own_1_prim_range,fpos},keyfilename);
#uniquename(f)
payloadkey := INDEX(dataset([],datasetlayout),{unsigned8 %f% := fpos},{datasetlayout},payloadkey_filename);

res := key(
            keyed(own_1_zip5=z5_val),
            keyed(own_1_prim_name=prim_name_val),
            keyed((partial AND own_1_prim_range[1..LENGTH(TRIM(prim_range_val))]=prim_range_val) OR own_1_prim_range=prim_range_val)
);

lim_res := LIMIT(res,max_count_value,FAIL(11, doxie.ErrorCodes(11)),keyed);

count(lim_res)

ENDMACRO;
