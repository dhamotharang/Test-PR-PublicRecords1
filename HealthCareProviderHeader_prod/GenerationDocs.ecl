Generated by SALT V2.7 Gold
File being processed :-
HACK:SALTMODULE:SALT27
HACK:JOINS/PERSIST:5
HACK:MAXBLOCKSIZE:1000

MODULE:HealthCareProviderHeader_prod
PROCESS:LNPID

FILENAME:HealthProvider
IDNAME:LNPID
IDFIELD:EXISTS:LNPID
RIDFIELD:RID

EFFICACY:NAMED(healthcareproviderheader_prod_efficacy.txt):THRESHOLD(1):EXCLUDE

//
// Fieldtypes
//
// Note the new FIELDTYPE for GENDER. It won't be used as we will rely on
// DERIVED_GENDER which should already be clean enough.
//
FIELDTYPE:DEFAULT:LEFTTRIM:NOQUOTES("'):ONFAIL(CLEAN):
FIELDTYPE:NUMBER:ALLOW(0123456789-):
FIELDTYPE:ALPHA:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ):
FIELDTYPE:ALPHANUM:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-):
FIELDTYPE:WORDBAG:CAPS:ALLOW(ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'):SPACES( <>{}[]-^=!+&,./):ONFAIL(CLEAN):
FIELDTYPE:GENDERONLY:CAPS:ALLOW(MF):LENGTHS(0..1):ONFAIL(BLANK)

//
// Threshold control
//
RIDFIELD:RID
RECORDS:230418750
POPULATION:155000000
//POPULATION:4000000
NINES:4
THRESHOLD:42

//
// Source
//
SOURCEFIELD:SRC:PERMITS(fn_sources,5)

//
// Fuzzy
//
// Note the new FUZZY "LicNumeric".
//
FUZZY:Right4:RST:CUSTOM(fn_Right4):TYPE(STRING4)
FUZZY:PreferredName:RST:CUSTOM(fn_PreferredName):TYPE(STRING20)
FUZZY:LicNumeric:RST:CUSTOM(fn_LicNumeric):TYPE(STRING8)

FUZZY:NormSuffix:RST:CUSTOM(fn_NormSuffix):TYPE(STRING5)
FUZZY:CleanLic:RST:CUSTOM(fn_cleanlicense):TYPE(STRING25)

//
// BestType - Generic
//
BESTTYPE:BestDIDBYDOB:BASIS(LNPID:?:DOB):COMMONEST
BESTTYPE:BestDIDBYADDRESS:BASIS(LNPID:?:ADDRESS_ID):COMMONEST
BESTTYPE:BestDIDCommonest:BASIS(LNPID):COMMONEST
BESTTYPE:BestDOB:BASIS(LNPID):VOTED(fn_Best_DOB_Source_Votes,2):VALID(ValidDOB):MINIMUM(1):EXTEND
BESTTYPE:BestDOBLongest:BASIS(LNPID):LONGEST:EXTEND
BESTTYPE:BestDOBCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)
BESTTYPE:BestNPI:BASIS(LNPID):VOTED(fn_Best_NPI_Source_Votes,2):EXTEND
BESTTYPE:MostRecent:BASIS(LNPID):RECENT(DT_LAST_SEEN):MINIMUM(2):EXTEND
BESTTYPE:MostRecentAddr:BASIS(LNPID:ST):RECENT(DT_LAST_SEEN):MINIMUM(2)
BESTTYPE:BestAddressCommonest:BASIS(LNPID):COMMONEST:FUZZY:EXTEND
BESTTYPE:MostRecentLIC:BASIS(LNPID:?:LIC_STATE):RECENT(DT_LIC_EXPIRATION):FUZZY:EXTEND
BESTTYPE:BestLICCommenest:BASIS(LNPID):COMMONEST:FUZZY
BESTTYPE:BestLICLongest:BASIS(LNPID:?:LIC_STATE):LONGEST:FUZZY
BESTTYPE:MostRecentDEA:BASIS(LNPID):RECENT(DT_DEA_EXPIRATION):EXTEND
BESTTYPE:BestFirstName:BASIS(LNPID):COMMONEST:FUZZY:EXTEND
BESTTYPE:CommonFirstName:BASIS(LNPID):COMMONEST:EXTEND
BESTTYPE:BestTaxCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)
BESTTYPE:UniqueSingleValue:BASIS(LNPID):UNIQUE:EXTEND
BESTTYPE:MostCommonValue:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(5):EXTEND
BESTTYPE:ExtendedCommonValue:BASIS(LNPID):COMMONEST:MINIMUM(2):EXTEND
BESTTYPE:LongestValue:BASIS(LNPID):LONGEST
BESTTYPE:CurrentLastName:BASIS(LNPID):RECENT(DT_LAST_SEEN)
BESTTYPE:BestLastName:BASIS(LNPID):RECENT(DT_LAST_SEEN):EXTEND:FUZZY:MINIMUM(2)
BESTTYPE:BestSecRange:BASIS(LNPID:PRIM_RANGE:PRIM_NAME:ZIP):COMMONEST:FUZZY:EXTEND
BESTTYPE:BestCity:BASIS(LNPID:ZIP):COMMONEST:EXTEND
BESTTYPE:BestTaxID:BASIS(LNPID):RECENT(DT_LAST_SEEN)
BESTTYPE:BestPhoneCommonest:BASIS(LNPID):COMMONEST:FUZZY:MINIMUM(2)

//
// DOB
//
// Initial specificity appears to be 21 with this pre-linking in place ...
// instead, let's keep the specificity lower so that we get more rules
// for matching.
//
DATEFIELD:DOB:SOFT1(4.0):MDDM:YEARSHIFT12(4.0):BestDOB:BestDOBLongest:BestDOBCommonest:FLAG:FORCE(GENERATION,---3):16,24

//
// PHONE
//
FIELD:PHONE:CARRY:BestPhoneCommonest:FLAG:0,0

//
// Name
//
FIELD:SNAME:ExtendedCommonValue:LongestValue:NormSuffix:6,23
FIELD:FNAME:EDIT1:INITIAL:PreferredName:BestFirstName:CommonFirstName:FLAG:8,66
FIELD:MNAME:LIKE(WORDBAG):INITIAL:EDIT2:ExtendedCommonValue:LongestValue:FLAG:9,96
FIELD:LNAME:INITIAL:HYPHEN2:EDIT2:BestLastName:CurrentLastName:FLAG:11,0

//
// Gender
//
FIELD:GENDER:LIKE(GENDERONLY):UniqueSingleValue:2,1

//
// License
//
// Note the FUZZY for LIC_NBR
//
FIELD:LIC_STATE:CARRY
FIELD:LIC_NBR:CONTEXT(LIC_STATE):MostRecentLIC:BestLICLongest:BestLICCommenest:CleanLic:FLAG:SWITCH0:LicNumeric:21,450

//
// Address
//
FIELD:PRIM_NAME:SWITCH0:WEIGHT(0.5):13,477
FIELD:PRIM_RANGE:SWITCH0:WEIGHT(0.5):12,470
FIELD:SEC_RANGE:HYPHEN2:BestSecRange:SWITCH0:WEIGHT(0.5):7,320
FIELD:V_CITY_NAME:BestCity:WEIGHT(0.5):11,305
FIELD:ST:BestCity:WEIGHT(0.5):5,50
FIELD:ZIP:WEIGHT(0.5):13,393
FIELD:ADDRESS_ID:LIKE(NUMBER):CARRY

//
// CNAME ... not used yet
//
// FIELD:CNAME:EDIT1:LIKE(WORDBAG):FORCE(+):18,0
//
FIELD:CNAME:CARRY:18,0

//
// NPI_NUMBER
//
FIELD:NPI_NUMBER:BestNPI:ExtendedCommonValue:MostRecent:FLAG:OWNED:22,0

//
// DEA_NUMBER
//
// I opted not to include FORCE(--) here as it would appear that between data
// issues and DEA practice, some providers do seem to have multiple DEA numbers
// in their history.
//
FIELD:DEA_NUMBER:MostRecentDEA:ExtendedCommonValue:FLAG:OWNED:22,13

//
// VENDOR_ID
//
FIELD:VENDOR_ID:CONTEXT(SRC):SWITCH0:24,441
FIELD:SRC:CARRY

//
// TAX_ID
//
FIELD:TAX_ID:SWITCH0:BestTaxID:BestTaxCommonest:FLAG:OWNED:18,262

//
// DID
//
FIELD:DID:LIKE(NUMBER):SWITCH0:WEIGHT(0.33):BestDIDBYDOB:BestDIDBYADDRESS:BestDIDCommonest:FLAG:23,173

//
// UPIN
//
FIELD:UPIN:ExtendedCommonValue:MostRecent:FLAG:OWNED:SWITCH0:20,20

//
// Date fields
//
// Don't have much experience with these fields yet ... so I will leave them alone.
//
FIELD:DT_FIRST_SEEN:RECORDDATE(FIRST,YYYYMM):
FIELD:DT_LAST_SEEN:RECORDDATE(LAST,YYYYMM):
FIELD:DT_LIC_EXPIRATION:CARRY:0,0
FIELD:DT_DEA_EXPIRATION:CARRY:0,0

//
// Concepts for Name
//
CONCEPT:MAINNAME:FNAME:MNAME:LNAME:BAGOFWORDS:22,490
CONCEPT:FULLNAME:MAINNAME:SNAME:FORCE(+-6):22,494

FIELD:GEO_LAT:CARRY
FIELD:GEO_LONG:CARRY
LATLONG:LAT_LONG:LAT(GEO_LAT):LONG(GEO_LONG):DISTANCE(1):DIVISIONS(5):WEIGHT(0.75):10,321

//
// Concepts for Address
//
CONCEPT:ADDR:PRIM_RANGE:SEC_RANGE:PRIM_NAME:MostRecentAddr:BestAddressCommonest:FLAG:SWITCH0:WEIGHT(0.5):20,555
CONCEPT:LOCALE:V_CITY_NAME:ST:ZIP:WEIGHT(0.5):13,395
CONCEPT:ADDRESS:ADDR:LOCALE:WEIGHT(0.5):20,558

//
// Comments:
//
// 20130614 - prior to it1
// Updated specificities ... per W20130614-183837
//
// 20130623 - restarted it1
//
// 20130626 - Changed DOB force to '---3' from '+-3'
// Null dates were being forced apart leaving 55m-ish records unmatchable
// Restarting from it1
//
// 20130630 - prior to it8
// Updated specificities ... per it7 workunit W20130630-132207
// Slightly raised specificity for NPI and DEA to 22
// Allowed DOB to be an optimized rule
// For all of these cases I will up the "TOPN" limit ... to 10,000?
//

Total available specificity:370
Specificity number that should imply one record specified 27.
Assuming an average of 1 records per cluster
Specificity value at which N^2 joins will be tolerated: 22
Search Threshold set at 19
Use of PERSISTs in code set at:2
Link paths supported :-
UBER Key

______________________________English Description of Matching Process___________________________

A SALT generated matching process really only contains one single matching rule.
SALT compares every record to every possible matching record and then allocates a score to how well
the records match. SALT then pairs those clusters which have the highest match scores provided the scores
meet or exceed the matching threshold. The scoring process is highly sophisticated and detailed below
however it can essentially be thought of as allocating points for every pair of fields that match
and subtracting points for every pair of fields that do not match.
This process was told to produce 4 nines of accuracy on a population of 155000000 with 230418752 records.
The matching threshold is therefore set at 42.

___Field by Field Breakdown of Scoring Method___

DOB Scoring: In order for two records to be a match it is also required that the DOB fields not not match.
Specifically the score awarded to this field must be >= -3 unless one field is null.

Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,SRC,data_permits) removing any which are invalid according to ValidDOB.
The number of each field value are then counted.
The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_DOB_Source_Votes which takes count and source into account by a margin of at least 2 and which has at least 1 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which has the most complete (non-null) value of all the field values.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two DOB fields will be considered to match if:
- they are identical
- if the YEARs are more than 13 apart then the whole record will be a no match.
- if a Month or Day miss-match has a 01 on either side it will count as a 0 for that component
- if the decade value differs by 1 it will be considered a fuzzy match
- if the Year value differs by 2 it will be considered a fuzzy match
- if the month component matches the day and vice-versi it will be considered a fuzzy match
- otherwise each component of the score will be scored individually
The exact number of points allocated to a match will depend upon the global scarcity of the DOB
but should average 16 points with a failed match substracting 15 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for DOB.)

PHONE Scoring: This field is not used for scoring; rather it is carried along for context and debugging
SNAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two SNAME fields will be considered to match if:
- they are identical
- if the two fields have the same value for the function NormSuffix
The exact number of points allocated to a match will depend upon the global scarcity of the SNAME
but should average 6 points with a failed match substracting 5 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for SNAME.)
It should also be noted that SNAME is a child field of FULLNAME. Therefore if FULLNAME is a full match this field will score 0.
This field is scaled to match with its parent FULLNAME, on average that will mean multiplying by 78%

FNAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two FNAME fields will be considered to match if:
- they are identical
- one can be turned into the other with 1 edit (see Glossary)
- one is the leading part of the other
- if the two fields have the same value for the function PreferredName
The exact number of points allocated to a match will depend upon the global scarcity of the FNAME
and the degree of fuzziness required but should average 8 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 6% of clusters with 2 or more records have 2 or more values for FNAME.)
It should also be noted that FNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 78%

MNAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two MNAME fields will be considered to match if:
- they are identical
- one can be turned into the other with 2 edits (see Glossary)
- one is the leading part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the MNAME
and the degree of fuzziness required but should average 9 points with a failed match substracting 8 points.
(This subtraction estimate is based upon 9% of clusters with 2 or more records have 2 or more values for MNAME.)
It should also be noted that MNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 78%

LNAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which has the most recent date recorded in:DT_LAST_SEEN and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two LNAME fields will be considered to match if:
- they are identical
- one can be turned into the other with 2 edits (see Glossary)
- one is the leading part of the other
- if the two strings are identical if hypens and spaces are ignored
- if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the LNAME
and the degree of fuzziness required but should average 11 points with a failed match substracting 11 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for LNAME.)
It should also be noted that LNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 78%

GENDER Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is unique.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two GENDER fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the GENDER
but should average 2 points with a failed match substracting 1 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for GENDER.)

LIC_STATE Scoring: This field is not used for scoring; rather it is carried along for context and debugging
LIC_NBR Scoring:
The scoring for this field is ignored unless the LIC_STATE fields are identical.

Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which has the most recent date recorded in:DT_LIC_EXPIRATION.
If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field LIC_STATE then the value currently in the field will be replaced.
Two LIC_NBR fields will be considered to match if:
- they are identical
- if the two fields have the same value for the function CleanLic
- if the two fields have the same value for the function LicNumeric
The exact number of points allocated to a match will depend upon the global scarcity of the LIC_NBR
but should average 21 points with a failed match substracting 11 points.
(This subtraction estimate is based upon 45% of clusters with 2 or more records have 2 or more values for LIC_NBR.)

PRIM_NAME Scoring: Two PRIM_NAME fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_NAME
but should average 13 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 47% of clusters with 2 or more records have 2 or more values for PRIM_NAME.)
It should also be noted that PRIM_NAME is a child field of ADDR. Therefore if ADDR is a full match this field will score 0.
This field is scaled to match with its parent ADDR, on average that will mean multiplying by 62%

PRIM_RANGE Scoring: Two PRIM_RANGE fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_RANGE
but should average 12 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 47% of clusters with 2 or more records have 2 or more values for PRIM_RANGE.)
It should also be noted that PRIM_RANGE is a child field of ADDR. Therefore if ADDR is a full match this field will score 0.
This field is scaled to match with its parent ADDR, on average that will mean multiplying by 62%

SEC_RANGE Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,PRIM_RANGE,PRIM_NAME,ZIP,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two SEC_RANGE fields will be considered to match if:
- they are identical
- if the two strings are identical if hypens and spaces are ignored
- if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the SEC_RANGE
and the degree of fuzziness required but should average 7 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 32% of clusters with 2 or more records have 2 or more values for SEC_RANGE.)
It should also be noted that SEC_RANGE is a child field of ADDR. Therefore if ADDR is a full match this field will score 0.
This field is scaled to match with its parent ADDR, on average that will mean multiplying by 62%

V_CITY_NAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,ZIP,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two V_CITY_NAME fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the V_CITY_NAME
but should average 11 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 30% of clusters with 2 or more records have 2 or more values for V_CITY_NAME.)
It should also be noted that V_CITY_NAME is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%

ST Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,ZIP,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two ST fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ST
but should average 5 points with a failed match substracting 4 points.
(This subtraction estimate is based upon 5% of clusters with 2 or more records have 2 or more values for ST.)
It should also be noted that ST is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%

ZIP Scoring: Two ZIP fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ZIP
but should average 13 points with a failed match substracting 7 points.
(This subtraction estimate is based upon 39% of clusters with 2 or more records have 2 or more values for ZIP.)
It should also be noted that ZIP is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%

ADDRESS_ID Scoring: This field is not used for scoring; rather it is carried along for context and debugging
CNAME Scoring: This field is not used for scoring; rather it is carried along for context and debugging
NPI_NUMBER Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,SRC,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_NPI_Source_Votes which takes count and source into account by a margin of at least 2.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
3. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which has the most recent date recorded in:DT_LAST_SEEN and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two NPI_NUMBER fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the NPI_NUMBER
but should average 22 points with a failed match substracting 22 points.
(This subtraction estimate is based upon 0% of clusters with 2 or more records have 2 or more values for NPI_NUMBER.)

DEA_NUMBER Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which has the most recent date recorded in:DT_DEA_EXPIRATION.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two DEA_NUMBER fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DEA_NUMBER
but should average 22 points with a failed match substracting 21 points.
(This subtraction estimate is based upon 1% of clusters with 2 or more records have 2 or more values for DEA_NUMBER.)

VENDOR_ID Scoring:
The scoring for this field is ignored unless the SRC fields are identical.
Two VENDOR_ID fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the VENDOR_ID
but should average 24 points with a failed match substracting 13 points.
(This subtraction estimate is based upon 44% of clusters with 2 or more records have 2 or more values for VENDOR_ID.)

SRC Scoring: This field is not used for scoring; rather it is carried along for context and debugging
TAX_ID Scoring: Two TAX_ID fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the TAX_ID
but should average 18 points with a failed match substracting 13 points.
(This subtraction estimate is based upon 26% of clusters with 2 or more records have 2 or more values for TAX_ID.)

DID Scoring: Two DID fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DID
but should average 23 points with a failed match substracting 19 points.
(This subtraction estimate is based upon 17% of clusters with 2 or more records have 2 or more values for DID.)

UPIN Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which has the most recent date recorded in:DT_LAST_SEEN and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two UPIN fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the UPIN
but should average 20 points with a failed match substracting 19 points.
(This subtraction estimate is based upon 2% of clusters with 2 or more records have 2 or more values for UPIN.)

DT_FIRST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LAST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LIC_EXPIRATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
DT_DEA_EXPIRATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
MAINNAME Scoring: Two MAINNAME fields will be considered to match if:
- they are identical
- The fields of either concept (but not both) can be shuffled so that they match
Note: MAINNAME is an amalgam of (FNAME,MNAME,LNAME)
Points will only be allocated for a match, the amount depending upon the scarcity of MAINNAME
but should average 22 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that MAINNAME is a child field of FULLNAME. Therefore if FULLNAME is a full match this field will score 0.
This field is scaled to match with its parent FULLNAME, on average that will mean multiplying by 78%

FULLNAME Scoring: In order for two records to be a match it is also required that the FULLNAME fields match.
Specifically the score awarded to this field must be >= -6 .
Two FULLNAME fields will be considered to match if:
- they are identical
Note: FULLNAME is an amalgam of (MAINNAME,SNAME)
Points will only be allocated for a match, the amount depending upon the scarcity of FULLNAME
but should average 22 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score) and the sum of the scores of its' children will be used to determine the force criteria.

GEO_LAT Scoring: This field is not used for scoring; rather it is carried along for context and debugging
GEO_LONG Scoring: This field is not used for scoring; rather it is carried along for context and debugging
LAT_LONG Scoring: Two LAT_LONG fields will be considered to match if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the LAT_LONG
but should average 10 points with a failed match substracting 6 points.
(This subtraction estimate is based upon 32% of clusters with 2 or more records have 2 or more values for LAT_LONG.)

ADDR Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two ADDR fields will be considered to match if:
- they are identical
Note: ADDR is an amalgam of (PRIM_RANGE,SEC_RANGE,PRIM_NAME)
Points will only be allocated for a match, the amount depending upon the scarcity of ADDR
but should average 20 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that ADDR is a child field of ADDRESS. Therefore if ADDRESS is a full match this field will score 0.
This field is scaled to match with its parent ADDRESS, on average that will mean multiplying by 60%

LOCALE Scoring: Two LOCALE fields will be considered to match if:
- they are identical
Note: LOCALE is an amalgam of (V_CITY_NAME,ST,ZIP)
Points will only be allocated for a match, the amount depending upon the scarcity of LOCALE
but should average 13 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).
It should also be noted that LOCALE is a child field of ADDRESS. Therefore if ADDRESS is a full match this field will score 0.
This field is scaled to match with its parent ADDRESS, on average that will mean multiplying by 60%

ADDRESS Scoring: Two ADDRESS fields will be considered to match if:
- they are identical
Note: ADDRESS is an amalgam of (ADDR,LOCALE)
Points will only be allocated for a match, the amount depending upon the scarcity of ADDRESS
but should average 20 points.
In the event of a non-match this field will score 0 (and the child fields will be allowed to score).


______________________________English Description of External Matching Process___________________________

SALT generated external matching is based upon the concept of LinkPaths which correspond to Roxie keys.

Each LinkPath consists of three sections :-
-- Fixed - these fields must match perfectly (byte for byte) for a match to occur
-- Optional - if present these fields must match; at least using fuzzy search criteria
-- Extra Credit - if these fields match then points are allocated
Any search, or external matching request will then be analysed to see which fields are present in the query.
Based upon that analysis it is possible to determine which Fixed criteria could possibly match.
All of those linkpaths that could match will then be searched to see if a match exists.
If none of the linkpaths could possibly be satisfied then the UBER key will be used (described later).
Every matching record from every matching linkpath is then scored and then the scores are tallied by LNPID.
The distance of the leading scorer from the rest of the possible matches then determines the confidence of the match (if any).
In the following each individual linkpath is described; brief descriptions of field level matching will be given.
More detail regarding the precise matching done on a field by field basis will follow and will be common for all linkpaths that use that field.

UBER Key
In order to trigger one of the linkpaths at least one of the following field combinations must exist in the input query:
if none of these conditions are met then the UBER key is used instead.
The UBER key is an inverted index; it will execute more slowly than the other linkpaths - but is more flexible.
For a record to match the UBER key it is required that every field in the input match the record exactly; but any combination of fields may be present.

The detailed scoring for the individual fields is the same from linkpath to linkpath and is as follows:-
DOB Scoring: In order for two records to be a match it is also required that the DOB fields not not match.
Specifically the score awarded to this field must be >= -3 unless one field is null.

Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,SRC,data_permits) removing any which are invalid according to ValidDOB.
The number of each field value are then counted.
The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_DOB_Source_Votes which takes count and source into account by a margin of at least 2 and which has at least 1 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which has the most complete (non-null) value of all the field values.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two DOB fields will be considered to match in optional or extra credit positions if:
- they are identical
- if the YEARs are more than 13 apart then the whole record will be a no match.
- if a Month or Day miss-match has a 01 on either side it will count as a 0 for that component
- if the decade value differs by 1 it will be considered a fuzzy match
- if the Year value differs by 2 it will be considered a fuzzy match
- if the month component matches the day and vice-versi it will be considered a fuzzy match
- otherwise each component of the score will be scored individually
The exact number of points allocated to a match will depend upon the global scarcity of the DOB
but should average 16 points.

PHONE Scoring: This field is not used for scoring; rather it is carried along for context and debugging
SNAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two SNAME fields will be considered to match in optional or extra credit positions if:
- they are identical
- if the two fields have the same value for the function NormSuffix
The exact number of points allocated to a match will depend upon the global scarcity of the SNAME
but should average 6 points.
It should also be noted that SNAME is a child field of FULLNAME. Therefore if FULLNAME is a full match this field will score 0.
This field is scaled to match with its parent FULLNAME, on average that will mean multiplying by 78%

FNAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two FNAME fields will be considered to match in optional or extra credit positions if:
- they are identical
- one can be turned into the other with 1 edit (see Glossary)
- one is the leading part of the other
- if the two fields have the same value for the function PreferredName
The exact number of points allocated to a match will depend upon the global scarcity of the FNAME
and the degree of fuzziness required but should average 8 points.
It should also be noted that FNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 78%

MNAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two MNAME fields will be considered to match in optional or extra credit positions if:
- they are identical
- one can be turned into the other with 2 edits (see Glossary)
- one is the leading part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the MNAME
and the degree of fuzziness required but should average 9 points.
It should also be noted that MNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 78%

LNAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which has the most recent date recorded in:DT_LAST_SEEN and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two LNAME fields will be considered to match in optional or extra credit positions if:
- they are identical
- one can be turned into the other with 2 edits (see Glossary)
- one is the leading part of the other
- if the two strings are identical if hypens and spaces are ignored
- if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the LNAME
and the degree of fuzziness required but should average 11 points.
It should also be noted that LNAME is a child field of MAINNAME. Therefore if MAINNAME is a full match this field will score 0.
This field is scaled to match with its parent MAINNAME, on average that will mean multiplying by 78%

GENDER Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is unique.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two GENDER fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the GENDER
but should average 2 points.

LIC_STATE Scoring: This field is not used for scoring; rather it is carried along for context and debugging
LIC_NBR Scoring:
The scoring for this field is ignored unless the LIC_STATE fields are identical.

Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which has the most recent date recorded in:DT_LIC_EXPIRATION.
If the value generated is non-null and the value currently in the field is a shorter form of it and the record matches the generated value in the field LIC_STATE then the value currently in the field will be replaced.
Two LIC_NBR fields will be considered to match in optional or extra credit positions if:
- they are identical
- if the two fields have the same value for the function CleanLic
- if the two fields have the same value for the function LicNumeric
The exact number of points allocated to a match will depend upon the global scarcity of the LIC_NBR
but should average 21 points.

PRIM_NAME Scoring: Two PRIM_NAME fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_NAME
but should average 13 points.
It should also be noted that PRIM_NAME is a child field of ADDR. Therefore if ADDR is a full match this field will score 0.
This field is scaled to match with its parent ADDR, on average that will mean multiplying by 62%

PRIM_RANGE Scoring: Two PRIM_RANGE fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the PRIM_RANGE
but should average 12 points.
It should also be noted that PRIM_RANGE is a child field of ADDR. Therefore if ADDR is a full match this field will score 0.
This field is scaled to match with its parent ADDR, on average that will mean multiplying by 62%

SEC_RANGE Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,PRIM_RANGE,PRIM_NAME,ZIP,data_permits).
The number of each field value are then counted, field values with a smaller count are used to re-enforce higher count fields that they fuzzy-match to.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two SEC_RANGE fields will be considered to match in optional or extra credit positions if:
- they are identical
- if the two strings are identical if hypens and spaces are ignored
- if one is the leading or trailing part of the other
The exact number of points allocated to a match will depend upon the global scarcity of the SEC_RANGE
and the degree of fuzziness required but should average 7 points.
It should also be noted that SEC_RANGE is a child field of ADDR. Therefore if ADDR is a full match this field will score 0.
This field is scaled to match with its parent ADDR, on average that will mean multiplying by 62%

V_CITY_NAME Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,ZIP,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two V_CITY_NAME fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the V_CITY_NAME
but should average 11 points.
It should also be noted that V_CITY_NAME is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%

ST Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,ZIP,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two ST fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ST
but should average 5 points.
It should also be noted that ST is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%

ZIP Scoring: Two ZIP fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the ZIP
but should average 13 points.
It should also be noted that ZIP is a child field of LOCALE. Therefore if LOCALE is a full match this field will score 0.
This field is scaled to match with its parent LOCALE, on average that will mean multiplying by 44%

ADDRESS_ID Scoring: This field is not used for scoring; rather it is carried along for context and debugging
CNAME Scoring: This field is not used for scoring; rather it is carried along for context and debugging
NPI_NUMBER Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,SRC,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which recieved most votes based upon the attribute:fn_Best_NPI_Source_Votes which takes count and source into account by a margin of at least 2.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
3. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which has the most recent date recorded in:DT_LAST_SEEN and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two NPI_NUMBER fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the NPI_NUMBER
but should average 22 points.

DEA_NUMBER Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which has the most recent date recorded in:DT_DEA_EXPIRATION.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two DEA_NUMBER fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DEA_NUMBER
but should average 22 points.

VENDOR_ID Scoring:
The scoring for this field is ignored unless the SRC fields are identical.
Two VENDOR_ID fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the VENDOR_ID
but should average 24 points.

SRC Scoring: This field is not used for scoring; rather it is carried along for context and debugging
TAX_ID Scoring: Two TAX_ID fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the TAX_ID
but should average 18 points.

DID Scoring: Two DID fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the DID
but should average 23 points.

UPIN Scoring:
Prior to matching the following rules are applied in a cascade in an attempt to fix or complete field values.
1. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which is the most commonly occurring field value and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
2. Gather together all records that match on (LNPID,data_permits).
The number of each field value are then counted.
The best is then defined to be the one which has the most recent date recorded in:DT_LAST_SEEN and which has at least 2 records with that field value.
If the value generated is non-null and the value currently in the field is a shorter form of it then the value currently in the field will be replaced.
Two UPIN fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the UPIN
but should average 20 points.

DT_FIRST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LAST_SEEN Scoring: Date fields are not presently used for scoring but are carried along for debugging purposes
DT_LIC_EXPIRATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
DT_DEA_EXPIRATION Scoring: This field is not used for scoring; rather it is carried along for context and debugging
GEO_LAT Scoring: This field is not used for scoring; rather it is carried along for context and debugging
GEO_LONG Scoring: This field is not used for scoring; rather it is carried along for context and debugging
LAT_LONG Scoring: Two LAT_LONG fields will be considered to match in optional or extra credit positions if:
- they are identical
The exact number of points allocated to a match will depend upon the global scarcity of the LAT_LONG
but should average 10 points.


__Glossary__
Edit Distance: An edit distance of (say) one implies that one string can be converted into another by doing one of
- Changing one character
- Deleting one character
- Transposing two characters

Forcing Criteria: In addition to the general 'best match' logic it is possible to insist that
one particular field must match to some degree or the whole record is considered a bad match.
The criterial applied to that one field is the forcing criteria.

Cascade: Best Type rules are applied in such a way that the rules are applied one by one UNTIL the first rule succeeds; subsequent rules are then skipped.

__General Notes__
How is it decided how much to subtract for a bad match?
SALT computes for each field the percentage likelihood that a valid cluster will have two or more values for a given field
this value (called the switch value in the SALT literature) is then used to produce the subtraction value from the match value.
The value in this document is the one typed into the SPC file; the code will use a value computed at run-time.

